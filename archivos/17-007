diff --git a/ADMINISTRATIVONEW/src/admin/util/ConstantesErrores.java b/ADMINISTRATIVONEW/src/admin/util/ConstantesErrores.java
index 4bf92f9..17c26f3 100644
--- a/ADMINISTRATIVONEW/src/admin/util/ConstantesErrores.java
+++ b/ADMINISTRATIVONEW/src/admin/util/ConstantesErrores.java
@@ -774,4 +774,13 @@
     
     //[CC17-026] gmeza 28.02.2017
     String ERROR_11139 = "11139"; //Indicador de Transacción debe ser S o N.
+
+    //Inicio [Req.S17-007] kdelacruz 17.03.2017
+    String ERROR_11143 = "11143"; //No se encuentra archivo.
+    String ERROR_11157 = "11157"; //El número de Solicitud no es de tipo bien Hipotecario
+    String ERROR_11158 = "11158"; //No se encuentra Notario
+    String ERROR_11159 = "11159"; //No se encuentra Notario
+    String ERROR_11162 = "11162"; //La solicitud no le pertecene
+    String ERROR_11163 = "11163"; //Falta registrar datos de la Notaria y Kárdex
+    //Fin [Req.S17-007]
 }
\ No newline at end of file
diff --git a/DELFINWEBNEW/WebRoot/FINANCIERO/creditos/cuentaCredito/CR_C_CuentaCredito_CNTR.jsp b/DELFINWEBNEW/WebRoot/FINANCIERO/creditos/cuentaCredito/CR_C_CuentaCredito_CNTR.jsp
new file mode 100644
index 0000000..02a25db
--- /dev/null
+++ b/DELFINWEBNEW/WebRoot/FINANCIERO/creditos/cuentaCredito/CR_C_CuentaCredito_CNTR.jsp
@@ -0,0 +1,198 @@
+<!-- CR_C_CuentaCredito_CNTR.jsp -->
+<%-- [S17-007] gmeza 07.03.2017 --%>
+
+<%@ taglib uri="/delfin" prefix="delfinTagHtml"%>
+<%@ taglib prefix="c" uri="http://java.sun.com/jstl/core"%>
+<%@ taglib prefix='fmt' uri='http://java.sun.com/jstl/fmt'%>
+<html>
+  <head>
+    <META HTTP-EQUIV="Pragma" CONTENT="no-cache" />
+    <!-- Titulo del Módulo -->
+    <title>Operaciones por Cliente</title>
+    <!-- Invocación de Estilos -->
+    <link id="css" href="<%=request.getContextPath()%>/UTILS/css/DELFIN.css" rel="stylesheet" type="text/css">
+    <!-- Invocación de Java Scripts -->
+    <script src="<%=request.getContextPath()%>/UTILS/Script/MsgValidacion.js"></script>
+    <script src="<%=request.getContextPath()%>/UTILS/Script/DELFIN-Utiles.js"></script>
+    <script src="<%=request.getContextPath()%>/UTILS/Script/json2.js"></script>
+    <script>
+      var path;
+      var f;
+      var callerWindowObj;
+      function load(){
+        path = '<%=request.getContextPath()%>';
+        f = byID("frmRegistro");
+
+        cargarDetalle();
+
+        mensajeRespuesta('<c:out value="${codigoError}" />', '<c:out value="${mensajeError}" />');
+      }
+
+      function cargarDetalle(){
+    	  cargarDetalleInterno();
+          cargarDetalleExterno();
+      }
+
+      function cargarDetalleInterno(){
+          var codigoPersona = byID('codigoPersona').value;
+          var tipoOperacion = 'I';
+    	  var params = '?action=MOSTRAR_DETALLE';
+    	  params += '&codigoPersona=' + codigoPersona;
+    	  params += '&tipoOperacion='+tipoOperacion;
+    	  params += '&time=' + new Date().getTime();
+    	  var url = path + '/CR_C_CuentaCredito_Servlet' + params;
+    	  document.ifrmDetalleInterno.location.replace(url);
+      }
+
+      function cargarDetalleExterno(){
+          var codigoPersona = byID('codigoPersona').value;
+          var tipoOperacion = 'E';
+          var params = '?action=MOSTRAR_DETALLE';
+          params += '&codigoPersona=' + codigoPersona;
+          params += '&tipoOperacion='+tipoOperacion;
+          params += '&time=' + new Date().getTime();
+          var url = path + '/CR_C_CuentaCredito_Servlet' + params;
+          document.ifrmDetalleExterno.location.replace(url);
+      }
+
+      document.onkeydown = keyDown;
+      nextfield = '';
+      function keyDown(DnEvents) {
+        // Reconocimiento de la tecla enter, para que simule el tab
+        k = window.event.keyCode;
+        // Reconocimiento de la tecla ESC para el cerrado de la ventana
+        if (k == 13) {
+          buscarPersonas();
+          return false;
+        } else if (k == 27) {
+          salir();
+          return false;
+        }
+      }
+
+      function buscarPersonas() {
+        var valor = byID('nombrePersona').value;
+        var nombre="PERSONAS";
+        valor1 ='Nombre';
+        valor2 ='DOI';
+        if(isEmpty(valor)){
+            valor='NULO';
+        }
+        var url = path + "/GENERAL/Busqueda.jsp?cboValorBuscar1="+valor1+"&cboValorBuscar2="+valor2+"&txtValorBuscar="+valor+"&tabla="+nombre;
+        var opciones = "dialogHeight:330px;dialogWidth:670px;center:yes;help:no;resizable:no;status:no";
+        window.showModalDialog(url,window,opciones);
+      }
+
+   // Ingresar nombre del cliente.
+      function insertarPersona(data) {
+        byID('codigoPersona').value = data[0];
+        byID('numeroDocumento').value = data[1];
+        byID('nombrePersona').value = data[2];
+        cargarDetalle();
+      }
+
+      function salir(){
+        window.close();
+      }
+
+    </script>
+  </head>
+  <body onload="load();" class="colorbody" style="padding: 5px, 5px, 5px, 5px;overflow:auto;" >
+    <form name="frmRegistro" id="frmRegistro" method="post">
+      <table width="100%" cellpadding="1" cellspacing="0" border="0">
+        <tr>
+          <td colspan="2">
+            <table border="0" cellpadding="2" cellspacing="2" width="100%" height="100%" align="center" class="">
+              <tr>
+                <td>
+                  <table border="1" cellpadding="0" cellspacing="0" width="100%" align="center" class="frame">
+                    <tr>
+                      <td height="20" align="center">
+                        <table width="99%" cellpadding="0" cellspacing="0" border="0">
+                          <tr>
+                            <td align="left" colspan="3" valign="middle">
+                              <delfinTagHtml:boton nombre="BT_Salir_P.gif" onclick="salir();" />
+                            </td>
+                          </tr>
+                        </table>
+                      </td>
+                    </tr>
+                  </table>
+                </td>
+              </tr>
+            </table>
+          </td>
+        </tr>
+        <tr>
+          <td class="tituloframe" align="top" width="100%" colspan="2">
+            <table border="0" cellpadding="2" cellspacing="2" width="100%" height="100%" align="center" class="">
+              <tr>
+                <td class="tituloframe" colspan="2">
+                  DATOS CLIENTE
+                </td>
+              </tr>
+              <tr>
+                <td colspan="2">
+                  <table border="0" cellpadding="2" cellspacing="2" width="100%" align="center" class="frame">
+                    <tr>
+                      <td height="20" align="center">
+                        <table width="99%" cellpadding="0" cellspacing="2" border="0">
+                          <tr>
+                            <td class="etiqueta" align="left" valign="middle">
+		                      Cliente
+		                    </td>
+                            <td class="etiqueta" align="left" valign="middle">
+                                <input type="hidden" name="codigoPersona" id="codigoPersona" />
+		                        <input type="hidden" name="tipoPersona" id="tipoPersona" />
+		                        <input type="hidden" name="numeroDocumento" id="numeroDocumento" onfocus="this.select();" class="campoobligatorioiz" maxlength="20" style="width: 100px;" />
+		                        <input type="text" name="nombrePersona" id="nombrePersona" onfocus="this.select();"  class="campoobligatorioiz" style="width: 200px;" />
+		                        &nbsp;<img id="imgPersona" style="cursor:hand" src="<%=request.getContextPath()%>/UTILS/img/Detalle.gif" title="Buscar Cliente" onclick="if(!byID('numeroDocumento').readOnly){buscarPersonas();}">
+                            </td>
+                          </tr>
+                        </table>
+                      </td>
+                    </tr>
+                  </table>
+                </td>
+              </tr>
+            </table>
+          </td>
+        </tr>
+        <tr>
+          <td class="tituloframe" align="top" >
+            <table border="0" cellpadding="2" cellspacing="2" width="100%" height="100%" align="center" class="">
+              <tr>
+                <td class="tituloframe">
+                  OPERACIONES INTERNAS
+                </td>
+              </tr>
+              <tr>
+                <td>
+                  <iframe frameborder="0" width="100%" height="70px" id="ifrmDetalleInterno" name="ifrmDetalleInterno" class="frame" src="<%=request.getContextPath()%>/FINANCIERO/creditos/cuentaCredito/CR_C_CuentaCredito_TABLA.jsp">
+                  </iframe>
+                </td>
+              </tr>
+            </table>
+          </td>
+        </tr>
+        <tr>
+          <td class="tituloframe" align="top" >
+            <table border="0" cellpadding="2" cellspacing="2" width="100%" height="100%" align="center" class="">
+              <tr>
+                <td class="tituloframe">
+                  OPERACIONES EXTERNAS
+                </td>
+              </tr>
+              <tr>
+                <td>
+                  <iframe frameborder="0" width="100%" height="70px" id="ifrmDetalleExterno" name="ifrmDetalleExterno" class="frame" src="<%=request.getContextPath()%>/FINANCIERO/creditos/cuentaCredito/CR_C_CuentaCredito_TABLA.jsp">
+                  </iframe>
+                </td>
+              </tr>
+            </table>
+          </td>
+        </tr>
+      </table>
+    </form>
+  </body>
+</html>
\ No newline at end of file
diff --git a/DELFINWEBNEW/WebRoot/FINANCIERO/creditos/cuentaCredito/CR_C_CuentaCredito_TABLA.jsp b/DELFINWEBNEW/WebRoot/FINANCIERO/creditos/cuentaCredito/CR_C_CuentaCredito_TABLA.jsp
new file mode 100644
index 0000000..b421f00
--- /dev/null
+++ b/DELFINWEBNEW/WebRoot/FINANCIERO/creditos/cuentaCredito/CR_C_CuentaCredito_TABLA.jsp
@@ -0,0 +1,151 @@
+<!-- CR_C_CuentaCredito_TABLA.jsp -->
+<%-- [S17-007] gmeza 07.03.2017 --%>
+
+<jsp:directive.page import="general.utils.Paginacion" />
+<%@ taglib prefix="c" uri="http://java.sun.com/jstl/core"%>
+<%@ taglib prefix='fmt' uri='http://java.sun.com/jstl/fmt'%>
+<%
+    String path =request.getContextPath();
+%>
+<html>
+	<head>
+		<!-- Invocación de Estilos -->
+		<link id="css" href="<%=path%>/UTILS/css/DELFIN.css" rel="stylesheet" type="text/css">
+		<!-- Invocación de JavaScript -->
+		<script src="<%=path%>/UTILS/Script/grid.js"></script>
+		<script src="<%=path%>/UTILS/Script/MsgValidacion.js"></script>
+        <script src="<%=path%>/UTILS/Script/DELFIN-Utiles.js"></script>
+		<style>
+		    .active-controls-grid {width: "100%"; height: 100%; font: menu;}
+		    .active-column-0 {width: 120px;text-align: center;}
+		    .active-column-1 {display:none;}
+		    .active-column-2 {width: 250px;text-align: left;}
+		    .active-column-3 {display:none;}
+		    .active-column-4 {width: 120px;text-align: left;}
+		    .active-column-5 {width: 120px;text-align: right;}
+		    .active-column-6 {width: 120px;text-align: left;}
+		    .active-column-7 {width: 120px;text-align: left;}
+		    .active-column-8 {display:none;}
+            .active-grid-column {border-right: 1px solid threedlightshadow; }
+            .active-grid-row {border-bottom: 1px solid threedlightshadow; }
+        </style>
+	</head>
+	<body onload="onload();" TOPMARGIN=0 LEFTMARGIN=0 MARGINHEIGHT=0 MARGINWIDTH=0>
+		<script>
+
+        var path;
+        function onload(){
+          path = '<%=path%>';
+          //[T-9460] gmeza 31.08.2016
+          parent.mensajeRespuesta('<c:out value="${codigoError}" />', '<c:out value="${mensajeError}" />');
+          setFoco();
+        }
+
+        var posini;
+        var posfin;
+        var indice = '0';
+        var myData = [<c:out value="${myData}" escapeXml="false"/>];
+
+        var myColumns = [
+						"Operación",//0
+						"Código de Producto",//1
+						"Producto",//2
+						"Código de Moneda",//3
+						"Moneda",//4
+						"Monto Solicitado",//5
+						"Estado",//6
+						"Analista",//7
+						"" //8
+						];
+
+        //  create ActiveWidgets Grid javascript object
+        var obj = new Active.Controls.Grid;
+
+        obj.setId("obj");
+        // grid header
+        obj.gridColumn = myColumns;
+        // grid data
+        obj.gridData = myData;
+        //  header methods
+        obj.getColumnCount = function() {return this.gridColumn.length};
+        obj.getColumnText = function(i){return this.gridColumn[i]};
+        //  data methods
+        obj.getDataCount = function() {return this.gridData.length};
+        obj.getDataText = function(i, j){return this.gridData[i][j]};
+        obj.setDataText = function(value, i, j){this.gridData[i][j] = value};
+
+        obj.setRowHeaderWidth("28px");
+        obj.setColumnHeaderHeight("20px");
+
+        var row = new Active.Templates.Row; 
+        row.setEvent("ondblclick", function(){this.action("myAction")});    
+        obj.setTemplate("row", row);
+        obj.setAction("myAction", function(src){
+        	var callerWindowObj = dialogArguments;
+            var index =  obj.getSelectionProperty("index");
+            var fila = new Array(myColumns.length);
+                for (i=0; i<myColumns.length; i++){
+                    fila[i] = obj.getDataProperty("text", index, i);
+                }
+            callerWindowObj.insertarSolicitud(fila);
+            
+            
+            window.close();
+        });
+        //Evento Focus de la grilla 
+        obj.setAction("selectionChanged", mySelect);
+
+        //Evento que reconoce la tecla ENTER
+        var defaultEventHandler = obj.getEvent("onkeydown");
+        var myEventHandler = function(event){
+            if(event.keyCode==13){
+                //
+            }else if(event.keyCode==27){                  
+                parent.parent.salir();
+                event.returnValue = false;              
+            }else if (event.keyCode == 8)event.returnValue = backspace();//Cancela Backspace
+            else if (event.keyCode == 112)parent.ayuda();//F1 ACERCA DE...
+            else if (event.ctrlKey){//Cancela Control
+                event.keyCode = 0;
+                event.returnValue = false; 
+            }else if (window.event && (event.keyCode == 114 || event.keyCode == 116 ||
+                event.keyCode == 117 || event.keyCode == 122)){//Cancela F3,F5,F6 y F11
+                event.keyCode = 505;
+                if(event.keyCode == 505)event.returnValue = false;  
+            }else
+                defaultEventHandler.call(this, event);
+        }
+        obj.setEvent("onkeydown", myEventHandler);
+
+        //Pintado de la grilla
+        document.write(obj);
+
+        function setFoco() {
+            try{
+              if(myData.length == 0){
+                parent.nuevo();
+              }
+              if(myData.length > eval(indice) && indice > -1){
+                  obj.setSelectionIndex(eval(indice));
+              }else if(myData.length > 0){
+                  obj.setSelectionIndex(0);
+              }
+            }catch(error){
+            }
+        }
+        
+        function NumerodeFilas() {
+			return obj.getRowProperty("values").length;
+		}
+
+        function getTableIndex() {
+            return obj.getProperty("selection/index");
+        }
+
+        function mySelect(){
+        }
+
+    </script>
+		<br>
+	</body>
+</html>
\ No newline at end of file
diff --git a/DELFINWEBNEW/WebRoot/FINANCIERO/workflow/WF_C_Maestra_CNTR.jsp b/DELFINWEBNEW/WebRoot/FINANCIERO/workflow/WF_C_Maestra_CNTR.jsp
new file mode 100644
index 0000000..54558c3
--- /dev/null
+++ b/DELFINWEBNEW/WebRoot/FINANCIERO/workflow/WF_C_Maestra_CNTR.jsp
@@ -0,0 +1,412 @@
+<!-- WF_C_Maestra_CNTR.jsp-->
+<%--[Req.S17-007] kdelacruz 27.03.2017 - Implementación WorkFlow Legal--%>
+
+<%@ page language="java" import="java.util.*" pageEncoding="ISO-8859-1"%>
+<jsp:directive.page import="financ.util.Constante"/>
+<%@ taglib prefix="c" uri="http://java.sun.com/jstl/core" %>
+<%@ taglib uri="/delfin" prefix="delfinTagHtml" %>
+<%
+    String idModulo = request.getAttribute("idModulo") != null?(String)request.getAttribute("idModulo"):"";
+%>
+<html>
+  <head>
+    <title>BUSQUEDA INGRESO</title>
+    <link id="css" href="${pageContext.request.contextPath}/UTILS/css/DELFIN.css" rel="stylesheet" type="text/css">
+    <script src="${pageContext.request.contextPath}/UTILS/Script/MsgValidacion.js"></script>
+    <script src="<%=request.getContextPath()%>/UTILS/Script/DELFIN-Utiles.js"></script>
+    <script type="text/javascript">
+    
+        var f = null;
+        var path;
+        nextfield = "";
+
+        function cargar() {
+            f = document.getElementById('frmBusqueda');
+            path = '<%=request.getContextPath()%>';
+            mensajeRespuesta('<c:out value="${codigoError}" />', '<c:out value="${mensajeError}" />');
+            onCargarDetalle();
+        }
+
+        function pag(direccion){
+            document.ifrmDetalleWorkflowLegal.paginacion(direccion);
+        }
+
+        function keyDown(DnEvents){
+            k = window.event.keyCode;
+            if (k == 13){
+                   if(nextfield == "txtFechaSolicitud"){
+                       openBusqueda();
+                       eval('document.forms[0].' + nextfield + '.focus()');
+                       onCargarDetalle();
+                       return false;
+                   }
+                   if(nextfield == "cboEtapa"){
+                	   buscarUsuarioLegal();
+                       eval('document.forms[0].' + nextfield + '.focus()');
+                       onCargarDetalle();
+                       return false;
+                   }
+                   if(nextfield == "cboEstado"){
+                       eval('document.forms[0].' + nextfield + '.focus()');
+                       onCargarDetalle();
+                       return false;
+                   }
+                   if(nextfield == "descripcionSolicitante"){
+                       eval('document.forms[0].' + nextfield + '.focus()');
+                       onCargarDetalle();
+                       return false;
+                   }
+                return false;
+            }
+            if (k == 120){
+                return false;
+            }
+            if (k == 27){
+                salir();
+                return false;
+            }
+            if (k == 121){
+                grabar()
+                return false;
+            }
+            if (k == 112){
+                ayuda();
+                return false;
+            }
+            if (event.ctrlKey){
+                event.keyCode = 0;
+                return false;
+            }
+            if (k==46){
+                return false;
+            }
+            if (window.event && (k == 114 || k == 116 || k == 117 || k == 122))
+                event.keyCode = 505;
+            if(event.keyCode == 505)
+                return false;
+        }
+        document.onkeydown = keyDown;       
+
+        function salir(){
+            window.location = path + '/GENERAL/Menu.jsp';
+        }
+
+        function validarSeleccionCheck() {
+            var iframe = document.frames["ifrmDetalleWorkflowLegal"];
+             
+            if (iframe.getCantElemSelec() == 0) {
+                alert(m_10116);
+            }else{
+             return true;
+                }
+            return false;
+         }
+
+        function onCargarDetalle() {
+            var codCliente = f.hidNumeroDocumento.value;
+            var fechaSolicitud = byID('txtFechaSolicitud').value;
+            var cboEstado = byID('cboEstado').value;
+            var cboEtapa = byID('cboEtapa').value;
+            var usuarioSolicitante = byID('usuarioSolicitante').value;
+            var usuarioLegal = byID('usuarioLegal').value;
+
+            var params = '?action=CARGAR_DETALLE';
+                params += '&codCliente=' + codCliente;
+                params += '&fechaSolicitud=' + fechaSolicitud;
+                params += '&cboEstado=' + cboEstado;
+                params += '&usuarioSolicitante=' + usuarioSolicitante;
+                params += '&cboEtapa=' + cboEtapa;
+                params += '&usuarioLegal=' + usuarioLegal;
+
+            var url = path + '/WF_C_Legal_Servlet' + params;
+            document.getElementById('hidepage').style.visibility = '';
+            document.ifrmDetalleWorkflowLegal.location.replace(url);
+          }
+
+          function asignarSolicitud(){
+              var cadenaSeleccionadosIdsWorkflowUsuarioLegal = document.ifrmDetalleWorkflowLegal.obtenerUsuarioLegalIdsWorkflow();
+              if(!validarSeleccionCheck()){
+                  return;
+              }
+              var params = '?action=ASIGNAR_SOLICITUD'; 
+              params += '&cadenaSeleccionadosIdsWorkflowUsuarioLegal=' +  cadenaSeleccionadosIdsWorkflowUsuarioLegal;
+              var url = '<%=request.getContextPath()%>/WF_C_Legal_Servlet' + params;
+              var attribs = 'dialogHeight:150px;dialogWidth:350px; center:yes; help:no; resizable:no; status:no';
+              window.showModalDialog(url, window, attribs);
+           }
+
+          function validarSeleccionIdMaestra() {
+                var iframe = document.frames["ifrmDetalleWorkflowLegal"];
+                 
+                if (iframe.getCantElemSelec() != 1) {
+                    alert(m_10116);
+                }else{
+                 return true;
+                    }
+                return false;
+             } 
+             
+           function modificarSolicitud(){
+               var idMaestra = document.ifrmDetalleWorkflowLegal.obtenerIdMaestro();
+               nuevaSolicitud(idMaestra);
+               }
+
+          function nuevaSolicitud(idMaestra){
+              if(idMaestra == null){
+                  idMaestra = '';
+              }
+              var params = '?action=MOSTRAR_CONTENEDOR_WORKFLOW';
+                  params += '&indInicio=1';
+                  params += '&idMaestra=' + idMaestra;
+                  params += '&idModulo=' + f.hidIdModulo.value;
+              var url = '<%=request.getContextPath()%>/WF_T_Maestra_Servlet' + params;
+              window.top.document.location.replace(url);
+           }
+
+        //Busqueda de Clientes
+        function openBusqueda(){
+            var valor = f.txtCriterio.value != ""?f.txtCriterio.value.toUpperCase():"NULO";
+            nombre="PERSONAS";
+    
+            valor1 = "DOI";
+            valor2 = "Nombre";
+            window.showModalDialog("<%=request.getContextPath()%>/GENERAL/Busqueda.jsp?cboValorBuscar1="+valor1     +
+                                   "&cboValorBuscar2="+valor2+"&txtValorBuscar="+valor+"&tabla="+nombre,
+                                   window,"dialogHeight:330px;dialogWidth:670px;center:yes;help:no;resizable:no;");
+         }
+
+        function insertarPersona(data){
+            f.hidNumeroDocumento.value = data[0];
+            f.txtCriterio.value        = data[2];
+            document.frmBusqueda.txtCriterio.focus();
+         }
+
+        function buscarFuncionarios() {
+              var valor = byID('descripcionSolicitante').value;
+              var nombre='USUARIO';
+              var url = path + '/GENERAL/Busqueda.jsp';
+              var params = '?cboValorBuscar1=Codigo';
+              params += '&cboValorBuscar2=Descripcion';
+              params += '&txtValorBuscar=' + valor;
+              params += '&indicadorTipo=1';
+              params += '&tabla=' + nombre;
+              window.showModalDialog(url + params ,window,'dialogHeight:330px;dialogWidth:670px;center:yes;help:no;resizable:no;status:no');
+            }
+
+        function insertarUsuario(data, indicadorTipo){
+            if(indicadorTipo == '1'){
+            	byID('usuarioSolicitante').value = data[0];
+                byID('descripcionSolicitante').value = data[1];
+            }else{
+                byID('usuarioLegal').value = data[0];
+                byID('descripcionUsuarioLegal').value = data[1];
+               }
+        }
+
+        function buscarUsuarioLegal() {
+            var valor = byID('descripcionSolicitante').value;
+            var nombre='USUARIO';
+            var url = path + '/GENERAL/Busqueda.jsp';
+            var params = '?cboValorBuscar1=Codigo';
+            params += '&cboValorBuscar2=Descripcion';
+            params += '&txtValorBuscar=' + valor;
+            params += '&indicadorTipo=2';
+            params += '&tabla=' + nombre;
+            window.showModalDialog(url + params ,window,'dialogHeight:330px;dialogWidth:670px;center:yes;help:no;resizable:no;status:no');
+          }
+
+    </script>
+  </head>
+  <body onhelp="getF1();" class="colorbody" onload="cargar();" style="padding: 0px, 0px, 0px, 0px;overflow:auto;">
+    <form name="frmBusqueda" id="frmBusqueda" method="post">
+      <input type="hidden" name="hidNumeroDocumento">
+      <input type="hidden" name="usuarioSolicitante">
+      <input type="hidden" name="usuarioLegal">
+      <input type="hidden" name="hidIdModulo" value='<%=idModulo%>'>
+      <div id="hidepage" style="position: absolute;left:460px;top:380px;width: 100;height: 20">
+          <table>
+              <tr><td align="center"><img src="<%=request.getContextPath()%>/UTILS/img/loadings.gif" ></td></tr>
+              <tr><td align="center" style="font-weight: bold;" ><span class="etiqueta" >Cargando...</span></td></tr>
+          </table>
+      </div>
+      <div id="wndHide" ></div>
+      <table cellpadding="0" cellspacing="0" width="100%">
+        <tr>
+          <td class="tituloopcion">
+            DETALLE WORKFLOW LEGAL
+          </td>
+        </tr>
+        <tr>
+          <td height="4">
+            <img src="<%=request.getContextPath()%>/UTILS/img/t.gif" width="1" height="2">
+          </td>
+        </tr>
+      </table>
+      <table border="0" cellpadding="0" cellspacing="2" width="99.5%" align="center" >
+        <tr>
+          <td>
+            <table border="1" cellpadding="0" cellspacing="0" width="100%" align="center" class="frame">
+              <tr>
+                <td height="20" align="center">
+                  <table width="100%" cellpadding="0" cellspacing="0" border="0">
+                    <tr>
+                      <td align="left" colspan="4" valign="middle">
+                        <delfinTagHtml:boton nombre="BT_NuevaSolicitud.gif" onclick="javascript:nuevaSolicitud()"/>
+<%--                         <delfinTagHtml:boton nombre="BT_ModificarSolicitud.gif" onclick="javascript:modificarSolicitud()"/> --%>
+                        <delfinTagHtml:boton nombre="BT_AsignarSolicitud.gif" onclick="javascript:asignarSolicitud()"/>
+                        <delfinTagHtml:boton nombre="BT_AtenderSolicitud.gif" onclick="javascript:modificarSolicitud()"/>
+                        <delfinTagHtml:boton nombre="BT_Salir.gif" onclick="javascript:salir();" />
+                      </td>
+                    </tr>
+                  </table>
+                </td>
+              </tr>
+            </table>
+          </td>
+        </tr>
+        <tr>
+          <td height="4">
+            <img src="<%=request.getContextPath()%>/UTILS/img/t.gif" width="1" height="2">
+          </td>
+        </tr>
+        <tr>
+            <td class="tituloframe">BUSQUEDA</td>
+        </tr>
+        <tr>
+          <td>
+            <table border="2" cellpadding="0" cellspacing="0" width="100%" align="center" class="frame">
+              <tr>
+                <td height="20" align="center">
+                  <table width="99%" cellpadding="0" cellspacing="2" border="0">
+                    <tr id="trFiltroActivos"> 
+                          <td class="etiqueta" align="left" width="150" valign="middle">
+                                Cliente
+                          </td>
+                          <td>
+                             <input name="txtCriterio" style="width: 140px" class="campoobligatorioiz"  tabindex="1"
+                             onfocus="this.select(); field='txtCriterio'; nextfield ='txtFechaSolicitud';" >
+                             <img id="imgPersona" style="cursor:hand" title="Buscar Funcionario" src="<%=request.getContextPath()%>/UTILS/img/Detalle.gif" onclick="openBusqueda();">
+                          </td>
+                          <td class="etiqueta" align="left" width="160" valign="middle">
+                              Fecha Solicitud
+                          </td>
+                          <td > 
+                             <input name="txtFechaSolicitud" style="width: 140px" class="campoobligatorioiz"  tabindex="1" 
+                                    onfocus="this.select(); field='txtFechaSolicitud'; nextfield ='cboEstado';">
+                          </td>
+	                      <td class="etiqueta" align="left" valign="middle">
+	                          Estado
+	                      </td>
+	                          <td > 
+	                         <select name="cboEstado" id="cboEstado" style="width: 150px;" tabindex="4" class="campoobligatorioiz"
+	                                     onfocus="field='cboEstado'; nextfield ='descripcionSolicitante';">
+	                                   <c:forEach var='listBeanWFEstado' items='${requestScope.listBeanWFEstado}'>
+	                                      <option value="<c:out value='${listBeanWFEstado.idEstado}'/>" >
+	                                          <c:out value='${listBeanWFEstado.descripcionEstado}' />
+	                                      </option>
+	                                   </c:forEach>
+	                              </select>
+	                          </td>
+	                      <td valign="top" align="right" rowspan="3">
+	                            <delfinTagHtml:boton name="btnBuscar" nombre="BT_BuscarSolicitud.gif" onclick="JavaScript:onCargarDetalle();" />
+	                      </td>
+                      </tr>
+                      <tr>
+                        <td class="etiqueta" width="150px" align="left" valign="middle">
+                            Solicitante
+                        </td>
+                        <td class="etiqueta" align="left" width="200" valign="middle"> 
+                           <input name="descripcionSolicitante" style="width: 140px" class="campoobligatorioiz"  tabindex="1"
+                           onfocus="this.select(); field='descripcionSolicitante'; nextfield ='descripcionUsuarioLegal';">
+                           <img id="imgPersona" style="cursor:hand" title="Buscar Funcionario" src="<%=request.getContextPath()%>/UTILS/img/Detalle.gif" onclick="buscarFuncionarios();">
+                        </td>
+                        <td class="etiqueta" width="150" align="left" valign="middle">
+                            Usuario Legal
+                        </td>
+                        <td class="etiqueta" align="left" width="190" valign="middle"> 
+                           <input name="descripcionUsuarioLegal" style="width: 140px" class="campoobligatorioiz"  tabindex="1"
+                           onfocus="this.select(); field='descripcionUsuarioLegal'; nextfield ='cboEtapa';">
+                           <img id="imgPersona" style="cursor:hand" title="Buscar Funcionario" src="<%=request.getContextPath()%>/UTILS/img/Detalle.gif" onclick="buscarUsuarioLegal();">
+                        </td>
+                        <td class="etiqueta" align="left" valign="middle">
+                         Etapa
+                        </td>
+                        <td > 
+                           <select name="cboEtapa" id="cboEtapa" style="width: 150px;" tabindex="4" class="campoobligatorioiz"
+                                onfocus="field='cboEstado'; nextfield ='descripcionSolicitante';">
+                               <c:forEach var='listBeanWFEtapa' items='${requestScope.listBeanWFEtapa}'>
+                                  <option value="<c:out value='${listBeanWFEtapa.idEtapa}'/>" >
+                                      <c:out value='${listBeanWFEtapa.descripcionEtapa}' />
+                                  </option>
+                               </c:forEach>
+                          </select>
+                        </td>
+                      </tr>
+                  </table>
+                </td>
+              </tr>
+            </table>
+          </td>
+        </tr>
+        <tr>
+          <td height="4">
+            <img src="<%=request.getContextPath()%>/UTILS/img/t.gif" width="1" height="2">
+          </td>
+        </tr>
+        <tr>
+          <td>
+            <table cellpadding="0" border="0" cellspacing="0" width="100%" align="center">
+              <tr>
+                <td align="center" valign="top" width="100%">
+                  <table width="100%" align="center" cellspacing="0" border="0">
+                    <tr>
+                      <td valign="top">
+                        <table width="100%" cellpadding="0" cellspacing="0" border="0">
+                          <tr>
+                              <td class="tituloframe">DETALLE DE WORKFLOW</td>
+                          </tr>
+                          <tr>
+                            <td>
+                              <iframe id="ifrmDetalleWorkflowLegal" name="ifrmDetalleWorkflowLegal" frameborder="0" width="100%" height="300px"  class="frame" src="FINANCIERO/workflow/WF_C_Maestra_TABLA.jsp"></iframe>
+                            </td>
+                          </tr>
+                        </table>
+                      </td>
+                    </tr>
+                  </table>
+                  <table width="100%">
+                    <tr>
+                      <td align="right">
+                      <IMG src="<%=request.getContextPath()%>/UTILS/img/PagRe.gif" onClick="pag(-1);" style="CURSOR: hand;vertical-align: middle;" alt="Anterior">
+                      <label id="inicial" style="width:25;text-align:left;font-size:8pt;font-family:Arial;vertical-align: middle;"></label>
+                      <IMG src="<%=request.getContextPath()%>/UTILS/img/t.gif" height=1 width="10">
+                      <label id="final" style="width:25;text-align:right;font-size:8pt;font-family:Arial;vertical-align: middle;"></label>
+                      <IMG src="<%=request.getContextPath()%>/UTILS/img/PagAv.gif" onClick="pag(1)" style="CURSOR: hand;vertical-align: middle;" alt="Siguiente">
+                      <label id="total" style="width:50;text-align:left;font-size:8pt;font-family:Arial;vertical-align: middle;"></label>
+                      </td>
+                    </tr>
+                  </table>
+                </td>
+              </tr>
+            </table>
+          </td>
+        </tr>
+      </table>
+      <table>
+           <tr>
+               <td>
+                   <img src="${pageContext.request.contextPath}/UTILS/img/t.gif"
+                       width="1" height="1">
+               </td>
+           </tr>
+       </table>
+       <table cellpadding="0" cellspacing="0" border="0" width="100%">
+           <tr>
+               <td><%@ include file="/GENERAL/Header.jsp"%>
+               </td>
+           </tr>
+           <tr height="40px"></tr>
+       </table>
+    </form>
+  </body>
+</html>
\ No newline at end of file
diff --git a/DELFINWEBNEW/WebRoot/FINANCIERO/workflow/WF_C_Maestra_TABLA.jsp b/DELFINWEBNEW/WebRoot/FINANCIERO/workflow/WF_C_Maestra_TABLA.jsp
new file mode 100644
index 0000000..0bc6220
--- /dev/null
+++ b/DELFINWEBNEW/WebRoot/FINANCIERO/workflow/WF_C_Maestra_TABLA.jsp
@@ -0,0 +1,305 @@
+<!-- WF_C_Maestra_TABLA.jsp-->
+<%-- kdelacruz [Req.S17-007] 06.03.2017 - Implementación WorkFlow Legal--%>
+
+<jsp:directive.page import="general.utils.Paginacion"/>
+<%
+	String path =request.getContextPath();
+	String myData = request.getAttribute("myData") != null ? (String)request.getAttribute("myData") : "";
+	String hid_pagina = request.getParameter("hid_pagina") != null?request.getParameter("hid_pagina"):"1";  
+	String ini = request.getAttribute("inicio") != null?(String)request.getAttribute("inicio"):"0";
+	String indFin = request.getAttribute("indFin") != null?(String)request.getAttribute("indFin"):"0";
+%>
+<%@ taglib prefix="c" uri="http://java.sun.com/jstl/core" %>
+<html>
+<head>  
+    <!-- Invocación de Estilos -->
+    <link id="css" href="<%=request.getContextPath()%>/UTILS/css/DELFIN.css" rel="stylesheet" type="text/css">
+    <!-- Invocación de JavaScript -->
+    <script src="<%=request.getContextPath()%>/UTILS/Script/DELFIN-Tabla.js"></script>
+    <script src="<%=request.getContextPath()%>/UTILS/Script/MsgValidacion.js"></script>
+    <style>
+        .active-controls-grid {height: 100%; font: menu;}
+
+                 .active-column-0  {width: 50px;text-align: left;}
+                 .active-column-1  {width: 140px;text-align: left;}
+                 .active-column-2  {width: 140px;text-align: left;}
+                 .active-column-3  {width: 250px;text-align: left}
+                 .active-column-4  {width: 130px;text-align: left;}
+                 .active-column-5  {display: none;}
+                 .active-column-6  {width: 120px;text-align: left;}
+                 .active-column-7  {display: none;}
+                 .active-column-8  {width: 170px;text-align: left;}
+                 .active-column-9  {width: 100px;text-align: left;}
+                 .active-column-10  {width: 100px;text-align: left;}
+
+        .active-grid-column {border-right: 1px solid threedlightshadow; }
+        .active-grid-row {border-bottom: 1px solid threedlightshadow; }
+    </style>
+</head>
+<body onhelp="getF1()" onLoad="onload();">
+    <script>                                    
+	    var myData= [<c:out value="${requestScope.myData}" escapeXml="false"/>];
+	    var myColumns = ["Selec." //0
+	                     , "Id" //1
+	                     , "Numero Operación" //2
+	                     , "Cliente" //3
+	                     , "Tipo de Crédito" //4
+	                     , "" //5
+	                     , "Estado" //6
+	                     , "" //7
+	                     , "Estado" //8
+	                     , "Usuario Solicitante" //9
+	                     , "Usuario Legal"]; //10
+
+        //      create ActiveWidgets Grid javascript object
+        var obj = new Active.Controls.Grid;
+        
+        obj.setId("obj");
+        // grid header
+        obj.gridColumn = myColumns;
+        // grid data
+        obj.gridData = myData;
+        //  header methods
+        obj.getColumnCount = function() {return this.gridColumn.length};
+        obj.getColumnText = function(i){return this.gridColumn[i]};
+        //  data methods
+        obj.getDataCount = function() {return this.gridData.length};
+        obj.getDataText = function(i, j){return this.gridData[i][j]};
+        obj.setDataText = function(value, i, j){this.gridData[i][j] = value};
+    
+        obj.setRowHeaderWidth("28px");
+        obj.setColumnHeaderHeight("20px");
+        
+        
+        var row = new Active.Templates.Row; 
+        obj.setTemplate("row", row);
+        
+        obj.setAction("selectionChanged", null);
+            
+        //Evento que reconoce la tecla ENTER
+        var defaultEventHandler = obj.getEvent("onkeydown");
+        var myEventHandler = function(event){
+            if(event.keyCode==121)
+                parent.grabar();
+            else if(event.keyCode==27){
+                parent.salir();
+                event.returnValue = false;//Cancela la función inherente del ESC
+            }else if (event.keyCode == 8)event.returnValue = backspace();//Cancela Backspace
+            else if (event.keyCode == 112)parent.ayuda();//F1 ACERCA DE...
+            else if (event.ctrlKey){//Cancela Control
+                event.keyCode = 0;
+                event.returnValue = false; 
+            }else if (window.event && (event.keyCode == 114 || event.keyCode == 116 ||
+                event.keyCode == 117 || event.keyCode == 122)){//Cancela F3,F5,F6 y F11
+                event.keyCode = 505;
+                if(event.keyCode == 505)event.returnValue = false;  
+            }else
+                defaultEventHandler.call(this, event);
+        }
+        obj.setEvent("onkeydown", myEventHandler);
+
+		var row1 = new Active.Templates.Row; 
+        obj.setTemplate("row", row1);
+        row1.setEvent("ondblclick", function(){this.action("myAction")});    
+        obj.setAction("myAction", function(src){
+            parent.nuevaSolicitud(obtenerIdMaestro());
+        });
+        
+        var checkbox = new My.Templates.CheckboxLabel;
+        checkbox.setCheckedProperty("true", "Si")
+        checkbox.setCheckedProperty("false", "")
+        obj.setColumnTemplate(checkbox, 0);
+
+        //Pintado de la grilla
+        document.write(obj);
+
+        function devuelveTam(){
+            return myData.length;
+        }
+
+        function setFoco(){
+        }
+        function getTableIndex() {
+            return obj.getProperty("selection/index");
+        }
+        
+        //Numero de filas de las tablas
+        function NumerodeFilas() {
+            return obj.getRowProperty("values").length;
+        }
+        
+      //Devuelve los datos de la fila que se solicita
+        function devuelveFila(){
+            var fila = new Array(myColumns.length);
+            if(myData.length){
+                var index = obj.getSelectionProperty("index");
+                for (i=0; i<myColumns.length; i++)
+                    fila[i] = obj.getDataProperty('text', index, i);
+            }
+            return  fila;
+        }
+    
+        var f = parent.document.forms[0];
+        function devuelveTamanio(){
+        }
+        
+        function marcarTodos(){
+            for(var i=0; i < myData.length; ++i) { 
+                myData[i][2]="Si";                 
+            }
+            obj.refresh(); 
+        }
+        function desmarcarTodos(){
+            for(var i=0; i < myData.length; ++i) {                
+                myData[i][1]="";                
+            }
+            obj.refresh(); 
+        }
+     
+        if(myData.length>0)
+            obj.setSelectionIndex(0);
+            
+        //Funciones que anulan el click derecho del mouse
+        document.oncontextmenu=new Function("return false");
+        
+        function NumerodeFilas() {
+            return obj.getRowProperty("values").length;
+        }
+
+        function getTableIndex() {
+            return obj.getProperty("selection/index");
+        }
+
+        function funcion_checkbox(newValue){
+            var tamanio = devuelveTamanio();
+            var indice = getTableIndex();
+            for(var i=0; i < tamanio;i++){
+                if (i != indice) {
+                    myData[i][0] = "";
+                }
+            }
+            obj.refresh();
+        }
+
+        function getCantElemSelec() {
+            var count = 0;
+            for(var i=0;i<myData.length;i++){
+                if(myData[i][0] == 'Si') {
+                    count++;
+                }
+            }
+            return count;
+        }
+
+        var path;
+        function onload(){
+          path = '<%=path%>';
+          parent.mensajeRespuesta('<c:out value="${codigoError}" />', '<c:out value="${mensajeError}" />');
+          if(parent.document.getElementById('hidepage')){
+              parent.loadImages();
+          }
+          setFoco();
+        }
+
+        function datosPagina(pag){
+
+        	var codCliente = parent.byID('hidNumeroDocumento').value;
+            var fechaSolicitud = parent.byID('txtFechaSolicitud').value;
+            var cboEstado = parent.byID('cboEstado').value;
+            var cboEtapa = parent.byID('cboEtapa').value;
+            var usuarioSolicitante = parent.byID('usuarioSolicitante').value;
+
+            var params = '?action=CARGAR_DETALLE';
+                params += '&codCliente=' + codCliente;
+                params += '&fechaSolicitud=' + fechaSolicitud;
+                params += '&cboEstado=' + cboEstado;
+                params += '&usuarioSolicitante=' + usuarioSolicitante;
+                params += '&cboEtapa=' + cboEtapa;
+
+            var url = path + '/WF_C_Legal_Servlet' + params;
+            parent.window.document.ifrmDetalleWorkflowLegal.location.replace(url);
+        }
+
+        function paginacion(direccion){
+            if(myData.length < 1){
+                return;
+              }
+              var pag = eval("<%=hid_pagina%>")+eval(direccion);
+                  if(direccion == "-1"){
+                     <%if(!ini.equals("0")){%>
+                          datosPagina(pag);
+                     <%}else{%>
+                          alert(m_0060);
+                     <%}%>
+                  }else{
+                     <%if(indFin.equals("0")){%>
+                          datosPagina(pag);
+                     <%}else{%>
+                          alert(m_0061);
+                     <%}%>
+                  }
+            }
+
+        valores();
+        function valores(){
+          <%
+            String comienzo = request.getAttribute("inicio") != null?(String)request.getAttribute("inicio"):"0";
+            String fin = request.getAttribute("fin") != null?(String)request.getAttribute("fin"):"0";
+            String total = request.getAttribute("total") != null?(String)request.getAttribute("total"):"0";
+          %>
+            if(myData.length>0){
+               parent.inicial.innerHTML = eval(<%=comienzo%>)+1;
+               parent.final.innerHTML   = <%= fin %>;
+               parent.total.innerHTML   = "de <%= total %>";
+            }else{
+               parent.inicial.innerHTML = "";
+               parent.final.innerHTML   = "";
+               parent.total.innerHTML   = "";
+            }
+        }
+
+        function getTableIndex() {
+            return obj.getProperty("selection/index");
+        }
+
+        function obtenerIdsWorkflow(){
+            var seleccionadosSolicitudes = "";
+            for(var i = 0; i < NumerodeFilas(); i++){
+                if(myData[i][0] == "Si"){
+                	seleccionadosSolicitudes += myData[i][1] + "-";
+                }
+            }
+            return seleccionadosSolicitudes;
+        }
+
+        function obtenerNumeroSolicitudes(){
+            var seleccionadosSolicitudes = "";
+            for(var i = 0; i < NumerodeFilas(); i++){
+                if(myData[i][0] == "Si"){
+                	seleccionadosSolicitudes += myData[i][3] + "-";
+                }
+            }
+            return seleccionadosSolicitudes;
+        }
+
+        function obtenerUsuarioLegalIdsWorkflow(){
+            var seleccionadosSolicitudes = "";
+            for(var i = 0; i < NumerodeFilas(); i++){
+                if(myData[i][0] == "Si"){
+                	seleccionadosSolicitudes += myData[i][1] + "," + myData[i][6] + "-";
+                }
+            }
+            return seleccionadosSolicitudes;
+        }
+
+        function obtenerIdMaestro() {
+           return myData[getTableIndex()][1];
+        }
+
+        function obtenerUsuarioAsignado(){
+        	return myData[getTableIndex()][6];
+            }
+
+    </script>
+</body>
+</html>
\ No newline at end of file
diff --git a/DELFINWEBNEW/WebRoot/FINANCIERO/workflow/WF_T_Contenedor_CNTR.jsp b/DELFINWEBNEW/WebRoot/FINANCIERO/workflow/WF_T_Contenedor_CNTR.jsp
new file mode 100644
index 0000000..5fa65b0
--- /dev/null
+++ b/DELFINWEBNEW/WebRoot/FINANCIERO/workflow/WF_T_Contenedor_CNTR.jsp
@@ -0,0 +1,295 @@
+<!-- WF_T_Contenedor_CNTR.jsp-->
+<%--kdelacruz [Req.S17-007] 06.03.2017 - Implementación WorkFlow Legal--%>
+
+<%@ page language="java" import="java.util.*" pageEncoding="ISO-8859-1"%>
+<jsp:directive.page import="financ.util.Constante"/>
+<%@ taglib prefix="c" uri="http://java.sun.com/jstl/core" %>
+<%@ taglib uri="/delfin" prefix="delfinTagHtml" %>
+<html>
+  <head>
+    <title>WORKFLOW LEGAL</title>
+    <link id="css" href="${pageContext.request.contextPath}/UTILS/css/DELFIN.css" rel="stylesheet" type="text/css">
+    <script src="${pageContext.request.contextPath}/UTILS/Script/MsgValidacion.js"></script>
+    <script src="<%=request.getContextPath()%>/UTILS/Script/DELFIN-Utiles.js"></script>
+    <script type="text/javascript">
+    
+        var f = null;
+        var path;
+        nextfield = "";
+        var iframe = "";
+
+        function cargar() {
+            f = document.getElementById('frmBusqueda');
+            path = '<%=request.getContextPath()%>';
+            mensajeRespuesta('<c:out value="${codigoError}" />', '<c:out value="${mensajeError}" />');
+            onCargarDetalle();
+            var idEtapaPendiente = byID('idEtapaPendiente').value;
+            if(!isEmpty(idEtapaPendiente)){
+            	mostrarTab(idEtapaPendiente);
+                }
+            
+          }
+
+        function keyDown(DnEvents){
+            k = window.event.keyCode;
+            if (k == 13){
+            }
+            if (k == 120){
+                return false;
+            }
+            if (k == 27){
+                salir();
+                return false;
+            }
+            if (k == 121){
+                grabar()
+                return false;
+            }
+            if (k == 112){
+                ayuda();
+                return false;
+            }
+            if (event.ctrlKey){
+                event.keyCode = 0;
+                return false;
+            }
+            if (k==46){
+                return false;
+            }
+            if (window.event && (k == 114 || k == 116 || k == 117 || k == 122))
+                event.keyCode = 505;
+            if(event.keyCode == 505)
+                return false;
+        }
+        document.onkeydown = keyDown;       
+
+        function salir(){
+          var params = '?action=MOSTRAR_DETALLE';
+          params += '&idModulo=143001';
+          window.location = path + '/WF_C_Legal_Servlet' + params;
+        }
+
+        function onCargarDetalle() {
+        	desHabilitarBotones();
+            <c:forEach var='beanWFEtapa' items='${requestScope.listBeanWFEtapa}'>
+              var params = '&time=' + new Date().getTime();
+              params += '&idEtapa=<c:out value="${beanWFEtapa.idEtapa}"/>';
+              params += '&idMaestra=<c:out value="${requestScope.idMaestra}"/>';
+              var url = path + '/<c:out value="${beanWFEtapa.accionServlet}"/>' + params;
+              eval('document.ifrm_<c:out value="${beanWFEtapa.idEtapa}"/>').location.replace(url);
+            </c:forEach>
+        }
+
+        function mostrarTab(idTab) {
+
+            habilitarBotones(idTab);
+            var id = 'tab_' + idTab;
+            var estiloSeleccionado = '#617AAC';
+            var colorSeleccionado = '#FFFFFF';
+            var estiloNoSeleccionado = '#F0F8FF';
+            var colorNoSeleccionado = '#08246B';
+
+            <c:forEach var='beanWFEtapa' items='${requestScope.listBeanWFEtapa}'>
+            byID('tab_<c:out value="${beanWFEtapa.idEtapa}"/>').style.display = 'none';
+            byID('atab_<c:out value="${beanWFEtapa.idEtapa}"/>').style.background = estiloNoSeleccionado;
+            byID('atab_<c:out value="${beanWFEtapa.idEtapa}"/>').style.color = colorNoSeleccionado;
+            </c:forEach>
+            
+            byID(id).style.display = 'block';
+            byID('a' + id).style.background = estiloSeleccionado;
+            byID('a' + id).style.color = colorSeleccionado;
+
+            iframe = 'ifrm_' + idTab;
+          }
+
+        function verHistorialDocumento(idTipoDocumento, idEtapa, idMaestra){
+            var params = '?action=MOSTRAR';
+            params += '&idEtapa=' + idEtapa;
+            params += '&idTipoDocumento='+idTipoDocumento;
+            params += '&idMaestra='+idMaestra;
+            params += '&time=' + new Date().getTime();
+            var url = path + '/WF_C_Documentos_Servlet' + params;
+            var attribs = 'dialogHeight:250px;dialogWidth:550px; center:yes; help:no; resizable:no; status:no';
+            window.showModalDialog(url, window, attribs);
+        }
+
+        function registroNotaria(){
+          var params = '?action=MOSTRAR';
+          params += '&time=' + new Date().getTime();
+          params += '&idMaestra=' + byID('idMaestra').value;
+          var url = path + '/WF_T_Notaria_Servlet' + params;
+          var attribs = 'dialogHeight:350px;dialogWidth:450px; center:yes; help:no; resizable:no; status:no';
+          window.showModalDialog(url, window, attribs);
+        }
+
+        function habilitarBotones(idEtapa){
+        	desHabilitarBotones();
+        	var params = 'action=HABILITAR_BOTONES';
+            params += '&idEtapa=' + idEtapa;
+	        var url = path + '/WF_T_Maestra_Servlet';
+	        ajaxRequestPOST(url, params, false, function(xmldoc) {
+            mensajeRespuestaXML(xmldoc, function(){
+              var cadenaIdEvento = getValor(xmldoc, 'cadenaIdEvento').split("---");
+                   for(i=0; i < cadenaIdEvento.length; i++){
+                       if(cadenaIdEvento[i] == ""){
+                           continue;
+                       }
+                	   byID(cadenaIdEvento[i]).style.display = 'inline';
+                   }
+	            });
+	          });
+            }
+
+        function desHabilitarBotones(){
+	        	<c:forEach var='beanWFEvento' items='${requestScope.listBeanWFEvento}'>
+	        	   byID("${beanWFEvento.idEvento}").style.display = 'none';
+	            </c:forEach>
+            }
+
+        function funcionGenerica(funcion){
+            eval('document.'+iframe + '.' + funcion);
+        }
+
+        function historicoWorkFlow(){
+            var params = '?action=MOSTRAR';
+            params += '&idMaestra=' + byID('idMaestra').value;
+            params += '&time=' + new Date().getTime();
+            var url = path + '/WF_C_Movimientos_Servlet' + params;
+            var attribs = 'dialogHeight:300px;dialogWidth:750px; center:yes; help:no; resizable:no; status:no';
+            window.showModalDialog(url, window, attribs);
+        }
+
+        function exportacionMemorandum(){
+            var params = '?action=EXPORTAR_MEMORANDUM';
+            params += '&idMaestra=' + byID('idMaestra').value;
+            params += '&time=' + new Date().getTime();
+            var url = path + '/WF_T_Notaria_Servlet' + params;
+            window.open(url, "reporte","width=790,height=540,top=0,left=0,status=no,resizable=yes,dependent=yes,alwaysRaised=yes,scrollbars=yes,toolbar=no,menubar=no");
+        }
+
+
+    </script>
+    <style>
+      .tabs {
+          width: 200px;
+          list-style: none;
+          padding: 0;
+          margin-left: 5px;
+          display: inline;
+          float: left;
+      }
+
+      .tabs li {
+          width: 120px;
+          display: block;
+          float: left;
+          text-align: center;
+          margin-right: 0.05em;
+          position: relative;
+          top: 1px;
+      }
+
+      .relleno {
+          margin-left: 15px;
+      }
+
+      .tabs li a {
+          color: #FFFFFF;
+          background: #99CCFF;
+          font-style: normal;
+          /*font-weight: bold;*/
+          font-size: 12px;
+          font-family: Arial, Helvetica, sans-serif;
+          border: 1px solid #3F7F7F;
+          padding: 4px 4px 4px 4px;
+          width: 200px;
+          display: block;
+          text-decoration: none;
+          -moz-border-radius:0.5em;
+          margin-bottom: 1px;
+      }
+    </style>
+  </head>
+  <body onhelp="getF1();" class="colorbody" onload="cargar();" style="padding: 0px, 0px, 0px, 0px;overflow:auto;">
+    <form name="frmBusqueda" id="frmBusqueda" method="post">
+      <input type="hidden" name="idMaestra" value='<c:out value="${requestScope.idMaestra}"/>'>
+      <input type="hidden" name="idModulo" value='<c:out value="${requestScope.idModulo}"/>'>
+      <input type="hidden" name="idEtapaPendiente" value='<c:out value="${requestScope.idEtapaPendiente}"/>'>
+      <div id="wndHide" ></div>
+      <table cellpadding="0" cellspacing="0" width="100%">
+        <tr>
+          <td class="tituloopcion">
+            DETALLE WORKFLOW LEGAL
+          </td>
+        </tr>
+        <tr>
+          <td height="4">
+            <img src="<%=request.getContextPath()%>/UTILS/img/t.gif" width="1" height="2">
+          </td>
+        </tr>
+      </table>
+      <table border="0" cellpadding="0" cellspacing="2" width="99.5%" align="center" >
+        <tr>
+          <td>
+            <table border="1" cellpadding="0" cellspacing="0" width="100%" align="center" class="frame">
+              <tr>
+                <td height="20" align="center">
+                  <table width="100%" cellpadding="0" cellspacing="0" border="0">
+                    <tr>
+                      <td align="left" colspan="4" valign="middle">
+                        <c:forEach var='beanWFEvento' items='${requestScope.listBeanWFEvento}'>
+	                        <c:choose>
+	                          <c:when test="${beanWFEvento.indicadorInvocar == 'S'}">
+                                <delfinTagHtml:boton id="${beanWFEvento.idEvento}" nombre="${beanWFEvento.nombreBoton}" onclick="javascript:${beanWFEvento.nombrePrograma}" />
+	                          </c:when>
+	                          <c:otherwise>
+								<delfinTagHtml:boton id="${beanWFEvento.idEvento}" nombre="${beanWFEvento.nombreBoton}" onclick="javascript:funcionGenerica('${beanWFEvento.nombrePrograma}')" />
+	                          </c:otherwise>
+	                        </c:choose>
+                        </c:forEach>
+                        <delfinTagHtml:boton nombre="BT_Salir.gif" onclick="javascript:salir();" />
+                      </td>
+                    </tr>
+                  </table>
+                </td>
+              </tr>
+            </table>
+          </td>
+        </tr>
+        <tr>
+          <td height="4">
+            <img src="<%=request.getContextPath()%>/UTILS/img/t.gif" width="1" height="2">
+          </td>
+        </tr>
+        <tr>
+          <td align="center">
+            <table border="0" cellpadding="0" cellspacing="0" width="200px" margin-left="20px" margin-right="20px" align="left" >
+                <tr>
+                  <td height="1" valign="bottom" align="center">
+                    <ul class="tabs">
+                      <c:forEach var='beanWFEtapa' items='${requestScope.listBeanWFEtapa}'>
+                        <li>
+                            <a id="atab_<c:out value="${beanWFEtapa.idEtapa}"/>" style="cursor: hand;"  onclick="mostrarTab('<c:out value="${beanWFEtapa.idEtapa}"/>');" ><c:out value='${beanWFEtapa.descripcionEtapa}' /></a>
+                        </li>
+                     </c:forEach>
+                    </ul>
+                  </td>
+                </tr>
+              </table>
+              <table border="0" cellpadding="0" cellspacing="0" width="80%" height="100%" align="left" >
+                  <tr>
+                  <td valign="bottom">
+                    <c:forEach var='beanWFEtapa' items='${requestScope.listBeanWFEtapa}'>
+                        <div id="tab_<c:out value="${beanWFEtapa.idEtapa}"/>" style=" width: 90%; height: 800; display: none">
+                            <iframe frameborder="0" width="100%" height="80%" id="ifrm_<c:out value="${beanWFEtapa.idEtapa}"/>" name="ifrm_<c:out value="${beanWFEtapa.idEtapa}"/>" class="frame" >
+                            </iframe>
+                        </div>
+                    </c:forEach>
+                  </td>
+                </tr>
+              </table>
+          </td>
+        </tr>
+    </form>
+  </body>
+</html>
\ No newline at end of file
diff --git a/DELFINWEBNEW/WebRoot/FINANCIERO/workflow/documentos/WF_C_Documentos_CNTR.jsp b/DELFINWEBNEW/WebRoot/FINANCIERO/workflow/documentos/WF_C_Documentos_CNTR.jsp
new file mode 100644
index 0000000..0386d6b
--- /dev/null
+++ b/DELFINWEBNEW/WebRoot/FINANCIERO/workflow/documentos/WF_C_Documentos_CNTR.jsp
@@ -0,0 +1,126 @@
+<!-- WF_C_Documentos_CNTR.jsp -->
+<%-- kdelacruz [Req.S17-007] 06.03.2017 - Implementación WorkFlow Legal--%>
+
+<%@ taglib uri="/delfin" prefix="delfinTagHtml"%>
+<%@ taglib prefix="c" uri="http://java.sun.com/jstl/core"%>
+<%@ taglib prefix='fmt' uri='http://java.sun.com/jstl/fmt'%>
+<html>
+  <head>
+    <META HTTP-EQUIV="Pragma" CONTENT="no-cache" />
+    <!-- Titulo del Módulo -->
+    <title>Documentos</title>
+    <!-- Invocación de Estilos -->
+    <link id="css" href="<%=request.getContextPath()%>/UTILS/css/DELFIN.css" rel="stylesheet" type="text/css">
+    <!-- Invocación de Java Scripts -->
+    <script src="<%=request.getContextPath()%>/UTILS/Script/MsgValidacion.js"></script>
+    <script src="<%=request.getContextPath()%>/UTILS/Script/DELFIN-Utiles.js"></script>
+    <script src="<%=request.getContextPath()%>/UTILS/Script/json2.js"></script>
+    <script>
+      var path;
+      var f;
+      var callerWindowObj;
+      function load(){
+        vieneDeLoad = true;
+        path = '<%=request.getContextPath()%>';
+        f = byID("frmRegistro");
+        mensajeRespuesta('<c:out value="${codigoError}" />', '<c:out value="${mensajeError}" />');
+        cargarDetalle();
+      }
+
+      function cargarDetalle(){
+          var idEtapa = byID('idEtapa').value;
+          var idTipoDocumento = byID('idTipoDocumento').value;
+          var idMaestra = byID('idMaestra').value;
+    	  var params = '?action=MOSTRAR_TABLA';
+    	  params += '&idEtapa=' + idEtapa;
+    	  params += '&idTipoDocumento='+idTipoDocumento;
+    	  params += '&idMaestra='+idMaestra;
+    	  params += '&time=' + new Date().getTime();
+    	  var url = path + '/WF_C_Documentos_Servlet' + params;
+    	  document.ifrmDetalle.location.replace(url);
+      }
+
+      function exportarHistorial(){
+    	  var params = '?action=EXPORTAR_HISTORIAL';
+          params += '&idEtapa=' + idEtapa;
+          params += '&idTipoDocumento='+idTipoDocumento;
+          params += '&idMaestra='+idMaestra;
+          params += '&time=' + new Date().getTime();
+          var url = path + '/WF_C_Documentos_Servlet' + params;
+          window.open(url, "reporte","width=790,height=540,top=0,left=0,status=no,resizable=yes,dependent=yes,alwaysRaised=yes,scrollbars=yes,toolbar=no,menubar=no");
+      }
+
+      document.onkeydown = keyDown;
+      nextfield = '';
+      function keyDown(DnEvents) {
+        // Reconocimiento de la tecla enter, para que simule el tab
+        k = window.event.keyCode;
+        // Reconocimiento de la tecla ESC para el cerrado de la ventana
+        if (k == 13) {
+          if(byID(nextfield) && !byID(nextfield).readOnly){
+            byID(nextfield).focus();
+            return false;
+          }
+          return;
+        } else if (k == 27) {
+          salir();
+          return false;
+        }
+      }
+
+      function salir(){
+        window.close();
+      }
+
+    </script>
+  </head>
+  <body onload="load();" class="colorbody" style="padding: 5px, 5px, 5px, 5px;overflow:auto;" >
+    <form name="frmRegistro" id="frmRegistro" method="post">
+      <table width="100%" cellpadding="1" cellspacing="0" border="0">
+        <tr>
+          <td colspan="2">
+            <table border="0" cellpadding="2" cellspacing="2" width="100%" height="100%" align="center" class="">
+              <tr>
+                <td>
+                  <table border="1" cellpadding="0" cellspacing="0" width="100%" align="center" class="frame">
+                    <tr>
+                      <td height="20" align="center">
+                        <table width="99%" cellpadding="0" cellspacing="0" border="0">
+                          <tr>
+                            <td align="left" colspan="3" valign="middle">
+                              <delfinTagHtml:boton nombre="BT_Salir_P.gif" onclick="salir();" />
+                            </td>
+                          </tr>
+                        </table>
+                      </td>
+                    </tr>
+                  </table>
+                </td>
+              </tr>
+            </table>
+          </td>
+        </tr>
+        <tr>
+          <td class="tituloframe" align="top" >
+            <table border="0" cellpadding="2" cellspacing="2" width="100%" height="100%" align="center" class="">
+              <tr>
+                <td class="tituloframe">
+                  DOCUMENTOS
+                  <input type="hidden" name="idEtapa" id="idEtapa" value="<c:out value="${idEtapa}"/>">
+                  <input type="hidden" name="idTipoDocumento" id="idTipoDocumento" value="<c:out value="${idTipoDocumento}"/>">
+                  <input type="hidden" name="idMaestra" id="idMaestra" value="<c:out value="${idMaestra}"/>">
+                </td>
+              </tr>
+              <tr>
+                <td>
+                  <iframe frameborder="0" width="100%" height="150px" id="ifrmDetalle" name="ifrmDetalle" class="frame" src="<%=request.getContextPath()%>/FINANCIERO/workflow/documentos/WF_C_Documentos_TABLA.jsp">
+                  </iframe>
+                </td>
+              </tr>
+            </table>
+          </td>
+        </tr>
+      </table>
+    </form>
+  </body>
+</html>
\ No newline at end of file
diff --git a/DELFINWEBNEW/WebRoot/FINANCIERO/workflow/documentos/WF_C_Documentos_TABLA.jsp b/DELFINWEBNEW/WebRoot/FINANCIERO/workflow/documentos/WF_C_Documentos_TABLA.jsp
new file mode 100644
index 0000000..169b6ea
--- /dev/null
+++ b/DELFINWEBNEW/WebRoot/FINANCIERO/workflow/documentos/WF_C_Documentos_TABLA.jsp
@@ -0,0 +1,144 @@
+<!-- WF_C_Documentos_TABLA.jsp -->
+<%-- kdelacruz [Req.S17-007] 06.03.2017 - Implementación WorkFlow Legal --%>
+<jsp:directive.page import="general.utils.Paginacion" />
+<%@ taglib prefix="c" uri="http://java.sun.com/jstl/core"%>
+<%@ taglib prefix='fmt' uri='http://java.sun.com/jstl/fmt'%>
+<%
+    String path =request.getContextPath();
+%>
+<html>
+	<head>
+		<!-- Invocación de Estilos -->
+		<link id="css" href="<%=path%>/UTILS/css/DELFIN.css" rel="stylesheet" type="text/css">
+		<!-- Invocación de JavaScript -->
+		<script src="<%=path%>/UTILS/Script/grid.js"></script>
+		<script src="<%=path%>/UTILS/Script/MsgValidacion.js"></script>
+        <script src="<%=path%>/UTILS/Script/DELFIN-Utiles.js"></script>
+		<style>
+		    .active-controls-grid {width: "100%"; height: 100%; font: menu;}
+		    .active-column-0 {display:none;}
+            .active-column-1 {display:none;}
+            .active-column-2 {width: 130px;text-align: center;}
+            .active-column-3 {width: 140px;text-align: left;}
+            .active-column-4 {width: 150px;text-align: left;}
+            .active-column-5 {width: 80px;text-align: center;}
+            .active-grid-column {border-right: 1px solid threedlightshadow; }
+            .active-grid-row {border-bottom: 1px solid threedlightshadow; }
+        </style>
+	</head>
+	<body onload="onload();" TOPMARGIN=0 LEFTMARGIN=0 MARGINHEIGHT=0 MARGINWIDTH=0>
+		<script>
+
+        var path;
+        function onload(){
+          path = '<%=path%>';
+          //[T-9460] gmeza 31.08.2016
+          parent.mensajeRespuesta('<c:out value="${codigoError}" />', '<c:out value="${mensajeError}" />');
+          setFoco();
+        }
+
+        var posini;
+        var posfin;
+        var indice = '0';
+        var myData = [<c:out value="${requestScope.myData}" escapeXml="false"/>];
+
+        var myColumns = [
+                         "Id Documento",//0
+	                     "Id Workflow",//1
+	                     "Fecha",//2
+	                     "Usuario",//3
+	                     "Documento",//4
+	                     "Descargar"//5
+	                     ];
+
+        //  create ActiveWidgets Grid javascript object
+        var obj = new Active.Controls.Grid;
+
+        obj.setId("obj");
+        // grid header
+        obj.gridColumn = myColumns;
+        // grid data
+        obj.gridData = myData;
+        //  header methods
+        obj.getColumnCount = function() {return this.gridColumn.length};
+        obj.getColumnText = function(i){return this.gridColumn[i]};
+        //  data methods
+        obj.getDataCount = function() {return this.gridData.length};
+        obj.getDataText = function(i, j){return this.gridData[i][j]};
+        obj.setDataText = function(value, i, j){this.gridData[i][j] = value};
+
+        obj.setRowHeaderWidth("28px");
+        obj.setColumnHeaderHeight("20px");
+
+        var row = new Active.Templates.Row; 
+        row.setEvent("ondblclick", function(){this.action("myAction")});    
+        obj.setTemplate("row", row);
+        obj.setAction("myAction", function(src){
+            
+        });
+        //Evento Focus de la grilla 
+        obj.setAction("selectionChanged", mySelect);
+
+        //Evento que reconoce la tecla ENTER
+        var defaultEventHandler = obj.getEvent("onkeydown");
+        var myEventHandler = function(event){
+            if(event.keyCode==13){
+                //
+            }else if(event.keyCode==27){                  
+                parent.parent.salir();
+                event.returnValue = false;              
+            }else if (event.keyCode == 8)event.returnValue = backspace();//Cancela Backspace
+            else if (event.keyCode == 112)parent.ayuda();//F1 ACERCA DE...
+            else if (event.ctrlKey){//Cancela Control
+                event.keyCode = 0;
+                event.returnValue = false; 
+            }else if (window.event && (event.keyCode == 114 || event.keyCode == 116 ||
+                event.keyCode == 117 || event.keyCode == 122)){//Cancela F3,F5,F6 y F11
+                event.keyCode = 505;
+                if(event.keyCode == 505)event.returnValue = false;  
+            }else
+                defaultEventHandler.call(this, event);
+        }
+        obj.setEvent("onkeydown", myEventHandler);
+
+		//Inicio [T-9241] gmeza 15.08.2016
+        obj.setAction("columnSort", function(src) {
+          this.refresh();
+          this.timeout(function() {
+            window.status = ""
+          })
+        });  
+        //Fin [T-9241]
+
+        //Pintado de la grilla
+        document.write(obj);
+
+        function setFoco() {
+            try{
+              if(myData.length == 0){
+                parent.nuevo();
+              }
+              if(myData.length > eval(indice) && indice > -1){
+                  obj.setSelectionIndex(eval(indice));
+              }else if(myData.length > 0){
+                  obj.setSelectionIndex(0);
+              }
+            }catch(error){
+            }
+        }
+        
+        function NumerodeFilas() {
+			return obj.getRowProperty("values").length;
+		}
+
+        function getTableIndex() {
+            return obj.getProperty("selection/index");
+        }
+
+        function mySelect(){
+        }
+
+    </script>
+		<br>
+	</body>
+</html>
\ No newline at end of file
diff --git a/DELFINWEBNEW/WebRoot/FINANCIERO/workflow/legal/asignacion/WF_T_AsignarSolicitud_CHILD.jsp b/DELFINWEBNEW/WebRoot/FINANCIERO/workflow/legal/asignacion/WF_T_AsignarSolicitud_CHILD.jsp
new file mode 100644
index 0000000..63e48ee
--- /dev/null
+++ b/DELFINWEBNEW/WebRoot/FINANCIERO/workflow/legal/asignacion/WF_T_AsignarSolicitud_CHILD.jsp
@@ -0,0 +1,167 @@
+<!-- WF_T_AsignarSolicitud_CHILD.jsp-->
+<%--kdelacruz [Req.S17-007] 06.03.2017 - Implementación WorkFlow Legal--%>
+
+<%@ page language="java" import="java.util.*" pageEncoding="ISO-8859-1"%>
+<jsp:directive.page import="financ.util.Constante"/>
+<%@ taglib prefix="c" uri="http://java.sun.com/jstl/core" %>
+<%@ taglib uri="/delfin" prefix="delfinTagHtml" %>
+<%
+    String cadenaSeleccionadosIdsWorkflowUsuarioLegal = (String)request.getParameter("cadenaSeleccionadosIdsWorkflowUsuarioLegal") != null ? (String)request.getParameter("cadenaSeleccionadosIdsWorkflowUsuarioLegal") : "";
+%>
+<html>
+  <head>
+    <title>ASIGNAR SOLICITUD</title>
+    <link id="css" href="${pageContext.request.contextPath}/UTILS/css/DELFIN.css" rel="stylesheet" type="text/css">
+    <script src="${pageContext.request.contextPath}/UTILS/Script/MsgValidacion.js"></script>
+    <script src="<%=request.getContextPath()%>/UTILS/Script/DELFIN-Utiles.js"></script>
+    <script type="text/javascript">
+    
+        var f = null;
+        var path;
+        nextfield = "";
+
+        function cargar() {
+            f = document.getElementById('frmAsignar');
+            path = '<%=request.getContextPath()%>';
+            mensajeRespuesta('<c:out value="${codigoError}" />', '<c:out value="${mensajeError}" />');
+            byID("codigoFuncionario").value = '<%=session.getAttribute("strCodUsu")%>';
+            byID("descripcionFuncionario").value = '<%=session.getAttribute("strDesUsu")%>';
+        }
+
+        function keyDown(DnEvents){
+            k = window.event.keyCode;
+            if (k == 13){
+                buscarFuncionarios();
+                return false;
+            }
+            if (k == 120){
+                return false;
+            }
+            if (k == 27){
+                salir();
+                return false;
+            }
+            if (k == 121){
+                return false;
+            }
+            if (k == 112){
+                ayuda();
+                return false;
+            }
+            if (event.ctrlKey){
+                event.keyCode = 0;
+                return false;
+            }
+            if (k==46){
+                return false;
+            }
+            if (window.event && (k == 114 || k == 116 || k == 117 || k == 122))
+                event.keyCode = 505;
+            if(event.keyCode == 505)
+                return false;
+        }
+        document.onkeydown = keyDown;
+
+        function salir(){
+        	window.close();
+        }
+
+	  //Busqueda de Clientes
+	    function buscarFuncionarios() {
+	    	var valor = byID('descripcionFuncionario').value;
+            var nombre='USUARIO';
+            var url = path + '/GENERAL/Busqueda.jsp';
+            var params = '?cboValorBuscar1=Codigo';
+            params += '&cboValorBuscar2=Descripcion';
+            params += '&txtValorBuscar=' + valor;
+            params += '&indicadorTipo=1';
+            params += '&tabla=' + nombre;
+            window.showModalDialog(url + params ,window,'dialogHeight:330px;dialogWidth:670px;center:yes;help:no;resizable:no;status:no');
+	      }
+
+	    function insertarUsuario(data) {
+	        byID('codigoFuncionario').value = data[0];
+	        byID('descripcionFuncionario').value = data[1];
+	      }
+
+	    function grabarAsignacion(){
+	    	var codigoFuncionario = byID('codigoFuncionario').value;
+	        var cadenaSeleccionadosIdsWorkflowUsuarioLegal = '<%=cadenaSeleccionadosIdsWorkflowUsuarioLegal%>';
+	        var params = 'action=GRABAR_ASIGNACION';
+	        params += '&codigoFuncionario=' + codigoFuncionario;
+	        params += '&cadenaSeleccionadosIdsWorkflowUsuarioLegal=' + cadenaSeleccionadosIdsWorkflowUsuarioLegal;
+	        var url = path + '/WF_C_Legal_Servlet';
+	        ajaxRequestPOST(url, params, false, function(xmldoc) {
+	            mensajeRespuestaXML(xmldoc, function(){
+	              alert(m_8570);
+	              var callerWindowObj = dialogArguments;
+	              callerWindowObj.onCargarDetalle();
+	              salir();
+	            });
+	          });
+		 }
+
+    </script>
+  </head>
+  <body onhelp="getF1();" class="colorbody" onload="cargar();" style="padding: 0px, 0px, 0px, 0px;overflow:auto;">
+    <form name="frmAsignar" id="frmAsignar" method="post">
+      <table cellpadding="0" cellspacing="0" width="100%">
+        <tr>
+          <td class="tituloopcion">
+            Asignar Solicitud
+          </td>
+        </tr>
+        <tr>
+          <td height="4">
+            <img src="<%=request.getContextPath()%>/UTILS/img/t.gif" width="1" height="2">
+          </td>
+        </tr>
+      </table>
+      <table border="0" cellpadding="0" cellspacing="2" width="99.5%" align="center" >
+        <tr>
+          <td>
+            <table border="1" cellpadding="0" cellspacing="0" width="100%" align="center" class="frame">
+              <tr>
+                <td height="20" align="center">
+                  <table width="100%" cellpadding="0" cellspacing="0" border="0">
+                    <tr>
+                      <td align="left" colspan="4" valign="middle">
+                        <delfinTagHtml:boton nombre="BT_AsignarSolicitud.gif" onclick="javascript:grabarAsignacion()"/>
+                        <delfinTagHtml:boton nombre="BT_Salir.gif" onclick="javascript:salir();" />
+                      </td>
+                    </tr>
+                  </table>
+                </td>
+              </tr>
+            </table>
+          </td>
+        </tr>
+        <tr>
+          <td height="4">
+            <img src="<%=request.getContextPath()%>/UTILS/img/t.gif" width="1" height="2">
+          </td>
+        </tr>
+        <tr>
+          <td>
+            <table border="2" cellpadding="0" cellspacing="0" width="100%" align="center" class="frame">
+              <tr>
+                <td height="20" align="center">
+                  <table width="99%" cellpadding="0" cellspacing="2" border="0">
+                    <tr> 
+                      <td >
+                         <input name="codigoFuncionario" style="width: 100px" class="campodisplayiz" readonly  tabindex="1">
+                         <input name=descripcionFuncionario style="width: 180px" class="campoobligatorioiz"  tabindex="1"
+                         onfocus="this.select(); field='txtCriterio'; nextfield ='txtFechaSolicitud';" onfocus="this.select();nextfield='txtFechaSolicitud'">
+                         &nbsp;<img id="imgPersona" style="cursor:hand" title="Buscar Funcionario" src="<%=request.getContextPath()%>/UTILS/img/Detalle.gif" onclick="buscarFuncionarios();">
+                      </td>
+                    </tr>
+                  </table>
+                </td>
+              </tr>
+            </table>
+          </td>
+        </tr>
+      </table>
+    </form>
+  </body>
+</html>
\ No newline at end of file
diff --git a/DELFINWEBNEW/WebRoot/FINANCIERO/workflow/legal/etapa/WF_T_BloqueoRegistral_CHILD.jsp b/DELFINWEBNEW/WebRoot/FINANCIERO/workflow/legal/etapa/WF_T_BloqueoRegistral_CHILD.jsp
new file mode 100644
index 0000000..c26666a
--- /dev/null
+++ b/DELFINWEBNEW/WebRoot/FINANCIERO/workflow/legal/etapa/WF_T_BloqueoRegistral_CHILD.jsp
@@ -0,0 +1,325 @@
+<!-- WF_T_BloqueoRegistral_CHILD.jsp-->
+<%--[Req.S17-007] kdelacruz 13.03.2017 - Implementación WorkFlow Legal--%>
+
+<%@ page language="java" import="java.util.*" pageEncoding="ISO-8859-1"%>
+<jsp:directive.page import="financ.util.Constante"/>
+<%@ taglib prefix="c" uri="http://java.sun.com/jstl/core" %>
+<%@ taglib uri="/delfin" prefix="delfinTagHtml" %>
+<%
+String strComportamiento = request.getAttribute("strComportamiento") != null ? (String) request.getAttribute("strComportamiento") : "C";
+
+    String campoIz = "T".equals(strComportamiento) ? "class='campoobligatorioiz'" : "readonly class='campodisplayiz'";
+    String campoCe = "T".equals(strComportamiento) ? "class='campoobligatorioce'" : "readonly class='campodisplayce'";
+%>
+<html>
+  <head>
+    <link id="css" href="${pageContext.request.contextPath}/UTILS/css/DELFIN.css" rel="stylesheet" type="text/css">
+    <script src="${pageContext.request.contextPath}/UTILS/Script/MsgValidacion.js"></script>
+    <script src="<%=request.getContextPath()%>/UTILS/Script/DELFIN-Utiles.js"></script>
+    <script type="text/javascript">
+    
+        var f = null;
+        var path;
+        nextfield = "";
+
+        function cargar() {
+        	byID('idMaestra').value = parent.byID('idMaestra').value;
+            byID('idModulo').value = parent.byID('idModulo').value;
+            f = document.getElementById('frmSolicitudEstudioTitulo');
+            path = '<%=request.getContextPath()%>';
+            mensajeRespuesta('<c:out value="${codigoError}" />', '<c:out value="${mensajeError}" />');
+            onCargarDetalle();
+            goblalLimitText('textoComentario','numCarac',200);
+        }
+
+        function keyDown(DnEvents){
+            k = window.event.keyCode;
+            if (k == 13){
+            	if(nextfield == "asientoBloqueo"){
+                    eval('document.forms[0].' + nextfield + '.focus()');
+                    return false;
+                }
+                if(nextfield == "numeroPartidaBloqueo"){
+                    eval('document.forms[0].' + nextfield + '.focus()');
+                    return false;
+                }
+                if(nextfield == "oficinaRegistral"){
+                    eval('document.forms[0].' + nextfield + '.focus()');
+                    return false;
+                }
+                if(nextfield == "textoComentario"){
+                    eval('document.forms[0].' + nextfield + '.focus()');
+                    return false;
+                }
+                return false;
+            }
+            if (k == 120){
+                return false;
+            }
+            if (k == 27){
+                salir();
+                return false;
+            }
+            if (k == 121){
+                return false;
+            }
+            if (k == 112){
+                ayuda();
+                return false;
+            }
+            if (event.ctrlKey){
+                event.keyCode = 0;
+                return false;
+            }
+            if (k==46){
+                return false;
+            }
+            if (window.event && (k == 114 || k == 116 || k == 117 || k == 122))
+                event.keyCode = 505;
+            if(event.keyCode == 505)
+                return false;
+        }
+        document.onkeydown = keyDown;
+
+        function salir(){
+        	var params = '?action=MOSTRAR_DETALLE';
+            params += '&idModulo=143001';
+            parent.window.location = path + '/WF_C_Legal_Servlet' + params;
+        }
+
+        function onCargarDetalle() {
+            var idMaestra = parent.byID('idMaestra').value;
+            var idEtapa = byID('idEtapa').value;
+            
+            var params = '?action=CARGAR_DETALLE_SOLICITUD_ESTUDIO_TITULO';
+                params += '&idEtapa=' + idEtapa;
+                params += '&idMaestra=' + idMaestra;
+
+            var url = path + '/WF_C_TipoDocumento_Servlet' + params;
+            document.ifrmDetalleSolicitud.location.replace(url);
+          }
+
+        function validaSustento(){
+            goblalLimitText('textoComentario','numCarac',200);
+            if (byID('textoComentario').value.length > 200){
+                return false;
+            }
+            return true;
+        }
+
+        function validar(){
+            var frmDatos = document.frmBloqueoRegistral;
+            var fechaBloqueo = byID('fechaBloqueo').value;
+            var asientoBloqueo = byID('asientoBloqueo').value;
+            var numeroPartidaBloqueo = byID('numeroPartidaBloqueo').value;
+            var oficinaRegistral = byID('oficinaRegistral').value;
+
+            if(isEmpty(fechaBloqueo)){
+                frmDatos.fechaBloqueo.focus();
+                alert(m_0001);
+               return false;
+            }
+
+            if(isEmpty(asientoBloqueo)){
+                frmDatos.asientoBloqueo.focus();
+                alert(m_0001);
+               return false;
+            }
+
+            if(isEmpty(numeroPartidaBloqueo)){
+                frmDatos.numeroPartidaBloqueo.focus();
+                alert(m_0001);
+               return false;
+            }
+
+            if(isEmpty(oficinaRegistral)){
+                frmDatos.oficinaRegistral.focus();
+                alert(m_0001);
+               return false;
+            }
+            return true;
+        }
+
+        function validarComentario(){
+        	var frmDatos = document.frmBloqueoRegistral;
+        	var textoComentario = byID('textoComentario').value;
+
+        	 if(isEmpty(textoComentario)){
+                 frmDatos.textoComentario.focus();
+                 alert(m_0001);
+                return false;
+             }
+             return true;
+            }
+
+        function procesarEvento(idEvento, indicadorValidacion){
+        	strComportamiento = byID('strComportamiento').value;
+            if(strComportamiento != '<%=Constante.WF_COMPORTAMIENTO_TRANSACCIONAL%>'){
+                alert(m_10120);
+                return false;
+                }
+            if(indicadorValidacion == 'S'){
+	       		if(!validar()){
+	       		    return false;
+	            }
+            }
+            if(!validarComentario()){
+                return false;
+            }
+            var lista = document.ifrmDetalleSolicitud.obtenerLista();
+            var comentario = byID('textoComentario').value;
+            var params = serializeForm(byID('frmBloqueoRegistral'));
+            params += '&action=ENVIAR';
+            params += '&idEvento=' + idEvento;
+            params += '&lista=' + lista;
+            params += '&comentario=' + comentario;
+            var url = path + '/WF_T_BloqueoRegistral_Servlet';
+            ajaxRequestPOST(url, params, false, function(xmldoc) {
+                mensajeRespuestaXML(xmldoc, function(){
+                  alert(m_8570);
+                  salir();
+                });
+              });
+        }
+
+    </script>
+  </head>
+  <body onhelp="getF1();" class="colorbody" onload="cargar();" style="padding: 0px, 0px, 0px, 0px;overflow:auto;">
+    <form name="frmBloqueoRegistral" id="frmBloqueoRegistral" method="post">
+      <table border="0" cellpadding="0" cellspacing="2" width="99.5%" align="center" >
+        <tr>
+          <td height="4">
+            <img src="<%=request.getContextPath()%>/UTILS/img/t.gif" width="1" height="2">
+          </td>
+        </tr>
+        <tr>
+            <td class="tituloframe">
+                DETALLES
+                <input type="hidden" name="idEtapa" id="idEtapa" value="<c:out value="${requestScope.idEtapa}"/>">
+                <input type="hidden" name="idMaestra" id="idMaestra">
+                <input type="hidden" name="idModulo" id="idModulo" >
+                <input type="hidden" name="strComportamiento" id="strComportamiento" value="<c:out value="${requestScope.strComportamiento}"/>">
+            </td>
+        </tr>
+        <tr>
+          <td>
+            <table border="2" cellpadding="0" cellspacing="0" width="100%" align="center" class="frame">
+              <tr>
+                <td height="20" align="center">
+                  <table width="99%" cellpadding="0" cellspacing="2" border="0">
+                    <tr>
+                        <td class="etiqueta" align="left" width="100" valign="middle">
+                            Fecha de Bloqueo
+                        </td>
+                        <td width="150"  > 
+                           <input name="fechaBloqueo" style="width: 120" <%=campoCe%>  tabindex="1" value="<c:out value="${requestScope.beanWFLegal.fechaBloqueo}"/>"
+                           onkeypress="valida_especiales(this.value,'fecha')" maxlength="10" onblur="this.value=vuelveFecha(this.value);if(!esFecha(this.value)) {alert(m_0006);this.focus();return false;}"
+                           onfocus="this.select(); field='fechaBloqueo'; nextfield ='asientoBloqueo';">
+                        </td>
+                    </tr>
+                    <tr>
+                        <td class="etiqueta" align="left" width="100" valign="middle">
+                            Asiento
+                        </td>
+                        <td width="150"  > 
+                           <input name="asientoBloqueo" style="width: 120" <%=campoIz%>  tabindex="1" value="<c:out value="${requestScope.beanWFLegal.asientoBloqueo}"/>"
+                           onfocus="this.select(); field='asientoBloqueo'; nextfield ='numeroPartidaBloqueo';">
+                        </td>
+                    </tr>
+                    <tr>
+                        <td class="etiqueta" align="left" width="100" valign="middle">
+                            Nro. Partida
+                        </td>
+                        <td width="150"  > 
+                           <input name="numeroPartidaBloqueo" style="width: 120" <%=campoIz%>  tabindex="1" value="<c:out value="${requestScope.beanWFLegal.numeroPartidaBloqueo}"/>"
+                           onfocus="this.select(); field='numeroPartidaBloqueo'; nextfield ='oficinaRegistral';">
+                        </td>
+                    </tr>
+                    <tr>
+                        <td class="etiqueta" align="left" width="100" valign="middle">
+                            Oficina Registral
+                        </td>
+                        <td width="150"  > 
+                           <input name="oficinaRegistral" style="width: 120" <%=campoIz%>  tabindex="1" value="<c:out value="${requestScope.beanWFLegal.oficinaRegistral}"/>"
+                           onfocus="this.select(); field='oficinaRegistral'; nextfield ='textoComentario';">
+                        </td>
+                    </tr>
+                    
+                </table>
+                </td>
+              </tr>
+            </table>
+          </td>
+        </tr>
+        <tr>
+          <td height="4">
+            <img src="<%=request.getContextPath()%>/UTILS/img/t.gif" width="1" height="2">
+          </td>
+        </tr>
+        <tr>
+          <td>
+            <table cellpadding="0" border="0" cellspacing="0" width="100%" align="center">
+              <tr>
+                <td align="center" valign="top" width="100%">
+                  <table width="100%" align="center" cellspacing="0" border="0">
+                    <tr>
+                      <td valign="top">
+                        <table width="100%" cellpadding="0" cellspacing="0" border="0">
+                          <tr>
+                              <td class="tituloframe">DETALLE DOCUMENTOS</td>
+                          </tr>
+                          <tr>
+                            <td>
+                              <iframe id="ifrmDetalleSolicitud" name="ifrmDetalleSolicitud" frameborder="0" width="100%" height="250px"  class="frame" src="FINANCIERO/workflow/tipoDocumento/WF_T_TipoDocumento_TABLA.jsp"></iframe>
+                            </td>
+                          </tr>
+                        </table>
+                      </td>
+                    </tr>
+                  </table>
+                </td>
+              </tr>
+            </table>
+          </td>
+        </tr>
+        <tr>
+          <td height="4">
+            <img src="<%=request.getContextPath()%>/UTILS/img/t.gif" width="1" height="2">
+          </td>
+        </tr>
+        <tr>
+          <td>
+            <table cellpadding="0" border="0" cellspacing="0" width="100%" align="center">
+              <tr>
+                <td align="center" valign="top" width="100%">
+                  <table width="100%" align="center" cellspacing="0" border="0">
+                    <tr>
+                      <td valign="top">
+                        <table width="100%" cellpadding="0" cellspacing="0" border="0">
+                          <tr>
+                              <td class="tituloframe">COMENTARIOS</td>
+                          </tr>
+                          <tr>
+                             <td > 
+                                 <textarea name="textoComentario" id="textoComentario" style="width: 100%;height:70px;"
+                                 onfocus="this.select(); field='textoComentario';" <%=campoIz%>
+                                 onKeyDown="goblalLimitText('textoComentario','numCarac',200);" onKeyUp="goblalLimitText('textoComentario','numCarac',200);"><c:out value="${requestScope.beanWFDetalleComentario.textoComentario}"/></textarea>
+                                 <input type="hidden" name="countdown" size="3"  />
+                                 <div style="text-align: right;" class="etiqueta">
+                                    (Max. <label name="numCarac" id="numCarac"></label>&nbsp;/ 200)
+                                  </div>
+                              </td>
+                          </tr>
+                        </table>
+                      </td>
+                    </tr>
+                  </table>
+                </td>
+              </tr>
+            </table>
+          </td>
+        </tr>
+      </table>
+    </form>
+  </body>
+</html>
\ No newline at end of file
diff --git a/DELFINWEBNEW/WebRoot/FINANCIERO/workflow/legal/etapa/WF_T_EscrituraPublica_CHILD.jsp b/DELFINWEBNEW/WebRoot/FINANCIERO/workflow/legal/etapa/WF_T_EscrituraPublica_CHILD.jsp
new file mode 100644
index 0000000..b6b2484
--- /dev/null
+++ b/DELFINWEBNEW/WebRoot/FINANCIERO/workflow/legal/etapa/WF_T_EscrituraPublica_CHILD.jsp
@@ -0,0 +1,237 @@
+<!-- WF_T_EscrituraPublica_CHILD.jsp-->
+<%--[Req.S17-007] kdelacruz 13.03.2017 - Implementación WorkFlow Legal--%>
+
+<%@ page language="java" import="java.util.*" pageEncoding="ISO-8859-1"%>
+<jsp:directive.page import="financ.util.Constante"/>
+<%@ taglib prefix="c" uri="http://java.sun.com/jstl/core" %>
+<%@ taglib uri="/delfin" prefix="delfinTagHtml" %>
+<%
+    String strComportamiento = request.getAttribute("strComportamiento") != null ? (String) request.getAttribute("strComportamiento") : "C";
+    
+    String campoIz = "T".equals(strComportamiento) ? "class='campoobligatorioiz'" : "readonly class='campodisplayiz'";
+    String campoCe = "T".equals(strComportamiento) ? "class='campoobligatorioce'" : "readonly class='campodisplayce'";
+%>
+<html>
+  <head>
+    <title>ASIGNAR SOLICITUD</title>
+    <link id="css" href="${pageContext.request.contextPath}/UTILS/css/DELFIN.css" rel="stylesheet" type="text/css">
+    <script src="${pageContext.request.contextPath}/UTILS/Script/MsgValidacion.js"></script>
+    <script src="<%=request.getContextPath()%>/UTILS/Script/DELFIN-Utiles.js"></script>
+    <script type="text/javascript">
+    
+        var f = null;
+        var path;
+        nextfield = "";
+
+        function cargar() {
+        	byID('idMaestra').value = parent.byID('idMaestra').value;
+            byID('idModulo').value = parent.byID('idModulo').value;
+            f = document.getElementById('frmSolicitudEstudioTitulo');
+            path = '<%=request.getContextPath()%>';
+            mensajeRespuesta('<c:out value="${codigoError}" />', '<c:out value="${mensajeError}" />');
+            onCargarDetalle();
+            goblalLimitText('textoComentario','numCarac',200);
+        }
+
+        function keyDown(DnEvents){
+            k = window.event.keyCode;
+            if (k == 13){
+            	if(nextfield == "textoComentario"){
+                    eval('document.forms[0].' + nextfield + '.focus()');
+                }
+                return false;
+            }
+            if (k == 120){
+                return false;
+            }
+            if (k == 27){
+                salir();
+                return false;
+            }
+            if (k == 121){
+                return false;
+            }
+            if (k == 112){
+                ayuda();
+                return false;
+            }
+            if (event.ctrlKey){
+                event.keyCode = 0;
+                return false;
+            }
+            if (k==46){
+                return false;
+            }
+            if (window.event && (k == 114 || k == 116 || k == 117 || k == 122))
+                event.keyCode = 505;
+            if(event.keyCode == 505)
+                return false;
+        }
+        document.onkeydown = keyDown;
+
+        function salir(){
+        	var params = '?action=MOSTRAR_DETALLE';
+            params += '&idModulo=143001';
+            parent.window.location = path + '/WF_C_Legal_Servlet' + params;
+        }
+
+        function onCargarDetalle() {
+        	var idMaestra = parent.byID('idMaestra').value;
+        	var idEtapa = byID('idEtapa').value;
+        	
+            var params = '?action=CARGAR_DETALLE_SOLICITUD_ESTUDIO_TITULO';
+                params += '&idEtapa=' + idEtapa;
+                params += '&idMaestra=' + idMaestra;
+
+            var url = path + '/WF_C_TipoDocumento_Servlet' + params;
+          }
+
+
+	    function validaSustento(){
+	        goblalLimitText('textoComentario','numCarac',200);
+	        if (byID('textoComentario').value.length > 200){
+	            return false;
+	        }
+	        return true;
+	    }
+
+	    function validar(){
+            var frmDatos = document.frmEscrituraPublica;
+            var fechaEscritura = byID('fechaEscritura').value;
+
+            if(isEmpty(fechaEscritura)){
+                frmDatos.fechaEscritura.focus();
+                alert(m_0001);
+               return false;
+            }
+            return true;
+        }
+
+	    function validarComentario(){
+	    	var frmDatos = document.frmEscrituraPublica;
+            var textoComentario = byID('textoComentario').value;
+
+             if(isEmpty(textoComentario)){
+                 frmDatos.textoComentario.focus();
+                 alert(m_0001);
+                return false;
+             }
+             return true;
+            }
+
+	    function procesarEvento(idEvento, indicadorValidacion){
+	    	strComportamiento = byID('strComportamiento').value;
+            if(strComportamiento != '<%=Constante.WF_COMPORTAMIENTO_TRANSACCIONAL%>'){
+                alert(m_10120);
+                return false;
+                }
+            if(indicadorValidacion == 'S'){
+                if(!validar()){
+                    return false;
+                }
+            }
+            if(!validarComentario()){
+                return false;
+            }
+	    	var comentario = byID('textoComentario').value;
+
+            var params = serializeForm(byID('frmEscrituraPublica'));
+            params += '&action=ENVIAR_ESCRITURA_PUBLICA';
+            params += '&idEvento=' + idEvento;
+            params += '&comentario=' + comentario;
+            var url = path + '/WF_T_EscrituraPublica_Servlet';
+            ajaxRequestPOST(url, params, false, function(xmldoc) {
+                mensajeRespuestaXML(xmldoc, function(){
+                  alert(m_8570);
+                  salir();
+                });
+              });
+        }
+
+    </script>
+  </head>
+  <body onhelp="getF1();" class="colorbody" onload="cargar();" style="padding: 0px, 0px, 0px, 0px;overflow:auto;">
+    <form name="frmEscrituraPublica" id="frmEscrituraPublica" method="post">
+      <table border="0" cellpadding="0" cellspacing="2" width="99.5%" align="center" >
+        <tr>
+          <td height="4">
+            <img src="<%=request.getContextPath()%>/UTILS/img/t.gif" width="1" height="2">
+          </td>
+        </tr>
+        <tr>
+            <td class="tituloframe">
+                DETALLE
+                <input type="hidden" name="idEtapa" id="idEtapa" value="<c:out value="${requestScope.idEtapa}"/>">
+                <input type="hidden" name="idMaestra" id="idMaestra">
+                <input type="hidden" name="idModulo" id="idModulo" >
+                <input type="hidden" name="strComportamiento" id="strComportamiento" value="<c:out value="${requestScope.strComportamiento}"/>">
+            </td>
+        </tr>
+        <tr>
+          <td>
+            <table border="2" cellpadding="0" cellspacing="0" width="100%" align="center" class="frame">
+              <tr>
+                <td height="20" align="center">
+                  <table width="99%" cellpadding="0" cellspacing="2" border="0">
+                    <tr>
+                        <td class="etiqueta" align="left" width="100" valign="middle">
+                            Fecha de Firma
+                        </td>
+                        <td width="150"  > 
+	                       <input name="fechaEscritura" style="width: 120" <%=campoCe%> tabindex="1" value="<c:out value="${requestScope.beanWFLegal.fechaEscritura}"/>"
+	                       onkeypress="valida_especiales(this.value,'fecha')" maxlength="10" onblur="this.value=vuelveFecha(this.value);if(!esFecha(this.value)) {alert(m_0006);this.focus();return false;}"
+	                       onfocus="this.select(); field='fechaEscritura'; nextfield ='textoComentario';">
+	                    </td>
+	                </tr>
+                </table>
+                </td>
+              </tr>
+            </table>
+          </td>
+        </tr>
+        <tr>
+          <td height="4">
+            <img src="<%=request.getContextPath()%>/UTILS/img/t.gif" width="1" height="2">
+          </td>
+        </tr>
+        <tr>
+          <td height="4">
+            <img src="<%=request.getContextPath()%>/UTILS/img/t.gif" width="1" height="2">
+          </td>
+        </tr>
+        <tr>
+          <td>
+            <table cellpadding="0" border="0" cellspacing="0" width="100%" align="center">
+              <tr>
+                <td align="center" valign="top" width="100%">
+                  <table width="100%" align="center" cellspacing="0" border="0">
+                    <tr>
+                      <td valign="top">
+                        <table width="100%" cellpadding="0" cellspacing="0" border="0">
+                          <tr>
+                              <td class="tituloframe">COMENTARIOS</td>
+                          </tr>
+                          <tr>
+                             <td > 
+                                 <textarea name="textoComentario" id="textoComentario" style="width: 100%;height:70px;"
+                                 onfocus="this.select(); field='textoComentario';" <%=campoIz%>
+                                 onKeyDown="goblalLimitText('textoComentario','numCarac',200);" onKeyUp="goblalLimitText('textoComentario','numCarac',200);"><c:out value="${requestScope.beanWFDetalleComentario.textoComentario}"/></textarea>
+                                 <input type="hidden" name="countdown" size="3" readonly />
+                                 <div style="text-align: right;" class="etiqueta">
+                                    (Max. <label name="numCarac" id="numCarac"></label>&nbsp;/ 200)
+                                  </div>
+                              </td>
+                          </tr>
+                        </table>
+                      </td>
+                    </tr>
+                  </table>
+                </td>
+              </tr>
+            </table>
+          </td>
+        </tr>
+      </table>
+    </form>
+  </body>
+</html>
\ No newline at end of file
diff --git a/DELFINWEBNEW/WebRoot/FINANCIERO/workflow/legal/etapa/WF_T_GenericoDocumentoComentario_CHILD.jsp b/DELFINWEBNEW/WebRoot/FINANCIERO/workflow/legal/etapa/WF_T_GenericoDocumentoComentario_CHILD.jsp
new file mode 100644
index 0000000..533078a
--- /dev/null
+++ b/DELFINWEBNEW/WebRoot/FINANCIERO/workflow/legal/etapa/WF_T_GenericoDocumentoComentario_CHILD.jsp
@@ -0,0 +1,218 @@
+<!-- WF_T_GenericoDocumentoComentario_CHILD.jsp-->
+<%--[Req.S17-007] kdelacruz 13.03.2017 - Implementación WorkFlow Legal--%>
+
+<%@ page language="java" import="java.util.*" pageEncoding="ISO-8859-1"%>
+<jsp:directive.page import="financ.util.Constante"/>
+<%@ taglib prefix="c" uri="http://java.sun.com/jstl/core" %>
+<%@ taglib uri="/delfin" prefix="delfinTagHtml" %>
+<%
+    String strComportamiento = request.getAttribute("strComportamiento") != null ? (String) request.getAttribute("strComportamiento") : "C";
+    
+    String campoIz = "T".equals(strComportamiento) ? "class='campoobligatorioiz'" : "readonly class='campodisplayiz'";
+%>
+<html>
+  <head>
+    <title>ASIGNAR SOLICITUD</title>
+    <link id="css" href="${pageContext.request.contextPath}/UTILS/css/DELFIN.css" rel="stylesheet" type="text/css">
+    <script src="${pageContext.request.contextPath}/UTILS/Script/MsgValidacion.js"></script>
+    <script src="<%=request.getContextPath()%>/UTILS/Script/DELFIN-Utiles.js"></script>
+    <script type="text/javascript">
+    
+        var f = null;
+        var path;
+        nextfield = "";
+
+        function cargar() {
+        	byID('idMaestra').value = parent.byID('idMaestra').value;
+            byID('idModulo').value = parent.byID('idModulo').value;
+            f = document.getElementById('frmSolicitudEstudioTitulo');
+            path = '<%=request.getContextPath()%>';
+            mensajeRespuesta('<c:out value="${codigoError}" />', '<c:out value="${mensajeError}" />');
+            onCargarDetalle();
+            goblalLimitText('textoComentario','numCarac',200);
+        }
+
+        function keyDown(DnEvents){
+            k = window.event.keyCode;
+            if (k == 13){
+                return false;
+            }
+            if (k == 120){
+                return false;
+            }
+            if (k == 27){
+                salir();
+                return false;
+            }
+            if (k == 121){
+                return false;
+            }
+            if (k == 112){
+                ayuda();
+                return false;
+            }
+            if (event.ctrlKey){
+                event.keyCode = 0;
+                return false;
+            }
+            if (k==46){
+                return false;
+            }
+            if (window.event && (k == 114 || k == 116 || k == 117 || k == 122))
+                event.keyCode = 505;
+            if(event.keyCode == 505)
+                return false;
+        }
+        document.onkeydown = keyDown;
+
+        function salir(){
+        	var params = '?action=MOSTRAR_DETALLE';
+            params += '&idModulo=143001';
+            parent.window.location = path + '/WF_C_Legal_Servlet' + params;
+        }
+
+        function onCargarDetalle() {
+        	<c:if test="${cantidadDocumento ne 0}">
+            	cargarDocumentos();
+            </c:if>
+          }
+
+        function cargarDocumentos(){
+	        	var idMaestra = parent.byID('idMaestra').value;
+	            var idEtapa = byID('idEtapa').value;
+	            var params = '?action=CARGAR_DETALLE_SOLICITUD_ESTUDIO_TITULO';
+	                params += '&idEtapa=' + idEtapa;
+	                params += '&idMaestra=' + idMaestra;
+	            var url = path + '/WF_C_TipoDocumento_Servlet' + params;
+	            document.ifrmGenericoDocumento.location.replace(url);
+       }
+
+	    function validaSustento(){
+	        goblalLimitText('textoComentario','numCarac',200);
+	        if (byID('textoComentario').value.length > 200){
+	            return false;
+	        }
+	        return true;
+	    }
+
+	    function validarComentario(){
+            var frmDatos = document.frmGenericoDescargaComentario;
+            var textoComentario = byID('textoComentario').value;
+            if(isEmpty(textoComentario)){
+                frmDatos.textoComentario.focus();
+                alert(m_0001);
+               return false;
+            }
+            return true;
+         }
+
+	    function procesarEvento(idEvento){
+	    	strComportamiento = byID('strComportamiento').value;
+            if(strComportamiento != '<%=Constante.WF_COMPORTAMIENTO_TRANSACCIONAL%>'){
+                alert(m_10120);
+                return false;
+                }
+            if(!validarComentario()){
+                return false;
+            }
+            var textoComentario = byID('textoComentario').value;
+            var params = serializeForm(byID('frmGenericoDescargaComentario'));
+            params += '&action=ENVIAR';
+            <c:if test="${not empty listBeanWFTipoDocumento}">
+            var lista = document.ifrmGenericoDocumento.obtenerLista();
+            params += '&lista=' + lista;
+            </c:if>
+            params += '&idEvento=' + idEvento;
+            params += '&textoComentario=' + textoComentario;
+            var url = path + '/WF_T_GenericoDocumentoComentario_Servlet';
+            ajaxRequestPOST(url, params, false, function(xmldoc) {
+                mensajeRespuestaXML(xmldoc, function(){
+                  alert(m_8570);
+                  salir();
+                });
+              });
+        }
+
+    </script>
+  </head>
+  <body onhelp="getF1();" class="colorbody" onload="cargar();" style="padding: 0px, 0px, 0px, 0px;overflow:auto;">
+    <form name="frmGenericoDescargaComentario" id="frmGenericoDescargaComentario" method="post">
+    <input type="hidden" name="idEtapa" id="idEtapa" value="<c:out value="${requestScope.idEtapa}"/>">
+    <input type="hidden" name="idMaestra" id="idMaestra">
+    <input type="hidden" name="idModulo" id="idModulo" >
+    <input type="hidden" name="strComportamiento" id="strComportamiento" value="<c:out value="${requestScope.strComportamiento}"/>">
+      <table border="0" cellpadding="0" cellspacing="2" width="99.5%" align="center" >
+      <c:if test="${cantidadDocumento ne 0}">
+        <tr>
+          <td height="4">
+            <img src="<%=request.getContextPath()%>/UTILS/img/t.gif" width="1" height="2">
+          </td>
+        </tr>
+        <tr>
+          <td>
+            <table cellpadding="0" border="0" cellspacing="0" width="100%" align="center">
+              <tr>
+                <td align="center" valign="top" width="100%">
+                  <table width="100%" align="center" cellspacing="0" border="0">
+                    <tr>
+                      <td valign="top">
+                        <table width="100%" cellpadding="0" cellspacing="0" border="0">
+                          <tr>
+                              <td class="tituloframe">DETALLE DOCUMENTOS</td>
+                          </tr>
+                          <tr>
+                            <td>
+                              <iframe id="ifrmGenericoDocumento" name="ifrmGenericoDocumento" frameborder="0" width="100%" height="250px"  class="frame" src="FINANCIERO/workflow/tipoDocumento/WF_T_TipoDocumento_TABLA.jsp"></iframe>
+                            </td>
+                          </tr>
+                        </table>
+                      </td>
+                    </tr>
+                  </table>
+                </td>
+              </tr>
+            </table>
+          </td>
+        </tr>
+        </c:if>
+        <tr>
+          <td height="4">
+            <img src="<%=request.getContextPath()%>/UTILS/img/t.gif" width="1" height="2">
+          </td>
+        </tr>
+        <tr>
+          <td>
+            <table cellpadding="0" border="0" cellspacing="0" width="100%" align="center">
+              <tr>
+                <td align="center" valign="top" width="100%">
+                  <table width="100%" align="center" cellspacing="0" border="0">
+                    <tr>
+                      <td valign="top">
+                        <table width="100%" cellpadding="0" cellspacing="0" border="0">
+                          <tr>
+                              <td class="tituloframe">COMENTARIOS</td>
+                          </tr>
+                          <tr>
+                             <td > 
+                                 <textarea name="textoComentario" id="textoComentario" style="width: 100%;height:70px;"
+                                 onfocus="this.select(); field='textoComentario';" <%=campoIz%>
+                                 onKeyDown="goblalLimitText('textoComentario','numCarac',200);" onKeyUp="goblalLimitText('textoComentario','numCarac',200);"><c:out value="${requestScope.beanWFDetalleComentario.textoComentario}"/></textarea>
+                                 <input type="hidden" name="countdown" size="3" />
+                                 <div style="text-align: right;" class="etiqueta">
+                                    (Max. <label name="numCarac" id="numCarac"></label>&nbsp;/ 200)
+                                  </div>
+                              </td>
+                          </tr>
+                        </table>
+                      </td>
+                    </tr>
+                  </table>
+                </td>
+              </tr>
+            </table>
+          </td>
+        </tr>
+      </table>
+    </form>
+  </body>
+</html>
\ No newline at end of file
diff --git a/DELFINWEBNEW/WebRoot/FINANCIERO/workflow/legal/etapa/WF_T_InscripcionDefinitiva_CHILD.jsp b/DELFINWEBNEW/WebRoot/FINANCIERO/workflow/legal/etapa/WF_T_InscripcionDefinitiva_CHILD.jsp
new file mode 100644
index 0000000..0ec61ed
--- /dev/null
+++ b/DELFINWEBNEW/WebRoot/FINANCIERO/workflow/legal/etapa/WF_T_InscripcionDefinitiva_CHILD.jsp
@@ -0,0 +1,283 @@
+<!-- WF_T_InscripcionDefinitiva_CHILD.jsp-->
+<%--[Req.S17-007] kdelacruz 13.03.2017 - Implementación WorkFlow Legal--%>
+
+<%@ page language="java" import="java.util.*" pageEncoding="ISO-8859-1"%>
+<jsp:directive.page import="financ.util.Constante"/>
+<%@ taglib prefix="c" uri="http://java.sun.com/jstl/core" %>
+<%@ taglib uri="/delfin" prefix="delfinTagHtml" %>
+<%
+    String strComportamiento = request.getAttribute("strComportamiento") != null ? (String) request.getAttribute("strComportamiento") : "C";
+    
+    String campoIz = "T".equals(strComportamiento) ? "class='campoobligatorioiz'" : "readonly class='campodisplayiz'";
+    String campoCe = "T".equals(strComportamiento) ? "class='campoobligatorioce'" : "readonly class='campodisplayce'";
+%>
+<html>
+  <head>
+    <link id="css" href="${pageContext.request.contextPath}/UTILS/css/DELFIN.css" rel="stylesheet" type="text/css">
+    <script src="${pageContext.request.contextPath}/UTILS/Script/MsgValidacion.js"></script>
+    <script src="<%=request.getContextPath()%>/UTILS/Script/DELFIN-Utiles.js"></script>
+    <script type="text/javascript">
+    
+        var f = null;
+        var path;
+        nextfield = "";
+
+        function cargar() {
+        	byID('idMaestra').value = parent.byID('idMaestra').value;
+            byID('idModulo').value = parent.byID('idModulo').value;
+            f = document.getElementById('frmSolicitudEstudioTitulo');
+            path = '<%=request.getContextPath()%>';
+            mensajeRespuesta('<c:out value="${codigoError}" />', '<c:out value="${mensajeError}" />');
+            onCargarDetalle();
+            goblalLimitText('textoComentario','numCarac',200);
+        }
+
+        function keyDown(DnEvents){
+            k = window.event.keyCode;
+            if (k == 13){
+            	if(nextfield == "fechaInscripcion"){
+                    eval('document.forms[0].' + nextfield + '.focus()');
+                    return false;
+                }
+            	if(nextfield == "asientoInscripcion"){
+                    eval('document.forms[0].' + nextfield + '.focus()');
+                    return false;
+                }
+                return false;
+            }
+            if (k == 120){
+                return false;
+            }
+            if (k == 27){
+                salir();
+                return false;
+            }
+            if (k == 121){
+                return false;
+            }
+            if (k == 112){
+                ayuda();
+                return false;
+            }
+            if (event.ctrlKey){
+                event.keyCode = 0;
+                return false;
+            }
+            if (k==46){
+                return false;
+            }
+            if (window.event && (k == 114 || k == 116 || k == 117 || k == 122))
+                event.keyCode = 505;
+            if(event.keyCode == 505)
+                return false;
+        }
+        document.onkeydown = keyDown;
+
+        function salir(){
+        	var params = '?action=MOSTRAR_DETALLE';
+            params += '&idModulo=143001';
+            parent.window.location = path + '/WF_C_Legal_Servlet' + params;
+        }
+
+        function onCargarDetalle() {
+            var idMaestra = parent.byID('idMaestra').value;
+            var idEtapa = byID('idEtapa').value;
+            
+            var params = '?action=CARGAR_DETALLE_SOLICITUD_ESTUDIO_TITULO';
+                params += '&idEtapa=' + idEtapa;
+                params += '&idMaestra=' + idMaestra;
+
+            var url = path + '/WF_C_TipoDocumento_Servlet' + params;
+            document.ifrmDetalleSolicitud.location.replace(url);
+          }
+
+        function validaSustento(){
+            goblalLimitText('textoComentario','numCarac',200);
+            if (byID('textoComentario').value.length > 200){
+                return false;
+            }
+            return true;
+        }
+
+        function validar(){
+            var frmDatos = document.frmInscripcionDefinitiva;
+            var fechaInscripcion = byID('fechaInscripcion').value;
+            var asientoInscripcion = byID('asientoInscripcion').value;
+
+            if(isEmpty(fechaInscripcion)){
+                frmDatos.fechaInscripcion.focus();
+                alert(m_0001);
+               return false;
+            }
+
+            if(isEmpty(asientoInscripcion)){
+                frmDatos.asientoInscripcion.focus();
+                alert(m_0001);
+               return false;
+            }
+            return true;
+        }
+
+        function validarComentario(){
+            var frmDatos = document.frmInscripcionDefinitiva;
+            var textoComentario = byID('textoComentario').value;
+            if(isEmpty(textoComentario)){
+                frmDatos.textoComentario.focus();
+                alert(m_0001);
+               return false;
+            }
+            return true;
+         }
+
+        function procesarEvento(idEvento, indicadorValidacion){
+        	strComportamiento = byID('strComportamiento').value;
+            if(strComportamiento != '<%=Constante.WF_COMPORTAMIENTO_TRANSACCIONAL%>'){
+                alert(m_10120);
+                return false;
+                }
+        	if(indicadorValidacion == 'S'){
+	        	if(!validar()){
+	                return false;
+	            }
+        	}
+        	if(!validarComentario()){
+                return false;
+            }
+            var lista = document.ifrmDetalleSolicitud.obtenerLista();
+            var comentario = byID('textoComentario').value;
+            var params = serializeForm(byID('frmInscripcionDefinitiva'));
+            params += '&action=ENVIAR';
+            params += '&idEvento=' + idEvento;
+            params += '&lista=' + lista;
+            params += '&comentario=' + comentario;
+            var url = path + '/WF_T_InscripcionDefinitiva_Servlet';
+            ajaxRequestPOST(url, params, false, function(xmldoc) {
+                mensajeRespuestaXML(xmldoc, function(){
+                  alert(m_8570);
+                  salir();
+                });
+              });
+        }
+
+    </script>
+  </head>
+  <body onhelp="getF1();" class="colorbody" onload="cargar();" style="padding: 0px, 0px, 0px, 0px;overflow:auto;">
+    <form name="frmInscripcionDefinitiva" id="frmInscripcionDefinitiva" method="post">
+      <table border="0" cellpadding="0" cellspacing="2" width="99.5%" align="center" >
+        <tr>
+          <td height="4">
+            <img src="<%=request.getContextPath()%>/UTILS/img/t.gif" width="1" height="2">
+          </td>
+        </tr>
+        <tr>
+            <td class="tituloframe">
+                DETALLES
+                <input type="hidden" name="idEtapa" id="idEtapa" value="<c:out value="${requestScope.idEtapa}"/>">
+                <input type="hidden" name="idMaestra" id="idMaestra">
+                <input type="hidden" name="idModulo" id="idModulo" >
+                <input type="hidden" name="strComportamiento" id="strComportamiento" value="<c:out value="${requestScope.strComportamiento}"/>">
+            </td>
+        </tr>
+        <tr>
+          <td>
+            <table border="2" cellpadding="0" cellspacing="0" width="100%" align="center" class="frame">
+              <tr>
+                <td height="20" align="center">
+                  <table width="99%" cellpadding="0" cellspacing="2" border="0">
+                    <tr>
+                        <td class="etiqueta" align="left" width="100" valign="middle">
+                            Fecha de Inscripción
+                        </td>
+                        <td width="150"  > 
+                           <input name="fechaInscripcion" style="width: 120" <%=campoCe%>  tabindex="1" value="<c:out value="${requestScope.beanWFLegal.fechaInscripcion}"/>"
+                           onkeypress="valida_especiales(this.value,'fecha')" maxlength="10" onblur="this.value=vuelveFecha(this.value);if(!esFecha(this.value)) {alert(m_0006);this.focus();return false;}"
+                           onfocus="this.select(); field='fechaInscripcion'; nextfield ='asientoInscripcion';">
+                        </td>
+                    </tr>
+                    <tr>
+                        <td class="etiqueta" align="left" width="100" valign="middle">
+                            Asiento
+                        </td>
+                        <td width="150"  > 
+                           <input name="asientoInscripcion" style="width: 120" <%=campoIz%>  tabindex="1" value="<c:out value="${requestScope.beanWFLegal.asientoInscripcion}"/>"
+                           onfocus="this.select(); field='asientoInscripcion'; nextfield ='textoComentario';">
+                        </td>
+                    </tr>
+                </table>
+                </td>
+              </tr>
+            </table>
+          </td>
+        </tr>
+        <tr>
+          <td height="4">
+            <img src="<%=request.getContextPath()%>/UTILS/img/t.gif" width="1" height="2">
+          </td>
+        </tr>
+        <tr>
+          <td>
+            <table cellpadding="0" border="0" cellspacing="0" width="100%" align="center">
+              <tr>
+                <td align="center" valign="top" width="100%">
+                  <table width="100%" align="center" cellspacing="0" border="0">
+                    <tr>
+                      <td valign="top">
+                        <table width="100%" cellpadding="0" cellspacing="0" border="0">
+                          <tr>
+                              <td class="tituloframe">DETALLE DOCUMENTOS</td>
+                          </tr>
+                          <tr>
+                            <td>
+                              <iframe id="ifrmDetalleSolicitud" name="ifrmDetalleSolicitud" frameborder="0" width="100%" height="250px"  class="frame" src="FINANCIERO/workflow/tipoDocumento/WF_T_TipoDocumento_TABLA.jsp"></iframe>
+                            </td>
+                          </tr>
+                        </table>
+                      </td>
+                    </tr>
+                  </table>
+                </td>
+              </tr>
+            </table>
+          </td>
+        </tr>
+        <tr>
+          <td height="4">
+            <img src="<%=request.getContextPath()%>/UTILS/img/t.gif" width="1" height="2">
+          </td>
+        </tr>
+        <tr>
+          <td>
+            <table cellpadding="0" border="0" cellspacing="0" width="100%" align="center">
+              <tr>
+                <td align="center" valign="top" width="100%">
+                  <table width="100%" align="center" cellspacing="0" border="0">
+                    <tr>
+                      <td valign="top">
+                        <table width="100%" cellpadding="0" cellspacing="0" border="0">
+                          <tr>
+                              <td class="tituloframe">COMENTARIOS</td>
+                          </tr>
+                          <tr>
+                             <td > 
+                                 <textarea name="textoComentario" id="textoComentario" style="width: 100%;height:70px;"
+                                 onfocus="this.select(); field='textoComentario';" <%=campoIz%>
+                                 onKeyDown="goblalLimitText('textoComentario','numCarac',200);" onKeyUp="goblalLimitText('textoComentario','numCarac',200);"><c:out value="${requestScope.beanWFDetalleComentario.textoComentario}"/></textarea>
+                                 <input type="hidden" name="countdown" size="3"  />
+                                 <div style="text-align: right;" class="etiqueta">
+                                    (Max. <label name="numCarac" id="numCarac"></label>&nbsp;/ 200)
+                                  </div>
+                              </td>
+                          </tr>
+                        </table>
+                      </td>
+                    </tr>
+                  </table>
+                </td>
+              </tr>
+            </table>
+          </td>
+        </tr>
+      </table>
+    </form>
+  </body>
+</html>
\ No newline at end of file
diff --git a/DELFINWEBNEW/WebRoot/FINANCIERO/workflow/legal/etapa/WF_T_RevisionDocumento_CHILD.jsp b/DELFINWEBNEW/WebRoot/FINANCIERO/workflow/legal/etapa/WF_T_RevisionDocumento_CHILD.jsp
new file mode 100644
index 0000000..376b392
--- /dev/null
+++ b/DELFINWEBNEW/WebRoot/FINANCIERO/workflow/legal/etapa/WF_T_RevisionDocumento_CHILD.jsp
@@ -0,0 +1,264 @@
+<!-- WF_T_RevisionDocumento_CHILD.jsp-->
+<%--[Req.S17-007] kdelacruz 13.03.2017 - Implementación WorkFlow Legal--%>
+
+<%@ page language="java" import="java.util.*" pageEncoding="ISO-8859-1"%>
+<jsp:directive.page import="financ.util.Constante"/>
+<%@ taglib prefix="c" uri="http://java.sun.com/jstl/core" %>
+<%@ taglib uri="/delfin" prefix="delfinTagHtml" %>
+<%
+    String strComportamiento = request.getAttribute("strComportamiento") != null ? (String) request.getAttribute("strComportamiento") : "C";
+    
+    String campoIz = "T".equals(strComportamiento) ? "class='campoobligatorioiz'" : "readonly class='campodisplayiz'";
+    String campoCe = "T".equals(strComportamiento) ? "class='campoobligatorioce'" : "readonly class='campodisplayce'";
+%>
+<html>
+  <head>
+    <link id="css" href="${pageContext.request.contextPath}/UTILS/css/DELFIN.css" rel="stylesheet" type="text/css">
+    <script src="${pageContext.request.contextPath}/UTILS/Script/MsgValidacion.js"></script>
+    <script src="<%=request.getContextPath()%>/UTILS/Script/DELFIN-Utiles.js"></script>
+    <script type="text/javascript">
+    
+        var f = null;
+        var path;
+        nextfield = "";
+
+        function cargar() {
+        	byID('idMaestra').value = parent.byID('idMaestra').value;
+            byID('idModulo').value = parent.byID('idModulo').value;
+            f = document.getElementById('frmSolicitudEstudioTitulo');
+            path = '<%=request.getContextPath()%>';
+            mensajeRespuesta('<c:out value="${codigoError}" />', '<c:out value="${mensajeError}" />');
+            onCargarDetalle();
+            goblalLimitText('textoComentario','numCarac',200);
+        }
+
+        function keyDown(DnEvents){
+            k = window.event.keyCode;
+            if (k == 13){
+            	if(nextfield == "textoComentario"){
+                    eval('document.forms[0].' + nextfield + '.focus()');
+                    return false;
+                }
+                return false;
+            }
+            if (k == 120){
+                return false;
+            }
+            if (k == 27){
+                salir();
+                return false;
+            }
+            if (k == 121){
+                return false;
+            }
+            if (k == 112){
+                ayuda();
+                return false;
+            }
+            if (event.ctrlKey){
+                event.keyCode = 0;
+                return false;
+            }
+            if (k==46){
+                return false;
+            }
+            if (window.event && (k == 114 || k == 116 || k == 117 || k == 122))
+                event.keyCode = 505;
+            if(event.keyCode == 505)
+                return false;
+        }
+        document.onkeydown = keyDown;
+
+        function salir(){
+        	var params = '?action=MOSTRAR_DETALLE';
+            params += '&idModulo=143001';
+            parent.window.location = path + '/WF_C_Legal_Servlet' + params;
+        }
+
+        function onCargarDetalle() {
+            var idMaestra = parent.byID('idMaestra').value;
+            var idEtapa = byID('idEtapa').value;
+            
+            var params = '?action=CARGAR_DETALLE_SOLICITUD_ESTUDIO_TITULO';
+                params += '&idEtapa=' + idEtapa;
+                params += '&idMaestra=' + idMaestra;
+
+            var url = path + '/WF_C_TipoDocumento_Servlet' + params;
+            document.ifrmDetalleSolicitud.location.replace(url);
+          }
+
+        function validaSustento(){
+            goblalLimitText('textoComentario','numCarac',200);
+            if (byID('textoComentario').value.length > 200){
+                return false;
+            }
+            return true;
+        }
+
+        function validar(){
+            var frmDatos = document.frmRevisionDocumentacion;
+            var fechaDocumento = byID('fechaDocumento').value;
+
+            if(isEmpty(fechaDocumento)){
+                frmDatos.fechaDocumento.focus();
+                alert(m_0001);
+               return false;
+            }
+            return true;
+        }
+
+        function validarComentario(){
+            var frmDatos = document.frmRevisionDocumentacion;
+            var textoComentario = byID('textoComentario').value;
+            if(isEmpty(textoComentario)){
+                frmDatos.textoComentario.focus();
+                alert(m_0001);
+               return false;
+            }
+            return true;
+         }
+
+        function procesarEvento(idEvento, indicadorValidacion){
+        	strComportamiento = byID('strComportamiento').value;
+            if(strComportamiento != '<%=Constante.WF_COMPORTAMIENTO_TRANSACCIONAL%>'){
+                alert(m_10120);
+                return false;
+                }
+        	if(indicadorValidacion == 'S'){
+                if(!validar()){
+                    return false;
+                }
+             }
+        	if(!validarComentario()){
+                return false;
+            }
+        	var comentario = byID('textoComentario').value;
+            var lista = document.ifrmDetalleSolicitud.obtenerLista();
+
+            var params = serializeForm(byID('frmRevisionDocumentacion'));
+            params += '&action=ENVIAR';
+            params += '&idEvento=' + idEvento;
+            params += '&lista=' + lista;
+            params += '&comentario=' + comentario;
+            var url = path + '/WF_T_RevisionDocumentos_Servlet';
+            ajaxRequestPOST(url, params, false, function(xmldoc) {
+                mensajeRespuestaXML(xmldoc, function(){
+                  alert(m_8570);
+                  salir();
+                });
+              });
+        }
+
+    </script>
+  </head>
+  <body onhelp="getF1();" class="colorbody" onload="cargar();" style="padding: 0px, 0px, 0px, 0px;overflow:auto;">
+    <form name="frmRevisionDocumentacion" id="frmRevisionDocumentacion" method="post">
+      <table border="0" cellpadding="0" cellspacing="2" width="99.5%" align="center" >
+        <tr>
+          <td height="4">
+            <img src="<%=request.getContextPath()%>/UTILS/img/t.gif" width="1" height="2">
+          </td>
+        </tr>
+        <tr>
+            <td class="tituloframe">
+                DETALLES
+                <input type="hidden" name="idEtapa" id="idEtapa" value="<c:out value="${requestScope.idEtapa}"/>">
+                <input type="hidden" name="idMaestra" id="idMaestra">
+                <input type="hidden" name="idModulo" id="idModulo" >
+                <input type="hidden" name="strComportamiento" id="strComportamiento" value="<c:out value="${requestScope.strComportamiento}"/>">
+            </td>
+        </tr>
+        <tr>
+          <td>
+            <table border="2" cellpadding="0" cellspacing="0" width="100%" align="center" class="frame">
+              <tr>
+                <td height="20" align="center">
+                  <table width="99%" cellpadding="0" cellspacing="2" border="0">
+                    <tr>
+                        <td class="etiqueta" align="left" width="100" valign="middle">
+                            Fecha
+                        </td>
+                        <td width="150"  > 
+                           <input name="fechaDocumento" style="width: 120" <%=campoCe%> tabindex="1" value="<c:out value="${requestScope.beanWFLegal.fechaDocumento}"/>"
+                           onkeypress="valida_especiales(this.value,'fecha')" maxlength="10" onblur="this.value=vuelveFecha(this.value);if(!esFecha(this.value)) {alert(m_0006);this.focus();return false;}"
+                           onfocus="this.select(); field='fechaDocumento'; nextfield ='textoComentario';">
+                        </td>
+                    </tr>
+                </table>
+                </td>
+              </tr>
+            </table>
+          </td>
+        </tr>
+        <tr>
+          <td height="4">
+            <img src="<%=request.getContextPath()%>/UTILS/img/t.gif" width="1" height="2">
+          </td>
+        </tr>
+        <tr>
+          <td>
+            <table cellpadding="0" border="0" cellspacing="0" width="100%" align="center">
+              <tr>
+                <td align="center" valign="top" width="100%">
+                  <table width="100%" align="center" cellspacing="0" border="0">
+                    <tr>
+                      <td valign="top">
+                        <table width="100%" cellpadding="0" cellspacing="0" border="0">
+                          <tr>
+                              <td class="tituloframe">DETALLE DOCUMENTOS</td>
+                          </tr>
+                          <tr>
+                            <td>
+                              <iframe id="ifrmDetalleSolicitud" name="ifrmDetalleSolicitud" frameborder="0" width="100%" height="250px"  class="frame" src="FINANCIERO/workflow/tipoDocumento/WF_T_TipoDocumento_TABLA.jsp"></iframe>
+                            </td>
+                          </tr>
+                        </table>
+                      </td>
+                    </tr>
+                  </table>
+                </td>
+              </tr>
+            </table>
+          </td>
+        </tr>
+        <tr>
+          <td height="4">
+            <img src="<%=request.getContextPath()%>/UTILS/img/t.gif" width="1" height="2">
+          </td>
+        </tr>
+        <tr>
+          <td>
+            <table cellpadding="0" border="0" cellspacing="0" width="100%" align="center">
+              <tr>
+                <td align="center" valign="top" width="100%">
+                  <table width="100%" align="center" cellspacing="0" border="0">
+                    <tr>
+                      <td valign="top">
+                        <table width="100%" cellpadding="0" cellspacing="0" border="0">
+                          <tr>
+                              <td class="tituloframe">COMENTARIOS</td>
+                          </tr>
+                          <tr>
+                             <td > 
+                                 <textarea name="textoComentario" id="textoComentario" style="width: 100%;height:70px;"
+                                 onfocus="this.select(); field='textoComentario';" <%=campoIz%>
+                                 onKeyDown="goblalLimitText('textoComentario','numCarac',200);" onKeyUp="goblalLimitText('textoComentario','numCarac',200);"><c:out value="${requestScope.beanWFDetalleComentario.textoComentario}"/></textarea>
+                                 <input type="hidden" name="countdown" size="3" readonly />
+                                 <div style="text-align: right;" class="etiqueta">
+                                    (Max. <label name="numCarac" id="numCarac"></label>&nbsp;/ 200)
+                                  </div>
+                              </td>
+                          </tr>
+                        </table>
+                      </td>
+                    </tr>
+                  </table>
+                </td>
+              </tr>
+            </table>
+          </td>
+        </tr>
+      </table>
+    </form>
+  </body>
+</html>
\ No newline at end of file
diff --git a/DELFINWEBNEW/WebRoot/FINANCIERO/workflow/legal/etapa/WF_T_SolicitudEstudioTitulo_CHILD.jsp b/DELFINWEBNEW/WebRoot/FINANCIERO/workflow/legal/etapa/WF_T_SolicitudEstudioTitulo_CHILD.jsp
new file mode 100644
index 0000000..e587642
--- /dev/null
+++ b/DELFINWEBNEW/WebRoot/FINANCIERO/workflow/legal/etapa/WF_T_SolicitudEstudioTitulo_CHILD.jsp
@@ -0,0 +1,405 @@
+<!-- WF_T_SolicitudEstudioTitulo_CHILD.jsp-->
+<%--[Req.S17-007] kdelacruz 13.03.2017 - Implementación WorkFlow Legal--%>
+
+<%@ page language="java" import="java.util.*" pageEncoding="ISO-8859-1"%>
+<jsp:directive.page import="financ.util.Constante"/>
+<%@ taglib prefix="c" uri="http://java.sun.com/jstl/core" %>
+<%@ taglib uri="/delfin" prefix="delfinTagHtml" %>
+<%
+    String strComportamiento = request.getAttribute("strComportamiento") != null ? (String) request.getAttribute("strComportamiento") : "C";
+    
+    String campoIz = "T".equals(strComportamiento) ? "class='campoobligatorioiz'" : "readonly class='campodisplayiz'";
+    String cboIz = "T".equals(strComportamiento) ? "class='campoobligatorioiz'" : "disabled class='campodisplayiz'";
+%>
+<html>
+  <head>
+    <title>ASIGNAR SOLICITUD</title>
+    <link id="css" href="${pageContext.request.contextPath}/UTILS/css/DELFIN.css" rel="stylesheet" type="text/css">
+    <script src="${pageContext.request.contextPath}/UTILS/Script/MsgValidacion.js"></script>
+    <script src="<%=request.getContextPath()%>/UTILS/Script/DELFIN-Utiles.js"></script>
+    <script type="text/javascript">
+    
+        var f = null;
+        var path;
+        nextfield = "";
+
+        function cargar() {
+        	byID('idMaestra').value = parent.byID('idMaestra').value;
+        	byID('idModulo').value = parent.byID('idModulo').value;
+            f = document.getElementById('frmSolicitudEstudioTitulo');
+            path = '<%=request.getContextPath()%>';
+            mensajeRespuesta('<c:out value="${codigoError}" />', '<c:out value="${mensajeError}" />');
+            onCargarDetalle();
+            var numeroSolicitud = byID('numeroOperacion').value;
+            if(numeroSolicitud != ''){
+            	obtenerDatosCuentaCredito(numeroSolicitud);
+            	byID('numeroOperacion').className = 'campodisplayiz';
+            	byID('codigoTipoBien').className = 'codigoTipoBien';
+            	byID('numeroOperacion').readOnly  = true;
+            	byID('codigoTipoBien').disabled = true;
+            	byID('detalleSolicitudGif').style.visibility = 'hidden';
+            }
+            goblalLimitText('textoComentario','numCarac',200);
+        }
+
+        function keyDown(DnEvents){
+            k = window.event.keyCode;
+            if (k == 13){
+            	return false;
+            }
+            if (k == 120){
+                return false;
+            }
+            if (k == 27){
+                salir();
+                return false;
+            }
+            if (k == 121){
+                return false;
+            }
+            if (k == 112){
+                ayuda();
+                return false;
+            }
+            if (event.ctrlKey){
+                event.keyCode = 0;
+                return false;
+            }
+            if (k==46){
+                return false;
+            }
+            if (window.event && (k == 114 || k == 116 || k == 117 || k == 122))
+                event.keyCode = 505;
+            if(event.keyCode == 505)
+                return false;
+        }
+        document.onkeydown = keyDown;
+
+        function salir(){
+        	var params = '?action=MOSTRAR_DETALLE';
+            params += '&idModulo=143001';
+            parent.window.location = path + '/WF_C_Legal_Servlet' + params;
+        }
+
+        function onCargarDetalle() {
+            var idMaestra = parent.byID('idMaestra').value;
+            var idEtapa = byID('idEtapa').value;
+            var params = '?action=CARGAR_DETALLE_SOLICITUD_ESTUDIO_TITULO';
+                params += '&idEtapa=' + idEtapa;
+                params += '&idMaestra=' + idMaestra;
+            var url = path + '/WF_C_TipoDocumento_Servlet' + params;
+            document.ifrmDetalleSolicitud.location.replace(url);
+          }
+
+      //Busqueda de Clientes
+        function buscarFuncionarios() {
+            var valor = byID('descripcionFuncionario').value;
+            var nombre="FUNCIONARIOS_NEGOCIOS";
+            valor1 ="Descripcion";
+            valor2 ="Codigo";
+            var params = '&myDate=' + (new Date()).getTime();
+            var url = path + "/GENERAL/Busqueda.jsp?cboValorBuscar1="+valor1+"&cboValorBuscar2="+valor2+"&txtValorBuscar="+valor+"&tabla="+nombre + params;
+            var opciones = "dialogHeight:330px;dialogWidth:670px;center:yes;help:no;resizable:no;status:no";
+            window.showModalDialog(url,window,opciones);
+          }
+
+        function insertarFuncionario(data) {
+            byID('codigoFuncionario').value = data[0];
+            byID('descripcionFuncionario').value = data[1];
+          }
+
+        function modificar(){
+            var params = '?action=MOSTRAR';
+            params += '&time=' + new Date().getTime();
+            var url = path + '/CR_C_CuentaCredito_Servlet' + params;
+            var attribs = 'dialogHeight:350px;dialogWidth:900px; center:yes; help:no; resizable:no; status:no';
+            window.showModalDialog(url, window, attribs);
+          }
+
+        function insertarSolicitud(data){
+            f.numeroOperacion.value = data[0];
+            f.codigoTipoOperacion.value = data[8];
+            document.frmSolicitudEstudioTitulo.numeroOperacion.focus();
+            obtenerDatosCuentaCredito(data[0]);
+            document.forms[0].textoComentario.focus();
+         }
+
+        function obtenerDatosCuentaCredito(numeroSolicitud){
+            var params = 'action=CONSULTAR_SOLICITUD_CREDITO_EXTERNO';
+                params += '&numeroSolicitud=' + numeroSolicitud;
+            var url = path + '/CR_C_CuentaCredito_Servlet';
+            ajaxRequestPOST(url, params, false, function(xmldoc) {
+                mensajeRespuestaXML(xmldoc, function(){
+                  var codigoPersona = getValor(xmldoc, 'codigoPersona');
+                  var nombreRazonSocial = getValor(xmldoc, 'nombreRazonSocial');
+                  var codigoProducto = getValor(xmldoc, 'codigoProducto');
+                  var productoNombre = getValor(xmldoc, 'productoNombre');
+                  var montoSolicitado = getValor(xmldoc, 'montoSolicitado');
+                  var codigoAnalistaResponsable = getValor(xmldoc, 'codigoAnalistaResponsable');
+                  var cboTipoBien = getValor(xmldoc, 'codigoTipoBien');
+                  var descripcionAgencia = getValor(xmldoc, 'descripcionAgencia');
+
+                 f.codigoPersona.value = codigoPersona;
+                 f.txtCliente.value = nombreRazonSocial;
+                 f.codigoProducto.value = codigoProducto;
+                 f.txtProducto.value = productoNombre;
+                 f.txtMontoFinanciero.value = montoSolicitado;
+                 f.txtFuncionario.value = codigoAnalistaResponsable;
+                 f.descripcionAgencia.value = descripcionAgencia;
+                 f.codigoTipoBien.value = cboTipoBien;
+
+                 codigoTipoBien=document.getElementById('codigoTipoBien'); 
+                 for(var i=0;i<codigoTipoBien.length;i++) 
+                     if (codigoTipoBien.options[i].value==cboTipoBien) 
+                    	 codigoTipoBien[i].selected=true;
+                 });
+              });
+            }
+
+        function validaSustento(){
+            goblalLimitText('textoComentario','numCarac',200);
+            if (byID('textoComentario').value.length > 200){
+                return false;
+            }
+            return true;
+        }
+
+        function validar(){
+            var frmDatos = document.frmSolicitudEstudioTitulo;
+            var txtProducto = byID('txtProducto').value;
+            var numeroOperacion = byID('numeroOperacion').value;
+            if(isEmpty(numeroOperacion) || isEmpty(txtProducto)){
+                frmDatos.numeroOperacion.focus();
+                alert(m_0001);
+               return false;
+            }
+            return true;
+        }
+
+        function validarComentario(){
+        	var frmDatos = document.frmSolicitudEstudioTitulo;
+            var textoComentario = byID('textoComentario').value;
+
+             if(isEmpty(textoComentario)){
+                 frmDatos.textoComentario.focus();
+                 alert(m_0001);
+                return false;
+             }
+             return true;
+            }
+
+        function procesarEvento(idEvento, indicadorValidacion){
+        	strComportamiento = byID('strComportamiento').value;
+            if(strComportamiento != '<%=Constante.WF_COMPORTAMIENTO_TRANSACCIONAL%>'){
+                alert(m_10120);
+                return false;
+                }
+        	if(!validar()){
+                return false;
+            }
+
+        	if(!validarComentario()){
+                return false;
+            }
+
+            var lista = document.ifrmDetalleSolicitud.obtenerLista();
+            var codigoTipoBien = document.getElementById('codigoTipoBien');
+            var codigoTipoOperacion = byID('codigoTipoOperacion').value;
+
+            params = serializeForm(byID('frmSolicitudEstudioTitulo'));
+            params += '&action=ENVIAR';
+            params += '&lista=' + lista;
+            params += '&idEvento=' + idEvento;
+            params += '&codigoTipoBien=' + codigoTipoBien;
+            params += '&codigoTipoOperacion=' + codigoTipoOperacion;
+            var url = path + '/WF_T_SolicitudEstudioTitulo_Servlet';
+            ajaxRequestPOST(url, params, false, function(xmldoc) {
+                mensajeRespuestaXML(xmldoc, function(){
+                  var idIngreso = getValor(xmldoc, 'idMaestra');
+                  byID('idMaestra').value = idIngreso;
+                  alert(m_8570);
+                  salir();
+                });
+              });
+        }
+
+    </script>
+  </head>
+  <body onhelp="getF1();" class="colorbody" onload="cargar();" style="padding: 0px, 0px, 0px, 0px;overflow:auto;">
+    <form name="frmSolicitudEstudioTitulo" id="frmSolicitudEstudioTitulo" method="post">
+      <table border="0" cellpadding="0" cellspacing="2" width="99.5%" align="center" >
+        <tr>
+          <td height="4">
+            <img src="<%=request.getContextPath()%>/UTILS/img/t.gif" width="1" height="2">
+          </td>
+        </tr>
+        <tr>
+            <td class="tituloframe">
+                DATOS PRINCIPALES
+                <input type="hidden" name="idEtapa" id="idEtapa" value="<c:out value="${requestScope.idEtapa}"/>">
+                <input type="hidden" name="idMaestra" id="idMaestra">
+                <input type="hidden" name="idModulo" id="idModulo">
+                <input type="hidden" name="strComportamiento" id="strComportamiento" value="<c:out value="${requestScope.strComportamiento}"/>">
+                <input type="hidden" name="codigoTipoOperacion" id="codigoTipoOperacion" />
+            </td>
+        </tr>
+        <tr>
+          <td>
+            <table border="2" cellpadding="0" cellspacing="0" width="100%" align="center" class="frame">
+              <tr>
+                <td height="20" align="center">
+                  <table width="99%" cellpadding="0" cellspacing="2" border="0">
+                    <tr>
+                        <td class="etiqueta" align="left" width="100" valign="middle">
+                            Id Ingreso
+                        </td>
+                        <td width="150"  > 
+                           <input name="idMaestra" style="width: 120" class="campodisplayiz" readonly tabindex="1"  value="<c:out value='${beanWFLegal.idMaestra}' />"
+                           onfocus="this.select(); field='idMaestra'; nextfield ='numeroOperacion';">
+                        </td>
+                    </tr>
+                    <tr>
+                        <td class="etiqueta" align="left" valign="middle">
+                            Solicitud
+                        </td>
+                        <td > 
+                           <input name="numeroOperacion" style="width: 120" <%=campoIz%>  tabindex="1" value="<c:out value='${requestScope.beanWFLegal.numeroOperacion}' />"
+                           onfocus="this.select(); field='numeroOperacion'; nextfield ='txtCliente';">
+                            <img id="detalleSolicitudGif"  src="<%=request.getContextPath()%>/UTILS/img/Detalle.gif" style="cursor: hand" onclick="modificar()" border=0></td>
+                    </tr>
+                    <tr>
+                        <td class="etiqueta" align="left" valign="middle" >
+                            Cliente
+                        </td>
+                        <td > 
+                           <input type="hidden" name="codigoPersona" id="codigoPersona" value="<c:out value='${requestScope.beanWFLegal.codigoPersona}' />"/>
+                           <input name="txtCliente" style="width: 120" class="campodisplayiz" readonly tabindex="1"
+                           onfocus="this.select(); field='txtCliente'; nextfield ='txtMontoFinanciero';">
+                        </td>
+                        <td class="etiqueta" align="left" valign="middle" width="100">
+                            Monto Finaciero
+                        </td>
+                        <td width="100" class="etiqueta" align="left" valign="middle"> 
+                           <input name="txtMontoFinanciero" style="width: 120" class="campodisplayiz" readonly tabindex="1" 
+                           onfocus="this.select(); field='txtFechaSolicitud'; nextfield ='txtProducto';">
+                        </td>
+<!--                         <td class="etiqueta" align="left" width="20" valign="middle"> -->
+<!--                                USD -->
+<!--                         </td> -->
+                    </tr>
+                    <tr>
+                        <td class="etiqueta" align="left" valign="middle">
+                            Producto
+                        </td>
+                        <td >
+                           <input type="hidden" name="codigoProducto" id="codigoProducto" />
+                           <input name="txtProducto" style="width: 120" class="campodisplayiz" readonly tabindex="1" 
+                           onfocus="this.select(); field='txtProducto'; nextfield ='txtFuncionario';">
+                        </td>
+                        <td class="etiqueta" align="left" valign="middle" width="100">
+                            Tipo Bien
+                        </td>
+                        <td width="100" class="etiqueta" align="left" valign="middle"> 
+                        <select name=codigoTipoBien id="codigoTipoBien" style="width: 120px;" tabindex="4" onfocus=" nextfield='txtFuncionario'" <%=cboIz%>>
+                          <c:forEach var='beanCombo' items='${requestScope.lstIndicadorTipoBien}'  >
+                            <option value="<c:out value='${beanCombo.codigo}'/>" >
+                              <c:out value='${beanCombo.descripcion}' />
+                            </option>
+                          </c:forEach>
+                        </select>
+                        </td>
+                    </tr>
+                    <tr>
+                        <td class="etiqueta" align="left" valign="middle">
+                            Funcionario
+                        </td>
+                        <td > 
+                           <input name="txtFuncionario" style="width: 120px" class="campodisplayiz" readonly tabindex="1" 
+                           onfocus="this.select(); field='txtFuncionario';">
+                        </td>
+                        <td class="etiqueta" align="left" valign="middle" width="100">
+                            Agencia
+                        </td>
+                        <td width="100" class="etiqueta" align="left" valign="middle"> 
+                           <input name="descripcionAgencia" style="width: 120px" class="campodisplayiz" readonly tabindex="1" 
+                           onfocus="this.select(); field='descripcionAgencia';">
+                        </td>
+                    </tr>
+                </table>
+                </td>
+              </tr>
+            </table>
+          </td>
+        </tr>
+        <tr>
+          <td height="4">
+            <img src="<%=request.getContextPath()%>/UTILS/img/t.gif" width="1" height="2">
+          </td>
+        </tr>
+        <tr>
+          <td>
+            <table cellpadding="0" border="0" cellspacing="0" width="100%" align="center">
+              <tr>
+                <td align="center" valign="top" width="100%">
+                  <table width="100%" align="center" cellspacing="0" border="0">
+                    <tr>
+                      <td valign="top">
+                        <table width="100%" cellpadding="0" cellspacing="0" border="0">
+                          <tr>
+                              <td class="tituloframe">DETALLE DOCUMENTOS</td>
+                          </tr>
+                          <tr>
+                            <td>
+                              <iframe id="ifrmDetalleSolicitud" name="ifrmDetalleSolicitud" frameborder="0" width="100%" height="250px"  class="frame" src="FINANCIERO/workflow/tipoDocumento/WF_T_TipoDocumento_TABLA.jsp"></iframe>
+                            </td>
+                          </tr>
+                        </table>
+                      </td>
+                    </tr>
+                  </table>
+                </td>
+              </tr>
+            </table>
+          </td>
+        </tr>
+        <tr>
+          <td height="4">
+            <img src="<%=request.getContextPath()%>/UTILS/img/t.gif" width="1" height="2">
+          </td>
+        </tr>
+        <tr>
+          <td>
+            <table cellpadding="0" border="0" cellspacing="0" width="100%" align="center">
+              <tr>
+                <td align="center" valign="top" width="100%">
+                  <table width="100%" align="center" cellspacing="0" border="0">
+                    <tr>
+                      <td valign="top">
+                        <table width="100%" cellpadding="0" cellspacing="0" border="0">
+                          <tr>
+                              <td class="tituloframe">COMENTARIOS</td>
+                          </tr>
+                          <tr>
+                             <td > 
+                                 <textarea name="textoComentario" id="textoComentario" style="width: 100%;height:70px;"
+                                 onfocus="this.select(); field='textoComentario';" <%=campoIz%>
+                                 onKeyDown="goblalLimitText('textoComentario','numCarac',200);" onKeyUp="goblalLimitText('textoComentario','numCarac',200);"><c:out value="${requestScope.beanWFDetalleComentario.textoComentario}"/></textarea>
+                                 <input type="hidden" name="countdown" size="3" readonly />
+                                 <div style="text-align: right;" class="etiqueta">
+                                    (Max. <label name="numCarac" id="numCarac"></label>&nbsp;/ 200)
+                                  </div>
+                              </td>
+                          </tr>
+                        </table>
+                      </td>
+                    </tr>
+                  </table>
+                </td>
+              </tr>
+            </table>
+          </td>
+        </tr>
+      </table>
+    </form>
+  </body>
+</html>
\ No newline at end of file
diff --git a/DELFINWEBNEW/WebRoot/FINANCIERO/workflow/legal/etapa/WF_T_TomaFirma_CHILD.jsp b/DELFINWEBNEW/WebRoot/FINANCIERO/workflow/legal/etapa/WF_T_TomaFirma_CHILD.jsp
new file mode 100644
index 0000000..6f74cbe
--- /dev/null
+++ b/DELFINWEBNEW/WebRoot/FINANCIERO/workflow/legal/etapa/WF_T_TomaFirma_CHILD.jsp
@@ -0,0 +1,239 @@
+<!-- WF_T_TomaFirma_CHILD.jsp-->
+<%--[Req.S17-007] kdelacruz 13.03.2017 - Implementación WorkFlow Legal--%>
+
+<%@ page language="java" import="java.util.*" pageEncoding="ISO-8859-1"%>
+<jsp:directive.page import="financ.util.Constante"/>
+<%@ taglib prefix="c" uri="http://java.sun.com/jstl/core" %>
+<%@ taglib uri="/delfin" prefix="delfinTagHtml" %>
+<%
+    String strComportamiento = request.getAttribute("strComportamiento") != null ? (String) request.getAttribute("strComportamiento") : "C";
+    System.out.print(strComportamiento);
+    String campoIz = "T".equals(strComportamiento) ? "class='campoobligatorioiz'" : "readonly class='campodisplayiz'";
+    String campoCe = "T".equals(strComportamiento) ? "class='campoobligatorioce'" : "readonly class='campodisplayce'";
+%>
+<html>
+  <head>
+    <title>ASIGNAR SOLICITUD</title>
+    <link id="css" href="${pageContext.request.contextPath}/UTILS/css/DELFIN.css" rel="stylesheet" type="text/css">
+    <script src="${pageContext.request.contextPath}/UTILS/Script/MsgValidacion.js"></script>
+    <script src="<%=request.getContextPath()%>/UTILS/Script/DELFIN-Utiles.js"></script>
+    <script type="text/javascript">
+    
+        var f = null;
+        var path;
+        nextfield = "";
+
+        function cargar() {
+            byID('idMaestra').value = parent.byID('idMaestra').value;
+            byID('idModulo').value = parent.byID('idModulo').value;
+            f = document.getElementById('frmSolicitudEstudioTitulo');
+            path = '<%=request.getContextPath()%>';
+            mensajeRespuesta('<c:out value="${codigoError}" />', '<c:out value="${mensajeError}" />');
+            onCargarDetalle();
+            goblalLimitText('textoComentario','numCarac',200);
+        }
+
+        function keyDown(DnEvents){
+            k = window.event.keyCode;
+            if (k == 13){
+                if(nextfield == "textoComentario"){
+                    eval('document.forms[0].' + nextfield + '.focus()');
+                    return false;
+                }
+                return false;
+            }
+            if (k == 120){
+                return false;
+            }
+            if (k == 27){
+                salir();
+                return false;
+            }
+            if (k == 121){
+                return false;
+            }
+            if (k == 112){
+                ayuda();
+                return false;
+            }
+            if (event.ctrlKey){
+                event.keyCode = 0;
+                return false;
+            }
+            if (k==46){
+                return false;
+            }
+            if (window.event && (k == 114 || k == 116 || k == 117 || k == 122))
+                event.keyCode = 505;
+            if(event.keyCode == 505)
+                return false;
+        }
+        document.onkeydown = keyDown;
+
+        function salir(){
+            var params = '?action=MOSTRAR_DETALLE';
+            params += '&idModulo=143001';
+            parent.window.location = path + '/WF_C_Legal_Servlet' + params;
+        }
+
+        function onCargarDetalle() {
+            var idMaestra = parent.byID('idMaestra').value;
+            var idEtapa = byID('idEtapa').value;
+            
+            var params = '?action=CARGAR_DETALLE_SOLICITUD_ESTUDIO_TITULO';
+                params += '&idEtapa=' + idEtapa;
+                params += '&idMaestra=' + idMaestra;
+
+            var url = path + '/WF_C_TipoDocumento_Servlet' + params;
+          }
+
+
+        function validaSustento(){
+            goblalLimitText('textoComentario','numCarac',200);
+            if (byID('textoComentario').value.length > 200){
+                return false;
+            }
+            return true;
+        }
+
+        function validar(){
+            var frmDatos = document.frmTomaFirma;
+            var fechaFirma = byID('fechaFirma').value;
+            if(isEmpty(fechaFirma)){
+                frmDatos.fechaFirma.focus();
+                alert(m_0001);
+               return false;
+            }
+            return true;
+        }
+
+        function validarComentario(){
+        	var frmDatos = document.frmTomaFirma;
+            var textoComentario = byID('textoComentario').value;
+
+             if(isEmpty(textoComentario)){
+                 frmDatos.textoComentario.focus();
+                 alert(m_0001);
+                return false;
+             }
+             return true;
+            }
+
+        function procesarEvento(idEvento, indicadorValidacion){
+            
+            strComportamiento = byID('strComportamiento').value;
+            if(strComportamiento != '<%=Constante.WF_COMPORTAMIENTO_TRANSACCIONAL%>'){
+                alert(m_10120);
+                return false;
+            }
+            if(indicadorValidacion == 'S'){
+                if(!validar()){
+                    return false;
+                }
+            }
+            if(!validarComentario()){
+                return false;
+            }
+            var fechaTomaFirma = byID('fechaFirma').value;
+            var comentario = byID('textoComentario').value;
+            var params = serializeForm(byID('frmTomaFirma'));
+            params += '&action=ENVIAR';
+            params += '&idEvento=' + idEvento;
+            params += '&fechaTomaFirma=' + fechaTomaFirma;
+            params += '&comentario=' + comentario;
+            var url = path + '/WF_T_TomaFirma_Servlet';
+            ajaxRequestPOST(url, params, false, function(xmldoc) {
+                mensajeRespuestaXML(xmldoc, function(){
+                  alert(m_8570);
+                  salir();
+                });
+              });
+        }
+
+    </script>
+  </head>
+  <body onhelp="getF1();" class="colorbody" onload="cargar();" style="padding: 0px, 0px, 0px, 0px;overflow:auto;">
+    <form name="frmTomaFirma" id="frmTomaFirma" method="post">
+      <table border="0" cellpadding="0" cellspacing="2" width="99.5%" align="center" >
+        <tr>
+          <td height="4">
+            <img src="<%=request.getContextPath()%>/UTILS/img/t.gif" width="1" height="2">
+          </td>
+        </tr>
+        <tr>
+            <td class="tituloframe">
+                DETALLE
+                <input type="hidden" name="idEtapa" id="idEtapa" value="<c:out value="${requestScope.idEtapa}"/>">
+                <input type="hidden" name="idMaestra" id="idMaestra">
+                <input type="hidden" name="idModulo" id="idModulo" >
+                <input type="hidden" name="strComportamiento" id="strComportamiento" value="<c:out value="${requestScope.strComportamiento}"/>">
+            </td>
+        </tr>
+        <tr>
+          <td>
+            <table border="2" cellpadding="0" cellspacing="0" width="100%" align="center" class="frame">
+              <tr>
+                <td height="20" align="center">
+                  <table width="99%" cellpadding="0" cellspacing="2" border="0">
+                    <tr>
+                        <td class="etiqueta" align="left" width="100" valign="middle">
+                            Fecha de Firma
+                        </td>
+                        <td width="150"  >
+                           <input name="fechaFirma" style="width: 120" <%=campoCe%> tabindex="1" value="<c:out value="${requestScope.beanWFLegal.fechaFirma}"/>"
+                           onkeypress="valida_especiales(this.value,'fecha')" maxlength="10" onblur="this.value=vuelveFecha(this.value);if(!esFecha(this.value)) {alert(m_0006);this.focus();return false;}"
+                           onfocus="this.select(); field='fechaFirma'; nextfield ='textoComentario';">
+                        </td>
+                    </tr>
+                </table>
+                </td>
+              </tr>
+            </table>
+          </td>
+        </tr>
+        <tr>
+          <td height="4">
+            <img src="<%=request.getContextPath()%>/UTILS/img/t.gif" width="1" height="2">
+          </td>
+        </tr>
+        <tr>
+          <td height="4">
+            <img src="<%=request.getContextPath()%>/UTILS/img/t.gif" width="1" height="2">
+          </td>
+        </tr>
+        <tr>
+          <td>
+            <table cellpadding="0" border="0" cellspacing="0" width="100%" align="center">
+              <tr>
+                <td align="center" valign="top" width="100%">
+                  <table width="100%" align="center" cellspacing="0" border="0">
+                    <tr>
+                      <td valign="top">
+                        <table width="100%" cellpadding="0" cellspacing="0" border="0">
+                          <tr>
+                              <td class="tituloframe">COMENTARIOS</td>
+                          </tr>
+                          <tr>
+                             <td > 
+                                 <textarea name="textoComentario" id="textoComentario" style="width: 100%;height:70px;"
+                                 onfocus="this.select(); field='textoComentario';" <%=campoIz%>
+                                 onKeyDown="goblalLimitText('textoComentario','numCarac',200);" onKeyUp="goblalLimitText('textoComentario','numCarac',200);"><c:out value="${requestScope.beanWFDetalleComentario.textoComentario}"/></textarea>
+                                 <input type="hidden" name="countdown" size="3" readonly />
+                                 <div style="text-align: right;" class="etiqueta">
+                                    (Max. <label name="numCarac" id="numCarac"></label>&nbsp;/ 200)
+                                  </div>
+                              </td>
+                          </tr>
+                        </table>
+                      </td>
+                    </tr>
+                  </table>
+                </td>
+              </tr>
+            </table>
+          </td>
+        </tr>
+      </table>
+    </form>
+  </body>
+</html>
\ No newline at end of file
diff --git a/DELFINWEBNEW/WebRoot/FINANCIERO/workflow/legal/notaria/WF_T_Notaria_CHILD.jsp b/DELFINWEBNEW/WebRoot/FINANCIERO/workflow/legal/notaria/WF_T_Notaria_CHILD.jsp
new file mode 100644
index 0000000..cd71d03
--- /dev/null
+++ b/DELFINWEBNEW/WebRoot/FINANCIERO/workflow/legal/notaria/WF_T_Notaria_CHILD.jsp
@@ -0,0 +1,306 @@
+<!-- WF_T_Notaria_CHILD.jsp -->
+<%-- [Req.S17-007] gmeza 13.03.2017 - Implementación WorkFlow Legal --%>
+<%@ taglib uri="/delfin" prefix="delfinTagHtml"%>
+<%@ taglib prefix="c" uri="http://java.sun.com/jstl/core"%>
+<%@ taglib prefix='fmt' uri='http://java.sun.com/jstl/fmt'%>
+<html>
+  <head>
+    <META HTTP-EQUIV="Pragma" CONTENT="no-cache" />
+    <!-- Titulo del Módulo -->
+    <title>Registro de Notaría y Kardex</title>
+    <!-- Invocación de Estilos -->
+    <link id="css" href="<%=request.getContextPath()%>/UTILS/css/DELFIN.css" rel="stylesheet" type="text/css">
+    <!-- Invocación de Java Scripts -->
+    <script src="<%=request.getContextPath()%>/UTILS/Script/MsgValidacion.js"></script>
+    <script src="<%=request.getContextPath()%>/UTILS/Script/DELFIN-Utiles.js"></script>
+    <script>
+      var path;
+      var f;
+      var operacionEnProceso = false;
+      var numeroLineaCreditoBantiq;
+      var indicadorInicio;
+      var secuencia;
+        
+      //Funciones que anulan el click derecho del mouse
+      document.oncontextmenu = new Function("return false");
+      
+      function load(){
+        path = '<%=request.getContextPath()%>';
+        f = byID("frmRegistro");
+        byID('nombreNotaria').focus();
+        mensajeRespuesta('<c:out value="${codigoError}" />', '<c:out value="${mensajeRespuesta}" />');
+        formatear();
+        cargarDetalle();
+      }
+
+      function cargarDetalle(){
+          var idMaestra = byID('idMaestra').value;
+          var keyTipoDocumento = 'COMPROBANTES';
+          var params = '?action=CARGAR_DETALLE_DOCUMENTO';
+          params += '&idMaestra=' + idMaestra;
+          params += '&keyTipoDocumento=' + keyTipoDocumento;
+          params += '&time=' + new Date().getTime();
+          var url = path + '/WF_C_TipoDocumento_Servlet' + params;
+          document.ifrmDetalle.location.replace(url);
+      }
+
+      document.onkeydown = keyDown;
+      nextfield = 'numeroDocumento';
+      function keyDown(DnEvents) {
+        // Reconocimiento de la tecla enter, para que simule el tab
+        k = window.event.keyCode;
+        // Reconocimiento de la tecla ESC para el cerrado de la ventana
+        if (k == 13) {
+          var callerWindowObj = dialogArguments;
+          if(byID(nextfield) && !byID(nextfield).readOnly){
+            if(nextfield=='numeroKardex'){
+                buscarNotarios();
+              return;
+            }
+            byID(nextfield).focus();
+          }
+          return;
+        } else if (k == 27) {
+          salir();
+          return false;
+        }
+      }
+
+      function salir() {
+        window.close();
+      }
+
+      function grabar() {
+        if (operacionEnProceso) {
+          alert(m_0156);
+        }
+        
+        if (!valido()) {
+            return false;
+        }
+
+        var lista = document.ifrmDetalle.obtenerLista();
+        
+        var url = path + '/WF_T_Notaria_Servlet';
+        var params = serializeForm(byID('frmRegistro'));
+        params += '&action=GUARDAR';
+        params += '&time=' + new Date().getTime();
+        params += '&lista=' + lista;
+      
+        operacionEnProceso = true;
+        ajaxRequestPOST(url, params, false, function(xmldoc) {
+          mensajeRespuestaXML(xmldoc, function(){
+            alert(m_8570);
+            salir();
+          });
+        });
+      }
+
+      function valido(){
+          var frmDatos = document.frmRegistro;
+          var codigoNotaria = frmDatos.codigoNotaria.value;
+          var nombreNotaria= frmDatos.nombreNotaria.value;
+          var numeroKardex =  frmDatos.numeroKardex.value;
+          var gastosNotariales = frmDatos.gastosNotariales.value;
+          var gastosRegistrales = frmDatos.gastosRegistrales.value;
+          var indicadorCancelacion = frmDatos.indicadorCancelacion.value;
+          var indicadorFinanciamiento = frmDatos.indicadorFinanciamiento.value;
+
+          if (isEmpty(codigoNotaria) || isEmpty(nombreNotaria)) {
+            frmDatos.nombreNotaria.focus();
+            alert(m_0001);
+            return false;
+          }
+
+          if (isEmpty(numeroKardex)) {
+            frmDatos.numeroKardex.focus();
+            alert(m_0001);
+            return false;
+          }
+
+          if (isEmpty(gastosNotariales)) {
+            frmDatos.gastosNotariales.focus();
+            alert(m_0001);
+            return false;
+          }
+
+          if (isEmpty(gastosRegistrales)) {
+            frmDatos.gastosRegistrales.focus();
+            alert(m_0001);
+            return false;
+          }
+
+          if(isEmpty(indicadorFinanciamiento) || indicadorFinanciamiento=='0'){
+        	  frmDatos.indicadorFinanciamiento.focus();
+              alert(m_0001);
+              return false;
+          }
+
+          if (isEmpty(indicadorCancelacion) || indicadorCancelacion=='0') {
+            frmDatos.indicadorCancelacion.focus();
+            alert(m_0001);
+            return false;
+          }
+
+          
+
+          var seleccione, idFile;
+          var numeroDeFilas = document.ifrmDetalle.NumerodeFilas();
+          for (var j=0; j<numeroDeFilas; j++) {
+              seleccione = ifrmDetalle.obtenerSeleccione(j);
+              idFile = ifrmDetalle.obtenerIdFile(j);
+              if(seleccione=='Si' && isEmpty(idFile)){
+                  alert(m_10119);
+                  return false;
+              }
+          }
+
+          return true;
+      }
+
+      function verHistorialDocumento(idTipoDocumento, idEtapa, idMaestra){
+          dialogArguments.verHistorialDocumento(idTipoDocumento, idEtapa, idMaestra);
+      }
+
+      function buscarNotarios() {
+          var nombre = 'NOTARIOS';
+          var valor = byID('nombreNotaria').value;
+          var valor2 ='CODIGO';
+          var valor1 ='DESCRIPCION';
+          var url = path + "/GENERAL/Busqueda.jsp?cboValorBuscar1="+valor1+"&cboValorBuscar2="+valor2+"&txtValorBuscar="+valor+"&tabla="+nombre;
+          var opciones = "dialogHeight:330px;dialogWidth:670px;center:yes;help:no;resizable:no;status:no";
+          window.showModalDialog(url,window,opciones);
+        }
+
+      // Ingresar nombre del cliente.
+      function insertarNotario(data) {
+        byID('codigoNotaria').value = data[0];
+        byID('nombreNotaria').value = data[1];
+        byID('numeroKardex').focus();
+      }
+
+      function formatear(){
+        byID('gastosNotariales').value = formateador(byID('gastosNotariales').value);
+        byID('gastosRegistrales').value = formateador(byID('gastosRegistrales').value);
+      }
+    </script>
+  </head>
+  <body onload="load();" class="colorbody" style="padding: 5px, 5px, 5px, 5px;overflow:auto;" >
+    <form name="frmRegistro" id="frmRegistro" method="post">
+      <table width="100%" cellpadding="1" cellspacing="0" border="0">
+        <tr>
+          <td>
+            <table border="1" cellpadding="0" cellspacing="0" width="100%" align="center" class="frame">
+              <tr>
+                <td height="20" align="center">
+                  <table width="99%" cellpadding="0" cellspacing="0" border="0">
+                    <tr>
+                      <td align="left" valign="middle" id="tdGrabar" width="1">
+                        <delfinTagHtml:boton nombre="BT_Grabar_P.gif" onclick="grabar();" />
+                      </td>
+                      <td align="left" colspan="3" valign="middle">
+                        <delfinTagHtml:boton nombre="BT_Salir_P.gif" onclick="salir();" />
+                      </td>
+                    </tr>
+                  </table>
+                </td>
+              </tr>
+            </table>
+          </td>
+        </tr>
+        <tr>
+          <td class="tituloframe">
+            <br/>
+            Registro de Notaría y Kárdex
+          </td>
+        </tr>
+        <tr>
+          <td>
+            <table border="0" cellpadding="2" cellspacing="2" width="99%" align="center" class="frame">
+              <tr>
+                <td height="20" align="center">
+                  <input type="hidden" name="idMaestra" id="idMaestra" value="<c:out value='${beanWFLegal.idMaestra}' />" />
+                  <input type="hidden" name="strComportamiento" id="strComportamiento" value="T">
+                  <table width="99%" cellpadding="0" cellspacing="2" border="0">
+                    <!-- FILA 1 -->
+                    <tr>
+                      <td class="etiqueta"  align="left" valign="middle" width="150px" >
+                        Notario
+                      </td>
+                      <td>
+                        <input type="hidden" name="codigoNotaria" id="codigoNotaria" value="<c:out value='${beanWFLegal.codigoNotaria}' />" />
+                        <input type="text" name="nombreNotaria" id="nombreNotaria" value="<c:out value='${beanWFLegal.nombreNotaria}' />" onfocus="nextfield='numeroKardex';" class="campoobligatorioiz" style="width: 200px;" />
+                        &nbsp;<img id="imgPersona" style="cursor:hand" title="Buscar Persona" src="<%=request.getContextPath()%>/UTILS/img/Detalle.gif" onclick="buscarNotarios();">
+                      </td>
+                    </tr>
+                    <tr>
+                      <td class="etiqueta"  align="left" valign="middle" width="150px" >
+                        Kárdex
+                      </td>
+                      <td>
+                        <input type="text" name="numeroKardex" id="numeroKardex" value="<c:out value='${beanWFLegal.numeroKardex}' />" onfocus="nextfield='gastosNotariales';" class="campoobligatorioiz" style="width: 200px;"  />
+                      </td>
+                    </tr>
+                    <!-- FILA 2 -->
+                    <tr>
+                      <td class="etiqueta"  align="left" valign="middle">
+                        Gastos Notariales
+                      </td>
+                      <td>
+                        <input type="text" name="gastosNotariales" id="gastosNotariales" value="<c:out value='${beanWFLegal.gastosNotariales}' />" maxlength="10" onfocus="this.select();nextfield='gastosRegistrales';" onKeyPress="valida_numero(this,'dec')" onblur="this.value=formateador(this.value);" class="campoobligatoriode" style="width: 90px;" />
+                      </td>
+                    </tr>
+                    <tr>
+                      <td class="etiqueta"  align="left" valign="middle">
+                        Gastos Registrales
+                      </td>
+                      <td>
+                        <input type="text" name="gastosRegistrales" id="gastosRegistrales" value="<c:out value='${beanWFLegal.gastosRegistrales}' />" maxlength="10" onfocus="this.select();nextfield='indicadorCancelacion';" onKeyPress="valida_numero(this,'dec')" onblur="this.value=formateador(this.value);" class="campoobligatoriode" style="width: 90px;" />
+                      </td>
+                    </tr>
+                    <tr>
+                      <td class="etiqueta"  align="left" valign="middle" >
+                        Indicador de Financiamiento
+                      </td>
+                      <td class="etiqueta" style="">
+                        <select name="indicadorFinanciamiento" id="indicadorFinanciamiento" onchange="" onfocus="nextfield=''" class="campoobligatorioiz" style="width: 200px;" >
+                          <c:forEach var='indicadorFinanciamiento' items='${lstindicadorFinanciamiento}'>
+                            <option value="<c:out value='${indicadorFinanciamiento.codigo}'/>" <c:if test="${indicadorFinanciamiento.codigo == beanWFLegal.indicadorFinanciamiento}">selected</c:if>>
+                              <c:out value='${indicadorFinanciamiento.descripcion}' />
+                            </option>
+                          </c:forEach>
+                        </select>
+                      </td>
+                    </tr>
+                    <tr>
+                      <td class="etiqueta"  align="left" valign="middle" >
+                        Cancelado?
+                      </td>
+                      <td class="etiqueta" style="">
+                        <select name="indicadorCancelacion" id="indicadorCancelacion" onchange="" onfocus="nextfield=''" class="campoobligatorioiz" style="width: 200px;" >
+                          <c:forEach var='indicadorCancelacion' items='${lstindicadorCancelacion}'>
+                            <option value="<c:out value='${indicadorCancelacion.codigo}'/>" <c:if test="${indicadorCancelacion.codigo == beanWFLegal.indicadorCancelacion}">selected</c:if> >
+                              <c:out value='${indicadorCancelacion.descripcion}' />
+                            </option>
+                          </c:forEach>
+                        </select>
+                      </td>
+                    </tr>
+                    <tr><td></td></tr>
+                    <tr>
+                      <td colspan="2" class="etiqueta"  align="left" valign="middle" >
+                        <iframe frameborder="0" width="100%" height="80px" id="ifrmDetalle" name="ifrmDetalle" class="frame" src="<%=request.getContextPath()%>/FINANCIERO/workflow/tipoDocumento/WF_T_TipoDocumento_TABLA.jsp">
+                        </iframe>
+                      </td>
+                    </tr>
+                    <!-- FILA 3 -->
+                  </table>
+                </td>
+              </tr>
+            </table>
+          </td>
+        </tr>
+      </table>
+    </form>
+  </body>
+</html>
\ No newline at end of file
diff --git a/DELFINWEBNEW/WebRoot/FINANCIERO/workflow/movimientos/WF_C_Movimientos_CNTR.jsp b/DELFINWEBNEW/WebRoot/FINANCIERO/workflow/movimientos/WF_C_Movimientos_CNTR.jsp
new file mode 100644
index 0000000..12b22cb
--- /dev/null
+++ b/DELFINWEBNEW/WebRoot/FINANCIERO/workflow/movimientos/WF_C_Movimientos_CNTR.jsp
@@ -0,0 +1,110 @@
+<!-- WF_C_Movimientos_CNTR.jsp -->
+<%-- [Req. 17-007] kdelacruz 06.03.2017 - Implementación WorkFlow Legal--%>
+
+<%@ taglib uri="/delfin" prefix="delfinTagHtml"%>
+<%@ taglib prefix="c" uri="http://java.sun.com/jstl/core"%>
+<%@ taglib prefix='fmt' uri='http://java.sun.com/jstl/fmt'%>
+<html>
+  <head>
+    <META HTTP-EQUIV="Pragma" CONTENT="no-cache" />
+    <!-- Titulo del Módulo -->
+    <title>Documentos</title>
+    <!-- Invocación de Estilos -->
+    <link id="css" href="<%=request.getContextPath()%>/UTILS/css/DELFIN.css" rel="stylesheet" type="text/css">
+    <!-- Invocación de Java Scripts -->
+    <script src="<%=request.getContextPath()%>/UTILS/Script/MsgValidacion.js"></script>
+    <script src="<%=request.getContextPath()%>/UTILS/Script/DELFIN-Utiles.js"></script>
+    <script src="<%=request.getContextPath()%>/UTILS/Script/json2.js"></script>
+    <script>
+      var path;
+      var f;
+      var callerWindowObj;
+      function load(){
+        vieneDeLoad = true;
+        path = '<%=request.getContextPath()%>';
+        f = byID("frmRegistro");
+        mensajeRespuesta('<c:out value="${codigoError}" />', '<c:out value="${mensajeError}" />');
+        cargarDetalle();
+      }
+
+      function cargarDetalle(){
+          var idMaestra = byID('idMaestra').value;
+          var params = '?action=MOSTRAR_TABLA';
+          params += '&idMaestra='+idMaestra;
+          params += '&time=' + new Date().getTime();
+          var url = path + '/WF_C_Movimientos_Servlet' + params;
+          document.ifrmDetalle.location.replace(url);
+      }
+
+      document.onkeydown = keyDown;
+      nextfield = '';
+      function keyDown(DnEvents) {
+        // Reconocimiento de la tecla enter, para que simule el tab
+        k = window.event.keyCode;
+        // Reconocimiento de la tecla ESC para el cerrado de la ventana
+        if (k == 13) {
+          if(byID(nextfield) && !byID(nextfield).readOnly){
+            byID(nextfield).focus();
+            return false;
+          }
+          return;
+        } else if (k == 27) {
+          salir();
+          return false;
+        }
+      }
+
+      function salir(){
+        window.close();
+      }
+
+    </script>
+  </head>
+  <body onload="load();" class="colorbody" style="padding: 5px, 5px, 5px, 5px;overflow:auto;" >
+    <form name="frmRegistro" id="frmRegistro" method="post">
+      <table width="100%" cellpadding="1" cellspacing="0" border="0">
+        <tr>
+          <td colspan="2">
+            <table border="0" cellpadding="2" cellspacing="2" width="100%" height="100%" align="center" class="">
+              <tr>
+                <td>
+                  <table border="1" cellpadding="0" cellspacing="0" width="100%" align="center" class="frame">
+                    <tr>
+                      <td height="20" align="center">
+                        <table width="99%" cellpadding="0" cellspacing="0" border="0">
+                          <tr>
+                            <td align="left" colspan="3" valign="middle">
+                              <delfinTagHtml:boton nombre="BT_Salir_P.gif" onclick="salir();" />
+                            </td>
+                          </tr>
+                        </table>
+                      </td>
+                    </tr>
+                  </table>
+                </td>
+              </tr>
+            </table>
+          </td>
+        </tr>
+        <tr>
+          <td class="tituloframe" align="top" >
+            <table border="0" cellpadding="2" cellspacing="2" width="100%" height="100%" align="center" class="">
+              <tr>
+                <td class="tituloframe">
+                  DOCUMENTOS
+                  <input type="hidden" name="idMaestra" id="idMaestra" value="<c:out value="${idMaestra}"/>">
+                </td>
+              </tr>
+              <tr>
+                <td>
+                  <iframe frameborder="0" width="100%" height="200px" id="ifrmDetalle" name="ifrmDetalle" class="frame" src="<%=request.getContextPath()%>/FINANCIERO/workflow/movimientos/WF_C_Movimientos_TABLA.jsp">
+                  </iframe>
+                </td>
+              </tr>
+            </table>
+          </td>
+        </tr>
+      </table>
+    </form>
+  </body>
+</html>
\ No newline at end of file
diff --git a/DELFINWEBNEW/WebRoot/FINANCIERO/workflow/movimientos/WF_C_Movimientos_TABLA.jsp b/DELFINWEBNEW/WebRoot/FINANCIERO/workflow/movimientos/WF_C_Movimientos_TABLA.jsp
new file mode 100644
index 0000000..20df683
--- /dev/null
+++ b/DELFINWEBNEW/WebRoot/FINANCIERO/workflow/movimientos/WF_C_Movimientos_TABLA.jsp
@@ -0,0 +1,150 @@
+<!-- WF_C_Movimientos_TABLA.jsp -->
+<%-- [Req. 17-007] kdelacruz 06.03.2017 - Implementación WorkFlow Legal --%>
+<jsp:directive.page import="general.utils.Paginacion" />
+<%@ taglib prefix="c" uri="http://java.sun.com/jstl/core"%>
+<%@ taglib prefix='fmt' uri='http://java.sun.com/jstl/fmt'%>
+<%
+    String path =request.getContextPath();
+%>
+<html>
+	<head>
+		<!-- Invocación de Estilos -->
+		<link id="css" href="<%=path%>/UTILS/css/DELFIN.css" rel="stylesheet" type="text/css">
+		<!-- Invocación de JavaScript -->
+		<script src="<%=path%>/UTILS/Script/grid.js"></script>
+		<script src="<%=path%>/UTILS/Script/MsgValidacion.js"></script>
+        <script src="<%=path%>/UTILS/Script/DELFIN-Utiles.js"></script>
+		<style>
+		    .active-controls-grid {width: "100%"; height: 100%; font: menu;}
+		    .active-column-0 {display:none;}
+            .active-column-1 {width: 80px;text-align: left;}
+            .active-column-2 {width: 80px;text-align: left;}
+            .active-column-3 {width: 80px;text-align: left;}
+            .active-column-4 {width: 150px;text-align: left;}
+            .active-column-5 {width: 150px;text-align: left;}
+            .active-column-6 {width: 150px;text-align: left;}
+            .active-column-7 {width: 150px;text-align: left;}
+            .active-column-8 {width: 250px;text-align: center;}
+            .active-grid-column {border-right: 1px solid threedlightshadow; }
+            .active-grid-row {border-bottom: 1px solid threedlightshadow; }
+        </style>
+	</head>
+	<body onload="onload();" TOPMARGIN=0 LEFTMARGIN=0 MARGINHEIGHT=0 MARGINWIDTH=0>
+		<script>
+
+        var path;
+        function onload(){
+          path = '<%=path%>';
+          //[T-9460] gmeza 31.08.2016
+          parent.mensajeRespuesta('<c:out value="${codigoError}" />', '<c:out value="${mensajeError}" />');
+          setFoco();
+        }
+
+        var posini;
+        var posfin;
+        var indice = '0';
+        var myData = [<c:out value="${myData}" escapeXml="false"/>];
+
+        var myColumns = [
+                         "Id Maestra",//0
+	                     "Fecha",//1
+	                     "Hora",//2
+	                     "Usuario",//3
+	                     "Etapa Inicial",//4
+	                     "Etapa Final",//5
+	                     "Estado Inicial",//6
+	                     "Estado Final",//7
+	                     "Tiempo Transcurrido"//8
+	                     ];
+
+        //  create ActiveWidgets Grid javascript object
+        var obj = new Active.Controls.Grid;
+
+        obj.setId("obj");
+        // grid header
+        obj.gridColumn = myColumns;
+        // grid data
+        obj.gridData = myData;
+        //  header methods
+        obj.getColumnCount = function() {return this.gridColumn.length};
+        obj.getColumnText = function(i){return this.gridColumn[i]};
+        //  data methods
+        obj.getDataCount = function() {return this.gridData.length};
+        obj.getDataText = function(i, j){return this.gridData[i][j]};
+        obj.setDataText = function(value, i, j){this.gridData[i][j] = value};
+
+        obj.setRowHeaderWidth("28px");
+        obj.setColumnHeaderHeight("20px");
+
+        var row = new Active.Templates.Row; 
+        row.setEvent("ondblclick", function(){this.action("myAction")});    
+        obj.setTemplate("row", row);
+        obj.setAction("myAction", function(src){
+            
+        });
+        //Evento Focus de la grilla 
+        obj.setAction("selectionChanged", mySelect);
+
+        //Evento que reconoce la tecla ENTER
+        var defaultEventHandler = obj.getEvent("onkeydown");
+        var myEventHandler = function(event){
+            if(event.keyCode==13){
+                //
+            }else if(event.keyCode==27){                  
+                parent.parent.salir();
+                event.returnValue = false;              
+            }else if (event.keyCode == 8)event.returnValue = backspace();//Cancela Backspace
+            else if (event.keyCode == 112)parent.ayuda();//F1 ACERCA DE...
+            else if (event.ctrlKey){//Cancela Control
+                event.keyCode = 0;
+                event.returnValue = false; 
+            }else if (window.event && (event.keyCode == 114 || event.keyCode == 116 ||
+                event.keyCode == 117 || event.keyCode == 122)){//Cancela F3,F5,F6 y F11
+                event.keyCode = 505;
+                if(event.keyCode == 505)event.returnValue = false;  
+            }else
+                defaultEventHandler.call(this, event);
+        }
+        obj.setEvent("onkeydown", myEventHandler);
+
+		//Inicio [T-9241] gmeza 15.08.2016
+        obj.setAction("columnSort", function(src) {
+          this.refresh();
+          this.timeout(function() {
+            window.status = ""
+          })
+        });  
+        //Fin [T-9241]
+
+        //Pintado de la grilla
+        document.write(obj);
+
+        function setFoco() {
+            try{
+              if(myData.length == 0){
+                parent.nuevo();
+              }
+              if(myData.length > eval(indice) && indice > -1){
+                  obj.setSelectionIndex(eval(indice));
+              }else if(myData.length > 0){
+                  obj.setSelectionIndex(0);
+              }
+            }catch(error){
+            }
+        }
+        
+        function NumerodeFilas() {
+			return obj.getRowProperty("values").length;
+		}
+
+        function getTableIndex() {
+            return obj.getProperty("selection/index");
+        }
+
+        function mySelect(){
+        }
+
+    </script>
+		<br>
+	</body>
+</html>
\ No newline at end of file
diff --git a/DELFINWEBNEW/WebRoot/FINANCIERO/workflow/tipoDocumento/WF_T_TipoDocumento_TABLA.jsp b/DELFINWEBNEW/WebRoot/FINANCIERO/workflow/tipoDocumento/WF_T_TipoDocumento_TABLA.jsp
new file mode 100644
index 0000000..5267cff
--- /dev/null
+++ b/DELFINWEBNEW/WebRoot/FINANCIERO/workflow/tipoDocumento/WF_T_TipoDocumento_TABLA.jsp
@@ -0,0 +1,243 @@
+<!-- WF_T_TipoDocumento_TABLA.jsp-->
+<%-- kdelacruz [Req.S17-007] 06.03.2017 - Implementación WorkFlow Legal--%>
+
+<jsp:directive.page import="general.utils.Paginacion"/>
+<%
+	String path =request.getContextPath();
+%>
+<%@ taglib prefix="c" uri="http://java.sun.com/jstl/core" %>
+<html>
+<head>  
+    <!-- Invocación de Estilos -->
+    <link id="css" href="<%=request.getContextPath()%>/UTILS/css/DELFIN.css" rel="stylesheet" type="text/css">
+    <!-- Invocación de JavaScript -->
+    <script src="<%=request.getContextPath()%>/UTILS/Script/DELFIN-Tabla.js"></script>
+    <script src="<%=request.getContextPath()%>/UTILS/Script/MsgValidacion.js"></script>
+    <script src="<%=request.getContextPath()%>/UTILS/Script/DELFIN-Utiles.js"></script>
+    <style>
+        .active-controls-grid {height: 100%; font: menu;}
+
+                 .active-column-0  {width: 50px;text-align: center;}
+                 .active-column-1  {display: none;}
+                 .active-column-2  {display: none;}
+                 <c:choose>
+                    <c:when test="${indicadorDescripcionCorta=='S'}">
+                        .active-column-3  {width: 140px;text-align: left;}
+                    </c:when>
+                    <c:otherwise>
+                        .active-column-3  {width: 400px;text-align: left;}
+                    </c:otherwise>
+                 </c:choose>
+                 .active-column-4  {width: 50px;text-align: center;}
+                 .active-column-5  {width: 65px;text-align: center;}
+                 .active-column-6  {width: 65px;text-align: center;}
+                 .active-column-7  {display: none;}
+                 .active-column-8  {display: none;}
+
+        .active-grid-column {border-right: 1px solid threedlightshadow; }
+        .active-grid-row {border-bottom: 1px solid threedlightshadow; }
+    </style>
+</head>
+<body onhelp="getF1()" onLoad="onload();">
+    <script>                                    
+	    var myData= [<c:out value="${requestScope.myData}" escapeXml="false"/>];
+	    var myColumns = ["Seleccione"//0
+	             	     ,"idTipoDocumento"//1
+	             	     ,"idDocumentoTemporal"//2
+	             	     ,"Nombre Documento"//3
+	                     , "Cargar"//4
+	                     , "Descargar"//5
+	                     , "Historial"//6
+	                     ,""//7
+	                     ,""//8
+	                     ];
+
+        //      create ActiveWidgets Grid javascript object
+        var obj = new Active.Controls.Grid;
+        
+        obj.setId("obj");
+        // grid header
+        obj.gridColumn = myColumns;
+        // grid data
+        obj.gridData = myData;
+        //  header methods
+        obj.getColumnCount = function() {return this.gridColumn.length};
+        obj.getColumnText = function(i){return this.gridColumn[i]};
+        //  data methods
+        obj.getDataCount = function() {return this.gridData.length};
+        obj.getDataText = function(i, j){return this.gridData[i][j]};
+        obj.setDataText = function(value, i, j){this.gridData[i][j] = value};
+    
+        obj.setRowHeaderWidth("28px");
+        obj.setColumnHeaderHeight("20px");
+        
+        
+        var row = new Active.Templates.Row; 
+        obj.setTemplate("row", row);
+        
+        obj.setAction("selectionChanged", null);
+            
+        //Evento que reconoce la tecla ENTER
+        var defaultEventHandler = obj.getEvent("onkeydown");
+        var myEventHandler = function(event){
+            if(event.keyCode==121)
+                parent.grabar();
+            else if(event.keyCode==27){
+                parent.salir();
+                event.returnValue = false;//Cancela la función inherente del ESC
+            }else if (event.keyCode == 8)event.returnValue = backspace();//Cancela Backspace
+            else if (event.keyCode == 112)parent.ayuda();//F1 ACERCA DE...
+            else if (event.ctrlKey){//Cancela Control
+                event.keyCode = 0;
+                event.returnValue = false; 
+            }else if (window.event && (event.keyCode == 114 || event.keyCode == 116 ||
+                event.keyCode == 117 || event.keyCode == 122)){//Cancela F3,F5,F6 y F11
+                event.keyCode = 505;
+                if(event.keyCode == 505)event.returnValue = false;  
+            }else
+                defaultEventHandler.call(this, event);
+        }
+        obj.setEvent("onkeydown", myEventHandler);
+        
+        var checkbox = new My.Templates.CheckboxLabel;
+        checkbox.setCheckedProperty("true", "Si")
+        checkbox.setCheckedProperty("false", "")
+        obj.setColumnTemplate(checkbox, 0);
+
+        //Pintado de la grilla
+        document.write(obj);
+
+        function devuelveTam(){
+            return myData.length;
+        }
+
+        function setFoco(){
+        }
+        //Numero de filas de las tablas
+        function NumerodeFilas() {
+            return obj.getRowProperty("values").length;
+        }
+        
+      //Devuelve los datos de la fila que se solicita
+        function devuelveFila(){
+            var fila = new Array(myColumns.length);
+            if(myData.length){
+                var index = obj.getSelectionProperty("index");
+                for (i=0; i<myColumns.length; i++)
+                    fila[i] = obj.getDataProperty('text', index, i);
+            }
+            return  fila;
+        }
+
+        function devuelveFilaIndice(j){
+            var fila = "";
+            
+            for (var i=0; i<myColumns.length; i++) {
+                fila += myData[j][i];
+                if(i < myColumns.length - 1)
+                    fila += "---";
+            }
+            
+            return  fila;
+        }
+    
+        var f = parent.document.forms[0];
+        function devuelveTamanio(){
+        }
+        
+        var f = parent.document.forms[0];
+    
+        if(myData.length>0)
+            obj.setSelectionIndex(0);
+            
+        //Funciones que anulan el click derecho del mouse
+        document.oncontextmenu=new Function("return false");
+
+        function getTableIndex() {
+            return obj.getProperty("selection/index");
+        }
+
+        var path;
+        function onload(){
+          path = '<%=path%>';
+          parent.mensajeRespuesta('<c:out value="${codigoError}" />', '<c:out value="${mensajeError}" />');
+          if(parent.document.getElementById('hidepage')){
+              parent.loadImages();
+          }
+          setFoco();
+        }
+
+        function obtenerIdsWorkflow(){
+            var seleccionadosNroCredito = "";
+            for(var i = 0; i < NumerodeFilas(); i++){
+                if(myData[i][0] == "Si"){
+                    seleccionadosNroCredito += myData[i][1] + "-";
+                }
+            }
+            return seleccionadosNroCredito;
+        }
+
+
+        function insertarIdArchivo(fila, idFile){
+           myData[fila][2] = idFile;
+           myData[fila][5] = myData[fila][8];
+           obj.refresh();
+        }
+
+        function funcion_checkbox(newValue){
+            var strComportamiento = parent.byID('strComportamiento').value;
+            if(strComportamiento != 'T'){
+            	var indice = getTableIndex();
+            	var valorAnterior='';
+            	if(myData[indice][0]=='Si'){
+            		valorAnterior='';
+                }else{
+                	valorAnterior ='Si';
+                }
+            	myData[indice][0] = valorAnterior;
+            } else {
+	            var tamanio = devuelveTamanio();
+	            var indice = getTableIndex();
+	            for(var i=0; i < tamanio;i++){
+	                if (i != indice) {
+	                    myData[i][0] = "";
+	                }
+	            }
+	            if(newValue == 'Si'){
+	            	myData[indice][4] = myData[indice][7];
+	            }else{
+	            	myData[indice][2] = '';
+	                myData[indice][4] = '';
+	                myData[indice][5] = '';
+	            }
+            }
+            obj.refresh();
+        }
+
+        function obtenerSeleccione(fila) {
+            if(fila >= 0){
+                return myData[fila][0];
+            }
+            return '';
+        }
+        function obtenerIdFile(fila) {
+            if(fila >= 0){
+                return myData[fila][2];
+            }
+            return '';
+        }
+        function obtenerLista(){
+        	var numeroDeFilas = NumerodeFilas();
+            var lista = '';
+            for (var j=0; j < numeroDeFilas; j++) {
+                fila = devuelveFilaIndice(j);
+                if(myData[j][0] == 'Si') {
+                	lista += fila + '-/-';
+                }
+            }
+            return lista;
+        }
+
+    </script>
+</body>
+</html>
\ No newline at end of file
diff --git a/DELFINWEBNEW/WebRoot/GENERAL/Busqueda.jsp b/DELFINWEBNEW/WebRoot/GENERAL/Busqueda.jsp
index 3a1fe11..9037696 100644
--- a/DELFINWEBNEW/WebRoot/GENERAL/Busqueda.jsp
+++ b/DELFINWEBNEW/WebRoot/GENERAL/Busqueda.jsp
@@ -1,3366 +1,3385 @@
-<!-- Busqueda.jsp
-gfernandez 03.11.2010 Se agrega una opcion de la busqueda
-vperez 31.08.2010 busqueda de subconceptos para terceros
-falle      01.02.2011 Se agrega las opciones de BUsquedas de Personal TFC y Empresas Transportadoras
-rgutierrez 11.05.2012 se agrego opcion de canal de operaciones y canal operacion externa
-rgutierrez 06.08.2012 se agrego opcion de campaña
-erios      06.11.2012 Se agrega opcion USUARIOALL
--->
-<%-- [Req.14-150] dfujimoto 18.03.2015 - Añadir buscar lote apertura CTS --%>
-<%-- [T-9101] 11.03.2016 gmeza --%>
-<%-- [CC16-045] 31.08.2016 gmeza --%>
-<%-- [CC17-002] gmeza 16.01.2017 --%>
-<%-- [CC17-012] gmeza 31.01.2017 --%>
-<%-- [CC17-026] gmeza 28.02.2017 --%>
-
-<jsp:directive.page import="java.util.Date" />
-<%
-    
-    //////////////     filtroDireccion   ////////////////
-    String filtroDireccion = request.getParameter("filtroDireccion") != null ?request.getParameter("filtroDireccion") : "sin valor";
-    ////////////////////////////////////////////////////
-    String strTabla = request.getParameter("tabla") != null ?request.getParameter("tabla") : "sin valor";
-    
-    //filtro para busqueda de cuentas bancarias y filtrar por tipo de moneda
-    String filtroTipoMoneda = request.getParameter("filtroTipoMoneda") != null ?request.getParameter("filtroTipoMoneda") : "";
-    
-  
-    
-    //System.out.println("strTabla:"+strTabla);
-    String strInicio="";
-    if(request.getParameter("txtValorBuscar")!=null){
-         strInicio = !request.getParameter("txtValorBuscar").equals("NULO") ? request.getParameter("txtValorBuscar") : "-1";
-    }
-    
-    //[Req. 13-057] jchilon 27.05.2013 Parametro de Cheque Electronico
-    String chequeElectronico = request.getParameter("filtroCE") != null ? request.getParameter("filtroCE") : "";
-        
-    // ajimenez 06.05.2013
-    String estadoRegistro = (request.getParameter("estadoRegistro") != null) ? request.getParameter("estadoRegistro") : "";
-    
-    // ajimenez 28.05.2013 [13-038-II]
-    String idRetail = (request.getParameter("idRetail") != null) ? request.getParameter("idRetail") : "";
-    
-    //jpantoja 16.01.2011 agregar campo para filtro para la busqueda
-    String valorFiltro = request.getParameter("filtro")!=null?request.getParameter("filtro"):"-1"; 
-
-    // Inicio [Req. 14-055] jvilcapaza 20.06.2014  tipo persona - filtro producto credito por tipo persona
-    String tipoPersonaTitular = (request.getParameter("tipoPersonaTitular")!=null)?request.getParameter("tipoPersonaTitular"):"";
-    String codigoAseguradora = (request.getParameter("codigoAseguradora")!=null)?request.getParameter("codigoAseguradora"):"";
-    // Fin [Req. 14-055]
-
-    String strConcepto = request.getParameter("concepto")!=null?request.getParameter("concepto"):"";
-    String strAux = request.getParameter("auxiliar")!=null?request.getParameter("auxiliar"):"";
-    String strConceptoOperacion = request.getParameter("operacion")!=null?request.getParameter("operacion"):"";
-    String fechaAplicacion = request.getParameter("fechaAplicacion")!=null?
-        request.getParameter("fechaAplicacion"):session.getAttribute("strFecPro").toString();        
-    String strCodEmp = session.getAttribute("strCodEmp")!=null?session.getAttribute("strCodEmp").toString():"";
-
-    String tipoTransaccion = request.getParameter("tipoTransaccion")!=null?request.getParameter("tipoTransaccion"):"";
-    String tipoActividad   = request.getParameter("tipoActividad")!=null?request.getParameter("tipoActividad"):"";
-    String numeroCredito   = request.getParameter("numeroCredito")!=null?request.getParameter("numeroCredito"):"";
-    String strCodigoAdic   = request.getParameter("txtCodigoAdic")!=null?request.getParameter("txtCodigoAdic"):"";
-    String nroSolCredito   = request.getParameter("nroSolCredito")!=null?request.getParameter("nroSolCredito"):"";
-    String codRolUsrId     = request.getParameter("codRolUsrId")!=null?request.getParameter("codRolUsrId"):"";
-    String codigoBase     = request.getParameter("codigoBase")!=null?request.getParameter("codigoBase"):"";
-    String codigoOtrasPersonas = request.getParameter("codigoOtrasPersonas")!=null?request.getParameter("codigoOtrasPersonas"):"";
-    String tipoRepresentante = request.getParameter("tipoRepresentante") != null ? request.getParameter("tipoRepresentante") : "";
-    String typePerson = request.getParameter("typePerson") != null ? request.getParameter("typePerson") : "";
-    
-
-    //Req. S14-088 fbramirez 01.08.2014
-    String flagGR = request.getParameter("auxiliar");
-    
-
-    // Inicio [Req. 14-121] aromero 08.09.2014
-    String codCorp = request.getParameter("codCorp") != null ? request.getParameter("codCorp") : "";
-    // Fin [Req. 14-121]
-    
-    // Inicio [Req.14-150] aromero 28.03.2015 
-    String tipoNota = request.getParameter("tipoNota") != null ? request.getParameter("tipoNota") : "";
-    String formaAbono = request.getParameter("formaAbono") != null ? request.getParameter("formaAbono") : "";
-    String claseProducto = request.getParameter("claseProducto") != null ? request.getParameter("claseProducto") : "";
-    // Fin [Req.14-150] 
-    
-  
-    String insAgen =  (String)session.getAttribute("strInsAgen")==null?"N": (String)session.getAttribute("strInsAgen");
-    //System.out.println("inspeccion jsp Busqueda :  "+insAgen);
-    
-    //Valores para la búsqueda de Columnas
-    String nombreTabla = request.getParameter("nombreTabla")!=null?request.getParameter("nombreTabla"):"";
-    String nombreCampo = request.getParameter("nombreCampo")!=null?request.getParameter("nombreCampo"):"";
-    String listaConceptos = request.getParameter("listaConceptos")!=null?request.getParameter("listaConceptos"):"";
-    String tipoCredito = request.getParameter("tipoCredito")!=null?request.getParameter("tipoCredito"):"";
-    String subTipoCredito = request.getParameter("subTipoCredito")!=null?request.getParameter("subTipoCredito"):"";
-    //vperez 31.08.2010 para la busqueda de subconceptos terceros
-    String hiEmpresaTerceros=request.getParameter("hiEmpresaTerceros")!=null?request.getParameter("hiEmpresaTerceros"):"";  
-    String path = request.getContextPath();
-    
-    //Verificamos Pais/Pais residencia
-    String strInd = request.getParameter("ind")!=null?request.getParameter("ind"):"";
-    String urlPais = "";
-    String urlEfin = "";
-    if(!strInd.equals("")){
-        urlPais = "&ind="+strInd;
-        urlEfin = "&ind="+strInd;
-    }
-    //Verificamos tipo de producto
-    String tipoProducto = request.getParameter("tipoProducto")!=null?request.getParameter("tipoProducto"):"";
-    String urlProducto="";
-    if(!tipoProducto.equals("")){
-        urlProducto = "&tipoProducto="+tipoProducto;
-    }
-    
-    String cConces     = request.getParameter("cConces")!=null?request.getParameter("cConces"):"";
-    
-    //jpantoja 30.11.2010 agregar opcion de busqueda por nro de solicitud
-    String soloAdjudicacionBienes = request.getParameter("soloAdjudicacionBienes") != null ? request.getParameter("soloAdjudicacionBienes") : "N" ;
-    
-    //gliceta 16.04.2012: Req. 12-058 - Cumplimiento Normativo
-    String indUsuarioCELB = request.getParameter("indUsuarioCELB")!=null?request.getParameter("indUsuarioCELB"):"";
-    String codAreaLaboral = request.getParameter("codAreaLaboral")!=null?request.getParameter("codAreaLaboral"):"";
-
-    // Inicio Req.[14-135] framirez Mejoras Garantias Hipotecarias
-    String codigoTitular = request.getParameter("codigoTitular")!=null?request.getParameter("codigoTitular"):"";
-    String codigoPropietario = request.getParameter("codigoPropietario")!=null?request.getParameter("codigoPropietario"):"";
-    // Fin Req.[14-135]
-    
-    // Inicio [Req. 15-033] aromero 09.07.2015
-    String codInst = request.getParameter("codInst") != null ? request.getParameter("codInst") : "";
-    // Fin [Req. 15-033]
-    // Inicio [Req.14-020] gmoran 27.05.2014
-    String strTipoClasificacion =  request.getParameter("tipoClasificacion")!=null?request.getParameter("tipoClasificacion"):"-1";
-    String codigoPersonaF = request.getParameter("codigoPersonaF")!=null?request.getParameter("codigoPersonaF"):"-1";
-    String codigoValorCondicion = request.getParameter("codigoValorCondicion")!=null?request.getParameter("codigoValorCondicion"):"";
-    String indicadorPropuesta = request.getParameter("indicadorPropuesta")!=null?request.getParameter("indicadorPropuesta"):"";
-    String indicadorExcepcion = request.getParameter("indicadorExcepcion")!=null?request.getParameter("indicadorExcepcion"):"";
-    String indicadorHijosBantiq = request.getParameter("indicadorHijosBantiq")!=null?request.getParameter("indicadorHijosBantiq"):"";
-    String codigoPadreBantiq = request.getParameter("codigoPadreBantiq")!=null?request.getParameter("codigoPadreBantiq"):"";
-    String codigoMoneda = request.getParameter("codigoMoneda")!=null?request.getParameter("codigoMoneda"):"";
-    String codigoTipoBanca = request.getParameter("codigoTipoBanca")!=null?request.getParameter("codigoTipoBanca"):"";
-    String filtrarUsuarioConectado = request.getParameter("filtrarUsuarioConectado")!=null?request.getParameter("filtrarUsuarioConectado"):"";
-    String codigoFuncionario = request.getParameter("codigoFuncionario")!=null?request.getParameter("codigoFuncionario"):"";
-    // Fin [Req.14-020] 
-    //[T-9101] gmeza 11.03.2016
-    String codigoGarantia = request.getParameter("codigoGarantia") != null ? request.getParameter("codigoGarantia") : "";
-    //Inicio [Req. S16-025] kdelacruz 06.09.2016
-    String indicadorNivel = request.getParameter("indicadorNivel") != null ? request.getParameter("indicadorNivel") : "";
-    String codigo = request.getParameter("codigo") != null ? request.getParameter("codigo") : "";
-    String codigoModulo = request.getParameter("codigoModulo") != null ? request.getParameter("codigoModulo") : "";
-    String codigoSubModulo = request.getParameter("codigoSubModulo") != null ? request.getParameter("codigoSubModulo") : "";
-	//Fin [Req. S16-025]
-	//Inicio [CC17-002] gmeza 16.01.2017
-	String codigoDistritoJudicial = request.getParameter("codigoDistritoJudicial") != null ? request.getParameter("codigoDistritoJudicial") : "";
-    String tipoPersona = request.getParameter("tipoPersona") != null ? request.getParameter("tipoPersona") : "";
-    String nombreCombo = request.getParameter("nombreCombo") != null ? request.getParameter("nombreCombo") : "";
-    String metodoInsertar = request.getParameter("metodoInsertar") != null ? request.getParameter("metodoInsertar") : "";
-    //Fin [CC17-002]
-    //[CC17-026] gmeza 28.02.2017
-    String indicadorEnFuncionamiento = request.getParameter("indicadorEnFuncionamiento") != null ? request.getParameter("indicadorEnFuncionamiento") : "";
-%>
-<html>
-    <head>
-    <link href="<%=request.getContextPath()%>/UTILS/css/DELFIN.css" rel="stylesheet" type="text/css">
-        <!-- Invocación de JavaScript -->
-        <script src="<%=request.getContextPath()%>/UTILS/Script/Utiles.js"></script>
-        <script src="<%=request.getContextPath()%>/UTILS/Script/MsgValidacion.js"></script>
-    </head>
-    <!-- Definción del color del body -->
-    <body onLoad="loadImages();">
-        <div id="hidepage" style="position: absolute; left: 280px; top: 160px; width: 150; height: 20;">
-            <table width=100%>
-                <tr>
-                    <td>
-                        <img src="<%=request.getContextPath()%>/UTILS/img/loading.gif">
-                    </td>
-                </tr>
-            </table>
-        </div>
-
-        <form name="frmBusqueda" method="post">
-            <div align="center">
-                <table border="0" cellpadding="0" cellspacing="0">
-                    <tr>
-                        <td><img src="<%=request.getContextPath()%>/UTILS/img/t.gif" width="1" height="4"></td>
-                    </tr>
-                </table>
-                <table width="98%" border="0" cellpadding="0" cellspacing="0">
-                    <tr>
-                        <td>
-                            <table width="98%" class="frame">
-                                <tr>
-                 <!-- [Req. S14-100] jventura 16.02.2016 -->
-            <td class="etiqueta" width="16%">&nbsp;Tipo de B&uacute;squeda<br></td>
-            <td width="25%"><!-- rgutierrez 30.07.2012-->
-                <input type="hidden" name="nomTabla" value="<%=strTabla%>"/>
-                <select name="cboTipoBusqueda" class="campoobligatorioiz" onFocus="nextfield ='txtBusqueda'" tabindex="1" style="width: 99%">
-        <script>
-                
-                var sURL = window.document.URL.toString();              
-                if (sURL.indexOf("?") > 0){
-                    var arrParams = sURL.split("?"); 
-                    var arrURLParams = arrParams[1].split("&");
-                    var arrParamNames = new Array(arrURLParams.length);
-                    var arrParamValues = new Array(arrURLParams.length);
-                    var i = 0;
-                    for (i=0;i<arrURLParams.length;i++){
-                        var sParam =  arrURLParams[i].split("=");
-                        arrParamNames[i] = sParam[0];
-                        if (sParam[1] != "")arrParamValues[i] = unescape(sParam[1]);
-                        else arrParamValues[i] = "Sin valor";
-                    }                   
-                    for (i=0;i<arrURLParams.length;i++){
-                        if (arrParamNames[i] != "txtValorBuscar" 
-                        && arrParamNames[i] != "tabla" 
-                        && arrParamNames[i] !="concepto" 
-                        && arrParamNames[i] !="auxiliar" 
-                        && arrParamNames[i] !="listaConceptos"
-                        && arrParamNames[i] !="operacion" 
-                        && arrParamNames[i] !="fechaAplicacion"
-                        && arrParamNames[i] !="tipoTransaccion" 
-                        && arrParamNames[i] !="numeroCredito"
-                        && arrParamNames[i] !="concepto" 
-                        && arrParamNames[i] !="auxiliar" 
-                        && arrParamNames[i] !="listaConceptos"
-                        && arrParamNames[i] !="operacion" 
-                        && arrParamNames[i] !="fechaAplicacion"
-                        && arrParamNames[i] !="tipoTransaccion" 
-                        && arrParamNames[i] !="numeroCredito"
-                        && arrParamNames[i] !="nroSolCredito" 
-                        && arrParamNames[i] !="codRolUsrId" 
-                        && arrParamNames[i] !="codigoBase" 
-                        && arrParamNames[i] !="buscarXTipoBase"
-                        && arrParamNames[i] !="txtCodigoSolicitud"
-                        && arrParamNames[i] !="filtro"
-                        && arrParamNames[i] !="tipoCredito" 
-                        && arrParamNames[i] !="subTipoCredito"
-                        && arrParamNames[i] !="txtCodigoAdic"
-                        && arrParamNames[i] !="mydate"
-                        && arrParamNames[i] !="ind"
-                        && arrParamNames[i] !="cConces"
-                        && arrParamNames[i] !="codigoOtrasPersonas"
-                        && arrParamNames[i] !="tipoRepresentante"
-                        && arrParamNames[i] !="typePerson"
-                        && arrParamNames[i] !="myDate"
-                        //mnieves 07.04.2011
-                        && arrParamNames[i] !="indVendedorXAgenciaAut" //Indicador para ver si la agencia viene por default de la session o de una variable que se le manda por alguna pantalla [S-Automatico(Session) / N-Manual(Formulario)]  
-                        && arrParamNames[i] !="codAgencia"
-                        //gliceta 16.04.2012: Req. 12-058 - Cumplimiento Normativo
-                        && arrParamNames[i] != "indUsuarioCELB"
-                        && arrParamNames[i] != "codAreaLaboral"
-                        // ajimenez 06.05.2013
-                        && arrParamNames[i] != "estadoRegistro"
-                        //[Req.13-057] jchilon 26.05.2013
-                        && arrParamNames[i] != "filtroCE"
-                        //Inicio [Req.14-121] aromero 09.09.2014 Se excluye codigo Corporativo del combo
-                        && arrParamNames[i] != "codCorp"
-                        //Fin [Req.14-121] aromero 09.09.2014
-                        && arrParamNames[i] != "idRetail" // ajimenez 28.05.2013 [13-038-II]
-                        <%-- Inicio [Req.S14-135] fbramirez 13.04.2015  --%>
-                        && arrParamNames[i] != "codigoTitular"
-                        && arrParamNames[i] != "codigoPropietario"
-                        <%-- Fin [Req.S14-135] --%>
-                        // Inicio [Req.14-020] gmoran 27.05.2014
-                        && arrParamNames[i] != "tipoClasificacion"
-                        && arrParamNames[i] != "codigoPersonaF"
-                        && arrParamNames[i] != "indicadorPropuesta"
-                        && arrParamNames[i] != "indicadorExcepcion"
-                        && arrParamNames[i] != "codigoValorCondicion"
-                        // Fin [Req.14-020]
-                        <%-- Inicio [Req.14-150] aromero 28.03.2015 - Se excluye tipoNota,formaAbono y claseProducto  del combo --%>
-                        && arrParamNames[i] != "tipoNota"
-                        && arrParamNames[i] != "formaAbono"
-                        && arrParamNames[i] != "claseProducto"
-                        <%-- Fin [Req.14-150] --%>
-                        <%-- Inicio [Req.15-033] aromero 09.07.2015 - Se agrega codigo de la institucion --%>
-                        && arrParamNames[i] != "codInst"
-                            // Inicio [Req.14-020] gmeza 02.03.2016
-                            && arrParamNames[i] != "indicadorHijosBantiq"
-                            && arrParamNames[i] != "codigoPadreBantiq"
-                            && arrParamNames[i] != "codigoMoneda"
-                            // Fin [Req.14-020]
-                        <%-- Inicio [Req. 14-055] jvilcapaza 20.06.2014--%>
-                        && arrParamNames[i] != "tipoPersonaTitular" 
-                        && arrParamNames[i] != "codigoAseguradora"
-                        <%-- Fin [Req. 14-055]--%>
-                      //[T-9101] gmeza 11.03.2016
-                        && arrParamNames[i] != "codigoGarantia"
-                        <%-- Inicio [Req.14-020] esalazar 11.05.2016 --%>
-                        && arrParamNames[i] != "codigoTipoBanca"
-                        && arrParamNames[i] != "filtrarUsuarioConectado"
-                        && arrParamNames[i] != "codigoFuncionario"
-                        <%-- Fin [Req.14-020] --%>
-                        //Inicio [Req. S16-025] kdelacruz 05.09.2016
-                        && arrParamNames[i] != "indicadorNivel"
-                        && arrParamNames[i] != "codigo"
-                       	&& arrParamNames[i] != "codigoModulo"
-                     	&& arrParamNames[i] != "codigoSubModulo"
-                        //Fin [Req. S16-025]
-                        //[CC16-045] gmeza 31.08.2016
-                     	&& arrParamNames[i] != "filtroTipoMoneda"
-                     	//Inicio [CC17-002] gmeza 16.01.2017
-                     	&& arrParamNames[i] != "codigoDistritoJudicial"
-                     	&& arrParamNames[i] != "tipoPersona"
-                     	&& arrParamNames[i] != "nombreCombo"
-                     	&& arrParamNames[i] != "metodoInsertar"
-                     	//Fin [CC17-002]
-                     	//[CC17-026] gmeza 28.02.2017
-                     	&& arrParamNames[i] != "indicadorEnFuncionamiento"
-                        )
-                        
-                        <!-- rgutierrez 30.07.2012-->
-                        if(arrParamValues[i]=="Descripcion" && "SUBCONCEPTOCREDITO"==document.frmBusqueda.nomTabla.value)
-                        document.write('<option selected value = '+ arrParamValues[i] +'>' + arrParamValues[i] + '</option>');  
-                        else
-                        document.write('<option value = '+ arrParamValues[i] +'>' + arrParamValues[i] + '</option>');                       
-                    }
-                }else{
-                    alert("No existen parametros.");
-                }
-                </script>
-
-                                        </select>
-                                    </td>
-                                    <td width="55%" align=left>
-                                        <script>
-                var sURL = window.document.URL.toString();              
-                if (sURL.indexOf("?") > 0){
-                    var arrParams = sURL.split("?");            
-                    var arrURLParams = arrParams[1].split("&");
-                    var arrParamtxtValor = new Array(arrURLParams.length);
-                    var arrParamtxtNames = new Array(arrURLParams.length);
-                    var i = 0;
-                    for (i=0;i<arrURLParams.length;i++){
-                        var sParam =  arrURLParams[i].split("=");
-                        arrParamtxtNames[i] = sParam[0];
-                        if (sParam[1] != "")arrParamtxtValor[i] = unescape(sParam[1]);
-                        else arrParamtxtValor[i] = "Sin valor";
-                    }
-                    
-                    for (i=0;i<arrURLParams.length;i++)
-                        if (arrParamtxtNames[i] == "txtValorBuscar" )
-                            if (arrParamtxtValor[i]=="NULO")
-                                document.write("<input type=text name=txtBusqueda size=48 class=campoobligatorioiz tabindex=2 style=\"width: 99%\" onFocus='this.select();nextfield =done'>");
-                            else
-                                document.write("<input type=text name=txtBusqueda size=48 class=campoobligatorioiz tabindex=2 style=\"width: 99%\" value ='<%=strInicio%>' onFocus='this.select();nextfield =done'>");
-                                                                
-                }else
-                    alert("No existen parametros.");
-                </script>
-                                    </td>
-                                </tr>
-                            </table>
-                        </td>
-                    </tr>
-                </table>
-
-                <table border="0" cellpadding="0" cellspacing="0">
-                    <tr>
-            <td><img src="<%=request.getContextPath()%>/UTILS/img/t.gif" width="1" height="4"></td>
-                    </tr>
-                </table>
-
-                <table width="98%" align="center" height="220" class="frame">
-                    <tr>
-                        <td>
-                            &nbsp;
-                            <%-- [Req. S14-115] jtomasto 09.10.2014 Inicio--%>
-                            <iframe name="ifrmBusqueda" frameborder="0" width="98%"
-                                height="220"></iframe>
-                            <%-- [Req. S14-115] Fin--%>
-                        </td>
-                    </tr>
-                </table>
-                <table width="98%">
-                    <tr>
-                        <td align="right">
-                <IMG src="<%=request.getContextPath()%>/UTILS/img/PagRe.gif" onClick="pag(-1);" style="CURSOR: hand;vertical-align: middle;" alt="Anterior">
-                <label id="inicial" style="width:25;text-align:left;font-size:8pt;font-family:Arial;vertical-align: middle;"></label>
-                <IMG src="<%=request.getContextPath()%>/UTILS/img/t.gif" height=1 width="10">
-                <label id="final" style="width:25;text-align:right;font-size:8pt;font-family:Arial;vertical-align: middle;"></label>
-                <IMG src="<%=request.getContextPath()%>/UTILS/img/PagAv.gif" onClick="pag(1)" style="CURSOR: hand;vertical-align: middle;" alt="Siguiente">
-                <label id="total" style="width:50;text-align:left;font-size:8pt;font-family:Arial;vertical-align: middle;"></label>
-                        </td>
-                    </tr>
-                </table>
-            </div>
-        </form>
-        <script>    
-        var nextfield = "txtBusqueda";
-        var done = "done";      
-        // Función que permite reconcer la teclas
-        function keyDown(DnEvents){
-            k = window.event.keyCode;
-            if (k == 13)
-                if (nextfield == 'done'){
-                    enviar();
-                    return false;
-                }
-                else { 
-                    eval('document.forms[0].' + nextfield + '.focus()');        
-                    return false;
-                }
-            if (event.keyCode == 27) { salir(); }
-            //Reconocimiento de la tecla F1
-            if (k == 112)ayuda();
-        }
-        document.onkeydown = keyDown;
-       
-        inicio("<%=strInicio%>");
-            
-        var urlPeriodo;
-        var concepto;
-        var tipoTransaccion;
-
-        function inicio(valor){
-            try{
-                document.frames[0].eliminarTodos();
-            }catch(error){}
-            document.getElementById('hidepage').style.visibility = '';
-        
-            concepto = "<%=strConcepto%>";
-            auxiliar = "<%=strAux%>";
-            codigoconcepto  ="<%= strConceptoOperacion %>";
-            fechaAplicacion ="<%= fechaAplicacion %>";
-            numeroCredito ="<%= numeroCredito %>";
-            nroSolCredito = "<%=nroSolCredito%>";
-            codRolUsrId = "<%=codRolUsrId%>";
-            codigoBase = "<%=codigoBase%>";
-            tipoTransaccion = "<%= tipoTransaccion%>";
-            listaConceptos = "<%= listaConceptos%>";
-            codigoAdic = "<%=strCodigoAdic%>";
-            var criterio = document.forms[0].cboTipoBusqueda.value;
-            var valor = "<%=strInicio%>";
-            var codigoOtrasPersonas = "<%=codigoOtrasPersonas%>";
-            var tipoRepresentante = "<%=tipoRepresentante%>";
-            var typePerson = "<%=typePerson%>";
-            var insAgen ="<%=insAgen%>";
-            
-            //Inicio [Req.14-020] gmoran 27.05.2014
-            var tipoClasificacion = "<%=strTipoClasificacion%>";
-            var codigoPersonaF = "<%=codigoPersonaF%>";
-            //Fin [Req.14-020]
-            filtroDireccion= "<%=filtroDireccion%>";
-            //En caso de que se haya definido el valor            
-          
-    
-            if (valor != "-1"){
-            <%if(strTabla.equals("CUENTACONTABLE")){%>
-                document.title = "Búsqueda de Cuentas Contables";
-                url = '<%=path%>/Busqueda_CuentaContable_Servlet?criterio='+criterio+
-                        '&valor='+valor+'&auxiliar='+auxiliar+'&fechaAplicacion='+fechaAplicacion;
-        // Agregado gfernandez 29.12.2010: Validar Bloqueos y Limites Operativos: Busqueda de por Limites Operativos    
-            <%}else if(strTabla.equals("TIPOSLIMITESOPERATIVOS")){%>
-                 
-              document.title = "Búsqueda Limites Opertivos";
-              url = '<%=path%>/Busqueda_LimitesOperativos_Servlet?criterio='+criterio+'&valor='+valor;     
-        // Agregado gfernandez 11.12.2010: Validar Bloqueos y Limites Operativos: Busqueda de Tipos de credito externo          
-           <%}else if(strTabla.equals("TIPCRED")){%>
-                 
-              document.title = "Búsqueda Tipo de Creditos";
-              url = '<%=path%>/Busqueda_TipoCreditoExterno_Servlet?criterio='+criterio+'&valor='+valor; 
-                  
-           // Agregado gfernandez 15.02.2012: Calculo incentivo emprendedor                 
-            <%}else if(strTabla.equals("TIPOINCENTIVO")){%>
-              document.title = "Búsqueda Tipo Incentivo";
-              url = '<%=path%>/Busqueda_TipoIncentivo_Servlet?criterio='+criterio+'&valor='+valor;                 
-        // Agregado gfernandez 15.02.2012: Calculo incentivo emprendedor                
-            <%}else if(strTabla.equals("CATEGORIAXINCENTIVO")){%>
-              document.title = "Búsqueda Categoria Incentivo";
-              url = '<%=path%>/Busqueda_CategoriaXIncentivo_Servlet?criterio='+criterio+'&valor='+valor+'&auxiliar='+auxiliar;
-        // Agregado gfernandez 15.02.2012: Calculo incentivo emprendedor                
-            <%}else if(strTabla.equals("GRUPOINCENTIVO")){%>
-              document.title = "Búsqueda Grupo Incentivo";
-              url = '<%=path%>/Busqueda_GrupoCalculoIncentivo_Servlet?criterio='+criterio+'&valor='+valor;
-        // Agregado gfernandez 15.02.2012: Calculo incentivo emprendedor                
-            <%}else if(strTabla.equals("MORAXFILATIPOINCENTIVO")){%>
-              document.title = "Búsqueda Mora por Fila de Tipo Incentivo";
-              url = '<%=path%>/Busqueda_MoraXFilaIncentivo_Servlet?criterio='+criterio+'&valor='+valor;                                          
-                
-           <%}else if(strTabla.equals("NROCUENTAENTIDAD")){%>
-              document.title = "Búsqueda de Cuentas Bancarias";
-              //[Req. 13-057] jchilon 27.05.2013 Se agrega un parámetro a la búsqueda.              
-              url = '<%=path%>/Busqueda_NroCuentaEntidadFinanciera_Servlet?criterio='+criterio+'&valor='+valor+'&filtroTipoMoneda=<%=filtroTipoMoneda%>'
-              +'&filtroCE=<%=chequeElectronico%>';
-              
-        //fvalle 01.02.2011
-           <%}else if(strTabla.equals("PERSONALTFC")){%>  
-              document.title = "Búsqueda de Personal TFC";
-              url = '<%=path%>/Busqueda_PersonasHabilitacion_Servlet?tipo=PT&criterio='+criterio+'&valor='+valor; 
-           <%}else if(strTabla.equals("EMPRTRANSPDIN")){%>
-              document.title = "Búsqueda de Empresa Transportadora";
-              url = '<%=path%>/Busqueda_PersonasHabilitacion_Servlet?tipo=ET&criterio='+criterio+'&valor='+valor; 
-        
-            <%}else if(strTabla.equals("CUENTACONTABLEPRESUPUESTO")){%>
-                document.title = "Búsqueda de Cuentas Contables";
-                url = '<%=path%>/Busqueda_CuentaContablePresupuesto_Servlet?criterio='+criterio+
-                      '&valor='+valor+'&auxiliar='+auxiliar+'&fechaAplicacion='+fechaAplicacion;
-                      
-            <%}else if(strTabla.equals("TIPODOCUMENTO")){%>
-                document.title = "Búsqueda de Tipos de Documentos";
-                if(criterio == "Codigo")
-                    url = '<%=path%>/Busqueda_TipoDocumentos_Servlet?criterio='+criterio+'&valor=<%=strCodEmp%>'+rellenar(valor,"0",7,"1");
-                else
-                url = '<%=path%>/Busqueda_TipoDocumentos_Servlet?criterio='+criterio+'&valor='+valor;
-              // Inicio [Req. 14-100] jventura 16.02.2016
-             <%}else if(strTabla.equals("LIQUIDACIONBANTIQ")){%>
-                 document.title = "Búsqueda de Pre-Liquidación BANTIQ";
-                 url = '<%=path%>/Busqueda_LiquidacionBantiq_Servlet?action=LIQUIDACIONBANTIQ&criterio='+criterio+'&valor='+valor;   
-             // Fin [Req. 14-100]
-                 // Inicio [S16-019] dlazo 12.04.2016
-              <%}else if(strTabla.equals("ROLESBANTIQ")){%>
-                  document.title = "Búsqueda de Roles BANTIQ";
-                  url = '<%=path%>/Busqueda_RolesBantiq_Servlet?criterio='+criterio+'&valor='+valor;
-               // Fin [S16-019] dlazo 12.04.2016
-               // Inicio [S16-003] dlazo 12.04.2016
-               <%}else if(strTabla.equals("ASUNTO_SOLICITUD")){%>
-                   document.title = "Búsqueda de Asunto de Solicitud";
-                   url = '<%=path%>/Busqueda_AsuntoSolicitud_Servlet?criterio='+criterio+'&valor='+valor;
-                // Fin [S16-003] dlazo 12.04.2016
-             // Inicio [S16-034] DLAZO 07.10.2016
-             <%}else if(strTabla.equals("SECTORIAL")){%>
-                 document.title = "Búsqueda de código sectorial";
-                 url = '<%=path%>/Busqueda_CodigoSectorial_Servlet?criterio='+criterio+'&valor='+valor;
-             // Fin [S16-034]
-            <%}else if(strTabla.equals("RELACIONDINAMICA")){%>
-                document.title = "Búsqueda de Grupos Contables para Relación Dinámica";
-                url = '<%=path%>/Busqueda_RelacionDinamica_Servlet?criterio='+criterio+'&valor='+valor;
-                
-            <%}else if(strTabla.equals("COLUMNA")){%>
-                document.title = "Búsqueda de Columnas";
-                url = '<%=path%>/Busqueda_Columnas_Servlet?criterio='+criterio+'&valor='+valor+'&tabla=<%= nombreTabla %>&campo=<%= nombreCampo %>';
-                
-            <%}else if(strTabla.equals("CARGOS")){%>
-                document.title = "Búsqueda de Cargos";
-                url = '<%=path%>/Busqueda_Cargos_Servlet?criterio='+criterio+'&valor='+valor;                
-                
-            <%}else if(strTabla.equals("COBRADORES")){%>
-                document.title = "Búsqueda de cobradores";
-                url = '<%=path%>/Busqueda_Cobradores_Servlet?criterio='+criterio+'&valor='+valor;
-                
-            <%}else if(strTabla.equals("EXPEDIENTEJUDICIAL")){%>
-                document.title = "Búsqueda de Expediente Judicial";
-                url = '<%=path%>/Busqueda_ExpedienteJudicial?criterio='+criterio+'&valor='+valor+"&numeroCredito="+numeroCredito;
-                
-            <%}else if(strTabla.equals("ACTIVIDADlINEAVIDA")){%>
-                document.title = "Búsqueda de Actividades del linea de vida del crédito";
-                url = '<%=path%>/Busqueda_ActividadLineaVida_Servlet?criterio='+criterio+'&valor='+valor;
-                
-            <%}else if(strTabla.equals("SUBACTIVIDADlINEAVIDA")){%>
-                document.title = "Búsqueda de Sub Actividades de la linea de vida del crédito";
-                url = '<%=path%>/Busqueda_ActividadLineaVida_Servlet?criterio='+criterio+'&valor='+valor+"&tipoActividad="+tipoActividad;
-                
-            <%}else if(strTabla.equals("TIPOCREDITO")){%>
-                document.title = "Búsqueda de tipos de crédito";
-                url = '<%=path%>/Busqueda_TipoCredito_Servlet?criterio='+criterio+'&valor='+valor;                    
-                
-            <%}else if(strTabla.equals("OBLIGACION")){%>
-                document.title = "Búsqueda de Obligaciones";
-                url = '<%=path%>/Busqueda_Obligaciones_Servlet?criterio='+criterio+'&valor='+valor+'&listaConceptos='+listaConceptos;                    
-                
-            <%}else if(strTabla.equals("CONCEPTOCONTABLE")){%>
-                document.title = "Búsqueda de Conceptos Contables";
-                url = '<%=path%>/Busqueda_ConceptoContable_Servlet?criterio='+criterio+'&valor='+valor;
-                
-            <%}else if(strTabla.equals("SUBTIPOCREDITO")){%>
-                document.title = "Búsqueda de subtipos de crédito";
-                url = '<%=path%>/Busqueda_SubTipoCredito_Servlet?criterio='+criterio+'&valor='+valor+'&codoperacion='+codigoconcepto+"&codigoTipoCredito=<%=tipoCredito%>&tipoBusqueda=<%=strAux%>";                    
-                            
-            <%}else if(strTabla.equals("IMPUESTO")){%>
-                document.title = "Búsqueda de Impuestos";
-                url = '<%=path%>/Busqueda_Impuestos_Servlet?criterio='+criterio+'&valor='+valor;
-                
-            <%}else if(strTabla.equals("ETAPASPROCESALES")){%>
-                document.title = "Búsqueda de Etapas procesales";
-                url = '<%=path%>/Busqueda_EtapasProcesales_Servlet?criterio='+criterio+'&valor='+valor;                 
-                
-            <%}else if(strTabla.equals("AJUSTE")){%>
-                document.title = "Búsqueda de Grupos de Ajuste";
-                url = '<%=path%>/Busqueda_GrupoAjuste_Servlet?criterio='+criterio+'&valor='+valor;
-                
-            <%}else if(strTabla.equals("REVALUACION")){%>
-                document.title = "Búsqueda de Grupos de Revaluación";
-                url = '<%=path%>/Busqueda_GrupoRevaluacion_Servlet?criterio='+criterio+'&valor='+valor;
-                
-            <%}else if(strTabla.equals("EFINANCIERAS")){%>
-                document.title = "Búsqueda de Entidades Financieras";
-                url = '<%=path%>/Busqueda_EntidadFinanciera_Servlet?criterio='+criterio+'&valor='+valor+'<%=urlEfin%>';
-                
-            <%}else if(strTabla.equals("MONEDA")){%>
-                document.title = "Búsqueda de Monedas";
-                url = '<%=path%>/Busqueda_Moneda_Servlet?criterio='+criterio+'&valor='+valor;
-            
-            <%}else if(strTabla.equals("PROVEEDORES")){%>
-                document.title = "Búsqueda de Proveedores";
-                url = '<%=path%>/Busqueda_Proveedor_Servlet?criterio='+criterio+'&valor='+valor+'&typePerson='+typePerson
-                // ajimenez 06.05.2013
-                + "&estadoRegistro=<%=estadoRegistro%>";
-            
-            <%}else if(strTabla.equals("CONTACTOS")){%>
-                document.title = "Búsqueda de Contactos";
-                url = '<%=path%>/Busqueda_Contacto_Servlet?criterio='+criterio+'&valor='+valor+'&typePerson='+typePerson+'&auxiliar='+auxiliar;
-            
-            <%}else if(strTabla.equals("CUENTAPROVEEDOR")){%>
-                document.title = "Búsqueda de Cuentas Bancarias de Persona";
-                url = '<%=path%>/Busqueda_CuentaProveedor_Servlet?criterio='+criterio+'&valor='+valor+'&typePerson='+typePerson+'&auxiliar='+auxiliar;;
-                        
-            <%}else if(strTabla.equals("PERSONAS")){%>
-                document.title = "Búsqueda de Personas";
-                <%-- [Req.14-020] esalazar 11.05.2016 --%>
-                url = '<%=path%>/Busqueda_GeneralPersonas_Servlet?criterio='+criterio+'&valor='+valor+'&typePerson='+typePerson +'&codigoFuncionario=<%=codigoFuncionario%>';
-             <!--Inicio [Req. S16-025] kdelacruz 05.09.2016 -->
-             <%}else if(strTabla.equals("OPCIONMENU")){%>
-                 document.title = "Búsqueda Opción Menú";
-                 var url = '<%=path%>/SS_T_MantenimientoMenuOpcion_Servlet?criterio='+criterio+'&tipoCarga=O&valor='+valor+'&indicadorNivel=<%=indicadorNivel%>&modulo=<%=codigoModulo%>&subModulo=<%=codigoSubModulo%>';
-             <!--Fin [Req. S16-025] -->
-             //Inicio [Req.S16-037] kdelacruz 23.11.2016 Adecuación del registro de Centro de Costos
-             <%}else if(strTabla.equals("GASTOSINVERSIONES")){%>
-             document.title = "Búsqueda de Gasos de Inversiones";
-             url = '<%=path%>/Busqueda_GastosInversiones_Servlet?action=GASTOSINVERSIONES&criterio='+criterio+'&valor='+valor;
-             //Fin [Req.S16-037]   
-             //Inicio [Req. S14-142] aromero 15.12.2014
-        <%}else if(strTabla.equals("PERSONASPOSICLI")){%>
-            document.title = "Búsqueda de Personas";
-            var flag='flagPosi';
-            url = '<%=path%>/Busqueda_GeneralPersonas_Servlet?criterio='+criterio+'&valor='+valor+'&typePerson='+typePerson+'&flag='+flag;
-        //Fin [S14-142] aromero 15.12.2014
-            //Inicio [Req. 14-121] aromero 08.09.2014
-            <%}else if(strTabla.equals("ADQUIRENTES")){%>
-                document.title = "Búsqueda de Personas";
-                 var flag='flag';
-                 var codCorp=<%=codCorp%>;
-                 url = '<%=path%>/Busqueda_GeneralPersonas_Servlet?criterio='+criterio+'&valor='+valor+'&typePerson='+typePerson+'&flag='+flag+'&codCorp='+codCorp;
-                 //url = '<%=path%>/Busqueda_GeneralPersonas_Servlet?criterio='+criterio+'&valor='+valor+'&typePerson='+typePerson+'&flag='+flag;
-            //Fin [Req. 14-121]
-
-            //Inicio [Req. 14-135] framirez 09.12.2014
-            <%}else if(strTabla.equals("PERSONAS_CONYUGUE")){%>
-                 var cony = 'S';
-                 document.title = "Búsqueda de Personas Y Conyugue";
-                 url = '<%=path%>/GA_R_TitularesGarantia_Servlet?criterio='+criterio+'&valor='+valor+'&typePerson='+typePerson+'&cony='+cony;
-
-            <%}else if(strTabla.equals("APODERADO")){%>
-                 var action_ = 'BUSCAR_APODERADOS_RELACIONADOS';
-                 document.title = "Búsqueda de Apoderados";
-                 url = '<%=path%>/GA_T_MantenimientoApoderadosGarantia_Servlet?action=BUSCAR_APODERADOS_RELACIONADOS&codigoTitular=<%=codigoTitular%>&criterio='+criterio+'&valor='+valor+'&typePerson='+typePerson;
-                 
-            <%}else if(strTabla.equals("APODERADO_PROPIETARIO")){%>
-                 var action_ = 'BUSCAR_APODERADOS_RELACIONADOS';
-                 document.title = "Búsqueda de Apoderados";
-                 url = '<%=path%>/GA_T_MantenimientoRegistroApoderadoPropietarioBien_Servlet?action=BUSCAR_APODERADOS_RELACIONADOS&codigoPropietario=<%=codigoPropietario%>&criterio='+criterio+'&valor='+valor+'&typePerson='+typePerson;
-                 
-            <%}else if(strTabla.equals("NATURALEZA_GARANTIA")){%>
-                 var action_ = 'BUSCAR_NATURALEZA_GARANTIA';
-                 document.title = "Búsqueda de Naturaleza Garantia";
-                 url = '<%=path%>/GA_C_NaturalezaGarantia_Servlet?action=BUSCAR_NATURALEZA_GARANTIA&criterio='+criterio+'&valor='+valor;
-            //Fin [Req. 14-135]
-
-            //[19/08/2013 cchalco 13-095]
-            <%}else if(strTabla.equals("RECLAMOSWEB")){
-                System.out.println("RECLAMOSWEB");
-                String strDoi = request.getParameter("txtValorDOI");
-                System.out.println("strDoi: "+strDoi);%>
-                document.title = "Búsqueda de Reclamos Web";
-                url = '<%=path%>/Busqueda_ReclamosWeb_Servlet?criterio='+criterio+'&valor='+valor+'&typePerson='+typePerson;
-            //[Fin cchalco 13-095]  
-            <%}else if(strTabla.equals("CLIENTESRCC")){%>
-                document.title = "Búsqueda de Personas";
-                url = '<%=path%>/Busqueda_ClientesRCC_Servlet?criterio='+criterio+'&valor='+valor+'&idPeriodo='+codigoconcepto;              
-            <%}else if(strTabla.equals("FIDEICOMISO")){%>
-                document.title = "Búsqueda de fideicomisos";
-                url = '<%=path%>/Busqueda_Fideicomiso_Servlet?criterio='+criterio+'&valor='+valor;               
-                                
-            <%}else if(strTabla.equals("CUENTAEFINANCIERAS")){%>
-                document.title = "Búsqueda de Cuentas-Bancos";
-                url = '<%=path%>/Busqueda_NroCuentaEntidadFinanciera_Servlet?criterio='+criterio+'&valor='+valor+'&auxiliar='+auxiliar;
-                
-            <%}else if(strTabla.equals("SUBCONCEPTO")){%>
-                document.title = "Búsqueda de Subconceptos";
-                url = '<%=path%>/Busqueda_SubConceptoOperacion_Servlet?criterio='+criterio+'&valor='+codigoconcepto+valor+'&codoperacion='+codigoconcepto;
-            
-            <%-- Inicio [Req.14-150] aromero 28.03.2015 --%>
-            <%}else if(strTabla.equals("SUBCONCEPTOCTS")){%>
-                document.title = "Búsqueda de Subconceptos";
-                var tipoNota=<%=tipoNota%>;
-                var formaAbono=<%=formaAbono%>;
-                var claseProducto=<%=claseProducto%>;
-                url = '<%=path%>/Busqueda_SubConceptoOperacion_Servlet?criterio='+criterio+'&valor='+codigoconcepto+valor+'&codoperacion='+codigoconcepto+'&tipoNota='+tipoNota+'&formaAbono='+formaAbono+'&claseProducto='+claseProducto;
-            <%-- Fin [Req.14-150] --%>
-            
-            <%}else if(strTabla.equals("CONCEPTO_INSTI")){%>             
-              document.title = "Búsqueda de Concepto Instituciones";
-              url = '<%=path%>/Busqueda_Concepto_Instituciones_Servlet?criterio='+criterio+'&valor='+valor;
-            <%}else if(strTabla.equals("SUBCONCOMISI")){%>
-                document.title = "Búsqueda de Subconceptos";
-                url = '<%=path%>/Busqueda_Subconcepto_Comision_Institucion_Servlet?criterio='+criterio+'&valor='+codigoconcepto+valor+'&codoperacion='+codigoconcepto;
-            <%}else if(strTabla.equals("SUBCONCEPTOCREDITO")){%>
-                document.title = "Búsqueda de Subconceptos";
-                url = '<%=path%>/Busqueda_SubConceptoOperacionCreditos_Servlet?criterio='+criterio+'&valor='+codigoconcepto+valor+'&codoperacion='+codigoconcepto;
-
-            <%}else if(strTabla.equals("SUBCONCEPTOTERCEROS")){ %>
-                document.title = "Búsqueda de Subconceptos"; //vperez 31.08.2010 manejo de subconceptosc
-                url = '<%=path%>/Busqueda_SubConceptoOperacionTerceros_Servlet?criterio='+criterio+'&valor='+codigoconcepto+valor+'&codoperacion='+codigoconcepto+'&hiEmpresaTerceros='+<%=hiEmpresaTerceros%>;
-            
-            <%}else if(strTabla.equals("ENTIDADES_MANEJADORA_VALORES_ACTIVO")){%>
-                document.title = "Búsqueda de Entidades Manejadora Efectivo Activos";
-                url = '<%=path%>/OP_EntidadesManejadoraValoresActivo_Servlet?criterio='+criterio+'&valor='+valor;
-            <%}else if(strTabla.equals("ENTIDADES_MANEJADORA_VALORES_ACTIVO_BOVEDA")){%>
-                document.title = "Búsqueda de Entidades Manejadora Efectivo Activos";
-                url = '<%=path%>/OP_EntidadesManejadoraValoresActivo_Servlet?boveda=S&criterio='+criterio+'&valor='+valor;      
-            <%}else if(strTabla.equals("AGENCIA")){%>
-                document.title = "Búsqueda de Agencias";
-                //[CC17-026] gmeza 28.02.2017
-                url = '<%=path%>/Busqueda_Agencia_Servlet?criterio='+criterio+'&valor='+valor+'&indicadorEnFuncionamiento=<%=indicadorEnFuncionamiento%>';
-                
-            // Agregado gliceta 22.09.2010: Seguimiento de Riesgos: Busqueda de Cargo Funcional
-            <%}else if(strTabla.equals("CARGOFUNCIONAL")){%>
-                document.title = "Búsqueda de Cargo Funcional";
-                url = '<%=path%>/Busqueda_CargoFuncional_Servlet?criterio='+criterio+'&valor='+valor;
-            //gliceta 07.07.2011: Automatizacion de Encajes 
-            <%}else if(strTabla.startsWith("SBTGREN")){%>
-                document.title = "Búsqueda de Codigos de Encaje";
-                url = '<%=path%>/servlet/EN_B_CodEncaje_Servlet?criterio='+criterio+'&valor='+valor+'&tabla='+'<%=request.getParameter("tabla")%>';
-            <%}else if(strTabla.equals("NUMEROCARTA")){%>
-                document.title = "Búsqueda de Cartas";
-                url = '<%=path%>/Busqueda_CartaCambioRecaudo_Servlet?criterio='+criterio+'&valor='+valor;   
-            <%}else if(strTabla.equals("CONCEPTO")){%>
-                document.title = "Búsqueda de Conceptos";
-                url = '<%=path%>/Busqueda_Conceptos_Servlet?criterio='+criterio+'&valor='+valor+'&concepto='+concepto;
-                
-            <%}else if(strTabla.equals("PRODUCTOAHORRO")){%>
-                document.title = "Búsqueda de Productos de Ahorro";
-                url = '<%=path%>/Busqueda_ProductosAhorro_Servlet?criterio='+criterio+'&valor='+valor+'&tipoPersona='+concepto;
-                
-            <%}else if(strTabla.equals("PRODUCTOAHORROSINTASA")){%>
-                document.title = "Búsqueda de Productos de Ahorro";
-                url = '<%=path%>/Busqueda_ProductosAhorroSinTasa_Servlet?criterio='+criterio+'&valor='+valor;
-                
-            <%}else if(strTabla.equals("PRODUCTODPF")){%>
-                document.title = "Búsqueda de Productos a Plazo Fijo";
-                url = '<%=path%>/Busqueda_ProductosDPF_Servlet?criterio='+criterio+'&valor='+valor+'&tipoPersona='+concepto;
-                
-            <%}else if(strTabla.equals("PRODUCTODPFSINTASA")){%>
-                document.title = "Búsqueda de Productos de Plazo Fijo";
-                url = '<%=path%>/Busqueda_ProductosDPFSinTasa_Servlet?criterio='+criterio+'&valor='+valor;
-                
-            <%}else if(strTabla.equals("PRODUCTOCTS")){%>
-                document.title = "Búsqueda de Productos CTS";
-                url = '<%=path%>/Busqueda_ProductosCTS_Servlet?criterio='+criterio+'&valor='+valor+'&tipoPersona='+concepto;
-                
-            <%}else if(strTabla.equals("PRODUCTOCTSSINTASA")){%>
-                document.title = "Búsqueda de Productos CTS";
-                url = '<%=path%>/Busqueda_Productos?criterio='+criterio+'&valor='+valor+'&claseProducto='+concepto;
-                
-            <%}else if(strTabla.equals("PRODUCTOCUENTA")){%>
-                document.title = "Búsqueda de Productos Cuenta";
-                url = '<%=path%>/Busqueda_Producto_Cuenta?criterio='+criterio+'&valor='+valor;    
-                
-            <%}else if(strTabla.equals("TIPOBLOQUEO")){%>
-                document.title = "Búsqueda de Tipos de Bloqueo";
-                url = '<%=path%>/Busqueda_TipoBloqueo_Servlet?criterio='+criterio+'&valor='+valor;
-             //Inicio [Req.14-020] gmoran 27.05.2014
-             <%}else if(strTabla.equals("FASE")){%>
-                 document.title = "Búsqueda de Fases";
-                 url = '<%=path%>/CR_T_MantenimientoNivelesFlujo_Servlet?action=CARGA_POPUP&criterio='+criterio+'&valor='+valor; 
-              //Fin [Req.14-020] gmoran 27.05.2014
-            <%}else if(strTabla.equals("FORMABLOQUEO")){%>
-                document.title = "Búsqueda de Tipos de Bloqueo";
-                url = '<%=path%>/Busqueda_FormaBloqueo_Servlet?criterio='+criterio+'&valor='+valor;    
-                
-            <%}else if(strTabla.equals("TIPOBLOQUEOAHO")){%>
-                document.title = "Búsqueda de Tipos de Bloqueo";
-                url = '<%=path%>/Busqueda_TipoBloqueoAho_Servlet?criterio='+criterio+'&valor='+valor;    
-                
-            <%}else if(strTabla.equals("CHEQUE")){%>
-                document.title = "Búsqueda de Cheques Depósito";
-                url = '<%=path%>/Busqueda_ChequeDeposito_Servlet?criterio='+criterio+'&valor='+valor;
-                
-            <%}else if(strTabla.equals("CENTROCOSTO")){%>
-                document.title = "Búsqueda de Centros de Costos";
-                url = '<%=path%>/Busqueda_CentroCosto_Servlet?criterio='+criterio+'&valor='+valor;
-                
-            <%}else if(strTabla.equals("CUENTABANCARIA")){%>
-                document.title = "Búsqueda de Cuentas Bancarias";
-                url = '<%=path%>/Busqueda_CuentaBancaria_Servlet?valor='+valor;
-                /**
-                 * CUENTABANCARIATFC,BusquedaDeLasCuentasBancariasTFC
-                 * 
-                 *@author gfernandez
-                 *@since 07.10.2010
-                **/
-            <%}else if(strTabla.equals("CUENTABANCARIATFC")){%> 
-                document.title = "Búsqueda de Cuentas Bancarias";
-                url = '<%=path%>/Busqueda_CuentaCorrienteBancaria_Servlet?criterio='+criterio+'&valor='+valor;
-            <%}else if(strTabla.equals("PRODUCTO")){%>
-                document.title = "Búsqueda de Productos";
-                url = '<%=path%>/Busqueda_Producto_Servlet?criterio='+criterio+'&valor='+valor;                
-             <%}else if(strTabla.equals("NACIONALINTERNACIONAL")){%>
-                document.title = "Búsqueda de Procedencia";
-                url = '<%=path%>/Busqueda_NacionalInternacional_Servlet?criterio='+criterio+'&valor='+valor;                
-             <%}//mnieves 22.08.2011
-                else if(strTabla.equals("TIPOCREDITOSBS")){%>
-                document.title = "Búsqueda de tipos de crédito SBS";
-                url = '<%=path%>/Busqueda_TipoCreditoSBS_Servlet?criterio='+criterio+'&valor='+valor;
-            <%}//mnieves 22.08.2011
-                else if(strTabla.equals("TIPOPERSONAJURIDICA")){%>
-                document.title = "Búsqueda de tipos de persona juridica";
-                url = '<%=path%>/Busqueda_TipoPersonaJuridica_Servlet?criterio='+criterio+'&valor='+valor;
-            <%}//mnieves 24.08.2011
-                else if(strTabla.equals("NUMEROCUENTADPF")){%>
-                document.title = "Búsqueda de Numero Cuenta DPF";
-                url = '<%=path%>/Busqueda_NumeroCuentaDPF_Servlet?criterio='+criterio+'&valor='+valor;
-            <%}else if(strTabla.equals("CIIU")){%>
-                document.title = "Búsqueda de CIIU";
-                url = '<%=path%>/Busqueda_Ciiu_Servlet?criterio='+criterio+'&valor='+valor;
-                
-            <%}else if(strTabla.equals("CIIUXSECTOR")){%>
-                document.title = "Búsqueda de CIIU x Sector";
-                url = '<%=path%>/Busqueda_CiiuSector_Servlet?criterio='+criterio+'&valor='+valor+'&txtCodigoAdic='+codigoAdic;
-            <%}else if(strTabla.equals("ZONAITINERANTE")){%>
-                document.title = "Búsqueda de Zona Itinerante del Cliente";
-                url = '<%=path%>/Busqueda_ZonaItinerante_Servlet?criterio='+criterio+'&valor='+valor+'&txtCodigoAdic='+codigoAdic;  
-                        
-            <%}else if(strTabla.equals("PROMOTOR")){%>
-                document.title = "Búsqueda de PROMOTOR";
-                url = '<%=path%>/Busqueda_Usuarios_Servlet?criterio='+criterio+'&valor='+valor+'&strTabla=<%=strTabla%>';
-                
-            <%}else if(strTabla.equals("ANALISTA")){%>
-                document.title = "Búsqueda de ANALISTA";
-                url = '<%=path%>/Busqueda_Usuarios_Servlet?criterio='+criterio+'&valor='+valor+'&strTabla=<%=strTabla%>';
-                
-            <%}else if(strTabla.equals("EJECUTIVO")){%>
-                document.title = "Búsqueda de EJECUTIVO";
-                url = '<%=path%>/Busqueda_Usuarios_Servlet?criterio='+criterio+'&valor='+valor+'&strTabla=<%=strTabla%>';
-              //stacanga 29.03.2012
-            <%}else if(strTabla.equals("PRE-ANALISTA")){%>
-                document.title = "Búsqueda de PRE ANALISTA";
-                url = '<%=path%>/Busqueda_Usuarios_Servlet?criterio='+criterio+'&valor='+valor+'&strTabla=<%=strTabla%>';
-            <%}else if(strTabla.equals("GESTORCOBRANZA")){%>
-                document.title = "Búsqueda de Gestor de Cobranza";
-                url = '<%=path%>/Busqueda_Usuarios_Servlet?criterio='+criterio+'&valor='+valor+'&strTabla=<%=strTabla%>';
-                
-            <%}else if(strTabla.equals("MOTIVOBLOQUEOLIBERACION")){%>
-                document.title = "Búsqueda de Motivo Bloqueo Liberacion";
-                url = '<%=path%>/Busqueda_MotivoBloqueoLiberacion_Servlet?criterio='+criterio+'&valor='+valor+"&tipoTransaccion="+tipoTransaccion;
-                
-            <%}else if(strTabla.equals("MOTIVOREGISTRONCND")){%>
-                document.title = "Búsqueda de Motivo Registro Nota Crédito/Débito";
-                url = '<%=path%>/Busqueda_MotivoRegistroNotaCreditoDebito_Servlet?criterio='+criterio+'&valor='+valor+"&tipoTransaccion="+tipoTransaccion;
-                
-            <%}else if(strTabla.equals("USUARIO")){%>
-                document.title = "Búsqueda de Usuarios";
-                url = '<%=path%>/Busqueda_Usuarios_Servlet?criterio='+criterio+'&valor='+valor;
-                
-            <%}else if(strTabla.equals("USUARIOALL")){%>
-                document.title = "Búsqueda de Usuarios";
-                url = '<%=path%>/Busqueda_UsuariosAll_Servlet?criterio='+criterio+'&valor='+valor;
-            
-            <%}else if(strTabla.equals("CONVENIOS")){%>
-                document.title = "Búsqueda de Convenios";
-                url = '<%=path%>/Busqueda_Convenios_Servlet?criterio='+criterio+'&valor='+valor;
-                
-            <%}else if(strTabla.equals("DEMANDANTE")){%>
-               document.title = "Búsqueda de Abogados";
-                url = '<%=path%>/Busqueda_Abogados_Servlet?criterio='+criterio+'&valor='+valor;
-                
-            <%}else if(strTabla.equals("DEMANDADO")){%>
-               document.title = "Búsqueda de Abogados";
-                url = '<%=path%>/Busqueda_Demandado_Servlet?criterio='+criterio+'&valor='+valor;
-                          
-            <%}else if(strTabla.equals("JUZGADO")){%>
-                document.title = "Búsqueda de Juzgado";
-            //Inicio [CC17-002] gmeza 16.01.2017
-                url = '<%=path%>/Busqueda_Juzgado_Servlet?criterio='+criterio+'&valor='+valor+'&codigoDistritoJudicial=<%=codigoDistritoJudicial%>';
-
-            <%}else if(strTabla.equals("DISTRITOJUDICIAL")){%>
-                document.title = "Búsqueda de Distrito Judicial";
-                url = '<%=path%>/CR_C_DistritoJudicial_Servlet?criterio='+criterio+'&valor='+valor;
-            //Fin [CC17-002]
-           
-            //Inicio [CC17-012] gmeza 31.01.2017 
-            <%}else if(strTabla.equals("CATALOGOCOMBOGENERICO")){%>
-                document.title = "Búsqueda de Catálogo";
-                url = '<%=path%>/CB_C_CatalogoComboGenerico_Servlet?criterio='+criterio+'&valor='+valor+'&nombreCombo=<%=nombreCombo%>'+'&metodoInsertar=<%=metodoInsertar%>';
-            
-            <%}else if(strTabla.equals("TIPOGASTOJUDICIAL")){%>
-                document.title = "Búsqueda de Tipo de Gasto Judicial";
-                url = '<%=path%>/CR_C_TipoGastoJudicial_Servlet?criterio='+criterio+'&valor='+valor;
-            //Fin [CC17-012]
-            <%}else if(strTabla.equals("SECRETARIO")){%>
-                document.title = "Búsqueda de Secretario de Juzgado";
-                url = '<%=path%>/Busqueda_SecretarioJuzgado_Servlet?criterio='+criterio+'&valor='+valor;
-                
-            <%}else if(strTabla.equals("VISITADOR")){%>
-                document.title = "Búsqueda de Visitadores";
-                
-                url = '<%=path%>/Busqueda_Visitadores_Servlet?criterio='+criterio+'&valor='+valor;
-                
-            <%}else if(strTabla.equals("RESPUESTANOTIFICACION")){%>
-                document.title = "Búsqueda de Respuesta Notificacion";
-                url = '<%=path%>/Busqueda_RespuestaNotificacion_Servlet?criterio='+criterio+'&valor='+valor;
-                
-            <%}else if(strTabla.equals("UBIGEO")){%>
-                document.title = "Búsqueda de Ubigeos";
-                url = '<%=path%>/Busqueda_Ubigeo_Servlet?criterio='+criterio+'&valor='+valor;
-                
-            <%}else if(strTabla.equals("PRODUCTOCREDITO")){%>
-	            document.title = "Búsqueda de Productos Credito";
-	            <%--Inicio [Req. 14-055]  jvilcapaza 18.02.2016 --%>
-                url = '<%=path%>/Busqueda_ProductoCredito_Servlet?tipoPersonaTitular=<%=tipoPersonaTitular%>&tipoCredito=<%=tipoCredito%>&subTipoCredito=<%=subTipoCredito%>&criterio='+criterio+'&valor='+valor+'<%=urlProducto%>';
-            <%}else if(strTabla.equals("PRODUCTOASEGURADORA")){%>
-                document.title = "Búsqueda de Productos Aseguradora";
-                url = '<%=path%>/OP_T_EmpresasAseguradoras_Servlet?action=BUSQUEDA_PRODUCTO_ASEGURADORA_TABLA&codigoAseguradora=<%=codigoAseguradora%>&criterio='+criterio+'&valor='+valor;
-            <%-- Fin [Req. 14-055] --%>
-        //Req. S14-088 fbramirez 01.08.2014
-        <%}else if(strTabla.equals("PRODUCTOCREDITOGESTIONRIESGO")){%>
-            document.title = "Búsqueda de Productos Gestion Riesgo";
-            url = '<%=path%>/Busqueda_ProductoCredito_Servlet?tipoCredito=<%=tipoCredito%>&subTipoCredito=<%=subTipoCredito%>&flagGR=<%=flagGR%>&criterio='+criterio+'&valor='+valor+'<%=urlProducto%>';
-        <%}else if(strTabla.equals("ASOCIACIONBANCAPRODUCTO")){%>
-            document.title = "Búsqueda de Productos en Asociación Gestion Riesgo";
-            url = '<%=path%>/GR_C_MantenimientoAsociacionGestionRiesgo_Servlet?action=BUSCARPRODUCTOASOCIACION&criterio='+criterio+'&valor='+valor;
-        //[Req. S14-088] anunez 30.10.2014
-        <%}else if(strTabla.equals("BANCAS")){%>
-            document.title = "Búsqueda de Bancas";
-            url = '<%=path%>/GR_C_MantenimientoAsociacionGestionRiesgo_Servlet?action=BUSCAR_BANCA&criterio='+criterio+'&valor='+valor;
-
-            <%}else if(strTabla.equals("PRODUCTOCREDITOLC")){%>
-                document.title = "Búsqueda de Productos Credito";
-                url = '<%=path%>/Busqueda_ProductoCreditoLC_Servlet?tipoCredito=<%=tipoCredito%>&subTipoCredito=<%=subTipoCredito%>&criterio='+criterio+'&valor='+valor+'<%=urlProducto%>';    
-                
-            <%}else if(strTabla.equals("FORMATO")){%>
-                document.title = "Búsqueda de Formatos";
-                url = '<%=path%>/Busqueda_Formato_Servlet?criterio='+criterio+'&valor='+valor;
-                
-            <%}else if(strTabla.equals("PERSONAJURIDICA")){%>
-                document.title = "Búsqueda de Personas Juridicas";
-                url = '<%=path%>/Busqueda_PersonasJuridicas_Servlet?criterio='+criterio+'&valor='+valor;
-                
-            <%}else if(strTabla.equals("PERSONANATURAL")){%>
-                document.title = "Búsqueda de Personas Naturales";
-                url = '<%=path%>/Busqueda_PersonaNatural_Servlet?criterio='+criterio+'&valor='+valor;
-            
-            <%}//prios 06.09.11
-            else if(strTabla.equals("PERSONA_RUC")){%>
-                document.title = "Búsqueda de Personas";
-                url = '<%=path%>/Busqueda_Personas_RUC_Servlet?criterio='+criterio+'&valor='+valor;
-             
-            <%}//mnieves 10.01.2012
-            else if(strTabla.equals("CUENTA_CONTABLE_INVENTARIO")){%>
-                document.title = "Búsqueda de Cuenta Contable";
-                aux ='<%=strAux%>';
-                url = '<%=path%>/Busqueda_CuentaContable_Inventario_Servlet?criterio='+criterio+'&valor='+valor+'&auxiliar='+aux;
-            <%}//mnieves 22.06.2012
-            else if(strTabla.equals("PRODUCTOS_NIEVELES_GRUPO_CREDITO")){%>
-                document.title = "Búsqueda de Producto Niveles Grupo Crédito";
-                aux ='<%=strAux%>';
-                url = '<%=path%>/Busqueda_ProductosNivelesGrupoProducto_Servlet?criterio='+criterio+'&valor='+valor;
-            <%}//mnieves 22.06.2012
-            else if(strTabla.equals("GESTOR_COBRANZA")){%>
-                document.title = "Búsqueda de Gestor de Cobranza";
-                aux ='<%=strAux%>';
-                url = '<%=path%>/Busqueda_GestorCobranza_Servlet?criterio='+criterio+'&valor='+valor;
-            <%}//mnieves 22.06.2012
-            else if(strTabla.equals("EMPRESA_EXTERNA")){%>
-                document.title = "Búsqueda Gestor de Empresa Externa";
-                aux ='<%=strAux%>';
-                url = '<%=path%>/Busqueda_GestorCobranza_Servlet?criterio='+criterio+'&valor='+valor+'&valorFiltro=<%=valorFiltro%>';            
-            <%}//jgonzales 27.08.2012
-            else if(strTabla.equals("GESTION_REALIZADA")){%>
-                document.title = "Búsqueda de Gestiones Realizadas";
-                url = '<%=path%>/Busqueda_GestionRealizada_Servlet?criterio='+criterio+'&valor='+valor;
-            <%}//jgonzales 27.08.2012
-            else if(strTabla.equals("RESPUESTA_GESTION")){%>
-                document.title = "Búsqueda de Respuestas de Gestión";
-                url = '<%=path%>/Busqueda_RespuestaGestion_Servlet?criterio='+criterio+'&valor='+valor;    
-                
-            <%}else if(strTabla.equals("MOTIVORECHAZOSC")){%>
-                document.title = "Búsqueda de Motivo Rechazo de la Solicitud";
-                url = '<%=path%>/Busqueda_MotivoRechazo_Servlet?criterio='+criterio+'&valor='+valor;
-                
-            <%}else if(strTabla.equals("CODIGOAUXILIAR")){%>
-                document.title = "Búsqueda de Códigos Auxiliares";
-                valor = (criterio == "Codigo" && valor != "")?concepto+valor:valor;
-                url = '<%=path%>/Busqueda_CodigoAuxiliar_Servlet?criterio='+criterio+'&valor='+valor+'&cod='+concepto;
-                
-            <%}else if(strTabla.equals("MOTIVOBLOQUEODESBLOQUEO")){%>
-                document.title = "Búsqueda de Motivos Bloqueo Desbloqueo";
-                url = '<%=path%>/Busqueda_MotivoBloqueoDesbloqueo_Servlet?tipoTransaccion='+tipoTransaccion+'&valor='+valor+'&criterio='+criterio;
-                
-            <%}else if(strTabla.equals("GARANTIACREDITO")){%>
-                document.title = "Búsqueda de Garantias de Credito";
-                url = '<%=path%>/Busqueda_GarantiaCredito_Servlet?criterio='+criterio+'&valor='+valor;
-                
-            <%}else if(strTabla.equals("GIRONEGOCIO")){%>
-                document.title = "Búsqueda de Giro de Negocio";
-                url = '<%=path%>/Busqueda_GiroNegocio_Servlet?criterio='+criterio+'&valor='+valor;
-                
-            
-           <%}else if(strTabla.equals("GIRONEGOCIOXCIIU")){%>
-                document.title = "Búsqueda de Giro de Negocio";
-                url = '<%=path%>/Busqueda_GiroNegocioCiiu_Servlet?criterio='+criterio+'&valor='+valor+'&txtCodigoAdic='+codigoAdic;
-           <%}else if(strTabla.equals("CANALVENTAS")){%>
-                document.title = "Búsqueda de Canal de Ventas";
-                url = '<%=path%>/Busqueda_CanalVentas_Servlet?criterio='+criterio+'&valor='+valor;
-           
-           //gliceta 07.07.2011: Automatizacion de Encajes
-           <%}else if(strTabla.equals("ATRIBUTOOPERATIVO")){%>
-                document.title = "Búsqueda de Atributos Operativos";
-                url = '<%=path%>/Busqueda_AtributoOperativo_Servlet?criterio='+criterio+'&valor='+valor;     
-           
-           //jpantoja 06.02.2012: Concepto Operativo
-           <%}else if(strTabla.equals("CONCEPTOOPERATIVO")){%>
-                document.title = "Búsqueda de Conceptos Operativos";
-                url = '<%=path%>/Busqueda_ConceptoOperativo_Servlet?criterio='+criterio+'&valor='+valor;
-                
-<% } else if(strTabla.equals("OFICINA")){%>
-                document.title = "Búsqueda de Oficina";
-                url = '<%=path%>/Busqueda_Oficina_Servlet?criterio='+criterio+'&valor='+valor; 
-            <%}else if(strTabla.equals("DISTRITO")){%>
-                document.title = "Búsqueda de Distrito";
-                url = '<%=path%>/Busqueda_Distrito_Servlet?criterio='+criterio+'&valor='+valor;  
-            <%}else if(strTabla.equals("CUADRANTE")){%>
-                document.title = "Búsqueda de Cuadrantes";
-                url = '<%=path%>/Busqueda_Cuadrante_Servlet?criterio='+criterio+'&valor='+valor; 
-            <%}else if(strTabla.equals("TRAMO")){%>
-                document.title = "Búsqueda de Tramos";
-                url = '<%=path%>/Busqueda_Tramos?criterio='+criterio+'&valor='+valor; 
-            <%}else if(strTabla.equals("RESULTADOCOBRANZA")){%>
-                document.title = "Búsqueda de Resultado Cobranza";
-                url = '<%=path%>/Busqueda_ResultadoCobranza_Servlet?criterio='+criterio+'&valor='+valor;        
-            <%}else if(strTabla.equals("ROLES")){%>
-                document.title = "Búsqueda de Roles";
-                url = '<%=path%>/Busqueda_Roles_Servlet?criterio='+criterio+'&valor='+valor;              
-            <%}else if(strTabla.equals("BASEINSPECCION")){%>
-                document.title = "Búsqueda de Bases de Inspeccion";
-                url = '<%=path%>/Busqueda_Bases_Servlet?criterio='+criterio+'&valor='+valor+"&buscarXTipoBase=I";               
-            <%}else if(strTabla.equals("BASE")){%>
-                document.title = "Búsqueda de Bases de Inspeccion";
-                url = '<%=path%>/Busqueda_Bases_Servlet?criterio='+criterio+'&valor='+valor;            
-            <%}else if(strTabla.equals("COORDINADORBASE")){%>
-                document.title = "Búsqueda de Coordinador de Base";
-                url = '<%=path%>/Busqueda_CoordinadorBase_Servlet?criterio='+criterio+'&valor='+valor+"&codigoBase="+codigoBase; 
-            <%}else if(strTabla.equals("PRODUCTOXTIENDA")){%>
-                document.title = "Búsqueda de Producto por Tienda";
-                url = '<%=path%>/Busqueda_ProductoTienda_Servlet?criterio='+criterio+'&valor='+valor; 
-            <%}else if(strTabla.equals("PRODUCTOFINANCIERO")){%>
-                document.title = "Búsqueda de Producto Financiero.";
-                url = '<%=path%>/Busqueda_ProductoFinanciero_Servlet?criterio='+criterio+'&valor='+valor;                       
-            
-            <%}else if(strTabla.equals("BUSQUEDAINSPECTOR")){%>
-                document.title = "Búsqueda de Inspectores";
-                url = '<%=path%>/Busqueda_Inspectores_Servlet?criterio='+criterio+'&valor='+valor+"&codigoBase="+codigoBase+"&insAgen="+insAgen;
-            <%}else if(strTabla.equals("BUSQUEDAGARANTE")){%>
-                document.title = "Búsqueda de Garantes";
-                url = '<%=path%>/Busqueda_Garantes_Servlet?criterio='+criterio+'&valor='+valor+"&nroSolCredito="+nroSolCredito; 
-            <%}else if(strTabla.equals("BUSQUEDARESULTADO")){%>
-                document.title = "Búsqueda de Resultado";
-                url = '<%=path%>/Busqueda_ResultadoRevision_Servlet?criterio='+criterio+'&valor='+valor+"&nroSolCredito=<%=request.getParameter("nroSolCredito")%>"; 
-            <%}else if(strTabla.equals("BUSQUEDAPARENTESCO")){%>
-                document.title = "Búsqueda de Parentesco";
-                url = '<%=path%>/Busqueda_Parentesco_Servlet?criterio='+criterio+'&valor='+valor+"&nroSolCredito=<%=request.getParameter("nroSolCredito")%>";               
-            <%}else if(strTabla.equals("BUSQUEDATIPDOCCOBRANZA")){%>
-                document.title = "Búsqueda de Documentos de Cobranza";
-                url = '<%=path%>/Busqueda_TipoDocCobranza?criterio='+criterio+'&valor='+valor;  
-            <%}else if(strTabla.equals("BUSQUEDAGESTORCOBRANZA")){%>
-                document.title = "Búsqueda de Gestores de Cobranza";
-                url = '<%=path%>/Busqueda_GestoresCobranza?criterio='+criterio+'&valor='+valor+"&codRolUsrId="+codRolUsrId;     
-            <%}else if(strTabla.equals("BUSQUEDANUMERORECIBO")){%>
-                document.title = "Búsqueda de Recibo";
-                url = '<%=path%>/Busqueda_NumeroRecibo_Servlet?criterio='+criterio+'&valor='+valor+"&codRolUsrId="+codRolUsrId+"&gestorCobranza=<%=request.getParameter("gestorCobranza")%>";   
-            <%}else if(strTabla.equals("BUSQUEDASERIE")){%>
-                document.title = "Búsqueda de Series de Recibos Cobranza";
-                url = '<%=path%>/Busqueda_SeriesRecibos_Servlet?criterio='+criterio+'&valor='+valor+"&tipDoc=<%=request.getParameter("tipDoc")%>";  
-                
-            <%}else if(strTabla.equals("EMPRESAINSPECCIONLABORAL")){%>      
-                document.title = "Búsqueda de Empresa Inspeccion Laboral.";
-                url = '<%=path%>/Busqueda_Empresa_Inspecion_Laboral?criterio='+criterio+'&valor='+valor; 
-             <%}else if(strTabla.equals("USUARIOROL")){%>
-                document.title = "Búsqueda de Usuarios";
-                url = '<%=path%>/Busqueda_UsuarioPorRol_Servlet?criterio='+criterio+'&valor='+valor;
-        //Req. S14-088 fbramirez 01.08.2014
-        <%}else if(strTabla.equals("PRODUCTOCREDITOGESTIONRIESGO")){%>
-            document.title = "Búsqueda de Productos Gestion Riesgo";
-            url = '<%=path%>/Busqueda_ProductoCredito_Servlet?tipoCredito=<%=tipoCredito%>&subTipoCredito=<%=subTipoCredito%>&flagGR=<%=flagGR%>&criterio='+criterio+'&valor='+valor+'<%=urlProducto%>';
-        <%}else if(strTabla.equals("ASOCIACIONBANCAPRODUCTO")){%>
-            document.title = "Búsqueda de Productos en Asociación Gestion Riesgo";
-            url = '<%=path%>/GR_C_MantenimientoAsociacionGestionRiesgo_Servlet?action=BUSCARPRODUCTOASOCIACION&criterio='+criterio+'&valor='+valor;    
-        //[Req. S14-088] anunez 30.10.2014
-        <%}else if(strTabla.equals("BANCAS")){%>
-            document.title = "Búsqueda de Bancas";
-            url = '<%=path%>/GR_C_MantenimientoAsociacionGestionRiesgo_Servlet?action=BUSCAR_BANCA&criterio='+criterio+'&valor='+valor;
-                
-               <%}else if(strTabla.equals("PRODUCTOSTIENDA")){ %>
-               document.title = "Búsqueda de Productos";               
-               url = '<%=path%>/Busqueda_Productos_Servlet?criterio='+criterio+'&valor='+valor;       
-             <%}else if(strTabla.equals("RESULTADOS")){ %>
-               document.title = "Búsqueda de RESULTADOS";               
-               url = '<%=path%>/Busqueda_Resultados_Servlet?criterio='+criterio+'&valor='+valor; 
-                <%}else if(strTabla.equals("PRODUCTOCREDITOCARTERA")){ %>
-               document.title = "Búsqueda de Producto"; 
-               url = '<%=path%>/Busqueda_ProductoCreditoCartera_Servlet?criterio='+criterio+'&valor='+valor;  
-              <%}else if(strTabla.equals("ESTADOCREDITO")){ %>
-               document.title = "Búsqueda de Estado Credito"; 
-               url = '<%=path%>/Busqueda_EstadoContable_Servlet?criterio='+criterio+'&valor='+valor;                 
-               <%}else if(strTabla.equals("GESTORCOBRANZA")){%>
-                document.title = "Búsqueda de Gestor de Cobranza";
-                url = '<%=path%>/Busqueda_GestorCobranza_Servlet?filtroDireccion='+filtroDireccion+'&criterio='+criterio+'&valor='+valor+'&strTabla=<%=strTabla%>';
-               <%}else if(strTabla.equals("GESTOR")){%>
-                document.title = "Búsqueda de gestores de cobranza";
-                url = '<%=path%>/Busqueda_GestorCobranza_Servlet?criterio='+criterio+'&valor='+valor;
-                //url = '<%=path%>/Busqueda_Gestor_Servlet?criterio='+criterio+'&valor='+valor;
-              
-              <%}else if(strTabla.equals("RECIBO")){ %>
-               document.title = "Búsqueda de Recibo"; 
-               url = '<%=path%>/Busqueda_Recibo_Servlet?criterio='+criterio+'&valor='+valor;    
-                <%}else if(strTabla.equals("CREDITO")){%>
-               document.title = "Búsqueda de Solicitud de Credito";
-               url = '<%=path%>/Busqueda_SolicitudesCredito_Servlet?criterio='+criterio+'&valor='+valor;                   
-             <%}else if(strTabla.equals("ASIGNACION")){ %>  
-               document.title = "Búsqueda de Asignacion"; 
-               solicitud =  '<%= request.getParameter("txtCodigoSolicitud")%>';    
-                   
-               url = '<%=path%>/Busqueda_Asignacion_Servlet?criterio='+criterio+'&valor='+valor+'&solicitud='+solicitud;       
-             <%}else if(strTabla.equals("SUPERVISOR")){ %>
-               document.title = "Búsqueda de Supervisor";
-               url = '<%=path%>/Busqueda_Supervisor_Servlet?criterio='+criterio+'&valor='+valor;                
-               document.title = "Búsqueda de Credito";
-             <%}else if(strTabla.equals("CREDITOCARTERA")){%>
-               url = '<%=path%>/Busqueda_CreditoCartera_Servlet?criterio='+criterio+'&valor='+valor;
-             <%}else if(strTabla.equals("INMOBILIARIA")){%>
-               url = '<%=path%>/Busqueda_Inmobiliaria_Servlet?criterio='+criterio+'&valor='+valor;
-             //gliceta 16.04.2012: Req. 12-058 - Cumplimiento Normativo
-             //Grupo de Reporte de Informe
-             <%}else if(strTabla.equals("GRUPOINFORME")){%>
-               url = '<%=path%>/Busqueda_GrupoInforme_Servlet?criterio='+criterio+'&valor='+valor;
-             //Tipo de Informe
-             <%}else if(strTabla.equals("TIPOINFORME")){%>
-               url = '<%=path%>/Busqueda_TipoInforme_Servlet?criterio='+criterio+'&valor='+valor;  
-             //Grupo de Referencia Indice Nota SBS    
-             <%}else if(strTabla.equals("REFINDICESBS")){%>
-               url = '<%=path%>/Busqueda_RefIndiceNotaSBS_Servlet?criterio='+criterio+'&valor='+valor;
-             //Firmas de Informe    
-             <%}else if(strTabla.equals("FIRMAINFORME")){%>
-               url = '<%=path%>/Busqueda_FirmasInformeCumplimiento_Servlet?criterio='+criterio+'&valor='+valor;  
-             <%}else if(strTabla.equals("CONCESIONARIO")){%>
-               url = '<%=path%>/Busqueda_Concesionario_Servlet?criterio='+criterio+'&valor='+valor;
-             <%}else if(strTabla.equals("TALLER_GNV")){%>
-               url = '<%=path%>/Busqueda_TallerGNV_Servlet?criterio='+criterio+'&valor='+valor;
-             <%}else if(strTabla.equals("OTRASPERSONAS")){%>            
-               document.title = "Búsqueda de Otras Personas";
-               //[CC17-002] gmeza 16.01.2017
-               url = '<%=path%>/Busqueda_OtrasPersonas_Servlet?criterio='+criterio+'&valor='+valor+'&codigoOtrasPersonas='+codigoOtrasPersonas+'&tipoRepresentante='+tipoRepresentante+'&tipoPersona=<%=tipoPersona%>';
-             <%}else if(strTabla.equals("TALLER")){%>
-                var cConces =  '<%= request.getParameter("cConces")%>'; 
-               url = '<%=path%>/Busqueda_Taller_Servlet?criterio='+criterio+'&valor='+valor+'&cConces='+cConces + '&codigoOtrasPersonas='+codigoOtrasPersonas;
-             <%}else if(strTabla.equals("LOCALIDAD")){
-                   if(request.getParameter("filtro")!=null){  %>          
-                              document.title = "Búsqueda de Area";
-               <%  }else{  %>
-                  document.title = "Búsqueda de Agencia";
-               <% }  %>   
-               filtro = '<%= request.getParameter("filtro")%>';         
-               url = '<%=path%>/Busqueda_Localidad_Servlet?criterio='+criterio+'&valor='+valor+'&filtro='+filtro;   
-            
-                        
-
-    
-           <%}else if(strTabla.equals("VENDEDORES")){%>
-                document.title = "Búsqueda de Vendedores";
-                var indVendedorXAgenciaAut = '<%= request.getParameter("indVendedorXAgenciaAut")!=null?request.getParameter("indVendedorXAgenciaAut"):"NULO"%>';
-                var codAgencia = '<%= request.getParameter("codAgencia")!=null?request.getParameter("codAgencia"):"NULO"%>';
-                url = '<%=path%>/Busqueda_Vendedores_Servlet?criterio='+criterio+'&valor='+valor+'&indVendedorXAgenciaAut='+indVendedorXAgenciaAut+'&codAgencia='+codAgencia;
-           
-           <%}else if(strTabla.equals("LISTAUSUARIOS")){%>
-                document.title = "Lista de Usuarios";
-                url = '<%=path%>/Busqueda_ListaUsuarios_Servlet?criterio='+criterio+'&valor='+valor+'&indUsuarioCELB=<%=indUsuarioCELB%>'+'&codAreaLaboral=<%=codAreaLaboral%>';//gliceta 16.04.2012: Req. 12-058 - Cumplimiento Normativo       
-                
-           <%}else if(strTabla.equals("LISTAROLES")){%>
-                document.title = "Lista de Roles";
-                url = '<%=path%>/Busqueda_ListaRoles_Servlet?criterio='+criterio+'&valor='+valor;          
-                
-           <%}else if(strTabla.equals("LISTATIPOOBSERVACION")){%>
-                document.title = "Lista de Observacion";
-                url = '<%=path%>/Busqueda_ListaObservacion_Servlet?criterio='+criterio+'&valor='+valor;          
-                
-           <%}else if(strTabla.equals("ARTICULOS")){%>
-                document.title = "Búsqueda de Articulos";
-                //jpantoja 16.01.2011 modificado para agregar un parametro de busqueda 
-                // ajimenez 28.05.2013 [13-038-II] - Parametro Empresa Retail
-                url = '<%=path%>/Busqueda_Articulos_Servlet?criterio='+criterio+'&valor='+valor+'&valorFiltro=<%=valorFiltro%>&idRetail=<%=idRetail%>';
-           
-
-           <%}else if(strTabla.equals("TIPOGARANTIA")){%>
-                document.title = "Búsqueda Tipo Garantia";
-                url = '<%=path%>/Busqueda_TipoGarantia_Servlet?criterio='+criterio+'&valor='+valor;
-                     
-            <%}else if(strTabla.equals("PAIS")){%>
-                document.title = "Búsqueda de Paises";
-                url = '<%=path%>/Busqueda_Pais_Servlet?criterio='+criterio+'&valor='+valor+'<%=urlPais%>';
-            
-            <%}else if(strTabla.equals("REQUISITOS")){%>
-                document.title = "Búsqueda de Requisitos";
-                url = '<%=path%>/Busqueda_Requisitos_Servlet?criterio='+criterio+'&valor='+valor;
-            
-            
-            
-            <%}else if(strTabla.equals("AGRUPMOTIVOINGRESOLN")){%>
-            document.title = "Búsqueda de Cuentas Contables";
-            url = '<%=path%>/Busqueda_AgrupacionMotivoListaNegra_Servlet?criterio='+criterio+'&valor='+valor;
-                                
-                    <%}else if(strTabla.equals("CARGOSLABORALES")){%>
-                document.title = "Búsqueda Cargos Laborales";
-                url = '<%=path%>/Busqueda_CargoLaboral_Servlet?criterio='+criterio+'&valor='+valor;
-        
-                                
-              <%}else if(strTabla.equals("CIUDAD")){%>
-                document.title = "Búsqueda de Paises";
-                url = '<%=path%>/Busqueda_Ciudad_Servlet?criterio='+criterio+'&valor='+valor;   
-                
-            <%}else if(strTabla.equals("PROFESION")){%>
-                document.title = "Búsqueda de Profesiones";
-                url = '<%=path%>/Busqueda_Profesion_Servlet?criterio='+criterio+'&valor='+valor;
-                
-            <%}else if(strTabla.equals("CARGOOCUPACION")){%>
-                document.title = "Búsqueda de Profesiones";
-                url = '<%=path%>/Busqueda_CargoOcupacion_Servlet?criterio='+criterio+'&valor='+valor;
-                
-            <%}else if(strTabla.equals("OFICIO")){%>
-                document.title = "Búsqueda de Profesiones";
-                url = '<%=path%>/Busqueda_Oficio_Servlet?criterio='+criterio+'&valor='+valor;
-                
-            <%}else if(strTabla.equals("AREALABORAL")){%>
-                document.title = "Búsqueda de Areas Laborales";
-                url = '<%=path%>/Busqueda_AreaLaboral_Servlet?criterio='+criterio+'&valor='+valor;
-                
-            <%}else if(strTabla.equals("CUADRANTE")){%>
-                document.title = "Búsqueda de Cuadrantes";
-                url = '<%=path%>/Busqueda_Cuadrante_Servlet?criterio='+criterio+'&valor='+valor;
-            <%}else if(strTabla.equals("TRAMO")){%>
-                document.title = "Búsqueda de Tramos";
-                url = '<%=path%>/Busqueda_Tramos?criterio='+criterio+'&valor='+valor;     
-            <%}else if(strTabla.equals("RESULTADOCOBRANZA")){%>
-                document.title = "Búsqueda de Resultado Cobranza";
-                url = '<%=path%>/Busqueda_ResultadoCobranza_Servlet?criterio='+criterio+'&valor='+valor;        
-            <%}else if(strTabla.equals("SECTOR")){%>
-                document.title = "Búsqueda de Sectores Económicos";
-                url = '<%=path%>/Busqueda_SectorEconomico_Servlet?criterio='+criterio+'&valor='+valor;
-                
-            <%}else if(strTabla.equals("MOTIVOINGRESOLN")){%>
-                document.title = "Búsqueda de Motivos de Ingreso a Base Negativa";
-                url = '<%=path%>/Busqueda_MotivoIngresoLN_Servlet?criterio='+criterio+'&valor='+valor;
-                
-            <%}else if(strTabla.equals("CARGOLABORAL")){%>
-                document.title = "Búsqueda de Cargos Laborales";
-                url = '<%=path%>/Busqueda_CargoLaboral_Servlet?criterio='+criterio+'&valor='+valor;
-                
-            <%}else if(strTabla.equals("MEDIDACAUTELAR")){%>
-                document.title = "Búsqueda de Medidas Cautelares";
-                url = '<%=path%>/Busqueda_MedidaCautelar_Servlet?criterio='+criterio+'&valor='+valor;
-            <%}else if(strTabla.equals("PERITOTASADOR")){ %>
-               document.title = "Búsqueda de Peritos";
-               url = '<%=path%>/Busqueda_PeritoTasador_Servlet?tipo=PE&criterio='+criterio+'&valor='+valor;            
-           <%}else if(strTabla.equals("NOTARIO")){%>
-              document.title = "Búsqueda de Notarios";
-              url = '<%=path%>/Busqueda_PeritoTasador_Servlet?tipo=NT&criterio='+criterio+'&valor='+valor;          
-          <%}else if(strTabla.equals("MOTIVOBLOQUEODESBLOQUEOTOTAL")){%>
-              //Inicio [T-9101] gmeza 11.03.2016
-	          document.title = "Búsqueda de Motivos";
-	          var codigoGarantia=<%=codigoGarantia%>;
-	          url = '<%=path%>/Busqueda_MotivoBloqueoDesbloqueo_Servlet?criterio='+criterio+'&valor='+valor+'&codigoGarantia='+codigoGarantia;          
-	          //Fin [T-9101]          
-           <%}else if(strTabla.equals("SECTORECONOMICO")){%>
-              document.title = "Búsqueda de Cargos Laborales";
-              url = '<%=path%>/Busqueda_SectorEconomico_Servlet?criterio='+criterio+'&valor='+valor;     
-           <%}else if(strTabla.equals("GIROSOLICITUD")){%>
-              document.title = "Búsqueda de Cargos Laborales";
-              url = '<%=path%>/Busqueda_RemesasSolicitudGiro_Servlet?criterio='+criterio+'&valor='+valor;     
-             <%//rgutierrez 11.05.2012
-           }else if(strTabla.equals("CANALOPERACIONES")){%>
-              document.title = "Búsqueda de Canal de Operaciones";
-              url = '<%=path%>/Busqueda_CanalOperaciones_Servlet?criterio='+criterio+'&valor='+valor;     
-           <%}else if(strTabla.equals("ENTIDADRECAUDADORA")){%>             
-              document.title = "Búsqueda de Entidad Recaudadora";
-              url = '<%=path%>/Busqueda_CanalOperacionRecaudacionExterna_Servlet?criterio='+criterio+'&valor='+valor;           
-           <%   //rgutierrez 06.08.2012
-              }else if(strTabla.equals("PROMOCIONCAMP")){%>
-              document.title = "Búsqueda de Campaña";
-           // [Req.14-020] gmoran 27.05.2014
-              url = '<%=path%>/Busqueda_Campana_Servlet?criterio='+criterio+'&valor='+valor;     
-             <% //Aromero 14.05.2014
-              }else if(strTabla.equals("CAMPANA")){%>
-              document.title = "Búsqueda de Campaña";
-              
-              var campana='campana';
-              url = '<%=path%>/Busqueda_Campana_Servlet?criterio='+criterio+'&valor='+valor+'&tipC='+campana;
-              <%}else if(strTabla.equals("INSTITUCIONES")){%>             
-              document.title = "Búsqueda de Instituciones";
-              url = '<%=path%>/Busqueda_Instituciones_Servlet?criterio='+criterio+'&valor='+valor;
-              <%}else if(strTabla.equals("CLIENINSTI")){%>             
-              document.title = "Búsqueda de Clientes";
-              var codInst=<%=codInst%>;
-              url = '<%=path%>/Busqueda_ClientesInstitucion_Servlet?criterio='+criterio+'&valor='+valor+'&codInst='+codInst;       
-             <%}else if(strTabla.equals("AHORROSOLES")){%>             
-              document.title = "Búsqueda de Ahorro Soles";
-              url = '<%=path%>/Busqueda_AhorroSoles_Servlet?criterio='+criterio+'&valor='+valor;
-              <%}else if(strTabla.equals("AHORRODOLARES")){%>             
-              document.title = "Búsqueda de Ahorro Dolares";
-              url = '<%=path%>/Busqueda_AhorroDolares_Servlet?criterio='+criterio+'&valor='+valor;
-            <%//gfernandez 25.09.2012
-              }else if(strTabla.equals("TIPOSPROCESO")){%>
-              document.title = "Búsqueda de Tipos de proceso";
-              url = '<%=path%>/Busqueda_TiposProceso_Servlet?criterio='+criterio+'&valor='+valor; 
-            <%//gfernandez 25.09.2012
-              }else if(strTabla.equals("CAMPANASUBCONCEPTOCONTABLE")){%>
-              document.title = "Búsqueda de subconcepto contable por Campaña";
-              url = '<%=path%>/Busqueda_SubConceptoContableCampana_Servlet?criterio='+criterio+'&valor='+valor;     
-            <%//gfernandez 03.12.2012
-              }else if(strTabla.equals("TIPOPERSONA")){%>
-              document.title = "Búsqueda de tipo de persona";
-              url = '<%=path%>/Busqueda_TipoPersona_Servlet?criterio='+criterio+'&valor='+valor;     
-            <%//gfernandez 03.12.2012
-              }else if(strTabla.equals("NIVELRIESGOLA")){%>
-              document.title = "Búsqueda del nivel de riesgo para Lavado de Activos";
-              url = '<%=path%>/Busqueda_NivelRiesgoLA_Servlet?criterio='+criterio+'&valor='+valor;     
-            <%//gfernandez 03.12.2012
-              }else if(strTabla.equals("TIPOCUENTA")){%>
-              document.title = "Búsqueda de tipo de cuenta";
-              url = '<%=path%>/Busqueda_TipoCuenta_Servlet?criterio='+criterio+'&valor='+valor;     
-            <%//gfernandez 09.12.2012
-              }else if(strTabla.equals("UBIGEODEPARTAMENTO")){%>
-              document.title = "Búsqueda de Departamentos";
-              url = '<%=path%>/Busqueda_UbigeoDepartamento_Servlet?criterio='+criterio+'&valor='+valor;     
-            <%//gfernandez 17.01.2012
-              }else if(strTabla.equals("NIVELINGRESO")){%>
-              document.title = "Búsqueda de Nivel de Riesgo";
-              url = '<%=path%>/Busqueda_NivelIngreso_Servlet?criterio='+criterio+'&valor='+valor;                
-
-            <%//ajimenez 05.04.2013
-              }else if (strTabla.equals("GRUPOPRODUCTOCREDITO")){%>
-              document.title = "Búsqueda de Grupo de Producto de Credito";
-              url = '<%=path%>/Busqueda_GrupoProductoCredito_Servlet?criterio='+criterio+'&valor='+valor;
-           <%
-              /** Inicio jventura Req.S14-061 05.06.2014 **/          
-              }else if (strTabla.equals("TIPOFECHAPAGO")){%>
-              document.title = "Búsqueda Tipo de Fecha de Pago";
-              url = '<%=path%>/Busqueda_TipoFechadePago_Servlet?criterio='+criterio+'&valor='+valor;
-              
-           <%
-              }else if (strTabla.equals("TIPOSEGURO")){%>
-              document.title = "Búsqueda Tipo de Seguro";
-              url = '<%=path%>/Busqueda_TipoSeguro_Servlet?criterio='+criterio+'&valor='+valor;
-              
-           <%     
-              }else if (strTabla.equals("ENTIDADASEGURADORA")){%>
-              document.title = "Búsqueda Empresas Aseguradora";
-              url = '<%=path%>/Busqueda_EmpresaSeguros_Servlet?criterio='+criterio+'&valor='+valor;
-              /** Fin jventura Req.S14-061 05.06.2014 **/
-              
-            <%//jgonzales 26.04.2013
-              }else if(strTabla.equals("TIPOBANCARIZACION")){%>
-              document.title = "Búsqueda de Clasificacion de Bancarizacion";
-              url = '<%=path%>/CR_C_Busqueda_TipoBancarizacion_Servlet?criterio='+criterio+'&valor='+valor;
-            
-             <%// [Req. 14-020] esalazar 19.03.2014 
-              }else if(strTabla.equals("VALORCONDICION")){%>
-              document.title = "Búsqueda de Valores por Condición";
-              url = '<%=path%>/CR_T_MantenimientoValoresPorCondicion_Servlet?action=CARGAR_POPUP&criterio='+criterio+'&valor='+valor+'&indicadorPropuesta=<%=indicadorPropuesta%>&indicadorExcepcion=<%=indicadorExcepcion%>&codigoValorCondicion=<%=codigoValorCondicion%>';
-            <%// [Req. 14-020] gmoran 07.04.2014 
-              }else if(strTabla.equals("BUSQUEDAPERSONASCLAF")){%>
-              document.title = "Búsqueda Personas";
-              url = '<%=path%>/Busqueda_PersonasClasificacion_Servlet?criterio='+criterio+'&valor='+valor+'&tipoClasificacion='+tipoClasificacion+'&codigoPersonaF='+codigoPersonaF;
-              
-            <%// [Req. 14-020] gmoran 07.04.2014 
-              }else if(strTabla.equals("PRODUCTOSBANTIQ")){%>
-              document.title = "Búsqueda Productos Bantiq";
-              url = '<%=path%>/Busqueda_ProductosBantiq_Servlet?criterio='+criterio+'&valor='+valor;
-
-            <%// [Req. 14-020] gmoran 07.04.2014 
-              }else if(strTabla.equals("PRODUCTOSDELFIN")){%>
-              document.title = "Búsqueda Productos Delfin";
-              url = '<%=path%>/Busqueda_ProductosDelfin_Servlet?criterio='+criterio+'&valor='+valor+'&codigoMoneda=<%=codigoMoneda%>';
-              
-            <%// [Req. 14-020] gmoran 07.04.2014 
-              }else if(strTabla.equals("CONSULTAPRODUCTOSBANTIQ")){%>
-              document.title = "Búsqueda Consulta Productos Bantiq";
-              url = '<%=path%>/Busqueda_ConsultaProductosBantiq_Servlet?criterio='+criterio+'&valor='+valor+'&indicadorHijos=<%=indicadorHijosBantiq%>&codigoPadre=<%=codigoPadreBantiq%>';
-            
-             <%// [Req. 14-020] gmoran 07.04.2014 
-              }else if(strTabla.equals("CONSULTACONCEPTOSBANTIQ")){%>
-              document.title = "Búsqueda Consulta Conceptos Bantiq";
-              url = '<%=path%>/Busqueda_ConsultaConceptosBantiq_Servlet?criterio='+criterio+'&valor='+valor;
-            
-            <%// [Req. 14-020] gmoran 07.04.2014 
-              }else if(strTabla.equals("CONCEPTOSCOMISION")){%>
-              document.title = "Búsqueda Conceptos Comision";
-              url = '<%=path%>/Busqueda_ConceptoComision_Servlet?criterio='+criterio+'&valor='+valor;
-
-            <%// [Req. 14-020] esalazar 11.05.2016 
-              }else if(strTabla.equals("FUNCIONARIOS_NEGOCIOS")){%>
-              document.title = "Búsqueda de Funcionarios de Negocio";
-              url = '<%=path%>/CR_T_MantenimientoUsuarioFuncionario_Servlet?action=BUSCAR_FUNCIONARIOS&criterio=' + criterio + '&valor=' + valor + '&codigoTipoBanca=<%=codigoTipoBanca%>' + '&filtrarUsuarioConectado=<%=filtrarUsuarioConectado%>';
-
-            <%//[Req. 14-003] mnieves 04.04.2014
-            }else if(strTabla.equals("CLIENTESCORPORATIVOS")){%>
-                document.title = "Búsqueda de Clientes Corporativos";
-                url = '<%=path%>/Busqueda_GeneralClientesCorporativos_Servlet?criterio='+criterio+'&valor='+valor+'&typePerson='+typePerson;
-            <%//[Req. 14-074] dfujimoto 26.05.2014
-            }else if(strTabla.equals("PROMOTORAHORRO")){%>
-                document.title = "Búsqueda Promotor";
-                url = '<%=path%>/Busqueda_PromotorAhorro_Servlet?criterio='+criterio+'&valor='+valor+'&tipoFuncionario='+typePerson+'&action='+concepto;
-            <%}else if(strTabla.equals("AGENCIAFUNCIONARIO")){ %>
-                document.title = "Búsqueda de Agencia por Promotor";
-                url = '<%=path%>/Busqueda_PromotorAhorro_Servlet?criterio='+criterio+'&valor='+valor+'&action='+concepto;                  
-            //[Req. 14-057] cchalco
-            <%}else if(strTabla.equals("CLIENTEPROVEEDORVINCULADO")){
-                String codigoAliado = request.getParameter("codigoAliado");%>
-                document.title = "Búsqueda de Clientes Proveedores";
-                var codigoAliado = <%=codigoAliado%>;
-                url = '<%=path%>/Busqueda_ClientesProveedoresVinculados_Servlet?criterio='+criterio+'&valor='+valor+'&auxiliar='+auxiliar+'&codigoAliado='+codigoAliado;
-            //[Fin Req. 14-057]
-            //[Req. 14-094] dfujimoto 08.07.2014
-            <%}else if(strTabla.equals("ROLESCTS")){%>
-                document.title = "Búsqueda Roles CTS";
-                url = '<%=path%>/Busqueda_RolesCTS_Servlet?criterio='+criterio+'&valor='+valor;
-            <%}else if(strTabla.equals("DESTINOCREDITO")){%>
-                document.title = "Búsqueda Destino Crédito";
-                url = '<%=path%>/Busqueda_DestinoCredito_Servlet?criterio='+criterio+'&valor='+valor;
-            <%}%>          
-    }else{
-            <%if(strTabla.equals("SUBCONCEPTO")){%>
-                document.title = "Búsqueda de Subconceptos";
-                url = '<%=path%>/Busqueda_SubConceptoOperacion_Servlet?criterio='+criterio+'&valor=&codoperacion='+codigoconcepto;
-        
-        <%}else if(strTabla.equals("SUBCONCEPTOCTS")){%>
-                document.title = "Búsqueda de Subconceptos";
-                var tipoNota=<%=tipoNota%>;
-                var formaAbono=<%=formaAbono%>;
-                var claseProducto=<%=claseProducto%>;
-                url = '<%=path%>/Busqueda_SubConceptoOperacion_Servlet?criterio='+criterio+'&valor=&codoperacion='+codigoconcepto+'&tipoNota='+tipoNota+'&formaAbono='+formaAbono+'&claseProducto='+claseProducto;
-            // Agregado gliceta 05.08.2010: Seguimiento de Riesgos
-            <%}else if(strTabla.equals("SUBCONCOMISI")){%>
-                document.title = "Búsqueda de Subconceptos";
-                url = '<%=path%>/Busqueda_Subconcepto_Comision_Institucion_Servlet?criterio='+criterio+'&valor=&codoperacion='+
-                codigoconcepto;
-            
-            <%}else if(strTabla.equals("CONCEPTO_INSTI")){%>             
-              document.title = "Búsqueda de Concepto Instituciones";
-              url = '<%=path%>/Busqueda_Concepto_Instituciones_Servlet?criterio='+criterio+'&valor='+valor;
-              
-             <%}else if(strTabla.equals("SUBTIPOINDRIESGO")){%>
-                
-                document.title = "Búsqueda de Sub Tipos de Indicadores de Riesgo";
-                url = '<%=path%>/Busqueda_SubTipoIndicadorRiesgo_Servlet?criterio='+criterio+'&valor=&codoperacion='+
-                codigoconcepto;
-                
-            <%}else if(strTabla.equals("SUBCONCEPTOCREDITO")){%>
-                document.title = "Búsqueda de Subconceptos CREDITO";
-                url = '<%=path%>/Busqueda_SubConceptoOperacionCreditos_Servlet?criterio='+criterio+'&valor=&codoperacion='+codigoconcepto;  
-            <%}else if(strTabla.equals("SUBCONCEPTOTERCEROS")){%> //vperez 31.08.2010 busqueda de subconceptos terceros0
-                document.title = "Búsqueda de Subconceptos Terceros";
-                url = '<%=path%>/Busqueda_SubConceptoOperacionTerceros_Servlet?criterio='+criterio+'&valor=&codoperacion='+codigoconcepto+'&hiEmpresaTerceros='+<%=hiEmpresaTerceros%>; 
-            
-            <%}else if(strTabla.equals("ENTIDADES_MANEJADORA_VALORES_ACTIVO")){%>
-                document.title = "Búsqueda de Entidades Manejadora Efectivo Activos";
-                url = '<%=path%>/OP_EntidadesManejadoraValoresActivo_Servlet?criterio='+criterio+'&valor='+valor;
-            <%}else if(strTabla.equals("ENTIDADES_MANEJADORA_VALORES_ACTIVO_BOVEDA")){%>
-                document.title = "Búsqueda de Entidades Manejadora Efectivo Activos";
-                url = '<%=path%>/OP_EntidadesManejadoraValoresActivo_Servlet?boveda=S&criterio='+criterio+'&valor='+valor;  
-            <%}else if(strTabla.equals("RELACIONDINAMICA")){%>            
-                document.title = "Búsqueda de Grupos Contables para Relación Dinámica";
-                url = '<%=path%>/Busqueda_RelacionDinamica_Servlet?criterio='+criterio+'&valor=';
-                
-            <%}else if(strTabla.equals("CONCEPTOCONTABLE")){%>            
-                document.title = "Búsqueda de Conceptos Contable";
-                url = '<%=path%>/Busqueda_ConceptoContable_Servlet?criterio='+criterio+'&valor=';
-                
-           <%}else if(strTabla.equals("OBLIGACION")){%>            
-                document.title = "Búsqueda de Obligaciones";
-                url = '<%=path%>/Busqueda_Obligaciones_Servlet?criterio='+criterio+'&valor='+valor+"&listaConceptos="+listaConceptos;
-             <%}else if(strTabla.equals("VISITADOR")){%>
-                document.title = "Búsqueda de Visitadores";
-                url = '<%=path%>/Busqueda_Visitadores_Servlet?criterio='+criterio+'&valor='+valor;   
-            <%}else if(strTabla.equals("EXPEDIENTEJUDICIAL")){%>
-                document.title = "Búsqueda de Expediente Judicial";
-                url = '<%=path%>/Busqueda_ExpedienteJudicial?criterio='+criterio+'&valor=&numeroCredito='+numeroCredito;
-                
-            <%}else if(strTabla.equals("COLUMNA")){%>
-                document.title = "Búsqueda de Columnas";
-                url = '<%=path%>/Busqueda_Columnas_Servlet?criterio='+criterio+'&valor=&tabla=<%= nombreTabla %>&campo=<%= nombreCampo %>';
-                
-            <%}else if(strTabla.equals("CARGOS")){%>
-                document.title = "Búsqueda de Cargos";
-                url = '<%=path%>/Busqueda_Cargos_Servlet?criterio='+criterio+'&valor='+valor;
-                
-            <%}else if(strTabla.equals("MOTIVOREGISTRONCND")){%>
-                document.title = "Búsqueda de Motivo Registro Nota Crédito/Débito";
-                url = '<%=path%>/Busqueda_MotivoRegistroNotaCreditoDebito_Servlet?criterio='+criterio+'&valor='+valor+"&tipoTransaccion="+tipoTransaccion;                    
-                
-            <%}else if(strTabla.equals("SUBACTIVIDADlINEAVIDA")){%>
-                document.title = "Búsqueda de Sub Actividades de la linea de vida del crédito";
-                url = '<%=path%>/Busqueda_ActividadLineaVida_Servlet?criterio='+criterio+'&valor='+valor+"&tipoActividad="+tipoActividad;
-                
-            <%}else if(strTabla.equals("COBRADORES")){%>
-                document.title = "Búsqueda de cobradores";
-                url = '<%=path%>/Busqueda_Cobradores_Servlet?criterio='+criterio+'&valor='+valor;
-                
-            <%}else if(strTabla.equals("TIPOCREDITO")){%>
-                document.title = "Búsqueda de tipos de crédito";
-                url = '<%=path%>/Busqueda_TipoCredito_Servlet?criterio='+criterio+'&valor='+valor;                    
-                
-            <%}else if(strTabla.equals("ACTIVIDADlINEAVIDA")){%>
-                document.title = "Búsqueda de Actividades del linea de vida del crédito";
-                url = '<%=path%>/Busqueda_ActividadLineaVida_Servlet?criterio='+criterio+'&valor='+valor;
-                
-            <%}else if(strTabla.equals("SUBTIPOCREDITO")){%>
-                document.title = "Búsqueda de subtipos de crédito";
-                url = '<%=path%>/Busqueda_SubTipoCredito_Servlet?criterio='+criterio+'&valor='+valor+'&codoperacion='+codigoconcepto+"&codigoTipoCredito=<%=tipoCredito%>&tipoBusqueda=<%=strAux%>"                    
-                
-            <%}else if(strTabla.equals("AGENCIA")){%>
-                document.title = "Búsqueda de Agencias";
-                //[CC17-026] gmeza 28.02.2017
-                url = '<%=path%>/Busqueda_Agencia_Servlet?criterio='+criterio+'&valor='+valor+'&indicadorEnFuncionamiento=<%=indicadorEnFuncionamiento%>';;
-                
-            // Agregado gliceta 22.09.2010: Seguimiento de Riesgos: Busqueda de Cargo Funcional 
-            <%}else if(strTabla.equals("CARGOFUNCIONAL")){%>
-                document.title = "Búsqueda de Cargo Funcional";
-                url = '<%=path%>/Busqueda_CargoFuncional_Servlet?criterio='+criterio+'&valor=';
-            //gliceta 07.07.2011: Automatizacion de Encajes     
-            <%}else if(strTabla.startsWith("SBTGREN")){%>
-                document.title = "Búsqueda de Codigos de Encaje";
-                url = '<%=path%>/servlet/EN_B_CodEncaje_Servlet?criterio='+criterio+'&valor='+valor+'&tabla='+'<%=request.getParameter("tabla")%>'; 
-            <%}else if(strTabla.equals("NUMEROCARTA")){%>
-                document.title = "Búsqueda de Cartas";
-                url = '<%=path%>/Busqueda_CartaCambioRecaudo_Servlet?criterio='+criterio+'&valor='+valor;   
-            <%}else if(strTabla.equals("CONVENIOS")){%>
-                document.title = "Búsqueda de Convenios";
-                url = '<%=path%>/Busqueda_Convenios_Servlet?criterio='+criterio+'&valor=';
-                
-            <%}else if(strTabla.equals("CONCEPTO")){%>
-                document.title = "Búsqueda de Conceptos";
-                url = '<%=path%>/Busqueda_Conceptos_Servlet?criterio='+criterio+'&valor=&concepto='+concepto;
-                
-            <%}else if(strTabla.equals("ETAPASPROCESALES")){%>
-                document.title = "Búsqueda de Etapas procesales";
-                url = '<%=path%>/Busqueda_EtapasProcesales_Servlet?criterio='+criterio+'&valor=';
-                
-            <%}else if(strTabla.equals("EFINANCIERAS")){%>
-                document.title = "Búsqueda de Entidades Financieras";
-                url = '<%=path%>/Busqueda_EntidadFinanciera_Servlet?criterio='+criterio+'&valor='+'<%=urlEfin%>';
-                
-            <%}else if(strTabla.equals("AJUSTE")){%>
-                document.title = "Búsqueda de Grupos de Ajuste";
-                url = '<%=path%>/Busqueda_GrupoAjuste_Servlet?criterio='+criterio+'&valor=';
-                
-            <%}else if(strTabla.equals("REVALUACION")){%>
-                document.title = "Búsqueda de Grupos de Revaluación";
-                url = '<%=path%>/Busqueda_GrupoRevaluacion_Servlet?criterio='+criterio+'&valor=';
-                
-            <%}else if(strTabla.equals("IMPUESTO")){%>
-                document.title = "Búsqueda de Impuestos";
-                url = '<%=path%>/Busqueda_Impuestos_Servlet?criterio='+criterio+'&valor=';
-                
-            <%}else if(strTabla.equals("MONEDA")){%>
-                document.title = "Búsqueda de Monedas";
-                url = '<%=path%>/Busqueda_Moneda_Servlet?criterio='+criterio+'&valor=';
-                
-            <%}else if(strTabla.equals("DEMANDANTE")){%>
-                 document.title = "Búsqueda de Abogados";
-                url = '<%=path%>/Busqueda_Abogados_Servlet?criterio='+criterio+'&valor='+valor;
-                
-            <%}else if(strTabla.equals("DEMANDADO")){%>
-                 document.title = "Búsqueda de Abogados";
-                url = '<%=path%>/Busqueda_Demandado_Servlet?criterio='+criterio+'&valor='+valor;
-          
-            <%}else if(strTabla.equals("JUZGADO")){%>
-                document.title = "Búsqueda de Juzgado";
-            //Inicio [CC17-002] gmeza 16.01.2017
-                url = '<%=path%>/Busqueda_Juzgado_Servlet?criterio='+criterio+'&valor='+valor+'&codigoDistritoJudicial=<%=codigoDistritoJudicial%>';
-
-            <%}else if(strTabla.equals("DISTRITOJUDICIAL")){%>
-                document.title = "Búsqueda de Distrito Judicial";
-                url = '<%=path%>/CR_C_DistritoJudicial_Servlet?criterio='+criterio+'&valor='+valor;
-            //Fin [CC17-002]
-            
-            //Inicio [CC17-012] gmeza 31.01.2017
-            <%}else if(strTabla.equals("CATALOGOCOMBOGENERICO")){%>
-                document.title = "Búsqueda de Catálogo";
-                url = '<%=path%>/CB_C_CatalogoComboGenerico_Servlet?criterio='+criterio+'&valor='+valor+'&nombreCombo=<%=nombreCombo%>'+'&metodoInsertar=<%=metodoInsertar%>';
-            
-            <%}else if(strTabla.equals("TIPOGASTOJUDICIAL")){%>
-                document.title = "Búsqueda de Tipo de Gasto Judicial";
-                url = '<%=path%>/CR_C_TipoGastoJudicial_Servlet?criterio='+criterio+'&valor='+valor;
-            //Fin [CC17-012]
-             
-            <%}else if(strTabla.equals("SECRETARIO")){%>
-                document.title = "Búsqueda de Secretario de Juzgado";
-                url = '<%=path%>/Busqueda_SecretarioJuzgado_Servlet?criterio='+criterio+'&valor='+valor;
-                
-            <%}else if(strTabla.equals("RESPUESTANOTIFICACION")){%>
-                document.title = "Búsqueda de Respuesta Notificacion";
-                url = '<%=path%>/Busqueda_RespuestaNotificacion_Servlet?criterio='+criterio+'&valor='+valor;
-                
-            <%}else if(strTabla.equals("TIPODOCUMENTO")){%>
-                document.title = "Búsqueda de Tipos de Documentos";
-                url = '<%=path%>/Busqueda_TipoDocumentos_Servlet?criterio='+criterio+'&valor=';
-            // Inicio [Req. 14-100] jventura 16.02.2016
-            <%}else if(strTabla.equals("LIQUIDACIONBANTIQ")){%>
-                document.title = "Búsqueda de Pre-Liquidación BANTIQ";
-                url = '<%=path%>/Busqueda_LiquidacionBantiq_Servlet?action=LIQUIDACIONBANTIQ&criterio='+criterio+'&valor='+valor;   
-            // Fin [Req. 14-100]
-            // Inicio [S16-019] dlazo 12.04.2016
-            <%}else if(strTabla.equals("ROLESBANTIQ")){%>
-                document.title = "Búsqueda de Roles BANTIQ";
-                url = '<%=path%>/Busqueda_RolesBantiq_Servlet?criterio='+criterio+'&valor='+valor;
-             // Fin [S16-019] dlazo 12.04.2016
-             // Inicio [S16-003] dlazo 12.04.2016
-             <%}else if(strTabla.equals("ASUNTO_SOLICITUD")){%>
-                 document.title = "Búsqueda de Asunto de Solicitud";
-                 url = '<%=path%>/Busqueda_AsuntoSolicitud_Servlet?criterio='+criterio+'&valor='+valor;
-              // Fin [S16-003] dlazo 12.04.2016
-            // Inicio [S16-034] DLAZO 07.10.2016
-            <%}else if(strTabla.equals("SECTORIAL")){%>
-                document.title = "Búsqueda de código sectorial";
-                url = '<%=path%>/Busqueda_CodigoSectorial_Servlet?criterio='+criterio+'&valor='+valor;
-            // Fin [S16-034]
-            <%}else if(strTabla.equals("PRODUCTOAHORRO")){%>
-                document.title = "Búsqueda de Productos de Ahorro";
-                url = '<%=path%>/Busqueda_ProductosAhorro_Servlet?criterio='+criterio+'&valor=&tipoPersona='+concepto;
-                
-            <%}else if(strTabla.equals("PRODUCTOAHORROSINTASA")){%>
-                document.title = "Búsqueda de Productos de Ahorro";
-                url = '<%=path%>/Busqueda_ProductosAhorroSinTasa_Servlet?criterio='+criterio+'&valor=';
-                
-            <%}else if(strTabla.equals("PRODUCTODPF")){%>
-                document.title = "Búsqueda de Productos a Plazo Fijo";
-                url = '<%=path%>/Busqueda_ProductosDPF_Servlet?criterio='+criterio+'&valor=&tipoPersona='+concepto;
-                
-            <%}else if(strTabla.equals("PRODUCTODPFSINTASA")){%>
-                document.title = "Búsqueda de Productos de Plazo Fijo";
-                url = '<%=path%>/Busqueda_ProductosDPFSinTasa_Servlet?criterio='+criterio+'&valor=';
-                
-            <%}else if(strTabla.equals("PRODUCTOCTS")){%>
-                document.title = "Búsqueda de Productos CTS";
-                url = '<%=path%>/Busqueda_ProductosCTS_Servlet?criterio='+criterio+'&valor=&tipoPersona='+concepto;
-                
-            <%}else if(strTabla.equals("PRODUCTOCTSSINTASA")){%>
-                document.title = "Búsqueda de Productos CTS";
-                url = '<%=path%>/Busqueda_Productos?criterio='+criterio+'&valor='+valor+'&claseProducto='+concepto;
-                
-            <%}else if(strTabla.equals("PRODUCTOCUENTA")){%>
-                document.title = "Búsqueda de Productos Cuenta";
-                url = '<%=path%>/Busqueda_Producto_Cuenta?criterio='+criterio+'&valor='+valor;        
-                
-            <%}else if(strTabla.equals("UBIGEO")){%>
-                document.title = "Búsqueda de Ubigeos";
-                url = '<%=path%>/Busqueda_Ubigeo_Servlet?criterio='+criterio+'&valor='+valor;
-                
-            <%}else if(strTabla.equals("CUENTAEFINANCIERAS")){%>
-                 document.title = "Búsqueda de Cuentas-Bancos";
-                 url = '<%=path%>/Busqueda_NroCuentaEntidadFinanciera_Servlet?criterio='+criterio+'&valor=&auxiliar='+auxiliar;
-                 
-            <%}else if(strTabla.equals("TIPOBLOQUEO")){%>
-                 document.title = "Búsqueda de Tipos de Bloqueo";
-                 url = '<%=path%>/Busqueda_TipoBloqueo_Servlet?criterio='+criterio+'&valor=';
-              /**Inicio [Req.14-020] gmoran 27.05.2014*/     
-              <%}else if(strTabla.equals("FASE")){%>
-                   document.title = "Búsqueda de Fases";
-                   url = '<%=path%>/CR_T_MantenimientoNivelesFlujo_Servlet?action=CARGA_POPUP&criterio='+criterio+'&valor=';
-              /*Fin [Req.14-020] gmoran 27.05.2014*/                 
-            <%}else if(strTabla.equals("FORMABLOQUEO")){%>
-                 document.title = "Búsqueda de Tipos de Bloqueo";
-                 url = '<%=path%>/Busqueda_FormaBloqueo_Servlet?criterio='+criterio+'&valor=';     
-              
-            <%}else if(strTabla.equals("TIPOBLOQUEOAHO")){%>
-                 document.title = "Búsqueda de Tipos de Bloqueo";
-                 url = '<%=path%>/Busqueda_TipoBloqueoAho_Servlet?criterio='+criterio+'&valor=';   
-                 
-            <%}else if(strTabla.equals("CENTROCOSTO")){%>
-                document.title = "Búsqueda de Centros de Costos";
-                url = '<%=path%>/Busqueda_CentroCosto_Servlet?criterio='+criterio+'&valor=';
-                
-            <%}else if(strTabla.equals("PRODUCTO")){%>
-                document.title = "Búsqueda de Productos";
-                url = '<%=path%>/Busqueda_Producto_Servlet?criterio='+criterio+'&valor=';                    
-             <%}else if(strTabla.equals("NACIONALINTERNACIONAL")){%>
-                document.title = "Búsqueda de Procedencia";
-                url = '<%=path%>/Busqueda_NacionalInternacional_Servlet?criterio='+criterio+'&valor='+valor;                
-             <%}//mnieves 22.08.2011
-                else if(strTabla.equals("TIPOCREDITOSBS")){%>
-                document.title = "Búsqueda de tipos de crédito SBS";
-                url = '<%=path%>/Busqueda_TipoCreditoSBS_Servlet?criterio='+criterio+'&valor='+valor;
-             <%}//mnieves 22.08.2011
-                else if(strTabla.equals("TIPOPERSONAJURIDICA")){%>
-                document.title = "Búsqueda de tipos de persona juridica";
-                url = '<%=path%>/Busqueda_TipoPersonaJuridica_Servlet?criterio='+criterio+'&valor='+valor;
-            <%}//mnieves 24.08.2011
-                else if(strTabla.equals("NUMEROCUENTADPF")){%>
-                document.title = "Búsqueda de Numero Cuenta DPF";
-                url = '<%=path%>/Busqueda_NumeroCuentaDPF_Servlet?criterio='+criterio+'&valor='+valor;
-            <%}else if(strTabla.equals("GESTORCOBRANZA")){%>
-                document.title = "Búsqueda de gestores de cobranza";
-                url = '<%=path%>/Busqueda_Usuarios_Servlet?criterio='+criterio+'&valor=';
-                
-            <%}else if(strTabla.equals("USUARIO")){%>
-                document.title = "Búsqueda de Usuarios";
-                url = '<%=path%>/Busqueda_Usuarios_Servlet?criterio='+criterio+'&valor=';
-                
-            <%}else if(strTabla.equals("USUARIOALL")){%>
-                document.title = "Búsqueda de Usuarios";
-                url = '<%=path%>/Busqueda_UsuariosAll_Servlet?criterio='+criterio+'&valor=';
-            
-            <%}else if(strTabla.equals("CUENTABANCARIA")){%>
-                document.title = "Búsqueda de Cuentas Bancarias";
-                url = '<%=path%>/Busqueda_CuentaBancaria_Servlet?valor=';
-                
-            <%}else if(strTabla.equals("CIIU")){%>
-                document.title = "Búsqueda de CIIU";
-                url = '<%=path%>/Busqueda_Ciiu_Servlet?criterio='+criterio+'&valor=';
-                
-            <%}else if(strTabla.equals("CIIUXSECTOR")){%>
-                document.title = "Búsqueda de CIIU x Sector";
-                url = '<%=path%>/Busqueda_CiiuSector_Servlet?criterio='+criterio+'&valor='+valor+'&txtCodigoAdic='+codigoAdic;
-                
-        <%}else if(strTabla.equals("ZONAITINERANTE")){%>
-                document.title = "Búsqueda de Zona Itinerante del Cliente";
-                url = '<%=path%>/Busqueda_ZonaItinerante_Servlet?criterio='+criterio+'&valor='+valor+'&txtCodigoAdic='+codigoAdic;
-                
-            <%}else if(strTabla.equals("CODIGOAUXILIAR")){%>
-                document.title = "Búsqueda de Códigos Auxiliares";                    
-                valor = (criterio == "Codigo" && valor != "")?concepto+valor:valor;                    
-                url = '<%=path%>/Busqueda_CodigoAuxiliar_Servlet?criterio='+criterio+'&valor=&cod='+concepto;
-                
-            <%}else if(strTabla.equals("PROFESION")){%>
-                document.title = "Búsqueda de Profesiones";
-                url = '<%=path%>/Busqueda_Profesion_Servlet?criterio='+criterio+'&valor=';
-                
-            <%}else if(strTabla.equals("CARGOOCUPACION")){%>
-                document.title = "Búsqueda de Profesiones";
-                url = '<%=path%>/Busqueda_CargoOcupacion_Servlet?criterio='+criterio+'&valor='+valor;
-                
-            <%}else if(strTabla.equals("OFICIO")){%>
-                document.title = "Búsqueda de Profesiones";
-                url = '<%=path%>/Busqueda_Oficio_Servlet?criterio='+criterio+'&valor='+valor;
-            
-            <%}else if(strTabla.equals("AREALABORAL")){%>
-                document.title = "Búsqueda de Areas Laborales";
-                url = '<%=path%>/Busqueda_AreaLaboral_Servlet?criterio='+criterio+'&valor='+valor;
-            
-            <%}else if(strTabla.equals("CUADRANTE")){%>
-                document.title = "Búsqueda de Cuadrantes";
-                url = '<%=path%>/Busqueda_Cuadrante_Servlet?criterio='+criterio+'&valor='+valor;
-            <%}else if(strTabla.equals("TRAMO")){%>
-                document.title = "Búsqueda de Tramos";
-                url = '<%=path%>/Busqueda_Tramos?criterio='+criterio+'&valor='+valor;     
-            <%}else if(strTabla.equals("RESULTADOCOBRANZA")){%>
-                document.title = "Búsqueda de Resultado Cobranza";
-                url = '<%=path%>/Busqueda_ResultadoCobranza_Servlet?criterio='+criterio+'&valor='+valor;        
-            <%}else if(strTabla.equals("SECTOR")){%>
-                document.title = "Búsqueda de Sectores Económicos";
-                url = '<%=path%>/Busqueda_SectorEconomico_Servlet?criterio='+criterio+'&valor=';
-                
-            <%}else if(strTabla.equals("MOTIVOINGRESOLN")){%>
-                document.title = "Búsqueda de Motivos de Ingreso a Base Negativa";
-                url = '<%=path%>/Busqueda_MotivoIngresoLN_Servlet?criterio='+criterio+'&valor=';
-                
-            <%}else if(strTabla.equals("ANALISTA") || strTabla.equals("PROMOTOR") || strTabla.equals("EJECUTIVO") || "PRE-ANALISTA".equals(strTabla)){%>
-                document.title = "Búsqueda de ANALISTA";
-                url = '<%=path%>/Busqueda_Usuarios_Servlet?criterio='+criterio+'&valor=&strTabla=<%=strTabla%>';
-                
-            <%}else if(strTabla.equals("PRODUCTOCREDITO")){%>
-	            document.title = "Búsqueda de Producto";
-	            <%-- Inicio [Req 14-055] jvilcapaza 18.02.2016--%>
-                url = '<%=path%>/Busqueda_ProductoCredito_Servlet?tipoPersonaTitular=<%=tipoPersonaTitular%>&tipoCredito=<%=tipoCredito%>&subTipoCredito=<%=subTipoCredito%>&criterio='+criterio+'<%=urlProducto%>'+'&valor=';
-            
-            <%}else if(strTabla.equals("PRODUCTOASEGURADORA")){%>
-                document.title = "Búsqueda de Productos Aseguradora";
-                url = '<%=path%>/OP_T_EmpresasAseguradoras_Servlet?action=BUSQUEDA_PRODUCTO_ASEGURADORA_TABLA&codigoAseguradora=<%=codigoAseguradora%>&codigoAseguradora&criterio='+criterio+'&valor=';
-            <%-- Fin [Req 14-055] --%>
-            
-            <%}else if(strTabla.equals("PRODUCTOCREDITOLC")){%>
-                document.title = "Búsqueda de Productos Credito";
-                url = '<%=path%>/Busqueda_ProductoCreditoLC_Servlet?tipoCredito=<%=tipoCredito%>&subTipoCredito=<%=subTipoCredito%>&criterio='+criterio+'&valor=';    
-                 
-            <%}else if(strTabla.equals("CARGOLABORAL")){%>
-                document.title = "Búsqueda de Cargos Laborales";
-                url = '<%=path%>/Busqueda_CargoLaboral_Servlet?criterio='+criterio+'&valor=';
-                
-            <%}else if(strTabla.equals("MOTIVORECHAZOSC")){%>
-                document.title = "Búsqueda de Motivo Rechazo de la Solicitud";
-                url = '<%=path%>/Busqueda_MotivoRechazo_Servlet?criterio='+criterio+'&valor=';
-                
-            <%}else if(strTabla.equals("MEDIDACAUTELAR")){%>
-                document.title = "Búsqueda de Medidas Cautelares";
-                url = '<%=path%>/Busqueda_MedidaCautelar_Servlet?criterio='+criterio+'&valor=';
-                
-            <%}else if(strTabla.equals("FORMATO")){%>
-                document.title = "Búsqueda de Formatos";
-                url = '<%=path%>/Busqueda_Formato_Servlet?criterio='+criterio+'&valor=';
-                
-            <%}else if(strTabla.equals("MOTIVOBLOQUEODESBLOQUEO")){%>
-                document.title = "Búsqueda de Motivos Bloqueo Desbloqueo";
-                url = '<%=path%>/Busqueda_MotivoBloqueoDesbloqueo_Servlet?tipoTransaccion='+tipoTransaccion+'&valor=&criterio='+criterio;
-                
-            <%}else if(strTabla.equals("PERSONAJURIDICA")){%>
-                document.title = "Búsqueda de Personas Juridicas";
-                url = '<%=path%>/Busqueda_PersonasJuridicas_Servlet?criterio='+criterio+'&valor=';
-                
-            <%}else if(strTabla.equals("PERSONANATURAL")){%>
-                document.title = "Búsqueda de Personas Naturales";
-                url = '<%=path%>/Busqueda_PersonaNatural_Servlet?criterio='+criterio+'&valor='+valor;
-                
-             <%}//prios 06.09.11
-             else if(strTabla.equals("PERSONA_RUC")){%>
-                document.title = "Búsqueda de Personas";
-                url = '<%=path%>/Busqueda_Personas_RUC_Servlet?criterio='+criterio+'&valor='+valor;
-              
-             <%}//mnieves 10.01.2012
-             else if(strTabla.equals("CUENTA_CONTABLE_INVENTARIO")){%>
-                document.title = "Búsqueda de Cuenta Contable";
-                aux ='<%=strAux%>';
-                url = '<%=path%>/Busqueda_CuentaContable_Inventario_Servlet?criterio='+criterio+'&valor='+valor+'&auxiliar='+aux;
-             <%}//mnieves 22.06.2012
-            else if(strTabla.equals("PRODUCTOS_NIEVELES_GRUPO_CREDITO")){%>
-                document.title = "Búsqueda de Producto Niveles Grupo Crédito";
-                aux ='<%=strAux%>';
-                url = '<%=path%>/Busqueda_ProductosNivelesGrupoProducto_Servlet?criterio='+criterio+'&valor='+valor;
-            <%}//mnieves 22.06.2012
-            else if(strTabla.equals("GESTOR_COBRANZA")){%>
-                document.title = "Búsqueda de Gestor de Cobranza";
-                aux ='<%=strAux%>';
-                url = '<%=path%>/Busqueda_GestorCobranza_Servlet?criterio='+criterio+'&valor='+valor;
-            <%}//mnieves 22.06.2012
-            else if(strTabla.equals("EMPRESA_EXTERNA")){%>
-                document.title = "Búsqueda Gestor de Empresa Externa";
-                aux ='<%=strAux%>';
-                url = '<%=path%>/Busqueda_GestorCobranza_Servlet?criterio='+criterio+'&valor='+valor+'&valorFiltro=<%=valorFiltro%>';  
-            <%}//jgonzales 27.08.2012
-            else if(strTabla.equals("GESTION_REALIZADA")){%>
-                document.title = "Búsqueda de Gestiones Realizadas";
-                url = '<%=path%>/Busqueda_GestionRealizada_Servlet?criterio='+criterio+'&valor='+valor;
-            <%}//jgonzales 27.08.2012
-            else if(strTabla.equals("RESPUESTA_GESTION")){%>
-                document.title = "Búsqueda de Respuestas de Gestión";
-                url = '<%=path%>/Busqueda_RespuestaGestion_Servlet?criterio='+criterio+'&valor='+valor;  
-                
-             //Los que no realizan búsquedas, pero necesitan poner el título     
-            <%}else if(strTabla.equals("CUENTACONTABLE")){%>
-                document.title = "Búsqueda de Cuentas Contables";
-                url = '<%=path%>/Busqueda_CuentaContable_Servlet?criterio='+criterio+'&valor='+valor+'&auxiliar='+auxiliar+'&fechaAplicacion='+fechaAplicacion;
-            
-            <%}else if(strTabla.equals("NROCUENTAENTIDAD")){%>
-                document.title = "Búsqueda de Sectores Económicos";                         
-                //[Req. 13-057] jchilon 27.05.2013 Se agrega un parámetro a la búsqueda.            
-                url = '<%=path%>/Busqueda_NroCuentaEntidadFinanciera_Servlet?criterio='+criterio+'&valor='+valor+'&filtroTipoMoneda=<%=filtroTipoMoneda%>'
-                +'&filtroCE=<%=chequeElectronico%>';
-                
-            //fvalle 31.01.2011
-           <%}else if(strTabla.equals("PERSONALTFC")){%>                            
-              document.title = "Búsqueda de Personal TFC";
-              url = '<%=path%>/Busqueda_PersonasHabilitacion_Servlet?tipo=PT&criterio='+criterio+'&valor='+valor; 
-           <%}else if(strTabla.equals("EMPRTRANSPDIN")){%>
-              document.title = "Búsqueda de Empresa Transportadora";
-              url = '<%=path%>/Busqueda_PersonasHabilitacion_Servlet?tipo=ET&criterio='+criterio+'&valor='+valor; 
-                
-            <%}else if(strTabla.equals("CUENTACONTABLEPRESUPUESTO")){%>
-                document.title = "Búsqueda de Cuentas Contables";
-                url = '<%=path%>/Busqueda_CuentaContablePresupuesto_Servlet?criterio='+criterio+
-                      '&valor='+valor+'&auxiliar='+auxiliar+'&fechaAplicacion='+fechaAplicacion;
-                      
-            <%}else if(strTabla.equals("PROVEEDORES")){%>
-                document.title = "Búsqueda de Proveedores";
-                url = '<%=path%>/Busqueda_Proveedor_Servlet?criterio='+criterio+'&valor='+valor+'&typePerson='+typePerson
-                // ajimenez 06.05.2013
-                + "&estadoRegistro=<%=estadoRegistro%>";
-            
-            <%}else if(strTabla.equals("CONTACTOS")){%>
-                document.title = "Búsqueda de Contactos";
-                url = '<%=path%>/Busqueda_Contacto_Servlet?criterio='+criterio+'&valor='+valor+'&typePerson='+typePerson+'&auxiliar='+auxiliar;
-            
-            <%}else if(strTabla.equals("CUENTAPROVEEDOR")){%>
-                document.title = "Búsqueda de Cuentas Bancarias de Persona";
-                url = '<%=path%>/Busqueda_CuentaProveedor_Servlet?criterio='+criterio+'&valor='+valor+'&typePerson='+typePerson+'&auxiliar='+auxiliar;;
-                    
-            <%}else if(strTabla.equals("PERSONAS")){%>
-                document.title = "Búsqueda de Personas";
-                <%-- [Req.14-020] esalazar 11.05.2016 --%>
-                url = '<%=path%>/Busqueda_GeneralPersonas_Servlet?criterio='+criterio+'&valor='+valor+'&typePerson='+typePerson +'&codigoFuncionario=<%=codigoFuncionario%>';
-            <!--Inicio [Req. S16-025] kdelacruz 05.09.2016 -->
-            <%}else if(strTabla.equals("OPCIONMENU")){%>
-                document.title = "Búsqueda Opción Menú";
-                var url = '<%=path%>/SS_T_MantenimientoMenuOpcion_Servlet?criterio='+criterio+'&tipoCarga=O&valor='+valor+'&indicadorNivel=<%=indicadorNivel%>&modulo=<%=codigoModulo%>&subModulo=<%=codigoSubModulo%>';
-            <!--Fin [Req. S16-025] -->
-            //Inicio [Req.S16-037] kdelacruz 23.11.2016 Adecuación del registro de Centro de Costos
-            <%}else if(strTabla.equals("GASTOSINVERSIONES")){%>
-	            document.title = "Búsqueda de Gasos de Inversiones";
-	            url = '<%=path%>/Busqueda_GastosInversiones_Servlet?action=GASTOSINVERSIONES&criterio='+criterio+'&valor='+valor;
-	         //Fin [Req.S16-037] 
-                //Inicio [Req. S14-142] aromero 15.12.2014
-            <%}else if(strTabla.equals("PERSONASPOSICLI")){%>
-                document.title = "Búsqueda de Personas";
-                var flag='flagPosi';
-                 url = '<%=path%>/Busqueda_GeneralPersonas_Servlet?criterio='+criterio+'&valor='+valor+'&typePerson='+typePerson+'&flag='+flag;
-            //Fin [Req. S14-142] aromero 15.12.2014
-
-            //Inicio [Req. 14-135] framirez 09.12.2014
-            <%}else if(strTabla.equals("PERSONAS_CONYUGUE")){%>
-                 var cony = 'S';
-                 document.title = "Búsqueda de Personas";
-                 url = '<%=path%>/GA_R_TitularesGarantia_Servlet?criterio='+criterio+'&valor='+valor+'&typePerson='+typePerson+'&cony='+cony;
-            <%}else if(strTabla.equals("APODERADO")){%>
-                 document.title = "Búsqueda de Apoderados";
-                 url = '<%=path%>/GA_T_MantenimientoApoderadosGarantia_Servlet?action=BUSCAR_APODERADOS_RELACIONADOS&codigoTitular=<%=codigoTitular%>&criterio='+criterio+'&valor='+valor+'&typePerson='+typePerson;
-            <%}else if(strTabla.equals("APODERADO_PROPIETARIO")){%>
-                 var action_ = 'BUSCAR_APODERADOS_RELACIONADOS';
-                 document.title = "Búsqueda de Apoderados";
-                 url = '<%=path%>/GA_T_MantenimientoRegistroApoderadoPropietarioBien_Servlet?action=BUSCAR_APODERADOS_RELACIONADOS&codigoPropietario=<%=codigoPropietario%>&criterio='+criterio+'&valor='+valor+'&typePerson='+typePerson;
-                 
-            <%}else if(strTabla.equals("NATURALEZA_GARANTIA")){%>
-                 var action_ = 'BUSCAR_NATURALEZA_GARANTIA';
-                 document.title = "Búsqueda de Naturaleza Garantia";
-                 url = '<%=path%>/GA_C_NaturalezaGarantia_Servlet?action=BUSCAR_NATURALEZA_GARANTIA&criterio='+criterio+'&valor='+valor;
-            //Fin [Req. 14-135]
-
-            //Inicio [Req. 14-121] aromero 08.09.2014
-            <%}else if(strTabla.equals("ADQUIRENTES")){%>
-                
-                document.title = "Búsqueda de Personas";
-                 var flag='flag';
-                 var codCorp=<%=codCorp%>;
-                 url = '<%=path%>/Busqueda_GeneralPersonas_Servlet?criterio='+criterio+'&valor='+valor+'&typePerson='+typePerson+'&flag='+flag+'&codCorp='+codCorp;
-                //Fin [Req. 14-121]
-            <%}else if(strTabla.equals("CLIENTESRCC")){%>
-                document.title = "Búsqueda de Personas";
-                url = '<%=path%>/Busqueda_ClientesRCC_Servlet?criterio='+criterio+'&valor='+valor+'&idPeriodo='+codigoconcepto;
-            <%}else if(strTabla.equals("FIDEICOMISO")){%>
-                document.title = "Búsqueda de fideicomisos";
-                url = '<%=path%>/Busqueda_Fideicomiso_Servlet?criterio='+criterio+'&valor='+valor;               
-                 
-            <%}else if(strTabla.equals("CHEQUE")){%>
-                document.title = "Búsqueda de Cheques Depósito";            
-                           
-            <%}else if(strTabla.equals("TIPOGARANTIA")){%>
-                document.title = "Búsqueda Tipo Garantia";
-                url = '<%=path%>/Busqueda_TipoGarantia_Servlet?criterio='+criterio+'&valor='+valor;    
-                
-            <%}else if(strTabla.equals("PAIS")){%>
-                document.title = "Búsqueda de Paises";
-                url = '<%=path%>/Busqueda_Pais_Servlet?criterio='+criterio+'&valor='+valor+'<%=urlPais%>';
-            
-            <%}else if(strTabla.equals("REQUISITOS")){%>
-                document.title = "Búsqueda de Requisitos";
-                url = '<%=path%>/Busqueda_Requisitos_Servlet?criterio='+criterio+'&valor='+valor;
-            
-            
-            <%}else if(strTabla.equals("AGRUPMOTIVOINGRESOLN")){%>
-            document.title = "Búsqueda de Cuentas Contables";
-            url = '<%=path%>/Busqueda_AgrupacionMotivoListaNegra_Servlet?criterio='+criterio+'&valor='+valor;
-                
-             <%}else if(strTabla.equals("CARGOSLABORALES")){%>
-                document.title = "Búsqueda Cargos Laborales";
-                url = '<%=path%>/Busqueda_CargoLaboral_Servlet?criterio='+criterio+'&valor='+valor;    
-                
-            <%}else if(strTabla.equals("CIUDAD")){%>
-                document.title = "Búsqueda de Paises";
-                url = '<%=path%>/Busqueda_Ciudad_Servlet?criterio='+criterio+'&valor='+valor;  
-            
-            <%}else if(strTabla.equals("GIRONEGOCIO")){%>
-                document.title = "Búsqueda de Paises";
-                url = '<%=path%>/Busqueda_GiroNegocio_Servlet?criterio='+criterio+'&valor='+valor;                      
-                
-            <%}else if(strTabla.equals("GIRONEGOCIOXCIIU")){%>
-                document.title = "Búsqueda de Giro de Negocio";
-                url = '<%=path%>/Busqueda_GiroNegocioCiiu_Servlet?criterio='+criterio+'&valor='+valor+'&txtCodigoAdic='+codigoAdic;
-           
-            <%}else if(strTabla.equals("CANALVENTAS")){%>
-                document.title = "Búsqueda de Canal de Ventas";
-                url = '<%=path%>/Busqueda_CanalVentas_Servlet?criterio='+criterio+'&valor='+valor;
-                
-            //gliceta 07.07.2011: Automatizacion de Encajes    
-            <%}else if(strTabla.equals("ATRIBUTOOPERATIVO")){%>
-                document.title = "Búsqueda de Atributos Operativos";
-                url = '<%=path%>/Busqueda_AtributoOperativo_Servlet?criterio='+criterio+'&valor='+valor;     
-            
-            //jpantoja 06.02.2012: Concepto Operativo
-            <%}else if(strTabla.equals("CONCEPTOOPERATIVO")){%>
-                document.title = "Búsqueda de Conceptos Operativos";
-                url = '<%=path%>/Busqueda_ConceptoOperativo_Servlet?criterio='+criterio+'&valor='+valor;
-                
-<%}else if(strTabla.equals("OFICINA")){%>
-                document.title = "Búsqueda de Oficina";
-                url = '<%=path%>/Busqueda_Oficina_Servlet?criterio='+criterio+'&valor='+valor; 
-            <%}else if(strTabla.equals("DISTRITO")){%>
-                document.title = "Búsqueda de Distrito";
-                url = '<%=path%>/Busqueda_Distrito_Servlet?criterio='+criterio+'&valor='+valor;  
-            <%}else if(strTabla.equals("CUADRANTE")){%>
-                document.title = "Búsqueda de Cuadrantes";
-                url = '<%=path%>/Busqueda_Cuadrante_Servlet?criterio='+criterio+'&valor='+valor; 
-            <%}else if(strTabla.equals("ROLES")){%>
-                document.title = "Búsqueda de Roles";
-                url = '<%=path%>/Busqueda_Roles_Servlet?criterio='+criterio+'&valor='+valor;              
-            <%}else if(strTabla.equals("BASEINSPECCION")){%>
-                document.title = "Búsqueda de Bases de Inspeccion";
-                url = '<%=path%>/Busqueda_Bases_Servlet?criterio='+criterio+'&valor='+valor+"&buscarXTipoBase=I";               
-            <%}else if(strTabla.equals("BASE")){%>
-                document.title = "Búsqueda de Bases de Inspeccion";
-                url = '<%=path%>/Busqueda_Bases_Servlet?criterio='+criterio+'&valor='+valor;            
-            <%}else if(strTabla.equals("COORDINADORBASE")){%>
-                document.title = "Búsqueda de Coordinador de Base";
-                url = '<%=path%>/Busqueda_CoordinadorBase_Servlet?criterio='+criterio+'&valor='+valor+"&codigoBase="+codigoBase; 
-            <%}else if(strTabla.equals("PRODUCTOXTIENDA")){%>
-                document.title = "Búsqueda de Producto po Tienda";
-                url = '<%=path%>/Busqueda_ProductoTienda_Servlet?criterio='+criterio+'&valor='+valor; 
-            <%}else if(strTabla.equals("PRODUCTOFINANCIERO")){%>
-                document.title = "Búsqueda de Producto Financiero.";
-                url = '<%=path%>/Busqueda_ProductoFinanciero_Servlet?criterio='+criterio+'&valor='+valor;                       
-            
-            <%}else if(strTabla.equals("BUSQUEDAINSPECTOR")){%>
-                document.title = "Búsqueda de Inspectores";
-                url = '<%=path%>/Busqueda_Inspectores_Servlet?criterio='+criterio+'&valor='+valor+"&codigoBase="+codigoBase;
-            <%}else if(strTabla.equals("BUSQUEDAGARANTE")){%>
-                document.title = "Búsqueda de Garantes";
-                url = '<%=path%>/Busqueda_Garantes_Servlet?criterio='+criterio+'&valor='+valor+"&nroSolCredito="+nroSolCredito; 
-            <%}else if(strTabla.equals("BUSQUEDARESULTADO")){%>
-                document.title = "Búsqueda de Resultado";
-                url = '<%=path%>/Busqueda_ResultadoRevision_Servlet?criterio='+criterio+'&valor='+valor+"&nroSolCredito=<%=request.getParameter("nroSolCredito")%>"; 
-            <%}else if(strTabla.equals("BUSQUEDAPARENTESCO")){%>
-                document.title = "Búsqueda de Parentesco";
-                url = '<%=path%>/Busqueda_Parentesco_Servlet?criterio='+criterio+'&valor='+valor+"&nroSolCredito=<%=request.getParameter("nroSolCredito")%>";               
-            <%}else if(strTabla.equals("BUSQUEDATIPDOCCOBRANZA")){%>
-                document.title = "Búsqueda de Documentos de Cobranza";
-                url = '<%=path%>/Busqueda_TipoDocCobranza?criterio='+criterio+'&valor='+valor;  
-            <%}else if(strTabla.equals("BUSQUEDAGESTORCOBRANZA")){%>
-                document.title = "Búsqueda de Gestores de Cobranza";
-                url = '<%=path%>/Busqueda_GestoresCobranza?criterio='+criterio+'&valor='+valor+"&codRolUsrId="+codRolUsrId;     
-            <%}else if(strTabla.equals("BUSQUEDANUMERORECIBO")){%>
-                document.title = "Búsqueda de Recibo";
-                url = '<%=path%>/Busqueda_NumeroRecibo_Servlet?criterio='+criterio+'&valor='+valor+"&codRolUsrId="+codRolUsrId+"&gestorCobranza=<%=request.getParameter("gestorCobranza")%>";
-            <%}else if(strTabla.equals("BUSQUEDASERIE")){%>
-                document.title = "Búsqueda de Series de Recibos Cobranza";
-                url = '<%=path%>/Busqueda_SeriesRecibos_Servlet?criterio='+criterio+'&valor='+valor+"&tipDoc=<%=request.getParameter("tipDoc")%>";  
-                
-            <%}else if(strTabla.equals("EMPRESAINSPECCIONLABORAL")){%>      
-                document.title = "Búsqueda de Empresa Inspeccion Laboral.";
-                url = '<%=path%>/Busqueda_Empresa_Inspecion_Laboral?criterio='+criterio+'&valor='+valor; 
-             <%}else if(strTabla.equals("USUARIOROL")){%>
-                document.title = "Búsqueda de Usuarios";
-                url = '<%=path%>/Busqueda_UsuarioPorRol_Servlet?criterio='+criterio+'&valor='+valor;
-           
-                
-               <%}else if(strTabla.equals("PRODUCTOSTIENDA")){ %>
-               document.title = "Búsqueda de Productos";               
-               url = '<%=path%>/Busqueda_Productos_Servlet?criterio='+criterio+'&valor='+valor;       
-             <%}else if(strTabla.equals("RESULTADOS")){ %>
-               document.title = "Búsqueda de RESULTADOS";               
-               url = '<%=path%>/Busqueda_Resultados_Servlet?criterio='+criterio+'&valor='+valor; 
-                <%}else if(strTabla.equals("PRODUCTOCREDITOCARTERA")){ %>
-               document.title = "Búsqueda de Producto"; 
-               url = '<%=path%>/Busqueda_ProductoCreditoCartera_Servlet?criterio='+criterio+'&valor='+valor;  
-              <%}else if(strTabla.equals("ESTADOCREDITO")){ %>
-               document.title = "Búsqueda de Estado Credito"; 
-               url = '<%=path%>/Busqueda_EstadoContable_Servlet?criterio='+criterio+'&valor='+valor;                 
-               <%}else if(strTabla.equals("GESTORCOBRANZA")){%>
-                document.title = "Búsqueda de Gestor de Cobranza";
-                url = '<%=path%>/Busqueda_GestorCobranza_Servlet?filtroDireccion='+filtroDireccion+'&criterio='+criterio+'&valor='+valor+'&strTabla=<%=strTabla%>';
-               <%}else if(strTabla.equals("GESTOR")){%>
-                document.title = "Búsqueda de gestores de cobranza";
-                url = '<%=path%>/Busqueda_Gestor_Servlet?criterio='+criterio+'&valor='+valor;
-              
-              <%}else if(strTabla.equals("RECIBO")){ %>
-               document.title = "Búsqueda de Recibo"; 
-               url = '<%=path%>/Busqueda_Recibo_Servlet?criterio='+criterio+'&valor='+valor;    
-                <%}else if(strTabla.equals("CREDITO")){%>
-               document.title = "Búsqueda de Solicitud de Credito";
-               url = '<%=path%>/Busqueda_SolicitudesCredito_Servlet?criterio='+criterio+'&valor='+valor;                   
-             <%}else if(strTabla.equals("ASIGNACION")){ %>  
-               document.title = "Búsqueda de Asignacion"; 
-               solicitud =  '<%= request.getParameter("txtCodigoSolicitud")%>';    
-                   
-               url = '<%=path%>/Busqueda_Asignacion_Servlet?criterio='+criterio+'&valor='+valor+'&solicitud='+solicitud;       
-             <%}else if(strTabla.equals("SUPERVISOR")){ %>
-               document.title = "Búsqueda de Supervisor";
-               url = '<%=path%>/Busqueda_Supervisor_Servlet?criterio='+criterio+'&valor='+valor;                
-               document.title = "Búsqueda de Credito";
-             <%}else if(strTabla.equals("CREDITOCARTERA")){%>
-               url = '<%=path%>/Busqueda_CreditoCartera_Servlet?criterio='+criterio+'&valor='+valor;
-            <%}else if(strTabla.equals("INMOBILIARIA")){%>
-               url = '<%=path%>/Busqueda_Inmobiliaria_Servlet?criterio='+criterio+'&valor='+valor; 
-            //gliceta 16.04.2012: Req. 12-058 - Cumplimiento Normativo
-            //Grupo de Reporte de Informe
-            <%}else if(strTabla.equals("GRUPOINFORME")){%>
-               url = '<%=path%>/Busqueda_GrupoInforme_Servlet?criterio='+criterio+'&valor='+valor;
-            //Tipo de Informe
-            <%}else if(strTabla.equals("TIPOINFORME")){%>
-               url = '<%=path%>/Busqueda_TipoInforme_Servlet?criterio='+criterio+'&valor='+valor   
-            //Grupo de Referencia Indice Nota SBS    
-            <%}else if(strTabla.equals("REFINDICESBS")){%>
-               url = '<%=path%>/Busqueda_RefIndiceNotaSBS_Servlet?criterio='+criterio+'&valor='+valor; 
-            //Firmas de Informe    
-            <%}else if(strTabla.equals("FIRMAINFORME")){%>
-               url = '<%=path%>/Busqueda_FirmasInformeCumplimiento_Servlet?criterio='+criterio+'&valor='+valor;                        
-            <%}else if(strTabla.equals("CONCESIONARIO")){%>
-               url = '<%=path%>/Busqueda_Concesionario_Servlet?criterio='+criterio+'&valor='+valor;
-            <%}else if(strTabla.equals("TALLER_GNV")){%>
-               url = '<%=path%>/Busqueda_TallerGNV_Servlet?criterio='+criterio+'&valor='+valor;               
-            <%}else if(strTabla.equals("OTRASPERSONAS")){%>            
-               document.title = "Búsqueda de Otras Personas";
-               //[CC17-002] gmeza 16.01.2017
-               url = '<%=path%>/Busqueda_OtrasPersonas_Servlet?criterio='+criterio+'&valor='+valor+'&codigoOtrasPersonas='+codigoOtrasPersonas+'&tipoRepresentante='+tipoRepresentante+'&tipoPersona=<%=tipoPersona%>';
-            <%}else if(strTabla.equals("TALLER")){%>
-               var cConces =  '<%= request.getParameter("cConces")%>'; 
-               url = '<%=path%>/Busqueda_Taller_Servlet?criterio='+criterio+'&valor='+valor+'&cConces='+cConces + '&codigoOtrasPersonas='+codigoOtrasPersonas;
-             <%}else if(strTabla.equals("LOCALIDAD")){
-                   if(request.getParameter("filtro")!=null){  %>          
-                              document.title = "Búsqueda de Area";
-               <%  }else{  %>
-                  document.title = "Búsqueda de Agencia";
-               <% }  %>   
-               filtro = '<%= request.getParameter("filtro")%>';         
-               url = '<%=path%>/Busqueda_Localidad_Servlet?criterio='+criterio+'&valor='+valor+'&filtro='+filtro;   
-            
-            
-
-                
-           <%}else if(strTabla.equals("VENDEDORES")){%>
-                //[Req. S14-115] jtomasto 09.10.2014
-                // document.title = "Búsqueda de Canal de Ventas";
-                document.title = "Búsqueda de Vendedores";
-                // [Req. S14-115] Fin
-                var indVendedorXAgenciaAut = '<%= request.getParameter("indVendedorXAgenciaAut")!=null?request.getParameter("indVendedorXAgenciaAut"):"NULO"%>';
-                var codAgencia = '<%= request.getParameter("codAgencia")!=null?request.getParameter("codAgencia"):"NULO"%>';
-                url = '<%=path%>/Busqueda_Vendedores_Servlet?criterio='+criterio+'&valor='+valor+'&indVendedorXAgenciaAut='+indVendedorXAgenciaAut+'&codAgencia='+codAgencia;
-           
-           <%}else if(strTabla.equals("LISTAUSUARIOS")){%>
-                document.title = "Lista de Usuarios";
-                url = '<%=path%>/Busqueda_ListaUsuarios_Servlet?criterio='+criterio+'&valor='+valor+'&indUsuarioCELB=<%=indUsuarioCELB%>'+'&codAreaLaboral=<%=codAreaLaboral%>';//gliceta 16.04.2012: Req. 12-058 - Cumplimiento Normativo     
-           
-           <%}else if(strTabla.equals("LISTAROLES")){%>
-                document.title = "Lista de Roles";
-                url = '<%=path%>/Busqueda_ListaRoles_Servlet?criterio='+criterio+'&valor='+valor;          
-                      
-           <%}else if(strTabla.equals("LISTATIPOOBSERVACION")){%>
-                document.title = "Lista de Observacion";
-                url = '<%=path%>/Busqueda_ListaObservacion_Servlet?criterio='+criterio+'&valor='+valor;          
-                
-           <%}else if(strTabla.equals("ARTICULOS")){%>
-                document.title = "Búsqueda de Articulos";
-                //jpantoja 16.01.2011 modificado para agregar un parametro de busqueda 
-                // ajimenez 28.05.2013 [13-038-II] - Parametro Empresa Retail
-                url = '<%=path%>/Busqueda_Articulos_Servlet?criterio='+criterio+'&valor='+valor+'&valorFiltro=<%=valorFiltro%>&idRetail=<%=idRetail%>';
-           
-           <%}else if(strTabla.equals("MOTIVOBLOQUEOLIBERACION")){%>
-                document.title = "Búsqueda de Motivo Bloqueo Liberacion";
-                url = '<%=path%>/Busqueda_MotivoBloqueoLiberacion_Servlet?criterio='+criterio+'&valor='+valor+"&tipoTransaccion="+tipoTransaccion;
-                
-            <%}else if(strTabla.equals("GARANTIACREDITO")){%>
-                document.title = "Búsqueda de Garantias de Credito";
-                url = '<%=path%>/Busqueda_GarantiaCredito_Servlet?criterio='+criterio+'&valor='+valor;
-                
-            <%}else if(strTabla.equals("MEDIDACAUTELAR")){%>
-                document.title = "Búsqueda de Medidas Cautelares";
-                url = '<%=path%>/Busqueda_MedidaCautelar_Servlet?criterio='+criterio+'&valor='+valor;
-
-            <%}else if(strTabla.equals("IDENTIFICACIONCOLUMNA")){%>
-                document.title = "Búsqueda de Identificadores de Columnas";
-                url = '<%=path%>/Busqueda_IdentificacionColumna_Servlet?criterio='+criterio+'&valor='+valor;
-                
-            <%}else if(strTabla.equals("PERITOTASADOR")){%>
-               document.title = "Búsqueda de Peritos";
-               url = '<%=path%>/Busqueda_PeritoTasador_Servlet?tipo=PE&criterio='+criterio+'&valor='+valor;
-            
-              <%}else if(strTabla.equals("NOTARIO")){%>
-              document.title = "Búsqueda de Notarios";
-              url = '<%=path%>/Busqueda_PeritoTasador_Servlet?tipo=NT&criterio='+criterio+'&valor='+valor;          
-             <%}else if(strTabla.equals("MOTIVOBLOQUEODESBLOQUEOTOTAL")){%>
-	             //Inicio [T-9101] gmeza 11.03.2016
-	             document.title = "Búsqueda de Motivos";
-	             var codigoGarantia=<%=codigoGarantia%>;
-	             url = '<%=path%>/Busqueda_MotivoBloqueoDesbloqueo_Servlet?criterio='+criterio+'&valor='+valor+'&codigoGarantia='+codigoGarantia;
-	             //Fin [T-9101]
-               <%}else if(strTabla.equals("SECTORECONOMICO")){%>
-               document.title = "Búsqueda de Cargos Laborales";
-               url = '<%=path%>/Busqueda_SectorEconomico_Servlet?criterio='+criterio+'&valor='+valor; 
-         
-              
-           <%}else if(strTabla.equals("GIROSOLICITUD")){%>
-              document.title = "Búsqueda de Cargos Laborales";
-              url = '<%=path%>/Busqueda_RemesasSolicitudGiro_Servlet?criterio='+criterio+'&valor='+valor;     
-           <%//rgutierrez 11.05.2012
-           }else if(strTabla.equals("CANALOPERACIONES")){%>
-              document.title = "Búsqueda de Canal de Operaciones";
-              url = '<%=path%>/Busqueda_CanalOperaciones_Servlet?criterio='+criterio+'&valor=';     
-           <%}else if(strTabla.equals("ENTIDADRECAUDADORA")){%>          
-              document.title = "Búsqueda de Entidad Recaudadora";
-              url = '<%=path%>/Busqueda_CanalOperacionRecaudacionExterna_Servlet?criterio='+criterio+'&valor=';     
-           <%//rgutierrez 06.08.2012
-              }else if(strTabla.equals("PROMOCIONCAMP")){%>
-              document.title = "Búsqueda de Campaña";
-              
-              url = '<%=path%>/Busqueda_Campana_Servlet?criterio='+criterio+'&valor='+valor;     
-        <%//Aromero 14.05.2014
-              }else if(strTabla.equals("CAMPANA")){%>
-              document.title = "Búsqueda de Campaña";
-              url = '<%=path%>/Busqueda_Campana_Servlet?criterio='+criterio+'&valor='+valor+'&tipC='+campana;
-              
-        <%}else if(strTabla.equals("INSTITUCIONES")){%>             
-              document.title = "Búsqueda de Instituciones";
-              url = '<%=path%>/Busqueda_Instituciones_Servlet?criterio='+criterio+'&valor='+valor;
-         <%}else if(strTabla.equals("CLIENINSTI")){%>             
-              document.title = "Búsqueda de Clientes";
-              var codInst=<%=codInst%>;
-              url = '<%=path%>/Busqueda_ClientesInstitucion_Servlet?criterio='+criterio+'&valor='+valor+'&codInst='+codInst;        
-         <%}else if(strTabla.equals("AHORROSOLES")){%>             
-              document.title = "Búsqueda de Ahorro Soles";
-              url = '<%=path%>/Busqueda_AhorroSoles_Servlet?criterio='+criterio+'&valor='+valor;
-              <%}else if(strTabla.equals("AHORRODOLARES")){%>             
-              document.title = "Búsqueda de Ahorro Dolares";
-              url = '<%=path%>/Busqueda_AhorroDolares_Servlet?criterio='+criterio+'&valor='+valor;
-                
-       <%//gfernandez 25.09.2012
-              }else if(strTabla.equals("TIPOSPROCESO")){%>
-              document.title = "Búsqueda de Tipos de proceso";
-              url = '<%=path%>/Busqueda_TiposProceso_Servlet?criterio='+criterio+'&valor='+valor;
-           <%//gfernandez 25.09.2012
-              }else if(strTabla.equals("CAMPANASUBCONCEPTOCONTABLE")){%>
-              document.title = "Búsqueda de subconcepto contable por Campaña";
-              url = '<%=path%>/Busqueda_SubConceptoContableCampana_Servlet?criterio='+criterio+'&valor='+valor;     
-            <%//gfernandez 03.12.2012
-              }else if(strTabla.equals("TIPOPERSONA")){%>
-              document.title = "Búsqueda de tipo de persona";
-              url = '<%=path%>/Busqueda_TipoPersona_Servlet?criterio='+criterio+'&valor='+valor;     
-            <%//gfernandez 03.12.2012
-              }else if(strTabla.equals("NIVELRIESGOLA")){%>
-              document.title = "Búsqueda del nivel de riesgo para Lavado de Activos";
-              url = '<%=path%>/Busqueda_NivelRiesgoLA_Servlet?criterio='+criterio+'&valor='+valor;     
-            <%//gfernandez 03.12.2012
-              }else if(strTabla.equals("TIPOCUENTA")){%>
-              document.title = "Búsqueda de tipo de cuenta";
-              url = '<%=path%>/Busqueda_TipoCuenta_Servlet?criterio='+criterio+'&valor='+valor;     
-            <%//gfernandez 09.12.2012
-              }else if(strTabla.equals("UBIGEODEPARTAMENTO")){%>
-              document.title = "Búsqueda de Departamentos";
-              url = '<%=path%>/Busqueda_UbigeoDepartamento_Servlet?criterio='+criterio+'&valor='+valor;     
-            <%//gfernandez 17.01.2012
-              }else if(strTabla.equals("NIVELINGRESO")){%>
-              document.title = "Búsqueda de Nivel de Riesgo";
-              url = '<%=path%>/Busqueda_NivelIngreso_Servlet?criterio='+criterio+'&valor='+valor;                
-
-            <%//ajimenez 05.04.2013
-              }else if (strTabla.equals("GRUPOPRODUCTOCREDITO")){%>
-              document.title = "Búsqueda de Grupo de Producto de Credito";
-              url = '<%=path%>/Busqueda_GrupoProductoCredito_Servlet?criterio='+criterio+'&valor='+valor;
-            
-            <%//jventura 22.05.2014 Req [S14-61]          
-              }else if (strTabla.equals("TIPOFECHAPAGO")){%>
-              document.title = "Búsqueda Tipo de Fecha de Pago";
-              url = '<%=path%>/Busqueda_TipoFechadePago_Servlet?criterio='+criterio+'&valor='+valor;
-              
-           <%//jventura 22.05.2014 Req [S14-61]          
-              }else if (strTabla.equals("TIPOSEGURO")){%>
-              document.title = "Búsqueda Tipo de Seguro";
-              url = '<%=path%>/Busqueda_TipoSeguro_Servlet?criterio='+criterio+'&valor='+valor;
-              
-           <%//jventura 22.05.2014 Req [S14-61]          
-              }else if (strTabla.equals("ENTIDADASEGURADORA")){%>
-              document.title = "Búsqueda Empresas Aseguradora";
-              url = '<%=path%>/Busqueda_EmpresaSeguros_Servlet?criterio='+criterio+'&valor='+valor;
-              
-            <%//jgonzales 26.04.2013
-              }else if(strTabla.equals("TIPOBANCARIZACION")){%>
-              document.title = "Búsqueda de Clasificacion de Bancarizacion";
-              url = '<%=path%>/CR_C_Busqueda_TipoBancarizacion_Servlet?criterio='+criterio+'&valor='+valor;
-              <%// [Req. 14-020] esalazar 19.03.2014 
-                }else if(strTabla.equals("VALORCONDICION")){%>
-                document.title = "Búsqueda de Valores por Condicion";
-                url = '<%=path%>/CR_T_MantenimientoValoresPorCondicion_Servlet?action=CARGAR_POPUP&criterio='+criterio+'&valor='+valor+'&indicadorPropuesta=<%=indicadorPropuesta%>&indicadorExcepcion=<%=indicadorExcepcion%>&codigoValorCondicion=<%=codigoValorCondicion%>';
-              <%// [Req. 14-020] gmoran 07.04.2014 
-                }else if(strTabla.equals("BUSQUEDAPERSONASCLAF")){%>
-                document.title = "Búsqueda Personas";
-                url = '<%=path%>/Busqueda_PersonasClasificacion_Servlet?criterio='+criterio+'&valor='+valor+'&tipoClasificacion='+tipoClasificacion+'&codigoPersonaF='+codigoPersonaF;              
-                      
-             <%// [Req. 14-020] gmoran 07.04.2014 
-                }else if(strTabla.equals("PRODUCTOSBANTIQ")){%>
-                document.title = "Búsqueda Consulta Productos Bantiq";
-                url = '<%=path%>/Busqueda_ProductosBantiq_Servlet?criterio='+criterio+'&valor='+valor;
-
-             <%// [Req. 14-020] gmoran 07.04.2014 
-                }else if(strTabla.equals("PRODUCTOSDELFIN")){%>
-                document.title = "Búsqueda Productos Delfin";
-                url = '<%=path%>/Busqueda_ProductosDelfin_Servlet?criterio='+criterio+'&valor='+valor+'&codigoMoneda=<%=codigoMoneda%>';
-                
-                
-             <%// [Req. 14-020] gmoran 07.04.2014 
-                }else if(strTabla.equals("CONSULTAPRODUCTOSBANTIQ")){%>
-                document.title = "Búsqueda Consulta Productos Bantiq";
-                url = '<%=path%>/Busqueda_ConsultaProductosBantiq_Servlet?criterio='+criterio+'&valor='+valor+'&indicadorHijos=<%=indicadorHijosBantiq%>&codigoPadre=<%=codigoPadreBantiq%>';
-              
-              <%// [Req. 14-020] gmoran 07.04.2014 
-                }else if(strTabla.equals("CONSULTACONCEPTOSBANTIQ")){%>
-                document.title = "Búsqueda Consulta Conceptos Bantiq";
-                url = '<%=path%>/Busqueda_ConsultaConceptosBantiq_Servlet?criterio='+criterio+'&valor='+valor;
-              
-              <%// [Req. 14-020] gmoran 07.04.2014 
-                }else if(strTabla.equals("CONCEPTOSCOMISION")){%>
-                document.title = "Búsqueda Conceptos Comisión";
-                url = '<%=path%>/Busqueda_ConceptoComision_Servlet?criterio='+criterio+'&valor='+valor;                
-
-              <%// [Req. 14-020] esalazar 11.05.2016 
-                }else if(strTabla.equals("FUNCIONARIOS_NEGOCIOS")){%>
-                document.title = "Búsqueda de Funcionarios de Negocio";
-                url = '<%=path%>/CR_T_MantenimientoUsuarioFuncionario_Servlet?action=BUSCAR_FUNCIONARIOS&criterio=' + criterio + '&valor=' + valor + '&codigoTipoBanca=<%=codigoTipoBanca%>' + '&filtrarUsuarioConectado=<%=filtrarUsuarioConectado%>';
-
-            <%//[Req. 14-003] mnieves 04.04.2014
-            }else if(strTabla.equals("CLIENTESCORPORATIVOS")){%>
-                document.title = "Búsqueda de Clientes Corporativos";
-                url = '<%=path%>/Busqueda_GeneralClientesCorporativos_Servlet?criterio='+criterio+'&valor='+valor+'&typePerson='+typePerson;                
-            <%//[Req. 14-074] dfujimoto 26.05.2014
-            }else if(strTabla.equals("PROMOTORAHORRO")){%>
-                document.title = "Búsqueda Promotor";
-                url = '<%=path%>/Busqueda_PromotorAhorro_Servlet?criterio='+criterio+'&valor='+valor+'&tipoFuncionario='+typePerson+'&action='+concepto;
-            <%}else if(strTabla.equals("AGENCIAFUNCIONARIO")){ %>
-                document.title = "Búsqueda de Agencia por Promotor";
-                url = '<%=path%>/Busqueda_PromotorAhorro_Servlet?criterio='+criterio+'&valor='+valor+'&action='+concepto;              
-            //[Req. 14-057] cchalco
-            <%}else if(strTabla.equals("CLIENTEPROVEEDORVINCULADO")){
-                String codigoAliado = request.getParameter("codigoAliado");%>
-                document.title = "Búsqueda de Clientes Proveedores";
-                 var codigoAliado = <%=codigoAliado%>;
-                url = '<%=path%>/Busqueda_ClientesProveedoresVinculados_Servlet?criterio='+criterio+'&valor='+valor+'&auxiliar='+auxiliar+'&codigoAliado='+codigoAliado;
-        //Req. S14-088 fbramirez 01.08.2014
-        <%}else if(strTabla.equals("PRODUCTOCREDITOGESTIONRIESGO")){%>
-            document.title = "Búsqueda de Productos Gestion Riesgo";
-            url = '<%=path%>/Busqueda_ProductoCredito_Servlet?tipoCredito=<%=tipoCredito%>&subTipoCredito=<%=subTipoCredito%>&flagGR=<%=flagGR%>&criterio='+criterio+'&valor='+valor+'<%=urlProducto%>';
-        <%}else if(strTabla.equals("ASOCIACIONBANCAPRODUCTO")){%>
-            document.title = "Búsqueda de Productos en Asociación Gestion Riesgo";
-            url = '<%=path%>/GR_C_MantenimientoAsociacionGestionRiesgo_Servlet?action=BUSCARPRODUCTOASOCIACION&criterio='+criterio+'&valor='+valor;    
-        //[Req. S14-088] anunez 30.10.2014
-        <%}else if(strTabla.equals("BANCAS")){%>
-            document.title = "Búsqueda de Bancas";
-            url = '<%=path%>/GR_C_MantenimientoAsociacionGestionRiesgo_Servlet?action=BUSCAR_BANCA&criterio='+criterio+'&valor='+valor;
-            
-            
-            
-            //[Fin Req. 14-057]
-            //[Req. 14-094] dfujimoto 08.07.2014
-            <%}else if(strTabla.equals("ROLESCTS")){%>
-                document.title = "Búsqueda Roles CTS";
-                url = '<%=path%>/Busqueda_RolesCTS_Servlet?criterio='+criterio+'&valor='+valor;
-            //[Req. 14-103] dfujimoto 15.09.2014
-            <%}else if(strTabla.equals("DESTINOCREDITO")){%>
-                document.title = "Búsqueda Destino Crédito";
-                url = '<%=path%>/Busqueda_DestinoCredito_Servlet?criterio='+criterio+'&valor='+valor;
-            <%-- Inicio [Req. 14-150] dfujimoto 06.02.2015 --%>
-            <%}else if(strTabla.equals("LOTEAPERTURACTS")){%>
-                document.title = "Búsqueda Lote Apertura CTS";
-                url = '<%=path%>/Busqueda_LoteAperturaCTS_Servlet?criterio='+criterio+'&valor='+valor;
-            <%-- Fin [Req. 14-150] --%>
-            <%}%>
-
-               
-            }
-            window.document.ifrmBusqueda.location.replace(url);
-        }
-        
-        function enviar(){
-            try{
-                document.frames[0].eliminarTodos();
-            }catch(error){}
-            document.getElementById('hidepage').style.visibility = '';
-        
-            var criterio        = document.frmBusqueda.cboTipoBusqueda.value;
-            var valor           = document.frmBusqueda.txtBusqueda.value.toUpperCase();
-            concepto            = "<%=strConcepto%>";
-            auxiliar            = "<%=strAux%>";
-            codigoconcepto      = "<%= strConceptoOperacion %>";
-            fechaAplicacion     = "<%= fechaAplicacion %>";
-            var tipoTransaccion = "<%= tipoTransaccion%>";
-            var listaConceptos = "<%= listaConceptos%>";
-            var codigoOtrasPersonas = "<%=codigoOtrasPersonas%>";
-            var tipoRepresentante = "<%=tipoRepresentante%>";
-            var typePerson = "<%=typePerson%>";
-         // [Req.14-020] gmoran 27.05.2014
-            var tipoClasificacion = "<%=strTipoClasificacion%>";
-            var codigoPersonaF = "<%=codigoPersonaF%>";
-        <%if(strTabla.equals("CUENTACONTABLE")){%>
-            document.title = "Búsqueda de Cuentas Contables";
-            url = '<%=path%>/Busqueda_CuentaContable_Servlet?criterio='+criterio+'&valor='+valor+'&auxiliar='+auxiliar+'&fechaAplicacion='+fechaAplicacion+'&auxCerrarVentana=N';
-            
-        // Agregado gfernandez 15.02.2012: Calculo incentivo emprendedor
-        <%}else if(strTabla.equals("TIPOINCENTIVO")){%>
-            document.title = "Búsqueda Tipo Incentivo";
-            url = '<%=path%>/Busqueda_TipoIncentivo_Servlet?criterio='+criterio+'&valor='+valor;
-        // Agregado gfernandez 15.02.2012: Calculo incentivo emprendedor                
-        <%}else if(strTabla.equals("CATEGORIAXINCENTIVO")){%>
-              document.title = "Búsqueda Categoria Incentivo";
-              url = '<%=path%>/Busqueda_CategoriaXIncentivo_Servlet?criterio='+criterio+'&valor='+valor+'&auxiliar='+auxiliar;
-        // Agregado gfernandez 15.02.2012: Calculo incentivo emprendedor                
-        <%}else if(strTabla.equals("GRUPOINCENTIVO")){%>
-              document.title = "Búsqueda Grupo Incentivo";
-              url = '<%=path%>/Busqueda_GrupoCalculoIncentivo_Servlet?criterio='+criterio+'&valor='+valor;
-        // Agregado gfernandez 15.02.2012: Calculo incentivo emprendedor                        
-        <%}else if(strTabla.equals("MORAXFILATIPOINCENTIVO")){%>
-              document.title = "Búsqueda Mora por Fila de Tipo Incentivo";
-              url = '<%=path%>/Busqueda_MoraXFilaIncentivo_Servlet?criterio='+criterio+'&valor='+valor;                                                     
-            
-        // Agregado gfernandez 29.12.2010: Validar Bloqueos y Limites Operativos: Busqueda de por Limites Operativos    
-        <%}else if(strTabla.equals("TIPOSLIMITESOPERATIVOS")){%>
-                 
-              document.title = "Búsqueda Limites Opertivos";
-              url = '<%=path%>/Busqueda_LimitesOperativos_Servlet?criterio='+criterio+'&valor='+valor;     
-          // Agregado gfernandez 11.12.2010: Validar Bloqueos y Limites Operativos: Busqueda de Tipos de credito externo            
-           <%}else if(strTabla.equals("TIPCRED")){%>
-                 
-              document.title = "Búsqueda Tipo de Creditos";
-              url = '<%=path%>/Busqueda_TipoCreditoExterno_Servlet?criterio='+criterio+'&valor='+valor;     
-                        
-          <%}else if(strTabla.equals("NROCUENTAENTIDAD")){%>
-              document.title = "Búsqueda de Sectores Económicos";
-              //[Req. 13-057] jchilon 27.05.2013 Se agrega un parámetro a la búsqueda.                          
-              url = '<%=path%>/Busqueda_NroCuentaEntidadFinanciera_Servlet?criterio='+criterio+'&valor='+valor+'&filtroCE=<%=chequeElectronico%>';
-
-            //fvalle 31.01.2011
-         <%}else if(strTabla.equals("PERSONALTFC")){%>
-              document.title = "Búsqueda de Personal TFC";
-              url = '<%=path%>/Busqueda_PersonasHabilitacion_Servlet?tipo=PT&criterio='+criterio+'&valor='+valor; 
-         <%}else if(strTabla.equals("EMPRTRANSPDIN")){%>
-              document.title = "Búsqueda de Empresa Transportadora";
-              url = '<%=path%>/Busqueda_PersonasHabilitacion_Servlet?tipo=ET&criterio='+criterio+'&valor='+valor; 
-                                
-        <%}else if(strTabla.equals("CUENTACONTABLEPRESUPUESTO")){%>
-            document.title = "Búsqueda de Cuentas Contables";
-            url = '<%=path%>/Busqueda_CuentaContablePresupuesto_Servlet?criterio='+criterio+
-                  '&valor='+valor+'&auxiliar='+auxiliar+'&fechaAplicacion='+fechaAplicacion+'&auxCerrarVentana=N';
-                  
-        <%}else if(strTabla.equals("RELACIONDINAMICA")){%>
-            document.title = "Búsqueda de Grupos Contables para Relación Dinámica";
-            url = '<%=path%>/Busqueda_RelacionDinamica_Servlet?criterio='+criterio+'&valor='+valor;
-         <%}else if(strTabla.equals("VISITADOR")){%>
-                document.title = "Búsqueda de Visitadores";
-                url = '<%=path%>/Busqueda_Visitadores_Servlet?criterio='+criterio+'&valor='+valor;   
-        <%}else if(strTabla.equals("MOTIVOREGISTRONCND")){%>
-            document.title = "Búsqueda de Motivo Registro Nota Crédito/Débito";
-            url = '<%=path%>/Busqueda_MotivoRegistroNotaCreditoDebito_Servlet?criterio='+criterio+'&valor='+valor+"&tipoTransaccion="+tipoTransaccion;                    
-            
-        <%}else if(strTabla.equals("CONCEPTO")){%>
-            document.title = "Búsqueda de Conceptos";
-            url = '<%=path%>/Busqueda_Conceptos_Servlet?criterio='+criterio+'&valor='+valor+'&concepto='+concepto;
-            
-        <%}else if(strTabla.equals("CONCEPTOCONTABLE")){%>            
-            document.title = "Búsqueda de Conceptos Contable";
-            url = '<%=path%>/Busqueda_ConceptoContable_Servlet?criterio='+criterio+'&valor='+valor;
-            
-        <%}else if(strTabla.equals("COLUMNA")){%>
-            document.title = "Búsqueda de Columnas";
-            url = '<%=path%>/Busqueda_Columnas_Servlet?criterio='+criterio+'&valor='+valor+'&tabla=<%= nombreTabla %>&campo=<%= nombreCampo %>';
-            
-        <%}else if(strTabla.equals("CARGOS")){%>
-            document.title = "Búsqueda de Cargos";
-            url = '<%=path%>/Busqueda_Cargos_Servlet?criterio='+criterio+'&valor='+valor;
-            
-        <%}else if(strTabla.equals("COBRADORES")){%>
-            document.title = "Búsqueda de cobradores";
-            url = '<%=path%>/Busqueda_Cobradores_Servlet?criterio='+criterio+'&valor='+valor;
-            
-        <%}else if(strTabla.equals("EXPEDIENTEJUDICIAL")){%>
-            document.title = "Búsqueda de Expediente Judicial";
-            url = '<%=path%>/Busqueda_ExpedienteJudicial?criterio='+criterio+'&valor='+valor+"&numeroCredito="+numeroCredito;
-            
-        <%}else if(strTabla.equals("SUBACTIVIDADlINEAVIDA")){%>
-            document.title = "Búsqueda de Sub Actividades de la linea de vida del crédito";
-            url = '<%=path%>/Busqueda_ActividadLineaVida_Servlet?criterio='+criterio+'&valor='+valor+"&tipoActividad="+tipoActividad;
-            
-        <%}else if(strTabla.equals("CONVENIOS")){%>
-            document.title = "Búsqueda de Convenios";
-            url = '<%=path%>/Busqueda_Convenios_Servlet?criterio='+criterio+'&valor='+valor;
-            
-        <%}else if(strTabla.equals("OBLIGACION")){%>
-            document.title = "Búsqueda de Obligaciones";
-            url = '<%=path%>/Busqueda_Obligaciones_Servlet?criterio='+criterio+'&valor='+valor+"&listaConceptos="+listaConceptos;
-            
-        <%}else if(strTabla.equals("TIPOCREDITO")){%>
-            document.title = "Búsqueda de tipos de crédito";
-            url = '<%=path%>/Busqueda_TipoCredito_Servlet?criterio='+criterio+'&valor='+valor;                    
-            
-        <%}else if(strTabla.equals("SUBTIPOCREDITO")){%>
-            document.title = "Búsqueda de subtipos de crédito";
-            url = '<%=path%>/Busqueda_SubTipoCredito_Servlet?criterio='+criterio+'&valor='+valor+'&codoperacion='+codigoconcepto+"&codigoTipoCredito=<%=tipoCredito%>&tipoBusqueda=<%=strAux%>";                    
-            
-        <%}else if(strTabla.equals("TIPODOCUMENTO")){%>
-            document.title = "Búsqueda de Tipos de Documentos";
-            if(criterio == "Codigo" && valor != "")
-                url = '<%=path%>/Busqueda_TipoDocumentos_Servlet?criterio='+criterio+'&valor=<%=strCodEmp%>'+rellenar(valor,"0",7,"1");
-            else
-                url = '<%=path%>/Busqueda_TipoDocumentos_Servlet?criterio='+criterio+'&valor='+valor;
-        // Inicio [Req. 14-100] jventura 16.02.2016
-         <%}else if(strTabla.equals("LIQUIDACIONBANTIQ")){%>
-             document.title = "Búsqueda de Pre-Liquidación BANTIQ";
-             url = '<%=path%>/Busqueda_LiquidacionBantiq_Servlet?action=LIQUIDACIONBANTIQ&criterio='+criterio+'&valor='+valor;   
-         // Fin [Req. 14-100]   
-         // Inicio [S16-019] dlazo 12.04.2016
-         <%}else if(strTabla.equals("ROLESBANTIQ")){%>
-             document.title = "Búsqueda de Roles BANTIQ";
-             url = '<%=path%>/Busqueda_RolesBantiq_Servlet?criterio='+criterio+'&valor='+valor;
-          // Fin [S16-019] dlazo 12.04.2016
-          // Inicio [S16-003] dlazo 12.04.2016
-          <%}else if(strTabla.equals("ASUNTO_SOLICITUD")){%>
-              document.title = "Búsqueda de Asunto de Solicitud";
-              url = '<%=path%>/Busqueda_AsuntoSolicitud_Servlet?criterio='+criterio+'&valor='+valor;
-           // Fin [S16-003] dlazo 12.04.2016
-        // Inicio [S16-034] DLAZO 07.10.2016
-        <%}else if(strTabla.equals("SECTORIAL")){%>
-            document.title = "Búsqueda de código sectorial";
-            url = '<%=path%>/Busqueda_CodigoSectorial_Servlet?criterio='+criterio+'&valor='+valor;
-        // Fin [S16-034]
-        <%}else if(strTabla.equals("UBIGEO")){%>
-            document.title = "Búsqueda de Ubigeo";
-            url = '<%=path%>/Busqueda_Ubigeo_Servlet?criterio='+criterio+'&valor='+valor;
-            
-        <%}else if(strTabla.equals("ACTIVIDADlINEAVIDA")){%>
-             document.title = "Búsqueda de Actividades del linea de vida del crédito";
-             url = '<%=path%>/Busqueda_ActividadLineaVida_Servlet?criterio='+criterio+'&valor='+valor;
-             
-        <%}else if(strTabla.equals("IMPUESTO")){%>
-            document.title = "Búsqueda de Impuestos";
-            url = '<%=path%>/Busqueda_Impuestos_Servlet?criterio='+criterio+'&valor='+valor;
-            
-        <%}else if(strTabla.equals("AGENCIA")){%>
-            document.title = "Búsqueda de Agencias";
-            //[CC17-026] gmeza 28.02.2017
-            url = '<%=path%>/Busqueda_Agencia_Servlet?criterio='+criterio+'&valor='+valor+'&indicadorEnFuncionamiento=<%=indicadorEnFuncionamiento%>';;
-            
-        // Agregado gliceta 22.09.2010: Seguimiento de Riesgos: Busqueda de Cargo Funcional
-        <%}else if(strTabla.equals("CARGOFUNCIONAL")){%>
-            document.title = "Búsqueda de Cargo Funcional";
-            url = '<%=path%>/Busqueda_CargoFuncional_Servlet?criterio='+criterio+'&valor='+valor;
-        //gliceta 07.07.2011: Automatizacion de Encajes 
-        <%}else if(strTabla.startsWith("SBTGREN")){%>
-            document.title = "Búsqueda de Codigos de Encaje";
-            url = '<%=path%>/servlet/EN_B_CodEncaje_Servlet?criterio='+criterio+'&valor='+valor+'&tabla='+'<%=request.getParameter("tabla")%>'; 
-        <%}else if(strTabla.equals("NUMEROCARTA")){%>
-                document.title = "Búsqueda de Cartas";
-                url = '<%=path%>/Busqueda_CartaCambioRecaudo_Servlet?criterio='+criterio+'&valor='+valor;   
-        <%}else if(strTabla.equals("AJUSTE")){%>
-            document.title = "Búsqueda de Grupos de Ajuste";
-            url = '<%=path%>/Busqueda_GrupoAjuste_Servlet?criterio='+criterio+'&valor='+valor;
-            
-        <%}else if(strTabla.equals("REVALUACION")){%>
-            document.title = "Búsqueda de Grupos de Revaluación";
-            url = '<%=path%>/Busqueda_GrupoRevaluacion_Servlet?criterio='+criterio+'&valor='+valor;
-            
-        <%}else if(strTabla.equals("SUBCONCEPTO")){%>
-            document.title = "Búsqueda de Subconceptos";
-            if(criterio == "Codigo")
-                url = '<%=path%>/Busqueda_SubConceptoOperacion_Servlet?criterio='+criterio+'&valor='+codigoconcepto+valor+'&codoperacion='+codigoconcepto;
-            else
-                url = '<%=path%>/Busqueda_SubConceptoOperacion_Servlet?criterio='+criterio+'&valor='+valor+"&codoperacion="+codigoconcepto;
-        
-        <%}else if(strTabla.equals("SUBCONCOMISI")){%>
-            document.title = "Búsqueda de Subconceptos";
-            if(criterio == "Codigo")
-                url = '<%=path%>/Busqueda_Subconcepto_Comision_Institucion_Servlet?criterio='+criterio+'&valor='+codigoconcepto+valor+'&codoperacion='+codigoconcepto;
-            else
-                url = '<%=path%>/Busqueda_Subconcepto_Comision_Institucion_Servlet?criterio='+criterio+'&valor='+valor+"&codoperacion="+codigoconcepto;
-        
-        <%-- Inicio [Req.14-150] aromero 28.03.2015 --%>
-        <%}else if(strTabla.equals("SUBCONCEPTOCTS")){%>
-            document.title = "Búsqueda de Subconceptos";
-             var tipoNota=<%=tipoNota%>;
-             var formaAbono=<%=formaAbono%>;
-             var claseProducto=<%=claseProducto%>;
-            if(criterio == "Codigo")
-                url = '<%=path%>/Busqueda_SubConceptoOperacion_Servlet?criterio='+criterio+'&valor='+codigoconcepto+valor+'&codoperacion='+codigoconcepto+'&tipoNota='+tipoNota+'&formaAbono='+formaAbono+'&claseProducto='+claseProducto;
-            else
-                url = '<%=path%>/Busqueda_SubConceptoOperacion_Servlet?criterio='+criterio+'&valor='+valor+"&codoperacion="+codigoconcepto+"&tipoNota="+tipoNota+"&formaAbono="+formaAbono+'&claseProducto='+claseProducto;
-        <%-- Fin [Req.14-150] --%>
-                
-        <%}else if(strTabla.equals("SUBCONCEPTOCREDITO")){%>
-            document.title = "Búsqueda de Subconceptos";
-            if(criterio == "Codigo")
-                url = '<%=path%>/Busqueda_SubConceptoOperacionCreditos_Servlet?criterio='+criterio+'&valor='+codigoconcepto+valor+'&codoperacion='+codigoconcepto;
-            else
-                url = '<%=path%>/Busqueda_SubConceptoOperacionCreditos_Servlet?criterio='+criterio+'&valor='+valor+"&codoperacion="+codigoconcepto;
-        
-        <%}else if(strTabla.equals("CONCEPTO_INSTI")){%>             
-              document.title = "Búsqueda de Concpeto Instituciones";
-              url = '<%=path%>/Busqueda_Concepto_Instituciones_Servlet?criterio='+criterio+'&valor='+valor;
-                    
-        <%}else if(strTabla.equals("SUBCONCEPTOTERCEROS")){%> //vperez 31.08.2010 subconceptos terceros
-            document.title = "Búsqueda de Subconceptos";
-            hicodcia='&hiEmpresaTerceros='+<%=hiEmpresaTerceros%>;
-            if(criterio == "Codigo")
-                url = '<%=path%>/Busqueda_SubConceptoOperacionTerceros_Servlet?criterio='+criterio+'&valor='+codigoconcepto+valor+'&codoperacion='+codigoconcepto+hicodcia;
-            else
-                url = '<%=path%>/Busqueda_SubConceptoOperacionTerceros_Servlet?criterio='+criterio+'&valor='+valor+"&codoperacion="+codigoconcepto+hicodcia;        
-                
-        <%}else if(strTabla.equals("ENTIDADES_MANEJADORA_VALORES_ACTIVO")){%>
-                document.title = "Búsqueda de Entidades Manejadora Efectivo Activos";
-                url = '<%=path%>/OP_EntidadesManejadoraValoresActivo_Servlet?criterio='+criterio+'&valor='+valor;       
-        <%}else if(strTabla.equals("ENTIDADES_MANEJADORA_VALORES_ACTIVO_BOVEDA")){%>
-                document.title = "Búsqueda de Entidades Manejadora Efectivo Activos";
-                url = '<%=path%>/OP_EntidadesManejadoraValoresActivo_Servlet?boveda=S&criterio='+criterio+'&valor='+valor;      
-        <%}else if(strTabla.equals("EFINANCIERAS")){%>
-            document.title = "Búsqueda de Entidades Financieras";
-            url = '<%=path%>/Busqueda_EntidadFinanciera_Servlet?criterio='+criterio+'&valor='+valor+'<%=urlEfin%>';
-            
-        <%}else if(strTabla.equals("MONEDA")){%>
-            document.title = "Búsqueda de Monedas";
-            url = '<%=path%>/Busqueda_Moneda_Servlet?criterio='+criterio+'&valor='+valor;
-        
-        <%}else if(strTabla.equals("PROVEEDORES")){%>
-                document.title = "Búsqueda de Proveedores";
-                url = '<%=path%>/Busqueda_Proveedor_Servlet?criterio='+criterio+'&valor='+valor+'&typePerson='+typePerson
-                // ajimenez 06.05.2013
-                + "&estadoRegistro=<%=estadoRegistro%>";
-        
-        <%}else if(strTabla.equals("CONTACTOS")){%>
-                document.title = "Búsqueda de Contactos";
-                url = '<%=path%>/Busqueda_Contacto_Servlet?criterio='+criterio+'&valor='+valor+'&typePerson='+typePerson+'&auxiliar='+auxiliar;
-        
-        <%}else if(strTabla.equals("CUENTAPROVEEDOR")){%>
-                document.title = "Búsqueda de Cuentas Bancarias de Persona";
-                url = '<%=path%>/Busqueda_CuentaProveedor_Servlet?criterio='+criterio+'&valor='+valor+'&typePerson='+typePerson+'&auxiliar='+auxiliar;;
-                
-        <%}else if(strTabla.equals("PERSONAS")){%>
-            document.title = "Búsqueda de Personas";
-            <%-- [Req.14-020] esalazar 11.05.2016 --%>
-            url = '<%=path%>/Busqueda_GeneralPersonas_Servlet?criterio='+criterio+'&valor='+valor+'&typePerson='+typePerson +'&codigoFuncionario=<%=codigoFuncionario%>';
-         <!--Inicio [Req. S16-025] kdelacruz 05.09.2016 -->
-         <%}else if(strTabla.equals("OPCIONMENU")){%>
-             document.title = "Búsqueda Opción Menú";
-             var url = '<%=path%>/SS_T_MantenimientoMenuOpcion_Servlet?criterio='+criterio+'&tipoCarga=O&valor='+valor+'&indicadorNivel=<%=indicadorNivel%>&modulo=<%=codigoModulo%>&subModulo=<%=codigoSubModulo%>';
-         <!--Fin [Req. S16-025] -->
-         //Inicio [Req.S16-037] kdelacruz 23.11.2016 Adecuación del registro de Centro de Costos
-         <%}else if(strTabla.equals("GASTOSINVERSIONES")){%>
-	         document.title = "Búsqueda de Gasos de Inversiones";
-	         url = '<%=path%>/Busqueda_GastosInversiones_Servlet?action=GASTOSINVERSIONES&criterio='+criterio+'&valor='+valor;
-         //Fin [Req.S16-037] 
-            //Inicio [Req. S14-142] aromero 15.12.2014
-        <%}else if(strTabla.equals("PERSONASPOSICLI")){%>
-            document.title = "Búsqueda de Personas";
-            var flag='flagPosi';
-            url = '<%=path%>/Busqueda_GeneralPersonas_Servlet?criterio='+criterio+'&valor='+valor+'&typePerson='+typePerson+'&flag='+flag;
-        //Fin [Req. S14-142] aromero 15.12.2014
-
-         //Inicio [Req. 14-135] framirez 09.12.2014
-         <%}else if(strTabla.equals("PERSONAS_CONYUGUE")){%>
-              var cony = 'S';
-              document.title = "Búsqueda de Personas";
-              url = '<%=path%>/GA_R_TitularesGarantia_Servlet?criterio='+criterio+'&valor='+valor+'&typePerson='+typePerson+'&cony='+cony;
-              
-         <%}else if(strTabla.equals("APODERADO")){%>
-              document.title = "Búsqueda de Apoderados";
-              url = '<%=path%>/GA_T_MantenimientoApoderadosGarantia_Servlet?action=BUSCAR_APODERADOS_RELACIONADOS&codigoTitular=<%=codigoTitular%>&criterio='+criterio+'&valor='+valor+'&typePerson='+typePerson;
-              
-         <%}else if(strTabla.equals("APODERADO_PROPIETARIO")){%>
-              var action_ = 'BUSCAR_APODERADOS_RELACIONADOS';
-              document.title = "Búsqueda de Apoderados";
-              url = '<%=path%>/GA_T_MantenimientoRegistroApoderadoPropietarioBien_Servlet?action=BUSCAR_APODERADOS_RELACIONADOS&codigoPropietario=<%=codigoPropietario%>&criterio='+criterio+'&valor='+valor+'&typePerson='+typePerson;
-              
-         <%}else if(strTabla.equals("NATURALEZA_GARANTIA")){%>
-              var action_ = 'BUSCAR_NATURALEZA_GARANTIA';
-              document.title = "Búsqueda de Naturaleza Garantia";
-              url = '<%=path%>/GA_C_NaturalezaGarantia_Servlet?action=BUSCAR_NATURALEZA_GARANTIA&criterio='+criterio+'&valor='+valor;
-         //Fin [Req. 14-135]
-
-        //Inicio [Req. 14-121] aromero 08.09.2014
-        <%}else if(strTabla.equals("ADQUIRENTES")){%>
-                document.title = "Búsqueda de Personas";
-                var flag='flag';
-                 var codCorp=<%=codCorp%>;
-                 url = '<%=path%>/Busqueda_GeneralPersonas_Servlet?criterio='+criterio+'&valor='+valor+'&typePerson='+typePerson+'&flag='+flag+'&codCorp='+codCorp;
-         //Fin [Req. 14-121]       
-        <%}else if(strTabla.equals("CLIENTESRCC")){%>
-                document.title = "Búsqueda de Personas";
-                url = '<%=path%>/Busqueda_ClientesRCC_Servlet?criterio='+criterio+'&valor='+valor+'&idPeriodo='+codigoconcepto;
-        <%}else if(strTabla.equals("FIDEICOMISO")){%>
-            document.title = "Búsqueda de fideicomisos";
-            url = '<%=path%>/Busqueda_Fideicomiso_Servlet?criterio='+criterio+'&valor='+valor;               
-                            
-        <%}else if(strTabla.equals("ETAPASPROCESALES")){%>
-            document.title = "Búsqueda de Etapas procesale";
-            url = '<%=path%>/Busqueda_EtapasProcesales_Servlet?criterio='+criterio+'&valor='+valor;                 
-            
-        <%}else if(strTabla.equals("CUENTAEFINANCIERAS")){%>
-            document.title = "Búsqueda de Cuentas-Bancos";
-            url = '<%=path%>/Busqueda_NroCuentaEntidadFinanciera_Servlet?criterio='+criterio+'&valor='+valor+'&auxiliar='+auxiliar;
-            
-        <%}else if(strTabla.equals("DEMANDANTE")){%>
-             document.title = "Búsqueda de Abogados";
-                url = '<%=path%>/Busqueda_Abogados_Servlet?criterio='+criterio+'&valor='+valor;
-            
-        <%}else if(strTabla.equals("DEMANDANDO")){%>
-             document.title = "Búsqueda de Abogados";
-                url = '<%=path%>/Busqueda_Demandado_Servlet?criterio='+criterio+'&valor='+valor;
-      
-        <%}else if(strTabla.equals("JUZGADO")){%>
-            document.title = "Búsqueda de Juzgado";
-        //Inicio [CC17-002] gmeza 16.01.2017
-            url = '<%=path%>/Busqueda_Juzgado_Servlet?criterio='+criterio+'&valor='+valor+'&codigoDistritoJudicial=<%=codigoDistritoJudicial%>';
-
-        <%}else if(strTabla.equals("DISTRITOJUDICIAL")){%>
-            document.title = "Búsqueda de Distrito Judicial";
-            url = '<%=path%>/CR_C_DistritoJudicial_Servlet?criterio='+criterio+'&valor='+valor;
-        //Fin [CC17-002]
-
-		//Inicio [CC17-012] gmeza 31.01.2017
-        <%}else if(strTabla.equals("CATALOGOCOMBOGENERICO")){%>
-            document.title = "Búsqueda de Catálogo";
-            url = '<%=path%>/CB_C_CatalogoComboGenerico_Servlet?criterio='+criterio+'&valor='+valor+'&nombreCombo=<%=nombreCombo%>'+'&metodoInsertar=<%=metodoInsertar%>';
-
-        <%}else if(strTabla.equals("TIPOGASTOJUDICIAL")){%>
-            document.title = "Búsqueda de Tipo de Gasto Judicial";
-            url = '<%=path%>/CR_C_TipoGastoJudicial_Servlet?criterio='+criterio+'&valor='+valor;
-        //Fin [CC17-012]
-            
-        <%}else if(strTabla.equals("SECRETARIO")){%>
-            document.title = "Búsqueda de Secretario de Juzgado";
-            url = '<%=path%>/Busqueda_SecretarioJuzgado_Servlet?criterio='+criterio+'&valor='+valor;
-            
-        <%}else if(strTabla.equals("RESPUESTANOTIFICACION")){%>
-                document.title = "Búsqueda de Respuesta Notificacion";
-                url = '<%=path%>/Busqueda_RespuestaNotificacion_Servlet?criterio='+criterio+'&valor='+valor;
-                
-        <%}else if(strTabla.equals("PRODUCTOAHORRO")){%>
-            document.title = "Búsqueda de Productos de Ahorro";
-            url = '<%=path%>/Busqueda_ProductosAhorro_Servlet?criterio='+criterio+'&valor='+valor+'&tipoPersona='+concepto;
-            
-        <%}else if(strTabla.equals("PRODUCTOAHORROSINTASA")){%>
-            document.title = "Búsqueda de Productos de Ahorro";
-            url = '<%=path%>/Busqueda_ProductosAhorroSinTasa_Servlet?criterio='+criterio+'&valor='+valor+'&tipoPersona='+concepto;
-            
-        <%}else if(strTabla.equals("PRODUCTODPF")){%>
-            document.title = "Búsqueda de Productos a Plazo Fijo";
-            url = '<%=path%>/Busqueda_ProductosDPF_Servlet?criterio='+criterio+'&valor='+valor+'&tipoPersona='+concepto;
-            
-        <%}else if(strTabla.equals("PRODUCTODPFSINTASA")){%>
-            document.title = "Búsqueda de Productos de Plazo Fijo";
-            url = '<%=path%>/Busqueda_ProductosDPFSinTasa_Servlet?criterio='+criterio+'&valor='+valor;
-            
-        <%}else if(strTabla.equals("PRODUCTOCTS")){%>
-            document.title = "Búsqueda de Productos CTS";
-            url = '<%=path%>/Busqueda_ProductosCTS_Servlet?criterio='+criterio+'&valor='+valor+'&tipoPersona='+concepto;
-            
-        <%}else if(strTabla.equals("PRODUCTOCTSSINTASA")){%>
-            document.title = "Búsqueda de Productos CTS";
-            url = '<%=path%>/Busqueda_Productos?criterio='+criterio+'&valor='+valor+'&claseProducto='+concepto;
-            
-        <%}else if(strTabla.equals("PRODUCTOCUENTA")){%>
-                document.title = "Búsqueda de Productos Cuenta";
-                url = '<%=path%>/Busqueda_Producto_Cuenta?criterio='+criterio+'&valor='+valor;        
-            
-        <%}else if(strTabla.equals("TIPOBLOQUEO")){%>
-            document.title = "Búsqueda de Tipos de Bloqueo";
-            url = '<%=path%>/Busqueda_TipoBloqueo_Servlet?criterio='+criterio+'&valor='+valor; 
-         /* [Req.14-020] gmoran 27.05.2014 */
-         <%}else if(strTabla.equals("FASE")){%>
-             document.title = "Búsqueda de Fases";
-             url = '<%=path%>/CR_T_MantenimientoNivelesFlujo_Servlet?action=CARGA_POPUP&criterio='+criterio+'&valor='+valor;    
-         /* [Req.14-020] gmoran 27.05.2014 */                
-        <%}else if(strTabla.equals("TIPOBLOQUEOAHO")){%>
-            document.title = "Búsqueda de Tipos de Bloqueo";
-            url = '<%=path%>/Busqueda_TipoBloqueoAho_Servlet?criterio='+criterio+'&valor='+valor;
-         
-        <%}else if(strTabla.equals("FORMABLOQUEO")){%>
-            document.title = "Búsqueda de Tipos de Bloqueo";
-            url = '<%=path%>/Busqueda_FormaBloqueo_Servlet?criterio='+criterio+'&valor='+valor; 
-           
-        <%}else if(strTabla.equals("CHEQUE")){%>
-            document.title = "Búsqueda de Cheques Depósito";
-            url = '<%=path%>/Busqueda_ChequeDeposito_Servlet?criterio='+criterio+'&valor='+valor;
-            
-        <%}else if(strTabla.equals("CENTROCOSTO")){%>
-            document.title = "Búsqueda de Centros de Costos";
-            url = '<%=path%>/Busqueda_CentroCosto_Servlet?criterio='+criterio+'&valor='+valor;
-            
-        <%}else if(strTabla.equals("CUENTABANCARIA")){%>
-            document.title = "Búsqueda de Cuentas Bancarias";
-            url = '<%=path%>/Busqueda_CuentaBancaria_Servlet?valor='+valor;
-            
-        <%}else if(strTabla.equals("PRODUCTO")){%>
-            document.title = "Búsqueda de Productos";
-            url = '<%=path%>/Busqueda_Producto_Servlet?criterio='+criterio+'&valor='+valor;
-          <%}else if(strTabla.equals("NACIONALINTERNACIONAL")){%>
-                document.title = "Búsqueda de Procedencia";
-                url = '<%=path%>/Busqueda_NacionalInternacional_Servlet?criterio='+criterio+'&valor='+valor;                
-        <%}//mnieves 22.08.2011
-                else if(strTabla.equals("TIPOCREDITOSBS")){%>
-                document.title = "Búsqueda de tipos de crédito SBS";
-                url = '<%=path%>/Busqueda_TipoCreditoSBS_Servlet?criterio='+criterio+'&valor='+valor;
-        <%}//mnieves 22.08.2011
-                else if(strTabla.equals("TIPOPERSONAJURIDICA")){%>
-                document.title = "Búsqueda de tipos de persona juridica";
-                url = '<%=path%>/Busqueda_TipoPersonaJuridica_Servlet?criterio='+criterio+'&valor='+valor;
-            <%}//mnieves 24.08.2011
-                else if(strTabla.equals("NUMEROCUENTADPF")){%>
-                document.title = "Búsqueda de Numero Cuenta DPF";
-                url = '<%=path%>/Busqueda_NumeroCuentaDPF_Servlet?criterio='+criterio+'&valor='+valor;
-        <%}else if(strTabla.equals("USUARIO")){%>
-            document.title = "Búsqueda de Usuarios";
-            url = '<%=path%>/Busqueda_Usuarios_Servlet?criterio='+criterio+'&valor='+valor;
-            
-        <%}else if(strTabla.equals("USUARIOALL")){%>
-            document.title = "Búsqueda de Usuarios";
-            url = '<%=path%>/Busqueda_UsuariosAll_Servlet?criterio='+criterio+'&valor='+valor;
-            
-        <%}else if(strTabla.equals("FORMATO")){%>
-            document.title = "Búsqueda de Formatos";
-            url = '<%=path%>/Busqueda_Formato_Servlet?criterio='+criterio+'&valor='+valor;
-            
-        <%}else if(strTabla.equals("PERSONAJURIDICA")){%>
-            document.title = "Búsqueda de Personas Juridicas";
-            url = '<%=path%>/Busqueda_PersonasJuridicas_Servlet?criterio='+criterio+'&valor='+valor;
-            
-        <%}else if(strTabla.equals("PERSONANATURAL")){%>
-            document.title = "Búsqueda de Personas Naturales";
-            url = '<%=path%>/Busqueda_PersonaNatural_Servlet?criterio='+criterio+'&valor='+valor;
-            
-        <%}//prios 06.09.11
-            else if(strTabla.equals("PERSONA_RUC")){%>
-            document.title = "Búsqueda de Personas";
-            url = '<%=path%>/Busqueda_Personas_RUC_Servlet?criterio='+criterio+'&valor='+valor;
-            
-        <%}//mnieves 10.01.2012
-        else if(strTabla.equals("CUENTA_CONTABLE_INVENTARIO")){%>
-            document.title = "Búsqueda de Cuenta Contable";
-            aux ='<%=strAux%>';
-            url = '<%=path%>/Busqueda_CuentaContable_Inventario_Servlet?criterio='+criterio+'&valor='+valor+'&auxiliar='+aux;
-        <%}//mnieves 22.06.2012
-            else if(strTabla.equals("PRODUCTOS_NIEVELES_GRUPO_CREDITO")){%>
-                document.title = "Búsqueda de Producto Niveles Grupo Crédito";
-                aux ='<%=strAux%>';
-                url = '<%=path%>/Busqueda_ProductosNivelesGrupoProducto_Servlet?criterio='+criterio+'&valor='+valor;
-        <%}//mnieves 22.06.2012
-            else if(strTabla.equals("GESTOR_COBRANZA")){%>
-                document.title = "Búsqueda de Gestor de Cobranza";
-                aux ='<%=strAux%>';
-                url = '<%=path%>/Busqueda_GestorCobranza_Servlet?criterio='+criterio+'&valor='+valor;
-        <%}//mnieves 22.06.2012
-            else if(strTabla.equals("EMPRESA_EXTERNA")){%>
-                document.title = "Búsqueda Gestor de Empresa Externa";
-                aux ='<%=strAux%>';
-                url = '<%=path%>/Busqueda_GestorCobranza_Servlet?criterio='+criterio+'&valor='+valor+'&valorFiltro=<%=valorFiltro%>';
-        <%}//jgonzales 27.08.2012
-            else if(strTabla.equals("GESTION_REALIZADA")){%>
-                document.title = "Búsqueda de Gestiones Realizadas";
-                url = '<%=path%>/Busqueda_GestionRealizada_Servlet?criterio='+criterio+'&valor='+valor;
-        <%}//jgonzales 27.08.2012
-            else if(strTabla.equals("RESPUESTA_GESTION")){%>
-                document.title = "Búsqueda de Respuestas de Gestión";
-                url = '<%=path%>/Busqueda_RespuestaGestion_Servlet?criterio='+criterio+'&valor='+valor;  
-                
-        <%}else if(strTabla.equals("CODIGOAUXILIAR")){%>
-            document.title = "Búsqueda de Códigos Auxiliares";
-            valor = (criterio == "Codigo" && valor != "")?concepto+valor:valor;
-            url = '<%=path%>/Busqueda_CodigoAuxiliar_Servlet?criterio='+criterio+'&valor='+valor+'&cod='+concepto;
-            
-        <%}else if(strTabla.equals("MOTIVOBLOQUEODESBLOQUEO")){%>
-            document.title = "Búsqueda de Motivos Bloqueo Desbloqueo";
-            url = '<%=path%>/Busqueda_MotivoBloqueoDesbloqueo_Servlet?tipoTransaccion='+tipoTransaccion+'&valor='+valor+'&criterio='+criterio;
-            
-        <%}else if(strTabla.equals("TIPOGARANTIA")){%>
-                document.title = "Búsqueda Tipo Garantia";
-                url = '<%=path%>/Busqueda_TipoGarantia_Servlet?criterio='+criterio+'&valor='+valor;
-        
-        
-        <%}else if(strTabla.equals("PAIS")){%>
-            document.title = "Búsqueda de Paises";
-            url = '<%=path%>/Busqueda_Pais_Servlet?criterio='+criterio+'&valor='+valor+'<%=urlPais%>';
-               
-        <%}else if(strTabla.equals("REQUISITOS")){%>
-                document.title = "Búsqueda de Requisitos";
-                url = '<%=path%>/Busqueda_Requisitos_Servlet?criterio='+criterio+'&valor='+valor;
-         
-          <%}else if(strTabla.equals("CARGOSLABORALES")){%>
-                document.title = "Búsqueda Cargos Laborales";
-                url = '<%=path%>/Busqueda_CargoLaboral_Servlet?criterio='+criterio+'&valor='+valor;
-         
-        <%}else if(strTabla.equals("CIUDAD")){%>
-                document.title = "Búsqueda de Paises";
-                url = '<%=path%>/Busqueda_Ciudad_Servlet?criterio='+criterio+'&valor='+valor;  
-        
-        <%}else if(strTabla.equals("AGRUPMOTIVOINGRESOLN")){%>
-            document.title = "Búsqueda de Cuentas Contables";
-            url = '<%=path%>/Busqueda_AgrupacionMotivoListaNegra_Servlet?criterio='+criterio+'&valor='+valor;
-        
-                
-         <%}else if(strTabla.equals("GIRONEGOCIO")){%>
-                document.title = "Búsqueda de Paises";
-                url = '<%=path%>/Busqueda_GiroNegocio_Servlet?criterio='+criterio+'&valor='+valor;    
-                
-         <%}else if(strTabla.equals("GIRONEGOCIOXCIIU")){%>
-                document.title = "Búsqueda de Giro de Negocio";
-                url = '<%=path%>/Busqueda_GiroNegocioCiiu_Servlet?criterio='+criterio+'&valor='+valor+'&txtCodigoAdic='+codigoAdic;
-                            
-        <%}else if(strTabla.equals("CANALVENTAS")){%>
-                document.title = "Búsqueda de Canal de Ventas";
-                url = '<%=path%>/Busqueda_CanalVentas_Servlet?criterio='+criterio+'&valor='+valor;       
-
-        //gliceta 07.07.2011: Automatizacion de Encajes
-        <%}else if(strTabla.equals("ATRIBUTOOPERATIVO")){%>
-             document.title = "Búsqueda de Atributos Operativos";
-             url = '<%=path%>/Busqueda_AtributoOperativo_Servlet?criterio='+criterio+'&valor='+valor; 
-        
-        //jpantoja 06.02.2012: Concepto Operativo
-        <%}else if(strTabla.equals("CONCEPTOOPERATIVO")){%>
-             document.title = "Búsqueda de Conceptos Operativos";
-             url = '<%=path%>/Busqueda_ConceptoOperativo_Servlet?criterio='+criterio+'&valor='+valor;
-             
-<%}else if(strTabla.equals("OFICINA")){%>
-                document.title = "Búsqueda de Oficina";
-                url = '<%=path%>/Busqueda_Oficina_Servlet?criterio='+criterio+'&valor='+valor; 
-            <%}else if(strTabla.equals("DISTRITO")){%>
-                document.title = "Búsqueda de Distrito";
-                url = '<%=path%>/Busqueda_Distrito_Servlet?criterio='+criterio+'&valor='+valor;  
-            <%}else if(strTabla.equals("CUADRANTE")){%>
-                document.title = "Búsqueda de Cuadrantes";
-                url = '<%=path%>/Busqueda_Cuadrante_Servlet?criterio='+criterio+'&valor='+valor; 
-            <%}else if(strTabla.equals("ROLES")){%>
-                document.title = "Búsqueda de Roles";
-                url = '<%=path%>/Busqueda_Roles_Servlet?criterio='+criterio+'&valor='+valor;            
-            <%}else if(strTabla.equals("BASEINSPECCION")){%>
-                document.title = "Búsqueda de Bases de Inspeccion";
-                url = '<%=path%>/Busqueda_Bases_Servlet?criterio='+criterio+'&valor='+valor+"&buscarXTipoBase=I";               
-            <%}else if(strTabla.equals("BASE")){%>
-                document.title = "Búsqueda de Bases de Inspeccion";
-                url = '<%=path%>/Busqueda_Bases_Servlet?criterio='+criterio+'&valor='+valor;            
-            <%}else if(strTabla.equals("COORDINADORBASE")){%>
-                document.title = "Búsqueda de Coordinador de Base";
-                url = '<%=path%>/Busqueda_CoordinadorBase_Servlet?criterio='+criterio+'&valor='+valor+"&codigoBase="+codigoBase; 
-            <%}else if(strTabla.equals("PRODUCTOXTIENDA")){%>
-                document.title = "Búsqueda de Producto po Tienda";
-                url = '<%=path%>/Busqueda_ProductoTienda_Servlet?criterio='+criterio+'&valor='+valor; 
-            <%}else if(strTabla.equals("PRODUCTOFINANCIERO")){%>
-                document.title = "Búsqueda de Producto Financiero.";
-                url = '<%=path%>/Busqueda_ProductoFinanciero_Servlet?criterio='+criterio+'&valor='+valor;                       
-            /**
-                 * BUSQUEDAINSPECTOR,BusquedaDeLosInspectores
-                 * 
-                 *@author gfernandez
-                 *@since 04.11.2010
-                **/
-            <%}else if(strTabla.equals("BUSQUEDAINSPECTOR")){%>
-                document.title = "Búsqueda de Inspectores";
-                url = '<%=path%>/Busqueda_Inspectores_Servlet?criterio='+criterio+'&valor='+valor+"&codigoBase="+codigoBase;
-            <%}else if(strTabla.equals("BUSQUEDAGARANTE")){%>
-                document.title = "Búsqueda de Garantes";
-                url = '<%=path%>/Busqueda_Garantes_Servlet?criterio='+criterio+'&valor='+valor+"&nroSolCredito="+nroSolCredito; 
-            <%}else if(strTabla.equals("BUSQUEDARESULTADO")){%>
-                document.title = "Búsqueda de Resultado";
-                url = '<%=path%>/Busqueda_ResultadoRevision_Servlet?criterio='+criterio+'&valor='+valor+"&nroSolCredito=<%=request.getParameter("nroSolCredito")%>"; 
-            <%}else if(strTabla.equals("BUSQUEDAPARENTESCO")){%>
-                document.title = "Búsqueda de Parentesco";
-                url = '<%=path%>/Busqueda_Parentesco_Servlet?criterio='+criterio+'&valor='+valor+"&nroSolCredito=<%=request.getParameter("nroSolCredito")%>";               
-            <%}else if(strTabla.equals("BUSQUEDATIPDOCCOBRANZA")){%>
-                document.title = "Búsqueda de Documentos de Cobranza";
-                url = '<%=path%>/Busqueda_TipoDocCobranza?criterio='+criterio+'&valor='+valor;  
-            <%}else if(strTabla.equals("BUSQUEDAGESTORCOBRANZA")){%>
-                document.title = "Búsqueda de Gestores de Cobranza";
-                url = '<%=path%>/Busqueda_GestoresCobranza?criterio='+criterio+'&valor='+valor+"&codRolUsrId="+codRolUsrId;     
-            <%}else if(strTabla.equals("BUSQUEDANUMERORECIBO")){%>
-                document.title = "Búsqueda de Recibo";
-                url = '<%=path%>/Busqueda_NumeroRecibo_Servlet?criterio='+criterio+'&valor='+valor+"&gestorCobranza=<%=request.getParameter("gestorCobranza")%>";
-            <%}else if(strTabla.equals("BUSQUEDASERIE")){%>
-                document.title = "Búsqueda de Series de Recibos Cobranza";
-                url = '<%=path%>/Busqueda_SeriesRecibos_Servlet?criterio='+criterio+'&valor='+valor+"&tipDoc=<%=request.getParameter("tipDoc")%>";  
-                
-            <%}else if(strTabla.equals("EMPRESAINSPECCIONLABORAL")){%>      
-                document.title = "Búsqueda de Empresa Inspeccion Laboral.";
-                url = '<%=path%>/Busqueda_Empresa_Inspecion_Laboral?criterio='+criterio+'&valor='+valor; 
-             <%}else if(strTabla.equals("USUARIOROL")){%>
-                document.title = "Búsqueda de Usuarios";
-                url = '<%=path%>/Busqueda_UsuarioPorRol_Servlet?criterio='+criterio+'&valor='+valor;
-           
-                
-               <%}else if(strTabla.equals("PRODUCTOSTIENDA")){ %>
-               document.title = "Búsqueda de Productos";               
-               url = '<%=path%>/Busqueda_Productos_Servlet?criterio='+criterio+'&valor='+valor;       
-             <%}else if(strTabla.equals("RESULTADOS")){ %>
-               document.title = "Búsqueda de RESULTADOS";               
-               url = '<%=path%>/Busqueda_Resultados_Servlet?criterio='+criterio+'&valor='+valor; 
-                <%}else if(strTabla.equals("PRODUCTOCREDITOCARTERA")){ %>
-               document.title = "Búsqueda de Producto"; 
-               url = '<%=path%>/Busqueda_ProductoCreditoCartera_Servlet?criterio='+criterio+'&valor='+valor;  
-              <%}else if(strTabla.equals("ESTADOCREDITO")){ %>
-               document.title = "Búsqueda de Estado Credito"; 
-               url = '<%=path%>/Busqueda_EstadoContable_Servlet?criterio='+criterio+'&valor='+valor;                 
-               <%}else if(strTabla.equals("GESTORCOBRANZA")){%>
-                document.title = "Búsqueda de Gestor de Cobranza";
-                url = '<%=path%>/Busqueda_GestorCobranza_Servlet?filtroDireccion='+filtroDireccion+'&criterio='+criterio+'&valor='+valor+'&strTabla=<%=strTabla%>';
-               <%}else if(strTabla.equals("GESTOR")){%>
-                document.title = "Búsqueda de gestores de cobranza";
-                url = '<%=path%>/Busqueda_Gestor_Servlet?criterio='+criterio+'&valor='+valor;
-              
-              <%}else if(strTabla.equals("RECIBO")){ %>
-               document.title = "Búsqueda de Recibo"; 
-               url = '<%=path%>/Busqueda_Recibo_Servlet?criterio='+criterio+'&valor='+valor;    
-                <%}else if(strTabla.equals("CREDITO")){%>
-               
-               document.title = "Búsqueda de Solicitud de Credito";
-               url = '<%=path%>/Busqueda_SolicitudesCredito_Servlet?criterio='+criterio+'&valor='+valor;                   
-             <%}else if(strTabla.equals("ASIGNACION")){ %>  
-               document.title = "Búsqueda de Asignacion"; 
-               solicitud =  '<%= request.getParameter("txtCodigoSolicitud")%>';    
-                   
-               url = '<%=path%>/Busqueda_Asignacion_Servlet?criterio='+criterio+'&valor='+valor+'&solicitud='+solicitud;       
-             <%}else if(strTabla.equals("SUPERVISOR")){ %>
-               document.title = "Búsqueda de Supervisor";
-               url = '<%=path%>/Busqueda_Supervisor_Servlet?criterio='+criterio+'&valor='+valor;                
-               document.title = "Búsqueda de Credito";
-             <%}else if(strTabla.equals("CREDITOCARTERA")){%>
-               url = '<%=path%>/Busqueda_CreditoCartera_Servlet?criterio='+criterio+'&valor='+valor;
-             <%}else if(strTabla.equals("INMOBILIARIA")){%>
-               url = '<%=path%>/Busqueda_Inmobiliaria_Servlet?criterio='+criterio+'&valor='+valor;
-             <%}else if(strTabla.equals("CONCESIONARIO")){%>
-               url = '<%=path%>/Busqueda_Concesionario_Servlet?criterio='+criterio+'&valor='+valor;  
-             //gliceta 16.04.2012: Req. 12-058 - Cumplimiento Normativo
-             //Grupo de Reporte de Informe
-             <%}else if(strTabla.equals("GRUPOINFORME")){%>
-               url = '<%=path%>/Busqueda_GrupoInforme_Servlet?criterio='+criterio+'&valor='+valor;
-             //Tipo de Informe
-             <%}else if(strTabla.equals("TIPOINFORME")){%>
-               url = '<%=path%>/Busqueda_TipoInforme_Servlet?criterio='+criterio+'&valor='+valor;  
-             //Grupo de Referencia Indice Nota SBS    
-             <%}else if(strTabla.equals("REFINDICESBS")){%>
-               url = '<%=path%>/Busqueda_RefIndiceNotaSBS_Servlet?criterio='+criterio+'&valor='+valor;
-             //Firmas de Informe    
-             <%}else if(strTabla.equals("FIRMAINFORME")){%>
-               url = '<%=path%>/Busqueda_FirmasInformeCumplimiento_Servlet?criterio='+criterio+'&valor='+valor;  
-             <%}else if(strTabla.equals("TALLER_GNV")){%>
-               url = '<%=path%>/Busqueda_TallerGNV_Servlet?criterio='+criterio+'&valor='+valor;
-             <%}else if(strTabla.equals("OTRASPERSONAS")){%>
-               document.title = "Búsqueda de Otras Personas";
-               //[CC17-002] gmeza 16.01.2017
-               url = '<%=path%>/Busqueda_OtrasPersonas_Servlet?criterio='+criterio+'&valor='+valor+'&codigoOtrasPersonas='+codigoOtrasPersonas+'&tipoRepresentante='+tipoRepresentante+'&tipoPersona=<%=tipoPersona%>';
-             <%}else if(strTabla.equals("TALLER")){%>
-               var cConces =  '<%= request.getParameter("cConces")%>'; 
-               url = '<%=path%>/Busqueda_Taller_Servlet?criterio='+criterio+'&valor='+valor+'&cConces='+cConces + '&codigoOtrasPersonas='+codigoOtrasPersonas;
-             <%}else if(strTabla.equals("LOCALIDAD")){
-                   if(request.getParameter("filtro")!=null){  %>          
-                              document.title = "Búsqueda de Area";
-               <%  }else{  %>
-                  document.title = "Búsqueda de Agencia";
-               <% }  %>   
-               filtro = '<%= request.getParameter("filtro")%>';         
-               url = '<%=path%>/Busqueda_Localidad_Servlet?criterio='+criterio+'&valor='+valor+'&filtro='+filtro;   
-            
-            
-
-
-                
-           <%}else if(strTabla.equals("VENDEDORES")){%>
-                document.title = "Búsqueda de Canal de Ventas";
-                var indVendedorXAgenciaAut = '<%= request.getParameter("indVendedorXAgenciaAut")!=null?request.getParameter("indVendedorXAgenciaAut"):"NULO"%>';
-                var codAgencia = '<%= request.getParameter("codAgencia")!=null?request.getParameter("codAgencia"):"NULO"%>';
-                url = '<%=path%>/Busqueda_Vendedores_Servlet?criterio='+criterio+'&valor='+valor+'&indVendedorXAgenciaAut='+indVendedorXAgenciaAut+'&codAgencia='+codAgencia;
-                
-           <%}else if(strTabla.equals("LISTAUSUARIOS")){%>
-                document.title = "Lista de Usuarios";
-                url = '<%=path%>/Busqueda_ListaUsuarios_Servlet?criterio='+criterio+'&valor='+valor+'&indUsuarioCELB=<%=indUsuarioCELB%>'+'&codAreaLaboral=<%=codAreaLaboral%>';//gliceta 16.04.2012: Req. 12-058 - Cumplimiento Normativo     
-                
-           <%}else if(strTabla.equals("LISTAROLES")){%>
-                document.title = "Lista de Roles";
-                url = '<%=path%>/Busqueda_ListaRoles_Servlet?criterio='+criterio+'&valor='+valor;               
-  
-        <%}else if(strTabla.equals("LISTATIPOOBSERVACION")){%>
-                document.title = "Lista de Observacion";
-                url = '<%=path%>/Busqueda_ListaObservacion_Servlet?criterio='+criterio+'&valor='+valor;          
-                
-        <%}else if(strTabla.equals("ARTICULOS")){%>
-                document.title = "Búsqueda de Articulos";
-                //jpantoja 16.01.2011 modificado para agregar un parametro de busqueda 
-                // ajimenez 28.05.2013 [13-038-II] - Parametro Empresa Retail
-                url = '<%=path%>/Busqueda_Articulos_Servlet?criterio='+criterio+'&valor='+valor+'&valorFiltro=<%=valorFiltro%>&idRetail=<%=idRetail%>';
-                   
-        <%}else if(strTabla.equals("PRODUCTOCREDITO")){%>
-	        <%-- Inicio [Req. 14-055]  jvilcapaza 20.06.2014 --%>
-	        document.title = "Búsqueda de Productos";
-	        url = '<%=path%>/Busqueda_ProductoCredito_Servlet?tipoPersonaTitular=<%=tipoPersonaTitular%>&tipoCredito=<%=tipoCredito%>&subTipoCredito=<%=subTipoCredito%>&criterio='+criterio+'&valor='+valor+'<%=urlProducto%>';
-	           
-        <%}else if(strTabla.equals("PRODUCTOASEGURADORA")){%>
-                document.title = "Búsqueda de Productos Aseguradora";
-                url = '<%=path%>/OP_T_EmpresasAseguradoras_Servlet?action=BUSQUEDA_PRODUCTO_ASEGURADORA_TABLA&codigoAseguradora=<%=codigoAseguradora%>&criterio='+criterio+'&valor='+valor;
-        <%-- Fin [Req. 14-055] --%>
-        <%}else if(strTabla.equals("PRODUCTOCREDITOLC")){%>
-                document.title = "Búsqueda de Productos Credito";
-                url = '<%=path%>/Busqueda_ProductoCreditoLC_Servlet?tipoCredito=<%=tipoCredito%>&subTipoCredito=<%=subTipoCredito%>&criterio='+criterio+'&valor='+valor+'<%=urlProducto%>';    
-             
-        <%}else if(strTabla.equals("PROMOTOR")){%>
-            document.title = "Búsqueda de PROMOTOR";
-            url = '<%=path%>/Busqueda_Usuarios_Servlet?criterio='+criterio+'&valor='+valor+'&strTabla=<%=strTabla%>';
-            
-        <%}else if(strTabla.equals("ANALISTA")){%>
-            document.title = "Búsqueda de ANALISTA";
-            url = '<%=path%>/Busqueda_Usuarios_Servlet?criterio='+criterio+'&valor='+valor+'&strTabla=<%=strTabla%>';
-            
-        <%}else if(strTabla.equals("EJECUTIVO")){%>
-            document.title = "Búsqueda de EJECUTIVO";
-            url = '<%=path%>/Busqueda_Usuarios_Servlet?criterio='+criterio+'&valor='+valor+'&strTabla=<%=strTabla%>';
-          //stacanga 29.03.2012
-        <%}else if(strTabla.equals("PRE-ANALISTA")){%>
-                document.title = "Búsqueda de PRE ANALISTA";
-                url = '<%=path%>/Busqueda_Usuarios_Servlet?criterio='+criterio+'&valor='+valor+'&strTabla=<%=strTabla%>';      
-        <%}else if(strTabla.equals("CIIU")){%>
-            document.title = "Búsqueda de CIIU";
-            url = '<%=path%>/Busqueda_Ciiu_Servlet?criterio='+criterio+'&valor='+valor;
-            
-        <%}else if(strTabla.equals("CIIUXSECTOR")){%>
-            document.title = "Búsqueda de CIIU x Sector";
-            url = '<%=path%>/Busqueda_CiiuSector_Servlet?criterio='+criterio+'&valor='+valor+'&txtCodigoAdic='+codigoAdic;
-            
-      <%}else if(strTabla.equals("ZONAITINERANTE")){%>
-                document.title = "Búsqueda de Zona Itinerante del Cliente";
-                url = '<%=path%>/Busqueda_ZonaItinerante_Servlet?criterio='+criterio+'&valor='+valor+'&txtCodigoAdic='+codigoAdic;
-             
-        <%}else if(strTabla.equals("MOTIVORECHAZOSC")){%>
-            document.title = "Búsqueda de Motivo Rechazo de la Solicitud";
-            url = '<%=path%>/Busqueda_MotivoRechazo_Servlet?criterio='+criterio+'&valor='+valor;
-            
-        <%}else if(strTabla.equals("GARANTIACREDITO")){%>
-            document.title = "Búsqueda de Garantias de Credito";
-            url = '<%=path%>/Busqueda_GarantiaCredito_Servlet?criterio='+criterio+'&valor='+valor;
-            
-        <%}else if(strTabla.equals("MOTIVOBLOQUEOLIBERACION")){%>
-            document.title = "Búsqueda de Motivo Bloqueo Liberacion";
-            url = '<%=path%>/Busqueda_MotivoBloqueoLiberacion_Servlet?criterio='+criterio+'&valor='+valor+"&tipoTransaccion="+tipoTransaccion;
-            
-        <%}else if(strTabla.equals("PROFESION")){%>
-            document.title = "Búsqueda de Profesiones";
-            url = '<%=path%>/Busqueda_Profesion_Servlet?criterio='+criterio+'&valor='+valor;
-            
-        <%}else if(strTabla.equals("CARGOOCUPACION")){%>
-                document.title = "Búsqueda de Profesiones";
-                url = '<%=path%>/Busqueda_CargoOcupacion_Servlet?criterio='+criterio+'&valor='+valor;
-                
-            <%}else if(strTabla.equals("OFICIO")){%>
-                document.title = "Búsqueda de Profesiones";
-                url = '<%=path%>/Busqueda_Oficio_Servlet?criterio='+criterio+'&valor='+valor;            
-            
-            <%}else if(strTabla.equals("AREALABORAL")){%>
-                document.title = "Búsqueda de Areas Laborales";
-                url = '<%=path%>/Busqueda_AreaLaboral_Servlet?criterio='+criterio+'&valor='+valor;
-            
-        <%}else if(strTabla.equals("CUADRANTE")){%>
-                document.title = "Búsqueda de Cuadrantes";
-                url = '<%=path%>/Busqueda_Cuadrante_Servlet?criterio='+criterio+'&valor='+valor;
-                
-        <%}else if(strTabla.equals("SECTOR")){%>
-            document.title = "Búsqueda de Sectores Económicos";
-            url = '<%=path%>/Busqueda_SectorEconomico_Servlet?criterio='+criterio+'&valor='+valor;
-            
-        <%}else if(strTabla.equals("MOTIVOINGRESOLN")){%>
-            document.title = "Búsqueda de Motivos de Ingreso a Base Negativa";
-            url = '<%=path%>/Busqueda_MotivoIngresoLN_Servlet?criterio='+criterio+'&valor='+valor;
-       
-        <%}else if(strTabla.equals("IDENTIFICACIONCOLUMNA")){%>
-                document.title = "Búsqueda de Identificadores de Columnas";
-                url = '<%=path%>/Busqueda_IdentificacionColumna_Servlet?criterio='+criterio+'&valor='+valor;
-               
-        <%}else if(strTabla.equals("CARGOLABORAL")){%>
-            document.title = "Búsqueda de Cargos Laborales";
-            url = '<%=path%>/Busqueda_CargoLaboral_Servlet?criterio='+criterio+'&valor='+valor;
-            
-        <%}else if(strTabla.equals("PERITOTASADOR")){%>
-            document.title = "Búsqueda de Peritos";
-            url = '<%=path%>/Busqueda_PeritoTasador_Servlet?tipo=PE&criterio='+criterio+'&valor='+valor;
-            
-          <%}else if(strTabla.equals("NOTARIO")){%>
-              document.title = "Búsqueda de Notarios";
-              url = '<%=path%>/Busqueda_PeritoTasador_Servlet?tipo=NT&criterio='+criterio+'&valor='+valor;          
-          <%}else if(strTabla.equals("MOTIVOBLOQUEODESBLOQUEOTOTAL")){%>
-	          document.title = "Búsqueda de Cargos Laborales";
-	          //Inicio [T-9101] gmeza 11.03.2016
-	          var codigoGarantia=<%=codigoGarantia%>;
-	          url = '<%=path%>/Busqueda_MotivoBloqueoDesbloqueo_Servlet?criterio='+criterio+'&valor='+valor+'&codigoGarantia='+codigoGarantia;          
-	          //Fin [T-9101]          
-        <%}else if(strTabla.equals("SECTORECONOMICO")){%>
-            document.title = "Búsqueda de Sectores Econo&acutemicos";
-            url = '<%=path%>/Busqueda_SectorEconomico_Servlet?criterio='+criterio+'&valor='+valor; 
-           <%}else if(strTabla.equals("GIROSOLICITUD")){%>
-              document.title = "Búsqueda de Cargos Laborales";
-              url = '<%=path%>/Busqueda_RemesasSolicitudGiro_Servlet?criterio='+criterio+'&valor='+valor;                            
-            <%//rgutierrez 11.05.2012
-           }else if(strTabla.equals("CANALOPERACIONES")){%>
-              document.title = "Búsqueda de Canal de Operaciones";
-              url = '<%=path%>/Busqueda_CanalOperaciones_Servlet?criterio='+criterio+'&valor='+valor;       
-           <%}else if(strTabla.equals("ENTIDADRECAUDADORA")){%>          
-              document.title = "Búsqueda de Entidad Recaudadora";
-              url = '<%=path%>/Busqueda_CanalOperacionRecaudacionExterna_Servlet?criterio='+criterio+'&valor='+valor;        
-           <%//rgutierrez 06.08.2012
-              }else if(strTabla.equals("PROMOCIONCAMP")){%>
-              document.title = "Búsqueda de Campaña";
-              
-              url = '<%=path%>/Busqueda_Campana_Servlet?criterio='+criterio+'&valor='+valor;     
-        <%//Aromero 14.05.2014
-              }else if(strTabla.equals("CAMPANA")){%>
-              document.title = "Búsqueda de Campaña";
-              url = '<%=path%>/Busqueda_Campana_Servlet?criterio='+criterio+'&valor='+valor+'&tipC='+campana;
-        
-        <%}else if(strTabla.equals("INSTITUCIONES")){%>             
-              document.title = "Búsqueda de Instituciones";
-              url = '<%=path%>/Busqueda_Instituciones_Servlet?criterio='+criterio+'&valor='+valor;
-        
-        <%}else if(strTabla.equals("CLIENINSTI")){%>             
-              document.title = "Búsqueda de Clientes";
-              var codInst=<%=codInst%>;
-              url = '<%=path%>/Busqueda_ClientesInstitucion_Servlet?criterio='+criterio+'&valor='+valor+'&codInst='+codInst;   
-        <%}else if(strTabla.equals("AHORROSOLES")){%>             
-              document.title = "Búsqueda de Ahorro Soles";
-              url = '<%=path%>/Busqueda_AhorroSoles_Servlet?criterio='+criterio+'&valor='+valor;
-        <%}else if(strTabla.equals("AHORRODOLARES")){%>             
-              document.title = "Búsqueda de Ahorro Dolares";
-              url = '<%=path%>/Busqueda_AhorroDolares_Servlet?criterio='+criterio+'&valor='+valor;
-                
-       <%//gfernandez 25.09.2012
-              }else if(strTabla.equals("TIPOSPROCESO")){%>
-              document.title = "Búsqueda de Tipos de proceso";
-              url = '<%=path%>/Busqueda_TiposProceso_Servlet?criterio='+criterio+'&valor='+valor;
-           <%//gfernandez 25.09.2012
-              }else if(strTabla.equals("CAMPANASUBCONCEPTOCONTABLE")){%>
-              document.title = "Búsqueda de subconcepto contable por Campaña";
-              url = '<%=path%>/Busqueda_SubConceptoContableCampana_Servlet?criterio='+criterio+'&valor='+valor;
-            <%//gfernandez 03.12.2012
-              }else if(strTabla.equals("TIPOPERSONA")){%>
-              document.title = "Búsqueda de tipo de persona";
-              url = '<%=path%>/Busqueda_TipoPersona_Servlet?criterio='+criterio+'&valor='+valor;     
-            <%//gfernandez 03.12.2012
-              }else if(strTabla.equals("NIVELRIESGOLA")){%>
-              document.title = "Búsqueda del nivel de riesgo para Lavado de Activos";
-              url = '<%=path%>/Busqueda_NivelRiesgoLA_Servlet?criterio='+criterio+'&valor='+valor;     
-            <%//gfernandez 03.12.2012
-              }else if(strTabla.equals("TIPOCUENTA")){%>
-              document.title = "Búsqueda de tipo de cuenta";
-              url = '<%=path%>/Busqueda_TipoCuenta_Servlet?criterio='+criterio+'&valor='+valor;     
-            <%//gfernandez 09.12.2012
-              }else if(strTabla.equals("UBIGEODEPARTAMENTO")){%>
-              document.title = "Búsqueda de Departamentos";
-              url = '<%=path%>/Busqueda_UbigeoDepartamento_Servlet?criterio='+criterio+'&valor='+valor;     
-            <%//gfernandez 17.01.2012
-              }else if(strTabla.equals("NIVELINGRESO")){%>
-              document.title = "Búsqueda de Nivel de Riesgo";
-              url = '<%=path%>/Busqueda_NivelIngreso_Servlet?criterio='+criterio+'&valor='+valor;                
-
-            <%//ajimenez 05.04.2013
-              }else if (strTabla.equals("GRUPOPRODUCTOCREDITO")){%>
-              document.title = "Búsqueda de Grupo de Producto de Credito";
-              url = '<%=path%>/Busqueda_GrupoProductoCredito_Servlet?criterio='+criterio+'&valor='+valor;
-            
-            <%//jventura 22.05.2014 Req [S14-61]          
-              }else if (strTabla.equals("TIPOFECHAPAGO")){%>
-              document.title = "Búsqueda Tipo de Fecha de Pago";
-              url = '<%=path%>/Busqueda_TipoFechadePago_Servlet?criterio='+criterio+'&valor='+valor;
-           
-           <%//jventura 22.05.2014 Req [S14-61]          
-              }else if (strTabla.equals("TIPOSEGURO")){%>
-              document.title = "Búsqueda Tipo de Seguro";
-              url = '<%=path%>/Busqueda_TipoSeguro_Servlet?criterio='+criterio+'&valor='+valor;
-           
-           <%//jventura 22.05.2014 Req [S14-61]          
-              }else if (strTabla.equals("ENTIDADASEGURADORA")){%>
-              document.title = "Búsqueda Empresas Aseguradora";
-              url = '<%=path%>/Busqueda_EmpresaSeguros_Servlet?criterio='+criterio+'&valor='+valor;
-           
-            <%//jgonzales 26.04.2013
-              }else if(strTabla.equals("TIPOBANCARIZACION")){%>
-              document.title = "Búsqueda de Clasificacion de Bancarizacion";
-                 url = '<%=path%>/CR_C_Busqueda_TipoBancarizacion_Servlet?criterio='+criterio+'&valor='+valor;
-             <%// [Req. 14-020] esalazar 19.03.2014 
-               }else if(strTabla.equals("VALORCONDICION")){%>
-               document.title = "Búsqueda de Valores por Condicion";
-               url = '<%=path%>/CR_T_MantenimientoValoresPorCondicion_Servlet?action=CARGAR_POPUP&criterio='+criterio+'&valor='+valor+'&indicadorPropuesta=<%=indicadorPropuesta%>&indicadorExcepcion=<%=indicadorExcepcion%>&codigoValorCondicion=<%=codigoValorCondicion%>';
-             <%// [Req. 14-020] gmoran 07.04.2014 
-               }else if(strTabla.equals("BUSQUEDAPERSONASCLAF")){%>
-               document.title = "Búsqueda de Personas";
-               url = '<%=path%>/Busqueda_PersonasClasificacion_Servlet?criterio='+criterio+'&valor='+valor+'&tipoClasificacion='+tipoClasificacion+'&codigoPersonaF='+codigoPersonaF;
-             <%// [Req. 14-020] gmoran 07.04.2014 
-               }else if(strTabla.equals("PRODUCTOSBANTIQ")){%>
-               document.title = "Búsqueda Productos Bantiq";
-               url = '<%=path%>/Busqueda_ProductosBantiq_Servlet?criterio='+criterio+'&valor='+valor;
-             <%// [Req. 14-020] gmoran 07.04.2014 
-               }else if(strTabla.equals("PRODUCTOSDELFIN")){%>
-               document.title = "Búsqueda Productos Delfin";
-               url = '<%=path%>/Busqueda_ProductosDelfin_Servlet?criterio='+criterio+'&valor='+valor+'&codigoMoneda=<%=codigoMoneda%>';
-             <%// [Req. 14-020] gmoran 07.04.2014 
-               }else if(strTabla.equals("CONSULTAPRODUCTOSBANTIQ")){%>
-               document.title = "Búsqueda Consulta Productos Bantiq";
-               url = '<%=path%>/Busqueda_ConsultaProductosBantiq_Servlet?criterio='+criterio+'&valor='+valor+'&indicadorHijos=<%=indicadorHijosBantiq%>&codigoPadre=<%=codigoPadreBantiq%>';
-             <%// [Req. 14-020] gmoran 07.04.2014 
-               }else if(strTabla.equals("CONSULTACONCEPTOSBANTIQ")){%>
-               document.title = "Búsqueda Consulta Conceptos Bantiq";
-               url = '<%=path%>/Busqueda_ConsultaConceptosBantiq_Servlet?criterio='+criterio+'&valor='+valor;
-             <%// [Req. 14-020] gmoran 07.04.2014 
-               }else if(strTabla.equals("CONCEPTOSCOMISION")){%>
-               document.title = "Búsqueda Conceptos Comisión";
-               url = '<%=path%>/Busqueda_ConceptoComision_Servlet?criterio='+criterio+'&valor='+valor;                    
-            <%//[Req. 14-003] mnieves 04.04.2014
-            }else if(strTabla.equals("CLIENTESCORPORATIVOS")){%>
-                document.title = "Búsqueda de Clientes Corporativos";
-                url = '<%=path%>/Busqueda_GeneralClientesCorporativos_Servlet?criterio='+criterio+'&valor='+valor+'&typePerson='+typePerson;                
-            <%//[Req. 14-074] dfujimoto 26.05.2014
-            }else if(strTabla.equals("PROMOTORAHORRO")){%>
-                document.title = "Búsqueda Promotor";
-                url = '<%=path%>/Busqueda_PromotorAhorro_Servlet?criterio='+criterio+'&valor='+valor+'&tipoFuncionario='+typePerson+'&action='+concepto;                
-            <%}else if(strTabla.equals("AGENCIAFUNCIONARIO")){ %>
-                document.title = "Búsqueda de Agencia por Promotor";
-                url = '<%=path%>/Busqueda_PromotorAhorro_Servlet?criterio='+criterio+'&valor='+valor+'&action='+concepto;                
-            <%//[Req. 14-057] cchalco
-             } else if(strTabla.equals("CLIENTEPROVEEDORVINCULADO")){
-                String codigoAliado = request.getParameter("codigoAliado"); %>
-                document.title = "Búsqueda de Clientes Proveedores";
-                var codigoAliado = <%=codigoAliado%>;
-                url = '<%=path%>/Busqueda_ClientesProveedoresVinculados_Servlet?criterio='+criterio+'&valor='+valor+'&auxiliar='+auxiliar+'&codigoAliado='+codigoAliado;
-        //Req. S14-088 fbramirez 01.08.2014
-        <%}else if(strTabla.equals("PRODUCTOCREDITOGESTIONRIESGO")){%>
-            document.title = "Búsqueda de Productos Gestion Riesgo";
-            url = '<%=path%>/Busqueda_ProductoCredito_Servlet?tipoCredito=<%=tipoCredito%>&subTipoCredito=<%=subTipoCredito%>&flagGR=<%=flagGR%>&criterio='+criterio+'&valor='+valor+'<%=urlProducto%>';
-        <%}else if(strTabla.equals("ASOCIACIONBANCAPRODUCTO")){%>
-            document.title = "Búsqueda de Productos en Asociación Gestion Riesgo";
-            url = '<%=path%>/GR_C_MantenimientoAsociacionGestionRiesgo_Servlet?action=BUSCARPRODUCTOASOCIACION&criterio='+criterio+'&valor='+valor;
-        //[Req. S14-088] anunez 30.10.2014
-        <%}else if(strTabla.equals("BANCAS")){%>
-            document.title = "Búsqueda de Bancas";
-            url = '<%=path%>/GR_C_MantenimientoAsociacionGestionRiesgo_Servlet?action=BUSCAR_BANCA&criterio='+criterio+'&valor='+valor;
- 
-            //[Fin Req. 14-057]  
-            //[Req. 14-094] dfujimoto 08.07.2014
-            <%}else if(strTabla.equals("ROLESCTS")){%>
-                document.title = "Búsqueda Roles CTS";
-                url = '<%=path%>/Busqueda_RolesCTS_Servlet?criterio='+criterio+'&valor='+valor;
-            //[Req. 14-103] dfujimoto 15.09.2014
-            <%}else if(strTabla.equals("DESTINOCREDITO")){%>
-                document.title = "Búsqueda Destino Crédito";
-                url = '<%=path%>/Busqueda_DestinoCredito_Servlet?criterio='+criterio+'&valor='+valor;
-            <%-- Inicio [Req. 14-150] dfujimoto 06.02.2015 --%>
-            <%}else if(strTabla.equals("LOTEAPERTURACTS")){%>
-                document.title = "Búsqueda Lote Apertura CTS";
-                url = '<%=path%>/Busqueda_LoteAperturaCTS_Servlet?criterio='+criterio+'&valor='+valor;
-            <%-- Fin [Req. 14-150] --%>
-            <%// [Req. 14-020] esalazar 11.05.2016 
-            }else if(strTabla.equals("FUNCIONARIOS_NEGOCIOS")){%>
-            document.title = "Búsqueda de Funcionarios de Negocio";
-            url = '<%=path%>/CR_T_MantenimientoUsuarioFuncionario_Servlet?action=BUSCAR_FUNCIONARIOS&criterio=' + criterio + '&valor=' + valor + '&codigoTipoBanca=<%=codigoTipoBanca%>' + '&filtrarUsuarioConectado=<%=filtrarUsuarioConectado%>';
-            <%}%>
-
-            <%-- [Req.14-020] esalazar 11.05.2016 --%>
-            window.document.ifrmBusqueda.location.replace(url + '&timeCache=' + (new Date()).getTime());
-        }
-
-        function pag(direccion){
-            var flagGR = '<%=flagGR%>';
-            if(flagGR=='GR'){
-            document.frames[0].paginacion(direccion,flagGR);
-            }else{
-            document.frames[0].paginacion(direccion);
-            }
-            
-        }
-        
-        function salir(){
-            window.close();
-        }
-        
-        //Ventana ACERCA DE...
-        function ayuda(){
-            alert("Estamos trabajando");
-        }
-    </script>
-    </body>
+<!-- Busqueda.jsp
+gfernandez 03.11.2010 Se agrega una opcion de la busqueda
+vperez 31.08.2010 busqueda de subconceptos para terceros
+falle      01.02.2011 Se agrega las opciones de BUsquedas de Personal TFC y Empresas Transportadoras
+rgutierrez 11.05.2012 se agrego opcion de canal de operaciones y canal operacion externa
+rgutierrez 06.08.2012 se agrego opcion de campaña
+erios      06.11.2012 Se agrega opcion USUARIOALL
+-->
+<%-- [Req.14-150] dfujimoto 18.03.2015 - Añadir buscar lote apertura CTS --%>
+<%-- [T-9101] 11.03.2016 gmeza --%>
+<%-- [CC16-045] 31.08.2016 gmeza --%>
+<%-- [CC17-002] gmeza 16.01.2017 --%>
+<%-- [CC17-012] gmeza 31.01.2017 --%>
+<%-- [CC17-026] gmeza 28.02.2017 --%>
+
+<jsp:directive.page import="java.util.Date" />
+<%
+    
+    //////////////     filtroDireccion   ////////////////
+    String filtroDireccion = request.getParameter("filtroDireccion") != null ?request.getParameter("filtroDireccion") : "sin valor";
+    ////////////////////////////////////////////////////
+    String strTabla = request.getParameter("tabla") != null ?request.getParameter("tabla") : "sin valor";
+    
+    //filtro para busqueda de cuentas bancarias y filtrar por tipo de moneda
+    String filtroTipoMoneda = request.getParameter("filtroTipoMoneda") != null ?request.getParameter("filtroTipoMoneda") : "";
+    
+  
+    
+    //System.out.println("strTabla:"+strTabla);
+    String strInicio="";
+    if(request.getParameter("txtValorBuscar")!=null){
+         strInicio = !request.getParameter("txtValorBuscar").equals("NULO") ? request.getParameter("txtValorBuscar") : "-1";
+    }
+    
+    //[Req. 13-057] jchilon 27.05.2013 Parametro de Cheque Electronico
+    String chequeElectronico = request.getParameter("filtroCE") != null ? request.getParameter("filtroCE") : "";
+        
+    // ajimenez 06.05.2013
+    String estadoRegistro = (request.getParameter("estadoRegistro") != null) ? request.getParameter("estadoRegistro") : "";
+    
+    // ajimenez 28.05.2013 [13-038-II]
+    String idRetail = (request.getParameter("idRetail") != null) ? request.getParameter("idRetail") : "";
+    
+    //jpantoja 16.01.2011 agregar campo para filtro para la busqueda
+    String valorFiltro = request.getParameter("filtro")!=null?request.getParameter("filtro"):"-1"; 
+
+    // Inicio [Req. 14-055] jvilcapaza 20.06.2014  tipo persona - filtro producto credito por tipo persona
+    String tipoPersonaTitular = (request.getParameter("tipoPersonaTitular")!=null)?request.getParameter("tipoPersonaTitular"):"";
+    String codigoAseguradora = (request.getParameter("codigoAseguradora")!=null)?request.getParameter("codigoAseguradora"):"";
+    // Fin [Req. 14-055]
+
+    String strConcepto = request.getParameter("concepto")!=null?request.getParameter("concepto"):"";
+    String strAux = request.getParameter("auxiliar")!=null?request.getParameter("auxiliar"):"";
+    String strConceptoOperacion = request.getParameter("operacion")!=null?request.getParameter("operacion"):"";
+    String fechaAplicacion = request.getParameter("fechaAplicacion")!=null?
+        request.getParameter("fechaAplicacion"):session.getAttribute("strFecPro").toString();        
+    String strCodEmp = session.getAttribute("strCodEmp")!=null?session.getAttribute("strCodEmp").toString():"";
+
+    String tipoTransaccion = request.getParameter("tipoTransaccion")!=null?request.getParameter("tipoTransaccion"):"";
+    String tipoActividad   = request.getParameter("tipoActividad")!=null?request.getParameter("tipoActividad"):"";
+    String numeroCredito   = request.getParameter("numeroCredito")!=null?request.getParameter("numeroCredito"):"";
+    String strCodigoAdic   = request.getParameter("txtCodigoAdic")!=null?request.getParameter("txtCodigoAdic"):"";
+    String nroSolCredito   = request.getParameter("nroSolCredito")!=null?request.getParameter("nroSolCredito"):"";
+    String codRolUsrId     = request.getParameter("codRolUsrId")!=null?request.getParameter("codRolUsrId"):"";
+    String codigoBase     = request.getParameter("codigoBase")!=null?request.getParameter("codigoBase"):"";
+    String codigoOtrasPersonas = request.getParameter("codigoOtrasPersonas")!=null?request.getParameter("codigoOtrasPersonas"):"";
+    String tipoRepresentante = request.getParameter("tipoRepresentante") != null ? request.getParameter("tipoRepresentante") : "";
+    String typePerson = request.getParameter("typePerson") != null ? request.getParameter("typePerson") : "";
+    
+
+    //Req. S14-088 fbramirez 01.08.2014
+    String flagGR = request.getParameter("auxiliar");
+    
+
+    // Inicio [Req. 14-121] aromero 08.09.2014
+    String codCorp = request.getParameter("codCorp") != null ? request.getParameter("codCorp") : "";
+    // Fin [Req. 14-121]
+    
+    // Inicio [Req.14-150] aromero 28.03.2015 
+    String tipoNota = request.getParameter("tipoNota") != null ? request.getParameter("tipoNota") : "";
+    String formaAbono = request.getParameter("formaAbono") != null ? request.getParameter("formaAbono") : "";
+    String claseProducto = request.getParameter("claseProducto") != null ? request.getParameter("claseProducto") : "";
+    // Fin [Req.14-150] 
+    
+  
+    String insAgen =  (String)session.getAttribute("strInsAgen")==null?"N": (String)session.getAttribute("strInsAgen");
+    //System.out.println("inspeccion jsp Busqueda :  "+insAgen);
+    
+    //Valores para la búsqueda de Columnas
+    String nombreTabla = request.getParameter("nombreTabla")!=null?request.getParameter("nombreTabla"):"";
+    String nombreCampo = request.getParameter("nombreCampo")!=null?request.getParameter("nombreCampo"):"";
+    String listaConceptos = request.getParameter("listaConceptos")!=null?request.getParameter("listaConceptos"):"";
+    String tipoCredito = request.getParameter("tipoCredito")!=null?request.getParameter("tipoCredito"):"";
+    String subTipoCredito = request.getParameter("subTipoCredito")!=null?request.getParameter("subTipoCredito"):"";
+    //vperez 31.08.2010 para la busqueda de subconceptos terceros
+    String hiEmpresaTerceros=request.getParameter("hiEmpresaTerceros")!=null?request.getParameter("hiEmpresaTerceros"):"";  
+    String path = request.getContextPath();
+    
+    //Verificamos Pais/Pais residencia
+    String strInd = request.getParameter("ind")!=null?request.getParameter("ind"):"";
+    String urlPais = "";
+    String urlEfin = "";
+    if(!strInd.equals("")){
+        urlPais = "&ind="+strInd;
+        urlEfin = "&ind="+strInd;
+    }
+    //Verificamos tipo de producto
+    String tipoProducto = request.getParameter("tipoProducto")!=null?request.getParameter("tipoProducto"):"";
+    String urlProducto="";
+    if(!tipoProducto.equals("")){
+        urlProducto = "&tipoProducto="+tipoProducto;
+    }
+    
+    String cConces     = request.getParameter("cConces")!=null?request.getParameter("cConces"):"";
+    
+    //jpantoja 30.11.2010 agregar opcion de busqueda por nro de solicitud
+    String soloAdjudicacionBienes = request.getParameter("soloAdjudicacionBienes") != null ? request.getParameter("soloAdjudicacionBienes") : "N" ;
+    
+    //gliceta 16.04.2012: Req. 12-058 - Cumplimiento Normativo
+    String indUsuarioCELB = request.getParameter("indUsuarioCELB")!=null?request.getParameter("indUsuarioCELB"):"";
+    String codAreaLaboral = request.getParameter("codAreaLaboral")!=null?request.getParameter("codAreaLaboral"):"";
+
+    // Inicio Req.[14-135] framirez Mejoras Garantias Hipotecarias
+    String codigoTitular = request.getParameter("codigoTitular")!=null?request.getParameter("codigoTitular"):"";
+    String codigoPropietario = request.getParameter("codigoPropietario")!=null?request.getParameter("codigoPropietario"):"";
+    // Fin Req.[14-135]
+    
+    // Inicio [Req. 15-033] aromero 09.07.2015
+    String codInst = request.getParameter("codInst") != null ? request.getParameter("codInst") : "";
+    // Fin [Req. 15-033]
+    // Inicio [Req.14-020] gmoran 27.05.2014
+    String strTipoClasificacion =  request.getParameter("tipoClasificacion")!=null?request.getParameter("tipoClasificacion"):"-1";
+    String codigoPersonaF = request.getParameter("codigoPersonaF")!=null?request.getParameter("codigoPersonaF"):"-1";
+    String codigoValorCondicion = request.getParameter("codigoValorCondicion")!=null?request.getParameter("codigoValorCondicion"):"";
+    String indicadorPropuesta = request.getParameter("indicadorPropuesta")!=null?request.getParameter("indicadorPropuesta"):"";
+    String indicadorExcepcion = request.getParameter("indicadorExcepcion")!=null?request.getParameter("indicadorExcepcion"):"";
+    String indicadorHijosBantiq = request.getParameter("indicadorHijosBantiq")!=null?request.getParameter("indicadorHijosBantiq"):"";
+    String codigoPadreBantiq = request.getParameter("codigoPadreBantiq")!=null?request.getParameter("codigoPadreBantiq"):"";
+    String codigoMoneda = request.getParameter("codigoMoneda")!=null?request.getParameter("codigoMoneda"):"";
+    String codigoTipoBanca = request.getParameter("codigoTipoBanca")!=null?request.getParameter("codigoTipoBanca"):"";
+    String filtrarUsuarioConectado = request.getParameter("filtrarUsuarioConectado")!=null?request.getParameter("filtrarUsuarioConectado"):"";
+    String codigoFuncionario = request.getParameter("codigoFuncionario")!=null?request.getParameter("codigoFuncionario"):"";
+    // Fin [Req.14-020] 
+    //[T-9101] gmeza 11.03.2016
+    String codigoGarantia = request.getParameter("codigoGarantia") != null ? request.getParameter("codigoGarantia") : "";
+    //Inicio [Req. S16-025] kdelacruz 06.09.2016
+    String indicadorNivel = request.getParameter("indicadorNivel") != null ? request.getParameter("indicadorNivel") : "";
+    String codigo = request.getParameter("codigo") != null ? request.getParameter("codigo") : "";
+    String codigoModulo = request.getParameter("codigoModulo") != null ? request.getParameter("codigoModulo") : "";
+    String codigoSubModulo = request.getParameter("codigoSubModulo") != null ? request.getParameter("codigoSubModulo") : "";
+    //Fin [Req. S16-025]
+    //Inicio [CC17-002] gmeza 16.01.2017
+    String codigoDistritoJudicial = request.getParameter("codigoDistritoJudicial") != null ? request.getParameter("codigoDistritoJudicial") : "";
+    String tipoPersona = request.getParameter("tipoPersona") != null ? request.getParameter("tipoPersona") : "";
+    String nombreCombo = request.getParameter("nombreCombo") != null ? request.getParameter("nombreCombo") : "";
+    String metodoInsertar = request.getParameter("metodoInsertar") != null ? request.getParameter("metodoInsertar") : "";
+    //Fin [CC17-002]
+    //[CC17-026] gmeza 28.02.2017
+    String indicadorEnFuncionamiento = request.getParameter("indicadorEnFuncionamiento") != null ? request.getParameter("indicadorEnFuncionamiento") : "";
+    //[Req.S17-007] kdelacruz 06.03.2017
+    String indicadorTipo = request.getParameter("indicadorTipo") != null ? request.getParameter("indicadorTipo") : "";
+%>
+<html>
+    <head>
+    <link href="<%=request.getContextPath()%>/UTILS/css/DELFIN.css" rel="stylesheet" type="text/css">
+        <!-- Invocación de JavaScript -->
+        <script src="<%=request.getContextPath()%>/UTILS/Script/Utiles.js"></script>
+        <script src="<%=request.getContextPath()%>/UTILS/Script/MsgValidacion.js"></script>
+    </head>
+    <!-- Definción del color del body -->
+    <body onLoad="loadImages();">
+        <div id="hidepage" style="position: absolute; left: 280px; top: 160px; width: 150; height: 20;">
+            <table width=100%>
+                <tr>
+                    <td>
+                        <img src="<%=request.getContextPath()%>/UTILS/img/loading.gif">
+                    </td>
+                </tr>
+            </table>
+        </div>
+
+        <form name="frmBusqueda" method="post">
+            <div align="center">
+                <table border="0" cellpadding="0" cellspacing="0">
+                    <tr>
+                        <td><img src="<%=request.getContextPath()%>/UTILS/img/t.gif" width="1" height="4"></td>
+                    </tr>
+                </table>
+                <table width="98%" border="0" cellpadding="0" cellspacing="0">
+                    <tr>
+                        <td>
+                            <table width="98%" class="frame">
+                                <tr>
+                 <!-- [Req. S14-100] jventura 16.02.2016 -->
+            <td class="etiqueta" width="16%">&nbsp;Tipo de B&uacute;squeda<br></td>
+            <td width="25%"><!-- rgutierrez 30.07.2012-->
+                <input type="hidden" name="nomTabla" value="<%=strTabla%>"/>
+                <select name="cboTipoBusqueda" class="campoobligatorioiz" onFocus="nextfield ='txtBusqueda'" tabindex="1" style="width: 99%">
+        <script>
+                
+                var sURL = window.document.URL.toString();              
+                if (sURL.indexOf("?") > 0){
+                    var arrParams = sURL.split("?"); 
+                    var arrURLParams = arrParams[1].split("&");
+                    var arrParamNames = new Array(arrURLParams.length);
+                    var arrParamValues = new Array(arrURLParams.length);
+                    var i = 0;
+                    for (i=0;i<arrURLParams.length;i++){
+                        var sParam =  arrURLParams[i].split("=");
+                        arrParamNames[i] = sParam[0];
+                        if (sParam[1] != "")arrParamValues[i] = unescape(sParam[1]);
+                        else arrParamValues[i] = "Sin valor";
+                    }                   
+                    for (i=0;i<arrURLParams.length;i++){
+                        if (arrParamNames[i] != "txtValorBuscar" 
+                        && arrParamNames[i] != "tabla" 
+                        && arrParamNames[i] !="concepto" 
+                        && arrParamNames[i] !="auxiliar" 
+                        && arrParamNames[i] !="listaConceptos"
+                        && arrParamNames[i] !="operacion" 
+                        && arrParamNames[i] !="fechaAplicacion"
+                        && arrParamNames[i] !="tipoTransaccion" 
+                        && arrParamNames[i] !="numeroCredito"
+                        && arrParamNames[i] !="concepto" 
+                        && arrParamNames[i] !="auxiliar" 
+                        && arrParamNames[i] !="listaConceptos"
+                        && arrParamNames[i] !="operacion" 
+                        && arrParamNames[i] !="fechaAplicacion"
+                        && arrParamNames[i] !="tipoTransaccion" 
+                        && arrParamNames[i] !="numeroCredito"
+                        && arrParamNames[i] !="nroSolCredito" 
+                        && arrParamNames[i] !="codRolUsrId" 
+                        && arrParamNames[i] !="codigoBase" 
+                        && arrParamNames[i] !="buscarXTipoBase"
+                        && arrParamNames[i] !="txtCodigoSolicitud"
+                        && arrParamNames[i] !="filtro"
+                        && arrParamNames[i] !="tipoCredito" 
+                        && arrParamNames[i] !="subTipoCredito"
+                        && arrParamNames[i] !="txtCodigoAdic"
+                        && arrParamNames[i] !="mydate"
+                        && arrParamNames[i] !="ind"
+                        && arrParamNames[i] !="cConces"
+                        && arrParamNames[i] !="codigoOtrasPersonas"
+                        && arrParamNames[i] !="tipoRepresentante"
+                        && arrParamNames[i] !="typePerson"
+                        && arrParamNames[i] !="myDate"
+                        //mnieves 07.04.2011
+                        && arrParamNames[i] !="indVendedorXAgenciaAut" //Indicador para ver si la agencia viene por default de la session o de una variable que se le manda por alguna pantalla [S-Automatico(Session) / N-Manual(Formulario)]  
+                        && arrParamNames[i] !="codAgencia"
+                        //gliceta 16.04.2012: Req. 12-058 - Cumplimiento Normativo
+                        && arrParamNames[i] != "indUsuarioCELB"
+                        && arrParamNames[i] != "codAreaLaboral"
+                        // ajimenez 06.05.2013
+                        && arrParamNames[i] != "estadoRegistro"
+                        //[Req.13-057] jchilon 26.05.2013
+                        && arrParamNames[i] != "filtroCE"
+                        //Inicio [Req.14-121] aromero 09.09.2014 Se excluye codigo Corporativo del combo
+                        && arrParamNames[i] != "codCorp"
+                        //Fin [Req.14-121] aromero 09.09.2014
+                        && arrParamNames[i] != "idRetail" // ajimenez 28.05.2013 [13-038-II]
+                        <%-- Inicio [Req.S14-135] fbramirez 13.04.2015  --%>
+                        && arrParamNames[i] != "codigoTitular"
+                        && arrParamNames[i] != "codigoPropietario"
+                        <%-- Fin [Req.S14-135] --%>
+                        // Inicio [Req.14-020] gmoran 27.05.2014
+                        && arrParamNames[i] != "tipoClasificacion"
+                        && arrParamNames[i] != "codigoPersonaF"
+                        && arrParamNames[i] != "indicadorPropuesta"
+                        && arrParamNames[i] != "indicadorExcepcion"
+                        && arrParamNames[i] != "codigoValorCondicion"
+                        // Fin [Req.14-020]
+                        <%-- Inicio [Req.14-150] aromero 28.03.2015 - Se excluye tipoNota,formaAbono y claseProducto  del combo --%>
+                        && arrParamNames[i] != "tipoNota"
+                        && arrParamNames[i] != "formaAbono"
+                        && arrParamNames[i] != "claseProducto"
+                        <%-- Fin [Req.14-150] --%>
+                        <%-- Inicio [Req.15-033] aromero 09.07.2015 - Se agrega codigo de la institucion --%>
+                        && arrParamNames[i] != "codInst"
+                            // Inicio [Req.14-020] gmeza 02.03.2016
+                            && arrParamNames[i] != "indicadorHijosBantiq"
+                            && arrParamNames[i] != "codigoPadreBantiq"
+                            && arrParamNames[i] != "codigoMoneda"
+                            // Fin [Req.14-020]
+                        <%-- Inicio [Req. 14-055] jvilcapaza 20.06.2014--%>
+                        && arrParamNames[i] != "tipoPersonaTitular" 
+                        && arrParamNames[i] != "codigoAseguradora"
+                        <%-- Fin [Req. 14-055]--%>
+                      //[T-9101] gmeza 11.03.2016
+                        && arrParamNames[i] != "codigoGarantia"
+                        <%-- Inicio [Req.14-020] esalazar 11.05.2016 --%>
+                        && arrParamNames[i] != "codigoTipoBanca"
+                        && arrParamNames[i] != "filtrarUsuarioConectado"
+                        && arrParamNames[i] != "codigoFuncionario"
+                        <%-- Fin [Req.14-020] --%>
+                        //Inicio [Req. S16-025] kdelacruz 05.09.2016
+                        && arrParamNames[i] != "indicadorNivel"
+                        && arrParamNames[i] != "codigo"
+                        && arrParamNames[i] != "codigoModulo"
+                        && arrParamNames[i] != "codigoSubModulo"
+                        //Fin [Req. S16-025]
+                        //[CC16-045] gmeza 31.08.2016
+                        && arrParamNames[i] != "filtroTipoMoneda"
+                        //Inicio [CC17-002] gmeza 16.01.2017
+                        && arrParamNames[i] != "codigoDistritoJudicial"
+                        && arrParamNames[i] != "tipoPersona"
+                        && arrParamNames[i] != "nombreCombo"
+                        && arrParamNames[i] != "metodoInsertar"
+                        //Fin [CC17-002]
+                        //[CC17-026] gmeza 28.02.2017
+                        && arrParamNames[i] != "indicadorEnFuncionamiento"
+                       //[Req.S17-007] kdelacruz 06.03.2017
+                        && arrParamNames[i] != "indicadorTipo"
+                        )
+                        
+                        <!-- rgutierrez 30.07.2012-->
+                        if(arrParamValues[i]=="Descripcion" && "SUBCONCEPTOCREDITO"==document.frmBusqueda.nomTabla.value)
+                        document.write('<option selected value = '+ arrParamValues[i] +'>' + arrParamValues[i] + '</option>');  
+                        else
+                        document.write('<option value = '+ arrParamValues[i] +'>' + arrParamValues[i] + '</option>');                       
+                    }
+                }else{
+                    alert("No existen parametros.");
+                }
+                </script>
+
+                                        </select>
+                                    </td>
+                                    <td width="55%" align=left>
+                                        <script>
+                var sURL = window.document.URL.toString();              
+                if (sURL.indexOf("?") > 0){
+                    var arrParams = sURL.split("?");            
+                    var arrURLParams = arrParams[1].split("&");
+                    var arrParamtxtValor = new Array(arrURLParams.length);
+                    var arrParamtxtNames = new Array(arrURLParams.length);
+                    var i = 0;
+                    for (i=0;i<arrURLParams.length;i++){
+                        var sParam =  arrURLParams[i].split("=");
+                        arrParamtxtNames[i] = sParam[0];
+                        if (sParam[1] != "")arrParamtxtValor[i] = unescape(sParam[1]);
+                        else arrParamtxtValor[i] = "Sin valor";
+                    }
+                    
+                    for (i=0;i<arrURLParams.length;i++)
+                        if (arrParamtxtNames[i] == "txtValorBuscar" )
+                            if (arrParamtxtValor[i]=="NULO")
+                                document.write("<input type=text name=txtBusqueda size=48 class=campoobligatorioiz tabindex=2 style=\"width: 99%\" onFocus='this.select();nextfield =done'>");
+                            else
+                                document.write("<input type=text name=txtBusqueda size=48 class=campoobligatorioiz tabindex=2 style=\"width: 99%\" value ='<%=strInicio%>' onFocus='this.select();nextfield =done'>");
+                                                                
+                }else
+                    alert("No existen parametros.");
+                </script>
+                                    </td>
+                                </tr>
+                            </table>
+                        </td>
+                    </tr>
+                </table>
+
+                <table border="0" cellpadding="0" cellspacing="0">
+                    <tr>
+            <td><img src="<%=request.getContextPath()%>/UTILS/img/t.gif" width="1" height="4"></td>
+                    </tr>
+                </table>
+
+                <table width="98%" align="center" height="220" class="frame">
+                    <tr>
+                        <td>
+                            &nbsp;
+                            <%-- [Req. S14-115] jtomasto 09.10.2014 Inicio--%>
+                            <iframe name="ifrmBusqueda" frameborder="0" width="98%"
+                                height="220"></iframe>
+                            <%-- [Req. S14-115] Fin--%>
+                        </td>
+                    </tr>
+                </table>
+                <table width="98%">
+                    <tr>
+                        <td align="right">
+                <IMG src="<%=request.getContextPath()%>/UTILS/img/PagRe.gif" onClick="pag(-1);" style="CURSOR: hand;vertical-align: middle;" alt="Anterior">
+                <label id="inicial" style="width:25;text-align:left;font-size:8pt;font-family:Arial;vertical-align: middle;"></label>
+                <IMG src="<%=request.getContextPath()%>/UTILS/img/t.gif" height=1 width="10">
+                <label id="final" style="width:25;text-align:right;font-size:8pt;font-family:Arial;vertical-align: middle;"></label>
+                <IMG src="<%=request.getContextPath()%>/UTILS/img/PagAv.gif" onClick="pag(1)" style="CURSOR: hand;vertical-align: middle;" alt="Siguiente">
+                <label id="total" style="width:50;text-align:left;font-size:8pt;font-family:Arial;vertical-align: middle;"></label>
+                        </td>
+                    </tr>
+                </table>
+            </div>
+        </form>
+        <script>    
+        var nextfield = "txtBusqueda";
+        var done = "done";      
+        // Función que permite reconcer la teclas
+        function keyDown(DnEvents){
+            k = window.event.keyCode;
+            if (k == 13)
+                if (nextfield == 'done'){
+                    enviar();
+                    return false;
+                }
+                else { 
+                    eval('document.forms[0].' + nextfield + '.focus()');        
+                    return false;
+                }
+            if (event.keyCode == 27) { salir(); }
+            //Reconocimiento de la tecla F1
+            if (k == 112)ayuda();
+        }
+        document.onkeydown = keyDown;
+       
+        inicio("<%=strInicio%>");
+            
+        var urlPeriodo;
+        var concepto;
+        var tipoTransaccion;
+
+        function inicio(valor){
+            try{
+                document.frames[0].eliminarTodos();
+            }catch(error){}
+            document.getElementById('hidepage').style.visibility = '';
+        
+            concepto = "<%=strConcepto%>";
+            auxiliar = "<%=strAux%>";
+            codigoconcepto  ="<%= strConceptoOperacion %>";
+            fechaAplicacion ="<%= fechaAplicacion %>";
+            numeroCredito ="<%= numeroCredito %>";
+            nroSolCredito = "<%=nroSolCredito%>";
+            codRolUsrId = "<%=codRolUsrId%>";
+            codigoBase = "<%=codigoBase%>";
+            tipoTransaccion = "<%= tipoTransaccion%>";
+            listaConceptos = "<%= listaConceptos%>";
+            codigoAdic = "<%=strCodigoAdic%>";
+            var criterio = document.forms[0].cboTipoBusqueda.value;
+            var valor = "<%=strInicio%>";
+            var codigoOtrasPersonas = "<%=codigoOtrasPersonas%>";
+            var tipoRepresentante = "<%=tipoRepresentante%>";
+            var typePerson = "<%=typePerson%>";
+            var insAgen ="<%=insAgen%>";
+            
+            //Inicio [Req.14-020] gmoran 27.05.2014
+            var tipoClasificacion = "<%=strTipoClasificacion%>";
+            var codigoPersonaF = "<%=codigoPersonaF%>";
+            //Fin [Req.14-020]
+            filtroDireccion= "<%=filtroDireccion%>";
+            //En caso de que se haya definido el valor            
+          
+    
+            if (valor != "-1"){
+            <%if(strTabla.equals("CUENTACONTABLE")){%>
+                document.title = "Búsqueda de Cuentas Contables";
+                url = '<%=path%>/Busqueda_CuentaContable_Servlet?criterio='+criterio+
+                        '&valor='+valor+'&auxiliar='+auxiliar+'&fechaAplicacion='+fechaAplicacion;
+        // Agregado gfernandez 29.12.2010: Validar Bloqueos y Limites Operativos: Busqueda de por Limites Operativos    
+            <%}else if(strTabla.equals("TIPOSLIMITESOPERATIVOS")){%>
+                 
+              document.title = "Búsqueda Limites Opertivos";
+              url = '<%=path%>/Busqueda_LimitesOperativos_Servlet?criterio='+criterio+'&valor='+valor;     
+        // Agregado gfernandez 11.12.2010: Validar Bloqueos y Limites Operativos: Busqueda de Tipos de credito externo          
+           <%}else if(strTabla.equals("TIPCRED")){%>
+                 
+              document.title = "Búsqueda Tipo de Creditos";
+              url = '<%=path%>/Busqueda_TipoCreditoExterno_Servlet?criterio='+criterio+'&valor='+valor; 
+                  
+           // Agregado gfernandez 15.02.2012: Calculo incentivo emprendedor                 
+            <%}else if(strTabla.equals("TIPOINCENTIVO")){%>
+              document.title = "Búsqueda Tipo Incentivo";
+              url = '<%=path%>/Busqueda_TipoIncentivo_Servlet?criterio='+criterio+'&valor='+valor;                 
+        // Agregado gfernandez 15.02.2012: Calculo incentivo emprendedor                
+            <%}else if(strTabla.equals("CATEGORIAXINCENTIVO")){%>
+              document.title = "Búsqueda Categoria Incentivo";
+              url = '<%=path%>/Busqueda_CategoriaXIncentivo_Servlet?criterio='+criterio+'&valor='+valor+'&auxiliar='+auxiliar;
+        // Agregado gfernandez 15.02.2012: Calculo incentivo emprendedor                
+            <%}else if(strTabla.equals("GRUPOINCENTIVO")){%>
+              document.title = "Búsqueda Grupo Incentivo";
+              url = '<%=path%>/Busqueda_GrupoCalculoIncentivo_Servlet?criterio='+criterio+'&valor='+valor;
+        // Agregado gfernandez 15.02.2012: Calculo incentivo emprendedor                
+            <%}else if(strTabla.equals("MORAXFILATIPOINCENTIVO")){%>
+              document.title = "Búsqueda Mora por Fila de Tipo Incentivo";
+              url = '<%=path%>/Busqueda_MoraXFilaIncentivo_Servlet?criterio='+criterio+'&valor='+valor;                                          
+                
+           <%}else if(strTabla.equals("NROCUENTAENTIDAD")){%>
+              document.title = "Búsqueda de Cuentas Bancarias";
+              //[Req. 13-057] jchilon 27.05.2013 Se agrega un parámetro a la búsqueda.              
+              url = '<%=path%>/Busqueda_NroCuentaEntidadFinanciera_Servlet?criterio='+criterio+'&valor='+valor+'&filtroTipoMoneda=<%=filtroTipoMoneda%>'
+              +'&filtroCE=<%=chequeElectronico%>';
+              
+        //fvalle 01.02.2011
+           <%}else if(strTabla.equals("PERSONALTFC")){%>  
+              document.title = "Búsqueda de Personal TFC";
+              url = '<%=path%>/Busqueda_PersonasHabilitacion_Servlet?tipo=PT&criterio='+criterio+'&valor='+valor; 
+           <%}else if(strTabla.equals("EMPRTRANSPDIN")){%>
+              document.title = "Búsqueda de Empresa Transportadora";
+              url = '<%=path%>/Busqueda_PersonasHabilitacion_Servlet?tipo=ET&criterio='+criterio+'&valor='+valor; 
+        
+            <%}else if(strTabla.equals("CUENTACONTABLEPRESUPUESTO")){%>
+                document.title = "Búsqueda de Cuentas Contables";
+                url = '<%=path%>/Busqueda_CuentaContablePresupuesto_Servlet?criterio='+criterio+
+                      '&valor='+valor+'&auxiliar='+auxiliar+'&fechaAplicacion='+fechaAplicacion;
+                      
+            <%}else if(strTabla.equals("TIPODOCUMENTO")){%>
+                document.title = "Búsqueda de Tipos de Documentos";
+                if(criterio == "Codigo")
+                    url = '<%=path%>/Busqueda_TipoDocumentos_Servlet?criterio='+criterio+'&valor=<%=strCodEmp%>'+rellenar(valor,"0",7,"1");
+                else
+                url = '<%=path%>/Busqueda_TipoDocumentos_Servlet?criterio='+criterio+'&valor='+valor;
+              // Inicio [Req. 14-100] jventura 16.02.2016
+             <%}else if(strTabla.equals("LIQUIDACIONBANTIQ")){%>
+                 document.title = "Búsqueda de Pre-Liquidación BANTIQ";
+                 url = '<%=path%>/Busqueda_LiquidacionBantiq_Servlet?action=LIQUIDACIONBANTIQ&criterio='+criterio+'&valor='+valor;   
+             // Fin [Req. 14-100]
+                 // Inicio [S16-019] dlazo 12.04.2016
+              <%}else if(strTabla.equals("ROLESBANTIQ")){%>
+                  document.title = "Búsqueda de Roles BANTIQ";
+                  url = '<%=path%>/Busqueda_RolesBantiq_Servlet?criterio='+criterio+'&valor='+valor;
+               // Fin [S16-019] dlazo 12.04.2016
+               // Inicio [S16-003] dlazo 12.04.2016
+               <%}else if(strTabla.equals("ASUNTO_SOLICITUD")){%>
+                   document.title = "Búsqueda de Asunto de Solicitud";
+                   url = '<%=path%>/Busqueda_AsuntoSolicitud_Servlet?criterio='+criterio+'&valor='+valor;
+                // Fin [S16-003] dlazo 12.04.2016
+             // Inicio [S16-034] DLAZO 07.10.2016
+             <%}else if(strTabla.equals("SECTORIAL")){%>
+                 document.title = "Búsqueda de código sectorial";
+                 url = '<%=path%>/Busqueda_CodigoSectorial_Servlet?criterio='+criterio+'&valor='+valor;
+             // Fin [S16-034]
+            <%}else if(strTabla.equals("RELACIONDINAMICA")){%>
+                document.title = "Búsqueda de Grupos Contables para Relación Dinámica";
+                url = '<%=path%>/Busqueda_RelacionDinamica_Servlet?criterio='+criterio+'&valor='+valor;
+                
+            <%}else if(strTabla.equals("COLUMNA")){%>
+                document.title = "Búsqueda de Columnas";
+                url = '<%=path%>/Busqueda_Columnas_Servlet?criterio='+criterio+'&valor='+valor+'&tabla=<%= nombreTabla %>&campo=<%= nombreCampo %>';
+                
+            <%}else if(strTabla.equals("CARGOS")){%>
+                document.title = "Búsqueda de Cargos";
+                url = '<%=path%>/Busqueda_Cargos_Servlet?criterio='+criterio+'&valor='+valor;                
+                
+            <%}else if(strTabla.equals("COBRADORES")){%>
+                document.title = "Búsqueda de cobradores";
+                url = '<%=path%>/Busqueda_Cobradores_Servlet?criterio='+criterio+'&valor='+valor;
+                
+            <%}else if(strTabla.equals("EXPEDIENTEJUDICIAL")){%>
+                document.title = "Búsqueda de Expediente Judicial";
+                url = '<%=path%>/Busqueda_ExpedienteJudicial?criterio='+criterio+'&valor='+valor+"&numeroCredito="+numeroCredito;
+                
+            <%}else if(strTabla.equals("ACTIVIDADlINEAVIDA")){%>
+                document.title = "Búsqueda de Actividades del linea de vida del crédito";
+                url = '<%=path%>/Busqueda_ActividadLineaVida_Servlet?criterio='+criterio+'&valor='+valor;
+                
+            <%}else if(strTabla.equals("SUBACTIVIDADlINEAVIDA")){%>
+                document.title = "Búsqueda de Sub Actividades de la linea de vida del crédito";
+                url = '<%=path%>/Busqueda_ActividadLineaVida_Servlet?criterio='+criterio+'&valor='+valor+"&tipoActividad="+tipoActividad;
+                
+            <%}else if(strTabla.equals("TIPOCREDITO")){%>
+                document.title = "Búsqueda de tipos de crédito";
+                url = '<%=path%>/Busqueda_TipoCredito_Servlet?criterio='+criterio+'&valor='+valor;                    
+                
+            <%}else if(strTabla.equals("OBLIGACION")){%>
+                document.title = "Búsqueda de Obligaciones";
+                url = '<%=path%>/Busqueda_Obligaciones_Servlet?criterio='+criterio+'&valor='+valor+'&listaConceptos='+listaConceptos;                    
+                
+            <%}else if(strTabla.equals("CONCEPTOCONTABLE")){%>
+                document.title = "Búsqueda de Conceptos Contables";
+                url = '<%=path%>/Busqueda_ConceptoContable_Servlet?criterio='+criterio+'&valor='+valor;
+                
+            <%}else if(strTabla.equals("SUBTIPOCREDITO")){%>
+                document.title = "Búsqueda de subtipos de crédito";
+                url = '<%=path%>/Busqueda_SubTipoCredito_Servlet?criterio='+criterio+'&valor='+valor+'&codoperacion='+codigoconcepto+"&codigoTipoCredito=<%=tipoCredito%>&tipoBusqueda=<%=strAux%>";                    
+                            
+            <%}else if(strTabla.equals("IMPUESTO")){%>
+                document.title = "Búsqueda de Impuestos";
+                url = '<%=path%>/Busqueda_Impuestos_Servlet?criterio='+criterio+'&valor='+valor;
+                
+            <%}else if(strTabla.equals("ETAPASPROCESALES")){%>
+                document.title = "Búsqueda de Etapas procesales";
+                url = '<%=path%>/Busqueda_EtapasProcesales_Servlet?criterio='+criterio+'&valor='+valor;                 
+                
+            <%}else if(strTabla.equals("AJUSTE")){%>
+                document.title = "Búsqueda de Grupos de Ajuste";
+                url = '<%=path%>/Busqueda_GrupoAjuste_Servlet?criterio='+criterio+'&valor='+valor;
+                
+            <%}else if(strTabla.equals("REVALUACION")){%>
+                document.title = "Búsqueda de Grupos de Revaluación";
+                url = '<%=path%>/Busqueda_GrupoRevaluacion_Servlet?criterio='+criterio+'&valor='+valor;
+                
+            <%}else if(strTabla.equals("EFINANCIERAS")){%>
+                document.title = "Búsqueda de Entidades Financieras";
+                url = '<%=path%>/Busqueda_EntidadFinanciera_Servlet?criterio='+criterio+'&valor='+valor+'<%=urlEfin%>';
+                
+            <%}else if(strTabla.equals("MONEDA")){%>
+                document.title = "Búsqueda de Monedas";
+                url = '<%=path%>/Busqueda_Moneda_Servlet?criterio='+criterio+'&valor='+valor;
+            
+            <%}else if(strTabla.equals("PROVEEDORES")){%>
+                document.title = "Búsqueda de Proveedores";
+                url = '<%=path%>/Busqueda_Proveedor_Servlet?criterio='+criterio+'&valor='+valor+'&typePerson='+typePerson
+                // ajimenez 06.05.2013
+                + "&estadoRegistro=<%=estadoRegistro%>";
+            
+            <%}else if(strTabla.equals("CONTACTOS")){%>
+                document.title = "Búsqueda de Contactos";
+                url = '<%=path%>/Busqueda_Contacto_Servlet?criterio='+criterio+'&valor='+valor+'&typePerson='+typePerson+'&auxiliar='+auxiliar;
+            
+            <%}else if(strTabla.equals("CUENTAPROVEEDOR")){%>
+                document.title = "Búsqueda de Cuentas Bancarias de Persona";
+                url = '<%=path%>/Busqueda_CuentaProveedor_Servlet?criterio='+criterio+'&valor='+valor+'&typePerson='+typePerson+'&auxiliar='+auxiliar;;
+                        
+            <%}else if(strTabla.equals("PERSONAS")){%>
+                document.title = "Búsqueda de Personas";
+                <%-- [Req.14-020] esalazar 11.05.2016 --%>
+                url = '<%=path%>/Busqueda_GeneralPersonas_Servlet?criterio='+criterio+'&valor='+valor+'&typePerson='+typePerson +'&codigoFuncionario=<%=codigoFuncionario%>';
+             <!--Inicio [Req. S16-025] kdelacruz 05.09.2016 -->
+             <%}else if(strTabla.equals("OPCIONMENU")){%>
+                 document.title = "Búsqueda Opción Menú";
+                 var url = '<%=path%>/SS_T_MantenimientoMenuOpcion_Servlet?criterio='+criterio+'&tipoCarga=O&valor='+valor+'&indicadorNivel=<%=indicadorNivel%>&modulo=<%=codigoModulo%>&subModulo=<%=codigoSubModulo%>';
+             <!--Fin [Req. S16-025] -->
+             //Inicio [Req.S16-037] kdelacruz 23.11.2016 Adecuación del registro de Centro de Costos
+             <%}else if(strTabla.equals("GASTOSINVERSIONES")){%>
+             document.title = "Búsqueda de Gasos de Inversiones";
+             url = '<%=path%>/Busqueda_GastosInversiones_Servlet?action=GASTOSINVERSIONES&criterio='+criterio+'&valor='+valor;
+             //Fin [Req.S16-037]   
+             //Inicio [Req. S14-142] aromero 15.12.2014
+        <%}else if(strTabla.equals("PERSONASPOSICLI")){%>
+            document.title = "Búsqueda de Personas";
+            var flag='flagPosi';
+            url = '<%=path%>/Busqueda_GeneralPersonas_Servlet?criterio='+criterio+'&valor='+valor+'&typePerson='+typePerson+'&flag='+flag;
+        //Fin [S14-142] aromero 15.12.2014
+            //Inicio [Req. 14-121] aromero 08.09.2014
+            <%}else if(strTabla.equals("ADQUIRENTES")){%>
+                document.title = "Búsqueda de Personas";
+                 var flag='flag';
+                 var codCorp=<%=codCorp%>;
+                 url = '<%=path%>/Busqueda_GeneralPersonas_Servlet?criterio='+criterio+'&valor='+valor+'&typePerson='+typePerson+'&flag='+flag+'&codCorp='+codCorp;
+                 //url = '<%=path%>/Busqueda_GeneralPersonas_Servlet?criterio='+criterio+'&valor='+valor+'&typePerson='+typePerson+'&flag='+flag;
+            //Fin [Req. 14-121]
+
+            //Inicio [Req. 14-135] framirez 09.12.2014
+            <%}else if(strTabla.equals("PERSONAS_CONYUGUE")){%>
+                 var cony = 'S';
+                 document.title = "Búsqueda de Personas Y Conyugue";
+                 url = '<%=path%>/GA_R_TitularesGarantia_Servlet?criterio='+criterio+'&valor='+valor+'&typePerson='+typePerson+'&cony='+cony;
+
+            <%}else if(strTabla.equals("APODERADO")){%>
+                 var action_ = 'BUSCAR_APODERADOS_RELACIONADOS';
+                 document.title = "Búsqueda de Apoderados";
+                 url = '<%=path%>/GA_T_MantenimientoApoderadosGarantia_Servlet?action=BUSCAR_APODERADOS_RELACIONADOS&codigoTitular=<%=codigoTitular%>&criterio='+criterio+'&valor='+valor+'&typePerson='+typePerson;
+                 
+            <%}else if(strTabla.equals("APODERADO_PROPIETARIO")){%>
+                 var action_ = 'BUSCAR_APODERADOS_RELACIONADOS';
+                 document.title = "Búsqueda de Apoderados";
+                 url = '<%=path%>/GA_T_MantenimientoRegistroApoderadoPropietarioBien_Servlet?action=BUSCAR_APODERADOS_RELACIONADOS&codigoPropietario=<%=codigoPropietario%>&criterio='+criterio+'&valor='+valor+'&typePerson='+typePerson;
+                 
+            <%}else if(strTabla.equals("NATURALEZA_GARANTIA")){%>
+                 var action_ = 'BUSCAR_NATURALEZA_GARANTIA';
+                 document.title = "Búsqueda de Naturaleza Garantia";
+                 url = '<%=path%>/GA_C_NaturalezaGarantia_Servlet?action=BUSCAR_NATURALEZA_GARANTIA&criterio='+criterio+'&valor='+valor;
+            //Fin [Req. 14-135]
+
+            //[19/08/2013 cchalco 13-095]
+            <%}else if(strTabla.equals("RECLAMOSWEB")){
+                System.out.println("RECLAMOSWEB");
+                String strDoi = request.getParameter("txtValorDOI");
+                System.out.println("strDoi: "+strDoi);%>
+                document.title = "Búsqueda de Reclamos Web";
+                url = '<%=path%>/Busqueda_ReclamosWeb_Servlet?criterio='+criterio+'&valor='+valor+'&typePerson='+typePerson;
+            //[Fin cchalco 13-095]  
+            <%}else if(strTabla.equals("CLIENTESRCC")){%>
+                document.title = "Búsqueda de Personas";
+                url = '<%=path%>/Busqueda_ClientesRCC_Servlet?criterio='+criterio+'&valor='+valor+'&idPeriodo='+codigoconcepto;              
+            <%}else if(strTabla.equals("FIDEICOMISO")){%>
+                document.title = "Búsqueda de fideicomisos";
+                url = '<%=path%>/Busqueda_Fideicomiso_Servlet?criterio='+criterio+'&valor='+valor;               
+                                
+            <%}else if(strTabla.equals("CUENTAEFINANCIERAS")){%>
+                document.title = "Búsqueda de Cuentas-Bancos";
+                url = '<%=path%>/Busqueda_NroCuentaEntidadFinanciera_Servlet?criterio='+criterio+'&valor='+valor+'&auxiliar='+auxiliar;
+                
+            <%}else if(strTabla.equals("SUBCONCEPTO")){%>
+                document.title = "Búsqueda de Subconceptos";
+                url = '<%=path%>/Busqueda_SubConceptoOperacion_Servlet?criterio='+criterio+'&valor='+codigoconcepto+valor+'&codoperacion='+codigoconcepto;
+            
+            <%-- Inicio [Req.14-150] aromero 28.03.2015 --%>
+            <%}else if(strTabla.equals("SUBCONCEPTOCTS")){%>
+                document.title = "Búsqueda de Subconceptos";
+                var tipoNota=<%=tipoNota%>;
+                var formaAbono=<%=formaAbono%>;
+                var claseProducto=<%=claseProducto%>;
+                url = '<%=path%>/Busqueda_SubConceptoOperacion_Servlet?criterio='+criterio+'&valor='+codigoconcepto+valor+'&codoperacion='+codigoconcepto+'&tipoNota='+tipoNota+'&formaAbono='+formaAbono+'&claseProducto='+claseProducto;
+            <%-- Fin [Req.14-150] --%>
+            
+            <%}else if(strTabla.equals("CONCEPTO_INSTI")){%>             
+              document.title = "Búsqueda de Concepto Instituciones";
+              url = '<%=path%>/Busqueda_Concepto_Instituciones_Servlet?criterio='+criterio+'&valor='+valor;
+            <%}else if(strTabla.equals("SUBCONCOMISI")){%>
+                document.title = "Búsqueda de Subconceptos";
+                url = '<%=path%>/Busqueda_Subconcepto_Comision_Institucion_Servlet?criterio='+criterio+'&valor='+codigoconcepto+valor+'&codoperacion='+codigoconcepto;
+            <%}else if(strTabla.equals("SUBCONCEPTOCREDITO")){%>
+                document.title = "Búsqueda de Subconceptos";
+                url = '<%=path%>/Busqueda_SubConceptoOperacionCreditos_Servlet?criterio='+criterio+'&valor='+codigoconcepto+valor+'&codoperacion='+codigoconcepto;
+
+            <%}else if(strTabla.equals("SUBCONCEPTOTERCEROS")){ %>
+                document.title = "Búsqueda de Subconceptos"; //vperez 31.08.2010 manejo de subconceptosc
+                url = '<%=path%>/Busqueda_SubConceptoOperacionTerceros_Servlet?criterio='+criterio+'&valor='+codigoconcepto+valor+'&codoperacion='+codigoconcepto+'&hiEmpresaTerceros='+<%=hiEmpresaTerceros%>;
+            
+            <%}else if(strTabla.equals("ENTIDADES_MANEJADORA_VALORES_ACTIVO")){%>
+                document.title = "Búsqueda de Entidades Manejadora Efectivo Activos";
+                url = '<%=path%>/OP_EntidadesManejadoraValoresActivo_Servlet?criterio='+criterio+'&valor='+valor;
+            <%}else if(strTabla.equals("ENTIDADES_MANEJADORA_VALORES_ACTIVO_BOVEDA")){%>
+                document.title = "Búsqueda de Entidades Manejadora Efectivo Activos";
+                url = '<%=path%>/OP_EntidadesManejadoraValoresActivo_Servlet?boveda=S&criterio='+criterio+'&valor='+valor;      
+            <%}else if(strTabla.equals("AGENCIA")){%>
+                document.title = "Búsqueda de Agencias";
+                //[CC17-026] gmeza 28.02.2017
+                url = '<%=path%>/Busqueda_Agencia_Servlet?criterio='+criterio+'&valor='+valor+'&indicadorEnFuncionamiento=<%=indicadorEnFuncionamiento%>';
+                
+            // Agregado gliceta 22.09.2010: Seguimiento de Riesgos: Busqueda de Cargo Funcional
+            <%}else if(strTabla.equals("CARGOFUNCIONAL")){%>
+                document.title = "Búsqueda de Cargo Funcional";
+                url = '<%=path%>/Busqueda_CargoFuncional_Servlet?criterio='+criterio+'&valor='+valor;
+            //gliceta 07.07.2011: Automatizacion de Encajes 
+            <%}else if(strTabla.startsWith("SBTGREN")){%>
+                document.title = "Búsqueda de Codigos de Encaje";
+                url = '<%=path%>/servlet/EN_B_CodEncaje_Servlet?criterio='+criterio+'&valor='+valor+'&tabla='+'<%=request.getParameter("tabla")%>';
+            <%}else if(strTabla.equals("NUMEROCARTA")){%>
+                document.title = "Búsqueda de Cartas";
+                url = '<%=path%>/Busqueda_CartaCambioRecaudo_Servlet?criterio='+criterio+'&valor='+valor;   
+            <%}else if(strTabla.equals("CONCEPTO")){%>
+                document.title = "Búsqueda de Conceptos";
+                url = '<%=path%>/Busqueda_Conceptos_Servlet?criterio='+criterio+'&valor='+valor+'&concepto='+concepto;
+                
+            <%}else if(strTabla.equals("PRODUCTOAHORRO")){%>
+                document.title = "Búsqueda de Productos de Ahorro";
+                url = '<%=path%>/Busqueda_ProductosAhorro_Servlet?criterio='+criterio+'&valor='+valor+'&tipoPersona='+concepto;
+                
+            <%}else if(strTabla.equals("PRODUCTOAHORROSINTASA")){%>
+                document.title = "Búsqueda de Productos de Ahorro";
+                url = '<%=path%>/Busqueda_ProductosAhorroSinTasa_Servlet?criterio='+criterio+'&valor='+valor;
+                
+            <%}else if(strTabla.equals("PRODUCTODPF")){%>
+                document.title = "Búsqueda de Productos a Plazo Fijo";
+                url = '<%=path%>/Busqueda_ProductosDPF_Servlet?criterio='+criterio+'&valor='+valor+'&tipoPersona='+concepto;
+                
+            <%}else if(strTabla.equals("PRODUCTODPFSINTASA")){%>
+                document.title = "Búsqueda de Productos de Plazo Fijo";
+                url = '<%=path%>/Busqueda_ProductosDPFSinTasa_Servlet?criterio='+criterio+'&valor='+valor;
+                
+            <%}else if(strTabla.equals("PRODUCTOCTS")){%>
+                document.title = "Búsqueda de Productos CTS";
+                url = '<%=path%>/Busqueda_ProductosCTS_Servlet?criterio='+criterio+'&valor='+valor+'&tipoPersona='+concepto;
+                
+            <%}else if(strTabla.equals("PRODUCTOCTSSINTASA")){%>
+                document.title = "Búsqueda de Productos CTS";
+                url = '<%=path%>/Busqueda_Productos?criterio='+criterio+'&valor='+valor+'&claseProducto='+concepto;
+                
+            <%}else if(strTabla.equals("PRODUCTOCUENTA")){%>
+                document.title = "Búsqueda de Productos Cuenta";
+                url = '<%=path%>/Busqueda_Producto_Cuenta?criterio='+criterio+'&valor='+valor;    
+                
+            <%}else if(strTabla.equals("TIPOBLOQUEO")){%>
+                document.title = "Búsqueda de Tipos de Bloqueo";
+                url = '<%=path%>/Busqueda_TipoBloqueo_Servlet?criterio='+criterio+'&valor='+valor;
+             //Inicio [Req.14-020] gmoran 27.05.2014
+             <%}else if(strTabla.equals("FASE")){%>
+                 document.title = "Búsqueda de Fases";
+                 url = '<%=path%>/CR_T_MantenimientoNivelesFlujo_Servlet?action=CARGA_POPUP&criterio='+criterio+'&valor='+valor; 
+              //Fin [Req.14-020] gmoran 27.05.2014
+            <%}else if(strTabla.equals("FORMABLOQUEO")){%>
+                document.title = "Búsqueda de Tipos de Bloqueo";
+                url = '<%=path%>/Busqueda_FormaBloqueo_Servlet?criterio='+criterio+'&valor='+valor;    
+                
+            <%}else if(strTabla.equals("TIPOBLOQUEOAHO")){%>
+                document.title = "Búsqueda de Tipos de Bloqueo";
+                url = '<%=path%>/Busqueda_TipoBloqueoAho_Servlet?criterio='+criterio+'&valor='+valor;    
+                
+            <%}else if(strTabla.equals("CHEQUE")){%>
+                document.title = "Búsqueda de Cheques Depósito";
+                url = '<%=path%>/Busqueda_ChequeDeposito_Servlet?criterio='+criterio+'&valor='+valor;
+                
+            <%}else if(strTabla.equals("CENTROCOSTO")){%>
+                document.title = "Búsqueda de Centros de Costos";
+                url = '<%=path%>/Busqueda_CentroCosto_Servlet?criterio='+criterio+'&valor='+valor;
+                
+            <%}else if(strTabla.equals("CUENTABANCARIA")){%>
+                document.title = "Búsqueda de Cuentas Bancarias";
+                url = '<%=path%>/Busqueda_CuentaBancaria_Servlet?valor='+valor;
+                /**
+                 * CUENTABANCARIATFC,BusquedaDeLasCuentasBancariasTFC
+                 * 
+                 *@author gfernandez
+                 *@since 07.10.2010
+                **/
+            <%}else if(strTabla.equals("CUENTABANCARIATFC")){%> 
+                document.title = "Búsqueda de Cuentas Bancarias";
+                url = '<%=path%>/Busqueda_CuentaCorrienteBancaria_Servlet?criterio='+criterio+'&valor='+valor;
+            <%}else if(strTabla.equals("PRODUCTO")){%>
+                document.title = "Búsqueda de Productos";
+                url = '<%=path%>/Busqueda_Producto_Servlet?criterio='+criterio+'&valor='+valor;                
+             <%}else if(strTabla.equals("NACIONALINTERNACIONAL")){%>
+                document.title = "Búsqueda de Procedencia";
+                url = '<%=path%>/Busqueda_NacionalInternacional_Servlet?criterio='+criterio+'&valor='+valor;                
+             <%}//mnieves 22.08.2011
+                else if(strTabla.equals("TIPOCREDITOSBS")){%>
+                document.title = "Búsqueda de tipos de crédito SBS";
+                url = '<%=path%>/Busqueda_TipoCreditoSBS_Servlet?criterio='+criterio+'&valor='+valor;
+            <%}//mnieves 22.08.2011
+                else if(strTabla.equals("TIPOPERSONAJURIDICA")){%>
+                document.title = "Búsqueda de tipos de persona juridica";
+                url = '<%=path%>/Busqueda_TipoPersonaJuridica_Servlet?criterio='+criterio+'&valor='+valor;
+            <%}//mnieves 24.08.2011
+                else if(strTabla.equals("NUMEROCUENTADPF")){%>
+                document.title = "Búsqueda de Numero Cuenta DPF";
+                url = '<%=path%>/Busqueda_NumeroCuentaDPF_Servlet?criterio='+criterio+'&valor='+valor;
+            <%}else if(strTabla.equals("CIIU")){%>
+                document.title = "Búsqueda de CIIU";
+                url = '<%=path%>/Busqueda_Ciiu_Servlet?criterio='+criterio+'&valor='+valor;
+                
+            <%}else if(strTabla.equals("CIIUXSECTOR")){%>
+                document.title = "Búsqueda de CIIU x Sector";
+                url = '<%=path%>/Busqueda_CiiuSector_Servlet?criterio='+criterio+'&valor='+valor+'&txtCodigoAdic='+codigoAdic;
+            <%}else if(strTabla.equals("ZONAITINERANTE")){%>
+                document.title = "Búsqueda de Zona Itinerante del Cliente";
+                url = '<%=path%>/Busqueda_ZonaItinerante_Servlet?criterio='+criterio+'&valor='+valor+'&txtCodigoAdic='+codigoAdic;  
+                        
+            <%}else if(strTabla.equals("PROMOTOR")){%>
+                document.title = "Búsqueda de PROMOTOR";
+                url = '<%=path%>/Busqueda_Usuarios_Servlet?criterio='+criterio+'&valor='+valor+'&strTabla=<%=strTabla%>';
+                
+            <%}else if(strTabla.equals("ANALISTA")){%>
+                document.title = "Búsqueda de ANALISTA";
+                url = '<%=path%>/Busqueda_Usuarios_Servlet?criterio='+criterio+'&valor='+valor+'&strTabla=<%=strTabla%>';
+                
+            <%}else if(strTabla.equals("EJECUTIVO")){%>
+                document.title = "Búsqueda de EJECUTIVO";
+                url = '<%=path%>/Busqueda_Usuarios_Servlet?criterio='+criterio+'&valor='+valor+'&strTabla=<%=strTabla%>';
+              //stacanga 29.03.2012
+            <%}else if(strTabla.equals("PRE-ANALISTA")){%>
+                document.title = "Búsqueda de PRE ANALISTA";
+                url = '<%=path%>/Busqueda_Usuarios_Servlet?criterio='+criterio+'&valor='+valor+'&strTabla=<%=strTabla%>';
+            <%}else if(strTabla.equals("GESTORCOBRANZA")){%>
+                document.title = "Búsqueda de Gestor de Cobranza";
+                url = '<%=path%>/Busqueda_Usuarios_Servlet?criterio='+criterio+'&valor='+valor+'&strTabla=<%=strTabla%>';
+                
+            <%}else if(strTabla.equals("MOTIVOBLOQUEOLIBERACION")){%>
+                document.title = "Búsqueda de Motivo Bloqueo Liberacion";
+                url = '<%=path%>/Busqueda_MotivoBloqueoLiberacion_Servlet?criterio='+criterio+'&valor='+valor+"&tipoTransaccion="+tipoTransaccion;
+                
+            <%}else if(strTabla.equals("MOTIVOREGISTRONCND")){%>
+                document.title = "Búsqueda de Motivo Registro Nota Crédito/Débito";
+                url = '<%=path%>/Busqueda_MotivoRegistroNotaCreditoDebito_Servlet?criterio='+criterio+'&valor='+valor+"&tipoTransaccion="+tipoTransaccion;
+                
+            <%}else if(strTabla.equals("USUARIO")){%>
+                document.title = "Búsqueda de Usuarios";
+                url = '<%=path%>/Busqueda_Usuarios_Servlet?criterio='+criterio+'&valor='+valor + '&indicadorTipo=<%=indicadorTipo%>'; //[Req.S17-007] kdelacruz 27.03.2017
+                
+            <%}else if(strTabla.equals("USUARIOALL")){%>
+                document.title = "Búsqueda de Usuarios";
+                url = '<%=path%>/Busqueda_UsuariosAll_Servlet?criterio='+criterio+'&valor='+valor;
+            
+            <%}else if(strTabla.equals("CONVENIOS")){%>
+                document.title = "Búsqueda de Convenios";
+                url = '<%=path%>/Busqueda_Convenios_Servlet?criterio='+criterio+'&valor='+valor;
+                
+            <%}else if(strTabla.equals("DEMANDANTE")){%>
+               document.title = "Búsqueda de Abogados";
+                url = '<%=path%>/Busqueda_Abogados_Servlet?criterio='+criterio+'&valor='+valor;
+                
+            <%}else if(strTabla.equals("DEMANDADO")){%>
+               document.title = "Búsqueda de Abogados";
+                url = '<%=path%>/Busqueda_Demandado_Servlet?criterio='+criterio+'&valor='+valor;
+                          
+            <%}else if(strTabla.equals("JUZGADO")){%>
+                document.title = "Búsqueda de Juzgado";
+            //Inicio [CC17-002] gmeza 16.01.2017
+                url = '<%=path%>/Busqueda_Juzgado_Servlet?criterio='+criterio+'&valor='+valor+'&codigoDistritoJudicial=<%=codigoDistritoJudicial%>';
+
+            <%}else if(strTabla.equals("DISTRITOJUDICIAL")){%>
+                document.title = "Búsqueda de Distrito Judicial";
+                url = '<%=path%>/CR_C_DistritoJudicial_Servlet?criterio='+criterio+'&valor='+valor;
+            //Fin [CC17-002]
+           
+            //Inicio [CC17-012] gmeza 31.01.2017 
+            <%}else if(strTabla.equals("CATALOGOCOMBOGENERICO")){%>
+                document.title = "Búsqueda de Catálogo";
+                url = '<%=path%>/CB_C_CatalogoComboGenerico_Servlet?criterio='+criterio+'&valor='+valor+'&nombreCombo=<%=nombreCombo%>'+'&metodoInsertar=<%=metodoInsertar%>';
+            
+            <%}else if(strTabla.equals("TIPOGASTOJUDICIAL")){%>
+                document.title = "Búsqueda de Tipo de Gasto Judicial";
+                url = '<%=path%>/CR_C_TipoGastoJudicial_Servlet?criterio='+criterio+'&valor='+valor;
+            //Fin [CC17-012]
+            // Inicio [Req.S17-007] kdelacruz 06.03.2017
+            <%}else if(strTabla.equals("NOTARIOS")){%>
+                document.title = "Búsqueda de Notarios";
+                url = '<%=path%>/CL_C_Notarios_Servlet?criterio='+criterio+'&valor='+valor;
+            // Fin [Req.S17-007]
+            <%}else if(strTabla.equals("SECRETARIO")){%>
+                document.title = "Búsqueda de Secretario de Juzgado";
+                url = '<%=path%>/Busqueda_SecretarioJuzgado_Servlet?criterio='+criterio+'&valor='+valor;
+                
+            <%}else if(strTabla.equals("VISITADOR")){%>
+                document.title = "Búsqueda de Visitadores";
+                
+                url = '<%=path%>/Busqueda_Visitadores_Servlet?criterio='+criterio+'&valor='+valor;
+                
+            <%}else if(strTabla.equals("RESPUESTANOTIFICACION")){%>
+                document.title = "Búsqueda de Respuesta Notificacion";
+                url = '<%=path%>/Busqueda_RespuestaNotificacion_Servlet?criterio='+criterio+'&valor='+valor;
+                
+            <%}else if(strTabla.equals("UBIGEO")){%>
+                document.title = "Búsqueda de Ubigeos";
+                url = '<%=path%>/Busqueda_Ubigeo_Servlet?criterio='+criterio+'&valor='+valor;
+                
+            <%}else if(strTabla.equals("PRODUCTOCREDITO")){%>
+                document.title = "Búsqueda de Productos Credito";
+                <%--Inicio [Req. 14-055]  jvilcapaza 18.02.2016 --%>
+                url = '<%=path%>/Busqueda_ProductoCredito_Servlet?tipoPersonaTitular=<%=tipoPersonaTitular%>&tipoCredito=<%=tipoCredito%>&subTipoCredito=<%=subTipoCredito%>&criterio='+criterio+'&valor='+valor+'<%=urlProducto%>';
+            <%}else if(strTabla.equals("PRODUCTOASEGURADORA")){%>
+                document.title = "Búsqueda de Productos Aseguradora";
+                url = '<%=path%>/OP_T_EmpresasAseguradoras_Servlet?action=BUSQUEDA_PRODUCTO_ASEGURADORA_TABLA&codigoAseguradora=<%=codigoAseguradora%>&criterio='+criterio+'&valor='+valor;
+            <%-- Fin [Req. 14-055] --%>
+        //Req. S14-088 fbramirez 01.08.2014
+        <%}else if(strTabla.equals("PRODUCTOCREDITOGESTIONRIESGO")){%>
+            document.title = "Búsqueda de Productos Gestion Riesgo";
+            url = '<%=path%>/Busqueda_ProductoCredito_Servlet?tipoCredito=<%=tipoCredito%>&subTipoCredito=<%=subTipoCredito%>&flagGR=<%=flagGR%>&criterio='+criterio+'&valor='+valor+'<%=urlProducto%>';
+        <%}else if(strTabla.equals("ASOCIACIONBANCAPRODUCTO")){%>
+            document.title = "Búsqueda de Productos en Asociación Gestion Riesgo";
+            url = '<%=path%>/GR_C_MantenimientoAsociacionGestionRiesgo_Servlet?action=BUSCARPRODUCTOASOCIACION&criterio='+criterio+'&valor='+valor;
+        //[Req. S14-088] anunez 30.10.2014
+        <%}else if(strTabla.equals("BANCAS")){%>
+            document.title = "Búsqueda de Bancas";
+            url = '<%=path%>/GR_C_MantenimientoAsociacionGestionRiesgo_Servlet?action=BUSCAR_BANCA&criterio='+criterio+'&valor='+valor;
+
+            <%}else if(strTabla.equals("PRODUCTOCREDITOLC")){%>
+                document.title = "Búsqueda de Productos Credito";
+                url = '<%=path%>/Busqueda_ProductoCreditoLC_Servlet?tipoCredito=<%=tipoCredito%>&subTipoCredito=<%=subTipoCredito%>&criterio='+criterio+'&valor='+valor+'<%=urlProducto%>';    
+                
+            <%}else if(strTabla.equals("FORMATO")){%>
+                document.title = "Búsqueda de Formatos";
+                url = '<%=path%>/Busqueda_Formato_Servlet?criterio='+criterio+'&valor='+valor;
+                
+            <%}else if(strTabla.equals("PERSONAJURIDICA")){%>
+                document.title = "Búsqueda de Personas Juridicas";
+                url = '<%=path%>/Busqueda_PersonasJuridicas_Servlet?criterio='+criterio+'&valor='+valor;
+                
+            <%}else if(strTabla.equals("PERSONANATURAL")){%>
+                document.title = "Búsqueda de Personas Naturales";
+                url = '<%=path%>/Busqueda_PersonaNatural_Servlet?criterio='+criterio+'&valor='+valor;
+            
+            <%}//prios 06.09.11
+            else if(strTabla.equals("PERSONA_RUC")){%>
+                document.title = "Búsqueda de Personas";
+                url = '<%=path%>/Busqueda_Personas_RUC_Servlet?criterio='+criterio+'&valor='+valor;
+             
+            <%}//mnieves 10.01.2012
+            else if(strTabla.equals("CUENTA_CONTABLE_INVENTARIO")){%>
+                document.title = "Búsqueda de Cuenta Contable";
+                aux ='<%=strAux%>';
+                url = '<%=path%>/Busqueda_CuentaContable_Inventario_Servlet?criterio='+criterio+'&valor='+valor+'&auxiliar='+aux;
+            <%}//mnieves 22.06.2012
+            else if(strTabla.equals("PRODUCTOS_NIEVELES_GRUPO_CREDITO")){%>
+                document.title = "Búsqueda de Producto Niveles Grupo Crédito";
+                aux ='<%=strAux%>';
+                url = '<%=path%>/Busqueda_ProductosNivelesGrupoProducto_Servlet?criterio='+criterio+'&valor='+valor;
+            <%}//mnieves 22.06.2012
+            else if(strTabla.equals("GESTOR_COBRANZA")){%>
+                document.title = "Búsqueda de Gestor de Cobranza";
+                aux ='<%=strAux%>';
+                url = '<%=path%>/Busqueda_GestorCobranza_Servlet?criterio='+criterio+'&valor='+valor;
+            <%}//mnieves 22.06.2012
+            else if(strTabla.equals("EMPRESA_EXTERNA")){%>
+                document.title = "Búsqueda Gestor de Empresa Externa";
+                aux ='<%=strAux%>';
+                url = '<%=path%>/Busqueda_GestorCobranza_Servlet?criterio='+criterio+'&valor='+valor+'&valorFiltro=<%=valorFiltro%>';            
+            <%}//jgonzales 27.08.2012
+            else if(strTabla.equals("GESTION_REALIZADA")){%>
+                document.title = "Búsqueda de Gestiones Realizadas";
+                url = '<%=path%>/Busqueda_GestionRealizada_Servlet?criterio='+criterio+'&valor='+valor;
+            <%}//jgonzales 27.08.2012
+            else if(strTabla.equals("RESPUESTA_GESTION")){%>
+                document.title = "Búsqueda de Respuestas de Gestión";
+                url = '<%=path%>/Busqueda_RespuestaGestion_Servlet?criterio='+criterio+'&valor='+valor;    
+                
+            <%}else if(strTabla.equals("MOTIVORECHAZOSC")){%>
+                document.title = "Búsqueda de Motivo Rechazo de la Solicitud";
+                url = '<%=path%>/Busqueda_MotivoRechazo_Servlet?criterio='+criterio+'&valor='+valor;
+                
+            <%}else if(strTabla.equals("CODIGOAUXILIAR")){%>
+                document.title = "Búsqueda de Códigos Auxiliares";
+                valor = (criterio == "Codigo" && valor != "")?concepto+valor:valor;
+                url = '<%=path%>/Busqueda_CodigoAuxiliar_Servlet?criterio='+criterio+'&valor='+valor+'&cod='+concepto;
+                
+            <%}else if(strTabla.equals("MOTIVOBLOQUEODESBLOQUEO")){%>
+                document.title = "Búsqueda de Motivos Bloqueo Desbloqueo";
+                url = '<%=path%>/Busqueda_MotivoBloqueoDesbloqueo_Servlet?tipoTransaccion='+tipoTransaccion+'&valor='+valor+'&criterio='+criterio;
+                
+            <%}else if(strTabla.equals("GARANTIACREDITO")){%>
+                document.title = "Búsqueda de Garantias de Credito";
+                url = '<%=path%>/Busqueda_GarantiaCredito_Servlet?criterio='+criterio+'&valor='+valor;
+                
+            <%}else if(strTabla.equals("GIRONEGOCIO")){%>
+                document.title = "Búsqueda de Giro de Negocio";
+                url = '<%=path%>/Busqueda_GiroNegocio_Servlet?criterio='+criterio+'&valor='+valor;
+                
+            
+           <%}else if(strTabla.equals("GIRONEGOCIOXCIIU")){%>
+                document.title = "Búsqueda de Giro de Negocio";
+                url = '<%=path%>/Busqueda_GiroNegocioCiiu_Servlet?criterio='+criterio+'&valor='+valor+'&txtCodigoAdic='+codigoAdic;
+           <%}else if(strTabla.equals("CANALVENTAS")){%>
+                document.title = "Búsqueda de Canal de Ventas";
+                url = '<%=path%>/Busqueda_CanalVentas_Servlet?criterio='+criterio+'&valor='+valor;
+           
+           //gliceta 07.07.2011: Automatizacion de Encajes
+           <%}else if(strTabla.equals("ATRIBUTOOPERATIVO")){%>
+                document.title = "Búsqueda de Atributos Operativos";
+                url = '<%=path%>/Busqueda_AtributoOperativo_Servlet?criterio='+criterio+'&valor='+valor;     
+           
+           //jpantoja 06.02.2012: Concepto Operativo
+           <%}else if(strTabla.equals("CONCEPTOOPERATIVO")){%>
+                document.title = "Búsqueda de Conceptos Operativos";
+                url = '<%=path%>/Busqueda_ConceptoOperativo_Servlet?criterio='+criterio+'&valor='+valor;
+                
+<% } else if(strTabla.equals("OFICINA")){%>
+                document.title = "Búsqueda de Oficina";
+                url = '<%=path%>/Busqueda_Oficina_Servlet?criterio='+criterio+'&valor='+valor; 
+            <%}else if(strTabla.equals("DISTRITO")){%>
+                document.title = "Búsqueda de Distrito";
+                url = '<%=path%>/Busqueda_Distrito_Servlet?criterio='+criterio+'&valor='+valor;  
+            <%}else if(strTabla.equals("CUADRANTE")){%>
+                document.title = "Búsqueda de Cuadrantes";
+                url = '<%=path%>/Busqueda_Cuadrante_Servlet?criterio='+criterio+'&valor='+valor; 
+            <%}else if(strTabla.equals("TRAMO")){%>
+                document.title = "Búsqueda de Tramos";
+                url = '<%=path%>/Busqueda_Tramos?criterio='+criterio+'&valor='+valor; 
+            <%}else if(strTabla.equals("RESULTADOCOBRANZA")){%>
+                document.title = "Búsqueda de Resultado Cobranza";
+                url = '<%=path%>/Busqueda_ResultadoCobranza_Servlet?criterio='+criterio+'&valor='+valor;        
+            <%}else if(strTabla.equals("ROLES")){%>
+                document.title = "Búsqueda de Roles";
+                url = '<%=path%>/Busqueda_Roles_Servlet?criterio='+criterio+'&valor='+valor;              
+            <%}else if(strTabla.equals("BASEINSPECCION")){%>
+                document.title = "Búsqueda de Bases de Inspeccion";
+                url = '<%=path%>/Busqueda_Bases_Servlet?criterio='+criterio+'&valor='+valor+"&buscarXTipoBase=I";               
+            <%}else if(strTabla.equals("BASE")){%>
+                document.title = "Búsqueda de Bases de Inspeccion";
+                url = '<%=path%>/Busqueda_Bases_Servlet?criterio='+criterio+'&valor='+valor;            
+            <%}else if(strTabla.equals("COORDINADORBASE")){%>
+                document.title = "Búsqueda de Coordinador de Base";
+                url = '<%=path%>/Busqueda_CoordinadorBase_Servlet?criterio='+criterio+'&valor='+valor+"&codigoBase="+codigoBase; 
+            <%}else if(strTabla.equals("PRODUCTOXTIENDA")){%>
+                document.title = "Búsqueda de Producto por Tienda";
+                url = '<%=path%>/Busqueda_ProductoTienda_Servlet?criterio='+criterio+'&valor='+valor; 
+            <%}else if(strTabla.equals("PRODUCTOFINANCIERO")){%>
+                document.title = "Búsqueda de Producto Financiero.";
+                url = '<%=path%>/Busqueda_ProductoFinanciero_Servlet?criterio='+criterio+'&valor='+valor;                       
+            
+            <%}else if(strTabla.equals("BUSQUEDAINSPECTOR")){%>
+                document.title = "Búsqueda de Inspectores";
+                url = '<%=path%>/Busqueda_Inspectores_Servlet?criterio='+criterio+'&valor='+valor+"&codigoBase="+codigoBase+"&insAgen="+insAgen;
+            <%}else if(strTabla.equals("BUSQUEDAGARANTE")){%>
+                document.title = "Búsqueda de Garantes";
+                url = '<%=path%>/Busqueda_Garantes_Servlet?criterio='+criterio+'&valor='+valor+"&nroSolCredito="+nroSolCredito; 
+            <%}else if(strTabla.equals("BUSQUEDARESULTADO")){%>
+                document.title = "Búsqueda de Resultado";
+                url = '<%=path%>/Busqueda_ResultadoRevision_Servlet?criterio='+criterio+'&valor='+valor+"&nroSolCredito=<%=request.getParameter("nroSolCredito")%>"; 
+            <%}else if(strTabla.equals("BUSQUEDAPARENTESCO")){%>
+                document.title = "Búsqueda de Parentesco";
+                url = '<%=path%>/Busqueda_Parentesco_Servlet?criterio='+criterio+'&valor='+valor+"&nroSolCredito=<%=request.getParameter("nroSolCredito")%>";               
+            <%}else if(strTabla.equals("BUSQUEDATIPDOCCOBRANZA")){%>
+                document.title = "Búsqueda de Documentos de Cobranza";
+                url = '<%=path%>/Busqueda_TipoDocCobranza?criterio='+criterio+'&valor='+valor;  
+            <%}else if(strTabla.equals("BUSQUEDAGESTORCOBRANZA")){%>
+                document.title = "Búsqueda de Gestores de Cobranza";
+                url = '<%=path%>/Busqueda_GestoresCobranza?criterio='+criterio+'&valor='+valor+"&codRolUsrId="+codRolUsrId;     
+            <%}else if(strTabla.equals("BUSQUEDANUMERORECIBO")){%>
+                document.title = "Búsqueda de Recibo";
+                url = '<%=path%>/Busqueda_NumeroRecibo_Servlet?criterio='+criterio+'&valor='+valor+"&codRolUsrId="+codRolUsrId+"&gestorCobranza=<%=request.getParameter("gestorCobranza")%>";   
+            <%}else if(strTabla.equals("BUSQUEDASERIE")){%>
+                document.title = "Búsqueda de Series de Recibos Cobranza";
+                url = '<%=path%>/Busqueda_SeriesRecibos_Servlet?criterio='+criterio+'&valor='+valor+"&tipDoc=<%=request.getParameter("tipDoc")%>";  
+                
+            <%}else if(strTabla.equals("EMPRESAINSPECCIONLABORAL")){%>      
+                document.title = "Búsqueda de Empresa Inspeccion Laboral.";
+                url = '<%=path%>/Busqueda_Empresa_Inspecion_Laboral?criterio='+criterio+'&valor='+valor; 
+             <%}else if(strTabla.equals("USUARIOROL")){%>
+                document.title = "Búsqueda de Usuarios";
+                url = '<%=path%>/Busqueda_UsuarioPorRol_Servlet?criterio='+criterio+'&valor='+valor;
+        //Req. S14-088 fbramirez 01.08.2014
+        <%}else if(strTabla.equals("PRODUCTOCREDITOGESTIONRIESGO")){%>
+            document.title = "Búsqueda de Productos Gestion Riesgo";
+            url = '<%=path%>/Busqueda_ProductoCredito_Servlet?tipoCredito=<%=tipoCredito%>&subTipoCredito=<%=subTipoCredito%>&flagGR=<%=flagGR%>&criterio='+criterio+'&valor='+valor+'<%=urlProducto%>';
+        <%}else if(strTabla.equals("ASOCIACIONBANCAPRODUCTO")){%>
+            document.title = "Búsqueda de Productos en Asociación Gestion Riesgo";
+            url = '<%=path%>/GR_C_MantenimientoAsociacionGestionRiesgo_Servlet?action=BUSCARPRODUCTOASOCIACION&criterio='+criterio+'&valor='+valor;    
+        //[Req. S14-088] anunez 30.10.2014
+        <%}else if(strTabla.equals("BANCAS")){%>
+            document.title = "Búsqueda de Bancas";
+            url = '<%=path%>/GR_C_MantenimientoAsociacionGestionRiesgo_Servlet?action=BUSCAR_BANCA&criterio='+criterio+'&valor='+valor;
+                
+               <%}else if(strTabla.equals("PRODUCTOSTIENDA")){ %>
+               document.title = "Búsqueda de Productos";               
+               url = '<%=path%>/Busqueda_Productos_Servlet?criterio='+criterio+'&valor='+valor;       
+             <%}else if(strTabla.equals("RESULTADOS")){ %>
+               document.title = "Búsqueda de RESULTADOS";               
+               url = '<%=path%>/Busqueda_Resultados_Servlet?criterio='+criterio+'&valor='+valor; 
+                <%}else if(strTabla.equals("PRODUCTOCREDITOCARTERA")){ %>
+               document.title = "Búsqueda de Producto"; 
+               url = '<%=path%>/Busqueda_ProductoCreditoCartera_Servlet?criterio='+criterio+'&valor='+valor;  
+              <%}else if(strTabla.equals("ESTADOCREDITO")){ %>
+               document.title = "Búsqueda de Estado Credito"; 
+               url = '<%=path%>/Busqueda_EstadoContable_Servlet?criterio='+criterio+'&valor='+valor;                 
+               <%}else if(strTabla.equals("GESTORCOBRANZA")){%>
+                document.title = "Búsqueda de Gestor de Cobranza";
+                url = '<%=path%>/Busqueda_GestorCobranza_Servlet?filtroDireccion='+filtroDireccion+'&criterio='+criterio+'&valor='+valor+'&strTabla=<%=strTabla%>';
+               <%}else if(strTabla.equals("GESTOR")){%>
+                document.title = "Búsqueda de gestores de cobranza";
+                url = '<%=path%>/Busqueda_GestorCobranza_Servlet?criterio='+criterio+'&valor='+valor;
+                //url = '<%=path%>/Busqueda_Gestor_Servlet?criterio='+criterio+'&valor='+valor;
+              
+              <%}else if(strTabla.equals("RECIBO")){ %>
+               document.title = "Búsqueda de Recibo"; 
+               url = '<%=path%>/Busqueda_Recibo_Servlet?criterio='+criterio+'&valor='+valor;    
+                <%}else if(strTabla.equals("CREDITO")){%>
+               document.title = "Búsqueda de Solicitud de Credito";
+               url = '<%=path%>/Busqueda_SolicitudesCredito_Servlet?criterio='+criterio+'&valor='+valor;                   
+             <%}else if(strTabla.equals("ASIGNACION")){ %>  
+               document.title = "Búsqueda de Asignacion"; 
+               solicitud =  '<%= request.getParameter("txtCodigoSolicitud")%>';    
+                   
+               url = '<%=path%>/Busqueda_Asignacion_Servlet?criterio='+criterio+'&valor='+valor+'&solicitud='+solicitud;       
+             <%}else if(strTabla.equals("SUPERVISOR")){ %>
+               document.title = "Búsqueda de Supervisor";
+               url = '<%=path%>/Busqueda_Supervisor_Servlet?criterio='+criterio+'&valor='+valor;                
+               document.title = "Búsqueda de Credito";
+             <%}else if(strTabla.equals("CREDITOCARTERA")){%>
+               url = '<%=path%>/Busqueda_CreditoCartera_Servlet?criterio='+criterio+'&valor='+valor;
+             <%}else if(strTabla.equals("INMOBILIARIA")){%>
+               url = '<%=path%>/Busqueda_Inmobiliaria_Servlet?criterio='+criterio+'&valor='+valor;
+             //gliceta 16.04.2012: Req. 12-058 - Cumplimiento Normativo
+             //Grupo de Reporte de Informe
+             <%}else if(strTabla.equals("GRUPOINFORME")){%>
+               url = '<%=path%>/Busqueda_GrupoInforme_Servlet?criterio='+criterio+'&valor='+valor;
+             //Tipo de Informe
+             <%}else if(strTabla.equals("TIPOINFORME")){%>
+               url = '<%=path%>/Busqueda_TipoInforme_Servlet?criterio='+criterio+'&valor='+valor;  
+             //Grupo de Referencia Indice Nota SBS    
+             <%}else if(strTabla.equals("REFINDICESBS")){%>
+               url = '<%=path%>/Busqueda_RefIndiceNotaSBS_Servlet?criterio='+criterio+'&valor='+valor;
+             //Firmas de Informe    
+             <%}else if(strTabla.equals("FIRMAINFORME")){%>
+               url = '<%=path%>/Busqueda_FirmasInformeCumplimiento_Servlet?criterio='+criterio+'&valor='+valor;  
+             <%}else if(strTabla.equals("CONCESIONARIO")){%>
+               url = '<%=path%>/Busqueda_Concesionario_Servlet?criterio='+criterio+'&valor='+valor;
+             <%}else if(strTabla.equals("TALLER_GNV")){%>
+               url = '<%=path%>/Busqueda_TallerGNV_Servlet?criterio='+criterio+'&valor='+valor;
+             <%}else if(strTabla.equals("OTRASPERSONAS")){%>            
+               document.title = "Búsqueda de Otras Personas";
+               //[CC17-002] gmeza 16.01.2017
+               url = '<%=path%>/Busqueda_OtrasPersonas_Servlet?criterio='+criterio+'&valor='+valor+'&codigoOtrasPersonas='+codigoOtrasPersonas+'&tipoRepresentante='+tipoRepresentante+'&tipoPersona=<%=tipoPersona%>';
+             <%}else if(strTabla.equals("TALLER")){%>
+                var cConces =  '<%= request.getParameter("cConces")%>'; 
+               url = '<%=path%>/Busqueda_Taller_Servlet?criterio='+criterio+'&valor='+valor+'&cConces='+cConces + '&codigoOtrasPersonas='+codigoOtrasPersonas;
+             <%}else if(strTabla.equals("LOCALIDAD")){
+                   if(request.getParameter("filtro")!=null){  %>          
+                              document.title = "Búsqueda de Area";
+               <%  }else{  %>
+                  document.title = "Búsqueda de Agencia";
+               <% }  %>   
+               filtro = '<%= request.getParameter("filtro")%>';         
+               url = '<%=path%>/Busqueda_Localidad_Servlet?criterio='+criterio+'&valor='+valor+'&filtro='+filtro;   
+            
+                        
+
+    
+           <%}else if(strTabla.equals("VENDEDORES")){%>
+                document.title = "Búsqueda de Vendedores";
+                var indVendedorXAgenciaAut = '<%= request.getParameter("indVendedorXAgenciaAut")!=null?request.getParameter("indVendedorXAgenciaAut"):"NULO"%>';
+                var codAgencia = '<%= request.getParameter("codAgencia")!=null?request.getParameter("codAgencia"):"NULO"%>';
+                url = '<%=path%>/Busqueda_Vendedores_Servlet?criterio='+criterio+'&valor='+valor+'&indVendedorXAgenciaAut='+indVendedorXAgenciaAut+'&codAgencia='+codAgencia;
+           
+           <%}else if(strTabla.equals("LISTAUSUARIOS")){%>
+                document.title = "Lista de Usuarios";
+                url = '<%=path%>/Busqueda_ListaUsuarios_Servlet?criterio='+criterio+'&valor='+valor+'&indUsuarioCELB=<%=indUsuarioCELB%>'+'&codAreaLaboral=<%=codAreaLaboral%>';//gliceta 16.04.2012: Req. 12-058 - Cumplimiento Normativo       
+                
+           <%}else if(strTabla.equals("LISTAROLES")){%>
+                document.title = "Lista de Roles";
+                url = '<%=path%>/Busqueda_ListaRoles_Servlet?criterio='+criterio+'&valor='+valor;          
+                
+           <%}else if(strTabla.equals("LISTATIPOOBSERVACION")){%>
+                document.title = "Lista de Observacion";
+                url = '<%=path%>/Busqueda_ListaObservacion_Servlet?criterio='+criterio+'&valor='+valor;          
+                
+           <%}else if(strTabla.equals("ARTICULOS")){%>
+                document.title = "Búsqueda de Articulos";
+                //jpantoja 16.01.2011 modificado para agregar un parametro de busqueda 
+                // ajimenez 28.05.2013 [13-038-II] - Parametro Empresa Retail
+                url = '<%=path%>/Busqueda_Articulos_Servlet?criterio='+criterio+'&valor='+valor+'&valorFiltro=<%=valorFiltro%>&idRetail=<%=idRetail%>';
+           
+
+           <%}else if(strTabla.equals("TIPOGARANTIA")){%>
+                document.title = "Búsqueda Tipo Garantia";
+                url = '<%=path%>/Busqueda_TipoGarantia_Servlet?criterio='+criterio+'&valor='+valor;
+                     
+            <%}else if(strTabla.equals("PAIS")){%>
+                document.title = "Búsqueda de Paises";
+                url = '<%=path%>/Busqueda_Pais_Servlet?criterio='+criterio+'&valor='+valor+'<%=urlPais%>';
+            
+            <%}else if(strTabla.equals("REQUISITOS")){%>
+                document.title = "Búsqueda de Requisitos";
+                url = '<%=path%>/Busqueda_Requisitos_Servlet?criterio='+criterio+'&valor='+valor;
+            
+            
+            
+            <%}else if(strTabla.equals("AGRUPMOTIVOINGRESOLN")){%>
+            document.title = "Búsqueda de Cuentas Contables";
+            url = '<%=path%>/Busqueda_AgrupacionMotivoListaNegra_Servlet?criterio='+criterio+'&valor='+valor;
+                                
+                    <%}else if(strTabla.equals("CARGOSLABORALES")){%>
+                document.title = "Búsqueda Cargos Laborales";
+                url = '<%=path%>/Busqueda_CargoLaboral_Servlet?criterio='+criterio+'&valor='+valor;
+        
+                                
+              <%}else if(strTabla.equals("CIUDAD")){%>
+                document.title = "Búsqueda de Paises";
+                url = '<%=path%>/Busqueda_Ciudad_Servlet?criterio='+criterio+'&valor='+valor;   
+                
+            <%}else if(strTabla.equals("PROFESION")){%>
+                document.title = "Búsqueda de Profesiones";
+                url = '<%=path%>/Busqueda_Profesion_Servlet?criterio='+criterio+'&valor='+valor;
+                
+            <%}else if(strTabla.equals("CARGOOCUPACION")){%>
+                document.title = "Búsqueda de Profesiones";
+                url = '<%=path%>/Busqueda_CargoOcupacion_Servlet?criterio='+criterio+'&valor='+valor;
+                
+            <%}else if(strTabla.equals("OFICIO")){%>
+                document.title = "Búsqueda de Profesiones";
+                url = '<%=path%>/Busqueda_Oficio_Servlet?criterio='+criterio+'&valor='+valor;
+                
+            <%}else if(strTabla.equals("AREALABORAL")){%>
+                document.title = "Búsqueda de Areas Laborales";
+                url = '<%=path%>/Busqueda_AreaLaboral_Servlet?criterio='+criterio+'&valor='+valor;
+                
+            <%}else if(strTabla.equals("CUADRANTE")){%>
+                document.title = "Búsqueda de Cuadrantes";
+                url = '<%=path%>/Busqueda_Cuadrante_Servlet?criterio='+criterio+'&valor='+valor;
+            <%}else if(strTabla.equals("TRAMO")){%>
+                document.title = "Búsqueda de Tramos";
+                url = '<%=path%>/Busqueda_Tramos?criterio='+criterio+'&valor='+valor;     
+            <%}else if(strTabla.equals("RESULTADOCOBRANZA")){%>
+                document.title = "Búsqueda de Resultado Cobranza";
+                url = '<%=path%>/Busqueda_ResultadoCobranza_Servlet?criterio='+criterio+'&valor='+valor;        
+            <%}else if(strTabla.equals("SECTOR")){%>
+                document.title = "Búsqueda de Sectores Económicos";
+                url = '<%=path%>/Busqueda_SectorEconomico_Servlet?criterio='+criterio+'&valor='+valor;
+                
+            <%}else if(strTabla.equals("MOTIVOINGRESOLN")){%>
+                document.title = "Búsqueda de Motivos de Ingreso a Base Negativa";
+                url = '<%=path%>/Busqueda_MotivoIngresoLN_Servlet?criterio='+criterio+'&valor='+valor;
+                
+            <%}else if(strTabla.equals("CARGOLABORAL")){%>
+                document.title = "Búsqueda de Cargos Laborales";
+                url = '<%=path%>/Busqueda_CargoLaboral_Servlet?criterio='+criterio+'&valor='+valor;
+                
+            <%}else if(strTabla.equals("MEDIDACAUTELAR")){%>
+                document.title = "Búsqueda de Medidas Cautelares";
+                url = '<%=path%>/Busqueda_MedidaCautelar_Servlet?criterio='+criterio+'&valor='+valor;
+            <%}else if(strTabla.equals("PERITOTASADOR")){ %>
+               document.title = "Búsqueda de Peritos";
+               url = '<%=path%>/Busqueda_PeritoTasador_Servlet?tipo=PE&criterio='+criterio+'&valor='+valor;            
+           <%}else if(strTabla.equals("NOTARIO")){%>
+              document.title = "Búsqueda de Notarios";
+              url = '<%=path%>/Busqueda_PeritoTasador_Servlet?tipo=NT&criterio='+criterio+'&valor='+valor;          
+          <%}else if(strTabla.equals("MOTIVOBLOQUEODESBLOQUEOTOTAL")){%>
+              //Inicio [T-9101] gmeza 11.03.2016
+              document.title = "Búsqueda de Motivos";
+              var codigoGarantia=<%=codigoGarantia%>;
+              url = '<%=path%>/Busqueda_MotivoBloqueoDesbloqueo_Servlet?criterio='+criterio+'&valor='+valor+'&codigoGarantia='+codigoGarantia;          
+              //Fin [T-9101]          
+           <%}else if(strTabla.equals("SECTORECONOMICO")){%>
+              document.title = "Búsqueda de Cargos Laborales";
+              url = '<%=path%>/Busqueda_SectorEconomico_Servlet?criterio='+criterio+'&valor='+valor;     
+           <%}else if(strTabla.equals("GIROSOLICITUD")){%>
+              document.title = "Búsqueda de Cargos Laborales";
+              url = '<%=path%>/Busqueda_RemesasSolicitudGiro_Servlet?criterio='+criterio+'&valor='+valor;     
+             <%//rgutierrez 11.05.2012
+           }else if(strTabla.equals("CANALOPERACIONES")){%>
+              document.title = "Búsqueda de Canal de Operaciones";
+              url = '<%=path%>/Busqueda_CanalOperaciones_Servlet?criterio='+criterio+'&valor='+valor;     
+           <%}else if(strTabla.equals("ENTIDADRECAUDADORA")){%>             
+              document.title = "Búsqueda de Entidad Recaudadora";
+              url = '<%=path%>/Busqueda_CanalOperacionRecaudacionExterna_Servlet?criterio='+criterio+'&valor='+valor;           
+           <%   //rgutierrez 06.08.2012
+              }else if(strTabla.equals("PROMOCIONCAMP")){%>
+              document.title = "Búsqueda de Campaña";
+           // [Req.14-020] gmoran 27.05.2014
+              url = '<%=path%>/Busqueda_Campana_Servlet?criterio='+criterio+'&valor='+valor;     
+             <% //Aromero 14.05.2014
+              }else if(strTabla.equals("CAMPANA")){%>
+              document.title = "Búsqueda de Campaña";
+              
+              var campana='campana';
+              url = '<%=path%>/Busqueda_Campana_Servlet?criterio='+criterio+'&valor='+valor+'&tipC='+campana;
+              <%}else if(strTabla.equals("INSTITUCIONES")){%>             
+              document.title = "Búsqueda de Instituciones";
+              url = '<%=path%>/Busqueda_Instituciones_Servlet?criterio='+criterio+'&valor='+valor;
+              <%}else if(strTabla.equals("CLIENINSTI")){%>             
+              document.title = "Búsqueda de Clientes";
+              var codInst=<%=codInst%>;
+              url = '<%=path%>/Busqueda_ClientesInstitucion_Servlet?criterio='+criterio+'&valor='+valor+'&codInst='+codInst;       
+             <%}else if(strTabla.equals("AHORROSOLES")){%>             
+              document.title = "Búsqueda de Ahorro Soles";
+              url = '<%=path%>/Busqueda_AhorroSoles_Servlet?criterio='+criterio+'&valor='+valor;
+              <%}else if(strTabla.equals("AHORRODOLARES")){%>             
+              document.title = "Búsqueda de Ahorro Dolares";
+              url = '<%=path%>/Busqueda_AhorroDolares_Servlet?criterio='+criterio+'&valor='+valor;
+            <%//gfernandez 25.09.2012
+              }else if(strTabla.equals("TIPOSPROCESO")){%>
+              document.title = "Búsqueda de Tipos de proceso";
+              url = '<%=path%>/Busqueda_TiposProceso_Servlet?criterio='+criterio+'&valor='+valor; 
+            <%//gfernandez 25.09.2012
+              }else if(strTabla.equals("CAMPANASUBCONCEPTOCONTABLE")){%>
+              document.title = "Búsqueda de subconcepto contable por Campaña";
+              url = '<%=path%>/Busqueda_SubConceptoContableCampana_Servlet?criterio='+criterio+'&valor='+valor;     
+            <%//gfernandez 03.12.2012
+              }else if(strTabla.equals("TIPOPERSONA")){%>
+              document.title = "Búsqueda de tipo de persona";
+              url = '<%=path%>/Busqueda_TipoPersona_Servlet?criterio='+criterio+'&valor='+valor;     
+            <%//gfernandez 03.12.2012
+              }else if(strTabla.equals("NIVELRIESGOLA")){%>
+              document.title = "Búsqueda del nivel de riesgo para Lavado de Activos";
+              url = '<%=path%>/Busqueda_NivelRiesgoLA_Servlet?criterio='+criterio+'&valor='+valor;     
+            <%//gfernandez 03.12.2012
+              }else if(strTabla.equals("TIPOCUENTA")){%>
+              document.title = "Búsqueda de tipo de cuenta";
+              url = '<%=path%>/Busqueda_TipoCuenta_Servlet?criterio='+criterio+'&valor='+valor;     
+            <%//gfernandez 09.12.2012
+              }else if(strTabla.equals("UBIGEODEPARTAMENTO")){%>
+              document.title = "Búsqueda de Departamentos";
+              url = '<%=path%>/Busqueda_UbigeoDepartamento_Servlet?criterio='+criterio+'&valor='+valor;     
+            <%//gfernandez 17.01.2012
+              }else if(strTabla.equals("NIVELINGRESO")){%>
+              document.title = "Búsqueda de Nivel de Riesgo";
+              url = '<%=path%>/Busqueda_NivelIngreso_Servlet?criterio='+criterio+'&valor='+valor;                
+
+            <%//ajimenez 05.04.2013
+              }else if (strTabla.equals("GRUPOPRODUCTOCREDITO")){%>
+              document.title = "Búsqueda de Grupo de Producto de Credito";
+              url = '<%=path%>/Busqueda_GrupoProductoCredito_Servlet?criterio='+criterio+'&valor='+valor;
+           <%
+              /** Inicio jventura Req.S14-061 05.06.2014 **/          
+              }else if (strTabla.equals("TIPOFECHAPAGO")){%>
+              document.title = "Búsqueda Tipo de Fecha de Pago";
+              url = '<%=path%>/Busqueda_TipoFechadePago_Servlet?criterio='+criterio+'&valor='+valor;
+              
+           <%
+              }else if (strTabla.equals("TIPOSEGURO")){%>
+              document.title = "Búsqueda Tipo de Seguro";
+              url = '<%=path%>/Busqueda_TipoSeguro_Servlet?criterio='+criterio+'&valor='+valor;
+              
+           <%     
+              }else if (strTabla.equals("ENTIDADASEGURADORA")){%>
+              document.title = "Búsqueda Empresas Aseguradora";
+              url = '<%=path%>/Busqueda_EmpresaSeguros_Servlet?criterio='+criterio+'&valor='+valor;
+              /** Fin jventura Req.S14-061 05.06.2014 **/
+              
+            <%//jgonzales 26.04.2013
+              }else if(strTabla.equals("TIPOBANCARIZACION")){%>
+              document.title = "Búsqueda de Clasificacion de Bancarizacion";
+              url = '<%=path%>/CR_C_Busqueda_TipoBancarizacion_Servlet?criterio='+criterio+'&valor='+valor;
+            
+             <%// [Req. 14-020] esalazar 19.03.2014 
+              }else if(strTabla.equals("VALORCONDICION")){%>
+              document.title = "Búsqueda de Valores por Condición";
+              url = '<%=path%>/CR_T_MantenimientoValoresPorCondicion_Servlet?action=CARGAR_POPUP&criterio='+criterio+'&valor='+valor+'&indicadorPropuesta=<%=indicadorPropuesta%>&indicadorExcepcion=<%=indicadorExcepcion%>&codigoValorCondicion=<%=codigoValorCondicion%>';
+            <%// [Req. 14-020] gmoran 07.04.2014 
+              }else if(strTabla.equals("BUSQUEDAPERSONASCLAF")){%>
+              document.title = "Búsqueda Personas";
+              url = '<%=path%>/Busqueda_PersonasClasificacion_Servlet?criterio='+criterio+'&valor='+valor+'&tipoClasificacion='+tipoClasificacion+'&codigoPersonaF='+codigoPersonaF;
+              
+            <%// [Req. 14-020] gmoran 07.04.2014 
+              }else if(strTabla.equals("PRODUCTOSBANTIQ")){%>
+              document.title = "Búsqueda Productos Bantiq";
+              url = '<%=path%>/Busqueda_ProductosBantiq_Servlet?criterio='+criterio+'&valor='+valor;
+
+            <%// [Req. 14-020] gmoran 07.04.2014 
+              }else if(strTabla.equals("PRODUCTOSDELFIN")){%>
+              document.title = "Búsqueda Productos Delfin";
+              url = '<%=path%>/Busqueda_ProductosDelfin_Servlet?criterio='+criterio+'&valor='+valor+'&codigoMoneda=<%=codigoMoneda%>';
+              
+            <%// [Req. 14-020] gmoran 07.04.2014 
+              }else if(strTabla.equals("CONSULTAPRODUCTOSBANTIQ")){%>
+              document.title = "Búsqueda Consulta Productos Bantiq";
+              url = '<%=path%>/Busqueda_ConsultaProductosBantiq_Servlet?criterio='+criterio+'&valor='+valor+'&indicadorHijos=<%=indicadorHijosBantiq%>&codigoPadre=<%=codigoPadreBantiq%>';
+            
+             <%// [Req. 14-020] gmoran 07.04.2014 
+              }else if(strTabla.equals("CONSULTACONCEPTOSBANTIQ")){%>
+              document.title = "Búsqueda Consulta Conceptos Bantiq";
+              url = '<%=path%>/Busqueda_ConsultaConceptosBantiq_Servlet?criterio='+criterio+'&valor='+valor;
+            
+            <%// [Req. 14-020] gmoran 07.04.2014 
+              }else if(strTabla.equals("CONCEPTOSCOMISION")){%>
+              document.title = "Búsqueda Conceptos Comision";
+              url = '<%=path%>/Busqueda_ConceptoComision_Servlet?criterio='+criterio+'&valor='+valor;
+
+            <%// [Req. 14-020] esalazar 11.05.2016 
+              }else if(strTabla.equals("FUNCIONARIOS_NEGOCIOS")){%>
+              document.title = "Búsqueda de Funcionarios de Negocio";
+              url = '<%=path%>/CR_T_MantenimientoUsuarioFuncionario_Servlet?action=BUSCAR_FUNCIONARIOS&criterio=' + criterio + '&valor=' + valor + '&codigoTipoBanca=<%=codigoTipoBanca%>' + '&filtrarUsuarioConectado=<%=filtrarUsuarioConectado%>';
+
+            <%//[Req. 14-003] mnieves 04.04.2014
+            }else if(strTabla.equals("CLIENTESCORPORATIVOS")){%>
+                document.title = "Búsqueda de Clientes Corporativos";
+                url = '<%=path%>/Busqueda_GeneralClientesCorporativos_Servlet?criterio='+criterio+'&valor='+valor+'&typePerson='+typePerson;
+            <%//[Req. 14-074] dfujimoto 26.05.2014
+            }else if(strTabla.equals("PROMOTORAHORRO")){%>
+                document.title = "Búsqueda Promotor";
+                url = '<%=path%>/Busqueda_PromotorAhorro_Servlet?criterio='+criterio+'&valor='+valor+'&tipoFuncionario='+typePerson+'&action='+concepto;
+            <%}else if(strTabla.equals("AGENCIAFUNCIONARIO")){ %>
+                document.title = "Búsqueda de Agencia por Promotor";
+                url = '<%=path%>/Busqueda_PromotorAhorro_Servlet?criterio='+criterio+'&valor='+valor+'&action='+concepto;                  
+            //[Req. 14-057] cchalco
+            <%}else if(strTabla.equals("CLIENTEPROVEEDORVINCULADO")){
+                String codigoAliado = request.getParameter("codigoAliado");%>
+                document.title = "Búsqueda de Clientes Proveedores";
+                var codigoAliado = <%=codigoAliado%>;
+                url = '<%=path%>/Busqueda_ClientesProveedoresVinculados_Servlet?criterio='+criterio+'&valor='+valor+'&auxiliar='+auxiliar+'&codigoAliado='+codigoAliado;
+            //[Fin Req. 14-057]
+            //[Req. 14-094] dfujimoto 08.07.2014
+            <%}else if(strTabla.equals("ROLESCTS")){%>
+                document.title = "Búsqueda Roles CTS";
+                url = '<%=path%>/Busqueda_RolesCTS_Servlet?criterio='+criterio+'&valor='+valor;
+            <%}else if(strTabla.equals("DESTINOCREDITO")){%>
+                document.title = "Búsqueda Destino Crédito";
+                url = '<%=path%>/Busqueda_DestinoCredito_Servlet?criterio='+criterio+'&valor='+valor;
+            <%}%>          
+    }else{
+            <%if(strTabla.equals("SUBCONCEPTO")){%>
+                document.title = "Búsqueda de Subconceptos";
+                url = '<%=path%>/Busqueda_SubConceptoOperacion_Servlet?criterio='+criterio+'&valor=&codoperacion='+codigoconcepto;
+        
+        <%}else if(strTabla.equals("SUBCONCEPTOCTS")){%>
+                document.title = "Búsqueda de Subconceptos";
+                var tipoNota=<%=tipoNota%>;
+                var formaAbono=<%=formaAbono%>;
+                var claseProducto=<%=claseProducto%>;
+                url = '<%=path%>/Busqueda_SubConceptoOperacion_Servlet?criterio='+criterio+'&valor=&codoperacion='+codigoconcepto+'&tipoNota='+tipoNota+'&formaAbono='+formaAbono+'&claseProducto='+claseProducto;
+            // Agregado gliceta 05.08.2010: Seguimiento de Riesgos
+            <%}else if(strTabla.equals("SUBCONCOMISI")){%>
+                document.title = "Búsqueda de Subconceptos";
+                url = '<%=path%>/Busqueda_Subconcepto_Comision_Institucion_Servlet?criterio='+criterio+'&valor=&codoperacion='+
+                codigoconcepto;
+            
+            <%}else if(strTabla.equals("CONCEPTO_INSTI")){%>             
+              document.title = "Búsqueda de Concepto Instituciones";
+              url = '<%=path%>/Busqueda_Concepto_Instituciones_Servlet?criterio='+criterio+'&valor='+valor;
+              
+             <%}else if(strTabla.equals("SUBTIPOINDRIESGO")){%>
+                
+                document.title = "Búsqueda de Sub Tipos de Indicadores de Riesgo";
+                url = '<%=path%>/Busqueda_SubTipoIndicadorRiesgo_Servlet?criterio='+criterio+'&valor=&codoperacion='+
+                codigoconcepto;
+                
+            <%}else if(strTabla.equals("SUBCONCEPTOCREDITO")){%>
+                document.title = "Búsqueda de Subconceptos CREDITO";
+                url = '<%=path%>/Busqueda_SubConceptoOperacionCreditos_Servlet?criterio='+criterio+'&valor=&codoperacion='+codigoconcepto;  
+            <%}else if(strTabla.equals("SUBCONCEPTOTERCEROS")){%> //vperez 31.08.2010 busqueda de subconceptos terceros0
+                document.title = "Búsqueda de Subconceptos Terceros";
+                url = '<%=path%>/Busqueda_SubConceptoOperacionTerceros_Servlet?criterio='+criterio+'&valor=&codoperacion='+codigoconcepto+'&hiEmpresaTerceros='+<%=hiEmpresaTerceros%>; 
+            
+            <%}else if(strTabla.equals("ENTIDADES_MANEJADORA_VALORES_ACTIVO")){%>
+                document.title = "Búsqueda de Entidades Manejadora Efectivo Activos";
+                url = '<%=path%>/OP_EntidadesManejadoraValoresActivo_Servlet?criterio='+criterio+'&valor='+valor;
+            <%}else if(strTabla.equals("ENTIDADES_MANEJADORA_VALORES_ACTIVO_BOVEDA")){%>
+                document.title = "Búsqueda de Entidades Manejadora Efectivo Activos";
+                url = '<%=path%>/OP_EntidadesManejadoraValoresActivo_Servlet?boveda=S&criterio='+criterio+'&valor='+valor;  
+            <%}else if(strTabla.equals("RELACIONDINAMICA")){%>            
+                document.title = "Búsqueda de Grupos Contables para Relación Dinámica";
+                url = '<%=path%>/Busqueda_RelacionDinamica_Servlet?criterio='+criterio+'&valor=';
+                
+            <%}else if(strTabla.equals("CONCEPTOCONTABLE")){%>            
+                document.title = "Búsqueda de Conceptos Contable";
+                url = '<%=path%>/Busqueda_ConceptoContable_Servlet?criterio='+criterio+'&valor=';
+                
+           <%}else if(strTabla.equals("OBLIGACION")){%>            
+                document.title = "Búsqueda de Obligaciones";
+                url = '<%=path%>/Busqueda_Obligaciones_Servlet?criterio='+criterio+'&valor='+valor+"&listaConceptos="+listaConceptos;
+             <%}else if(strTabla.equals("VISITADOR")){%>
+                document.title = "Búsqueda de Visitadores";
+                url = '<%=path%>/Busqueda_Visitadores_Servlet?criterio='+criterio+'&valor='+valor;   
+            <%}else if(strTabla.equals("EXPEDIENTEJUDICIAL")){%>
+                document.title = "Búsqueda de Expediente Judicial";
+                url = '<%=path%>/Busqueda_ExpedienteJudicial?criterio='+criterio+'&valor=&numeroCredito='+numeroCredito;
+                
+            <%}else if(strTabla.equals("COLUMNA")){%>
+                document.title = "Búsqueda de Columnas";
+                url = '<%=path%>/Busqueda_Columnas_Servlet?criterio='+criterio+'&valor=&tabla=<%= nombreTabla %>&campo=<%= nombreCampo %>';
+                
+            <%}else if(strTabla.equals("CARGOS")){%>
+                document.title = "Búsqueda de Cargos";
+                url = '<%=path%>/Busqueda_Cargos_Servlet?criterio='+criterio+'&valor='+valor;
+                
+            <%}else if(strTabla.equals("MOTIVOREGISTRONCND")){%>
+                document.title = "Búsqueda de Motivo Registro Nota Crédito/Débito";
+                url = '<%=path%>/Busqueda_MotivoRegistroNotaCreditoDebito_Servlet?criterio='+criterio+'&valor='+valor+"&tipoTransaccion="+tipoTransaccion;                    
+                
+            <%}else if(strTabla.equals("SUBACTIVIDADlINEAVIDA")){%>
+                document.title = "Búsqueda de Sub Actividades de la linea de vida del crédito";
+                url = '<%=path%>/Busqueda_ActividadLineaVida_Servlet?criterio='+criterio+'&valor='+valor+"&tipoActividad="+tipoActividad;
+                
+            <%}else if(strTabla.equals("COBRADORES")){%>
+                document.title = "Búsqueda de cobradores";
+                url = '<%=path%>/Busqueda_Cobradores_Servlet?criterio='+criterio+'&valor='+valor;
+                
+            <%}else if(strTabla.equals("TIPOCREDITO")){%>
+                document.title = "Búsqueda de tipos de crédito";
+                url = '<%=path%>/Busqueda_TipoCredito_Servlet?criterio='+criterio+'&valor='+valor;                    
+                
+            <%}else if(strTabla.equals("ACTIVIDADlINEAVIDA")){%>
+                document.title = "Búsqueda de Actividades del linea de vida del crédito";
+                url = '<%=path%>/Busqueda_ActividadLineaVida_Servlet?criterio='+criterio+'&valor='+valor;
+                
+            <%}else if(strTabla.equals("SUBTIPOCREDITO")){%>
+                document.title = "Búsqueda de subtipos de crédito";
+                url = '<%=path%>/Busqueda_SubTipoCredito_Servlet?criterio='+criterio+'&valor='+valor+'&codoperacion='+codigoconcepto+"&codigoTipoCredito=<%=tipoCredito%>&tipoBusqueda=<%=strAux%>"                    
+                
+            <%}else if(strTabla.equals("AGENCIA")){%>
+                document.title = "Búsqueda de Agencias";
+                //[CC17-026] gmeza 28.02.2017
+                url = '<%=path%>/Busqueda_Agencia_Servlet?criterio='+criterio+'&valor='+valor+'&indicadorEnFuncionamiento=<%=indicadorEnFuncionamiento%>';;
+                
+            // Agregado gliceta 22.09.2010: Seguimiento de Riesgos: Busqueda de Cargo Funcional 
+            <%}else if(strTabla.equals("CARGOFUNCIONAL")){%>
+                document.title = "Búsqueda de Cargo Funcional";
+                url = '<%=path%>/Busqueda_CargoFuncional_Servlet?criterio='+criterio+'&valor=';
+            //gliceta 07.07.2011: Automatizacion de Encajes     
+            <%}else if(strTabla.startsWith("SBTGREN")){%>
+                document.title = "Búsqueda de Codigos de Encaje";
+                url = '<%=path%>/servlet/EN_B_CodEncaje_Servlet?criterio='+criterio+'&valor='+valor+'&tabla='+'<%=request.getParameter("tabla")%>'; 
+            <%}else if(strTabla.equals("NUMEROCARTA")){%>
+                document.title = "Búsqueda de Cartas";
+                url = '<%=path%>/Busqueda_CartaCambioRecaudo_Servlet?criterio='+criterio+'&valor='+valor;   
+            <%}else if(strTabla.equals("CONVENIOS")){%>
+                document.title = "Búsqueda de Convenios";
+                url = '<%=path%>/Busqueda_Convenios_Servlet?criterio='+criterio+'&valor=';
+                
+            <%}else if(strTabla.equals("CONCEPTO")){%>
+                document.title = "Búsqueda de Conceptos";
+                url = '<%=path%>/Busqueda_Conceptos_Servlet?criterio='+criterio+'&valor=&concepto='+concepto;
+                
+            <%}else if(strTabla.equals("ETAPASPROCESALES")){%>
+                document.title = "Búsqueda de Etapas procesales";
+                url = '<%=path%>/Busqueda_EtapasProcesales_Servlet?criterio='+criterio+'&valor=';
+                
+            <%}else if(strTabla.equals("EFINANCIERAS")){%>
+                document.title = "Búsqueda de Entidades Financieras";
+                url = '<%=path%>/Busqueda_EntidadFinanciera_Servlet?criterio='+criterio+'&valor='+'<%=urlEfin%>';
+                
+            <%}else if(strTabla.equals("AJUSTE")){%>
+                document.title = "Búsqueda de Grupos de Ajuste";
+                url = '<%=path%>/Busqueda_GrupoAjuste_Servlet?criterio='+criterio+'&valor=';
+                
+            <%}else if(strTabla.equals("REVALUACION")){%>
+                document.title = "Búsqueda de Grupos de Revaluación";
+                url = '<%=path%>/Busqueda_GrupoRevaluacion_Servlet?criterio='+criterio+'&valor=';
+                
+            <%}else if(strTabla.equals("IMPUESTO")){%>
+                document.title = "Búsqueda de Impuestos";
+                url = '<%=path%>/Busqueda_Impuestos_Servlet?criterio='+criterio+'&valor=';
+                
+            <%}else if(strTabla.equals("MONEDA")){%>
+                document.title = "Búsqueda de Monedas";
+                url = '<%=path%>/Busqueda_Moneda_Servlet?criterio='+criterio+'&valor=';
+                
+            <%}else if(strTabla.equals("DEMANDANTE")){%>
+                 document.title = "Búsqueda de Abogados";
+                url = '<%=path%>/Busqueda_Abogados_Servlet?criterio='+criterio+'&valor='+valor;
+                
+            <%}else if(strTabla.equals("DEMANDADO")){%>
+                 document.title = "Búsqueda de Abogados";
+                url = '<%=path%>/Busqueda_Demandado_Servlet?criterio='+criterio+'&valor='+valor;
+          
+            <%}else if(strTabla.equals("JUZGADO")){%>
+                document.title = "Búsqueda de Juzgado";
+            //Inicio [CC17-002] gmeza 16.01.2017
+                url = '<%=path%>/Busqueda_Juzgado_Servlet?criterio='+criterio+'&valor='+valor+'&codigoDistritoJudicial=<%=codigoDistritoJudicial%>';
+
+            <%}else if(strTabla.equals("DISTRITOJUDICIAL")){%>
+                document.title = "Búsqueda de Distrito Judicial";
+                url = '<%=path%>/CR_C_DistritoJudicial_Servlet?criterio='+criterio+'&valor='+valor;
+            //Fin [CC17-002]
+            
+            //Inicio [CC17-012] gmeza 31.01.2017
+            <%}else if(strTabla.equals("CATALOGOCOMBOGENERICO")){%>
+                document.title = "Búsqueda de Catálogo";
+                url = '<%=path%>/CB_C_CatalogoComboGenerico_Servlet?criterio='+criterio+'&valor='+valor+'&nombreCombo=<%=nombreCombo%>'+'&metodoInsertar=<%=metodoInsertar%>';
+            
+            <%}else if(strTabla.equals("TIPOGASTOJUDICIAL")){%>
+                document.title = "Búsqueda de Tipo de Gasto Judicial";
+                url = '<%=path%>/CR_C_TipoGastoJudicial_Servlet?criterio='+criterio+'&valor='+valor;
+            //Fin [CC17-012]
+            //Inicio [Req.S17-007] kdelacruz 06.03.2017
+            <%}else if(strTabla.equals("NOTARIOS")){%>
+                document.title = "Búsqueda de Notarios";
+                url = '<%=path%>/CL_C_Notarios_Servlet?criterio='+criterio+'&valor='+valor;
+             //Fin [Req.S17-007]
+            <%}else if(strTabla.equals("SECRETARIO")){%>
+                document.title = "Búsqueda de Secretario de Juzgado";
+                url = '<%=path%>/Busqueda_SecretarioJuzgado_Servlet?criterio='+criterio+'&valor='+valor;
+                
+            <%}else if(strTabla.equals("RESPUESTANOTIFICACION")){%>
+                document.title = "Búsqueda de Respuesta Notificacion";
+                url = '<%=path%>/Busqueda_RespuestaNotificacion_Servlet?criterio='+criterio+'&valor='+valor;
+                
+            <%}else if(strTabla.equals("TIPODOCUMENTO")){%>
+                document.title = "Búsqueda de Tipos de Documentos";
+                url = '<%=path%>/Busqueda_TipoDocumentos_Servlet?criterio='+criterio+'&valor=';
+            // Inicio [Req. 14-100] jventura 16.02.2016
+            <%}else if(strTabla.equals("LIQUIDACIONBANTIQ")){%>
+                document.title = "Búsqueda de Pre-Liquidación BANTIQ";
+                url = '<%=path%>/Busqueda_LiquidacionBantiq_Servlet?action=LIQUIDACIONBANTIQ&criterio='+criterio+'&valor='+valor;   
+            // Fin [Req. 14-100]
+            // Inicio [S16-019] dlazo 12.04.2016
+            <%}else if(strTabla.equals("ROLESBANTIQ")){%>
+                document.title = "Búsqueda de Roles BANTIQ";
+                url = '<%=path%>/Busqueda_RolesBantiq_Servlet?criterio='+criterio+'&valor='+valor;
+             // Fin [S16-019] dlazo 12.04.2016
+             // Inicio [S16-003] dlazo 12.04.2016
+             <%}else if(strTabla.equals("ASUNTO_SOLICITUD")){%>
+                 document.title = "Búsqueda de Asunto de Solicitud";
+                 url = '<%=path%>/Busqueda_AsuntoSolicitud_Servlet?criterio='+criterio+'&valor='+valor;
+              // Fin [S16-003] dlazo 12.04.2016
+            // Inicio [S16-034] DLAZO 07.10.2016
+            <%}else if(strTabla.equals("SECTORIAL")){%>
+                document.title = "Búsqueda de código sectorial";
+                url = '<%=path%>/Busqueda_CodigoSectorial_Servlet?criterio='+criterio+'&valor='+valor;
+            // Fin [S16-034]
+            <%}else if(strTabla.equals("PRODUCTOAHORRO")){%>
+                document.title = "Búsqueda de Productos de Ahorro";
+                url = '<%=path%>/Busqueda_ProductosAhorro_Servlet?criterio='+criterio+'&valor=&tipoPersona='+concepto;
+                
+            <%}else if(strTabla.equals("PRODUCTOAHORROSINTASA")){%>
+                document.title = "Búsqueda de Productos de Ahorro";
+                url = '<%=path%>/Busqueda_ProductosAhorroSinTasa_Servlet?criterio='+criterio+'&valor=';
+                
+            <%}else if(strTabla.equals("PRODUCTODPF")){%>
+                document.title = "Búsqueda de Productos a Plazo Fijo";
+                url = '<%=path%>/Busqueda_ProductosDPF_Servlet?criterio='+criterio+'&valor=&tipoPersona='+concepto;
+                
+            <%}else if(strTabla.equals("PRODUCTODPFSINTASA")){%>
+                document.title = "Búsqueda de Productos de Plazo Fijo";
+                url = '<%=path%>/Busqueda_ProductosDPFSinTasa_Servlet?criterio='+criterio+'&valor=';
+                
+            <%}else if(strTabla.equals("PRODUCTOCTS")){%>
+                document.title = "Búsqueda de Productos CTS";
+                url = '<%=path%>/Busqueda_ProductosCTS_Servlet?criterio='+criterio+'&valor=&tipoPersona='+concepto;
+                
+            <%}else if(strTabla.equals("PRODUCTOCTSSINTASA")){%>
+                document.title = "Búsqueda de Productos CTS";
+                url = '<%=path%>/Busqueda_Productos?criterio='+criterio+'&valor='+valor+'&claseProducto='+concepto;
+                
+            <%}else if(strTabla.equals("PRODUCTOCUENTA")){%>
+                document.title = "Búsqueda de Productos Cuenta";
+                url = '<%=path%>/Busqueda_Producto_Cuenta?criterio='+criterio+'&valor='+valor;        
+                
+            <%}else if(strTabla.equals("UBIGEO")){%>
+                document.title = "Búsqueda de Ubigeos";
+                url = '<%=path%>/Busqueda_Ubigeo_Servlet?criterio='+criterio+'&valor='+valor;
+                
+            <%}else if(strTabla.equals("CUENTAEFINANCIERAS")){%>
+                 document.title = "Búsqueda de Cuentas-Bancos";
+                 url = '<%=path%>/Busqueda_NroCuentaEntidadFinanciera_Servlet?criterio='+criterio+'&valor=&auxiliar='+auxiliar;
+                 
+            <%}else if(strTabla.equals("TIPOBLOQUEO")){%>
+                 document.title = "Búsqueda de Tipos de Bloqueo";
+                 url = '<%=path%>/Busqueda_TipoBloqueo_Servlet?criterio='+criterio+'&valor=';
+              /**Inicio [Req.14-020] gmoran 27.05.2014*/     
+              <%}else if(strTabla.equals("FASE")){%>
+                   document.title = "Búsqueda de Fases";
+                   url = '<%=path%>/CR_T_MantenimientoNivelesFlujo_Servlet?action=CARGA_POPUP&criterio='+criterio+'&valor=';
+              /*Fin [Req.14-020] gmoran 27.05.2014*/                 
+            <%}else if(strTabla.equals("FORMABLOQUEO")){%>
+                 document.title = "Búsqueda de Tipos de Bloqueo";
+                 url = '<%=path%>/Busqueda_FormaBloqueo_Servlet?criterio='+criterio+'&valor=';     
+              
+            <%}else if(strTabla.equals("TIPOBLOQUEOAHO")){%>
+                 document.title = "Búsqueda de Tipos de Bloqueo";
+                 url = '<%=path%>/Busqueda_TipoBloqueoAho_Servlet?criterio='+criterio+'&valor=';   
+                 
+            <%}else if(strTabla.equals("CENTROCOSTO")){%>
+                document.title = "Búsqueda de Centros de Costos";
+                url = '<%=path%>/Busqueda_CentroCosto_Servlet?criterio='+criterio+'&valor=';
+                
+            <%}else if(strTabla.equals("PRODUCTO")){%>
+                document.title = "Búsqueda de Productos";
+                url = '<%=path%>/Busqueda_Producto_Servlet?criterio='+criterio+'&valor=';                    
+             <%}else if(strTabla.equals("NACIONALINTERNACIONAL")){%>
+                document.title = "Búsqueda de Procedencia";
+                url = '<%=path%>/Busqueda_NacionalInternacional_Servlet?criterio='+criterio+'&valor='+valor;                
+             <%}//mnieves 22.08.2011
+                else if(strTabla.equals("TIPOCREDITOSBS")){%>
+                document.title = "Búsqueda de tipos de crédito SBS";
+                url = '<%=path%>/Busqueda_TipoCreditoSBS_Servlet?criterio='+criterio+'&valor='+valor;
+             <%}//mnieves 22.08.2011
+                else if(strTabla.equals("TIPOPERSONAJURIDICA")){%>
+                document.title = "Búsqueda de tipos de persona juridica";
+                url = '<%=path%>/Busqueda_TipoPersonaJuridica_Servlet?criterio='+criterio+'&valor='+valor;
+            <%}//mnieves 24.08.2011
+                else if(strTabla.equals("NUMEROCUENTADPF")){%>
+                document.title = "Búsqueda de Numero Cuenta DPF";
+                url = '<%=path%>/Busqueda_NumeroCuentaDPF_Servlet?criterio='+criterio+'&valor='+valor;
+            <%}else if(strTabla.equals("GESTORCOBRANZA")){%>
+                document.title = "Búsqueda de gestores de cobranza";
+                url = '<%=path%>/Busqueda_Usuarios_Servlet?criterio='+criterio+'&valor=';
+                
+            <%}else if(strTabla.equals("USUARIO")){%>
+                document.title = "Búsqueda de Usuarios";
+              //[Req.S17-007] kdelacruz 06.03.2017
+                url = '<%=path%>/Busqueda_Usuarios_Servlet?criterio='+criterio+'&valor=' + valor + '&indicadorTipo=<%=indicadorTipo%>'; 
+                
+            <%}else if(strTabla.equals("USUARIOALL")){%>
+                document.title = "Búsqueda de Usuarios";
+                url = '<%=path%>/Busqueda_UsuariosAll_Servlet?criterio='+criterio+'&valor=';
+            
+            <%}else if(strTabla.equals("CUENTABANCARIA")){%>
+                document.title = "Búsqueda de Cuentas Bancarias";
+                url = '<%=path%>/Busqueda_CuentaBancaria_Servlet?valor=';
+                
+            <%}else if(strTabla.equals("CIIU")){%>
+                document.title = "Búsqueda de CIIU";
+                url = '<%=path%>/Busqueda_Ciiu_Servlet?criterio='+criterio+'&valor=';
+                
+            <%}else if(strTabla.equals("CIIUXSECTOR")){%>
+                document.title = "Búsqueda de CIIU x Sector";
+                url = '<%=path%>/Busqueda_CiiuSector_Servlet?criterio='+criterio+'&valor='+valor+'&txtCodigoAdic='+codigoAdic;
+                
+        <%}else if(strTabla.equals("ZONAITINERANTE")){%>
+                document.title = "Búsqueda de Zona Itinerante del Cliente";
+                url = '<%=path%>/Busqueda_ZonaItinerante_Servlet?criterio='+criterio+'&valor='+valor+'&txtCodigoAdic='+codigoAdic;
+                
+            <%}else if(strTabla.equals("CODIGOAUXILIAR")){%>
+                document.title = "Búsqueda de Códigos Auxiliares";                    
+                valor = (criterio == "Codigo" && valor != "")?concepto+valor:valor;                    
+                url = '<%=path%>/Busqueda_CodigoAuxiliar_Servlet?criterio='+criterio+'&valor=&cod='+concepto;
+                
+            <%}else if(strTabla.equals("PROFESION")){%>
+                document.title = "Búsqueda de Profesiones";
+                url = '<%=path%>/Busqueda_Profesion_Servlet?criterio='+criterio+'&valor=';
+                
+            <%}else if(strTabla.equals("CARGOOCUPACION")){%>
+                document.title = "Búsqueda de Profesiones";
+                url = '<%=path%>/Busqueda_CargoOcupacion_Servlet?criterio='+criterio+'&valor='+valor;
+                
+            <%}else if(strTabla.equals("OFICIO")){%>
+                document.title = "Búsqueda de Profesiones";
+                url = '<%=path%>/Busqueda_Oficio_Servlet?criterio='+criterio+'&valor='+valor;
+            
+            <%}else if(strTabla.equals("AREALABORAL")){%>
+                document.title = "Búsqueda de Areas Laborales";
+                url = '<%=path%>/Busqueda_AreaLaboral_Servlet?criterio='+criterio+'&valor='+valor;
+            
+            <%}else if(strTabla.equals("CUADRANTE")){%>
+                document.title = "Búsqueda de Cuadrantes";
+                url = '<%=path%>/Busqueda_Cuadrante_Servlet?criterio='+criterio+'&valor='+valor;
+            <%}else if(strTabla.equals("TRAMO")){%>
+                document.title = "Búsqueda de Tramos";
+                url = '<%=path%>/Busqueda_Tramos?criterio='+criterio+'&valor='+valor;     
+            <%}else if(strTabla.equals("RESULTADOCOBRANZA")){%>
+                document.title = "Búsqueda de Resultado Cobranza";
+                url = '<%=path%>/Busqueda_ResultadoCobranza_Servlet?criterio='+criterio+'&valor='+valor;        
+            <%}else if(strTabla.equals("SECTOR")){%>
+                document.title = "Búsqueda de Sectores Económicos";
+                url = '<%=path%>/Busqueda_SectorEconomico_Servlet?criterio='+criterio+'&valor=';
+                
+            <%}else if(strTabla.equals("MOTIVOINGRESOLN")){%>
+                document.title = "Búsqueda de Motivos de Ingreso a Base Negativa";
+                url = '<%=path%>/Busqueda_MotivoIngresoLN_Servlet?criterio='+criterio+'&valor=';
+                
+            <%}else if(strTabla.equals("ANALISTA") || strTabla.equals("PROMOTOR") || strTabla.equals("EJECUTIVO") || "PRE-ANALISTA".equals(strTabla)){%>
+                document.title = "Búsqueda de ANALISTA";
+                url = '<%=path%>/Busqueda_Usuarios_Servlet?criterio='+criterio+'&valor=&strTabla=<%=strTabla%>';
+                
+            <%}else if(strTabla.equals("PRODUCTOCREDITO")){%>
+                document.title = "Búsqueda de Producto";
+                <%-- Inicio [Req 14-055] jvilcapaza 18.02.2016--%>
+                url = '<%=path%>/Busqueda_ProductoCredito_Servlet?tipoPersonaTitular=<%=tipoPersonaTitular%>&tipoCredito=<%=tipoCredito%>&subTipoCredito=<%=subTipoCredito%>&criterio='+criterio+'<%=urlProducto%>'+'&valor=';
+            
+            <%}else if(strTabla.equals("PRODUCTOASEGURADORA")){%>
+                document.title = "Búsqueda de Productos Aseguradora";
+                url = '<%=path%>/OP_T_EmpresasAseguradoras_Servlet?action=BUSQUEDA_PRODUCTO_ASEGURADORA_TABLA&codigoAseguradora=<%=codigoAseguradora%>&codigoAseguradora&criterio='+criterio+'&valor=';
+            <%-- Fin [Req 14-055] --%>
+            
+            <%}else if(strTabla.equals("PRODUCTOCREDITOLC")){%>
+                document.title = "Búsqueda de Productos Credito";
+                url = '<%=path%>/Busqueda_ProductoCreditoLC_Servlet?tipoCredito=<%=tipoCredito%>&subTipoCredito=<%=subTipoCredito%>&criterio='+criterio+'&valor=';    
+                 
+            <%}else if(strTabla.equals("CARGOLABORAL")){%>
+                document.title = "Búsqueda de Cargos Laborales";
+                url = '<%=path%>/Busqueda_CargoLaboral_Servlet?criterio='+criterio+'&valor=';
+                
+            <%}else if(strTabla.equals("MOTIVORECHAZOSC")){%>
+                document.title = "Búsqueda de Motivo Rechazo de la Solicitud";
+                url = '<%=path%>/Busqueda_MotivoRechazo_Servlet?criterio='+criterio+'&valor=';
+                
+            <%}else if(strTabla.equals("MEDIDACAUTELAR")){%>
+                document.title = "Búsqueda de Medidas Cautelares";
+                url = '<%=path%>/Busqueda_MedidaCautelar_Servlet?criterio='+criterio+'&valor=';
+                
+            <%}else if(strTabla.equals("FORMATO")){%>
+                document.title = "Búsqueda de Formatos";
+                url = '<%=path%>/Busqueda_Formato_Servlet?criterio='+criterio+'&valor=';
+                
+            <%}else if(strTabla.equals("MOTIVOBLOQUEODESBLOQUEO")){%>
+                document.title = "Búsqueda de Motivos Bloqueo Desbloqueo";
+                url = '<%=path%>/Busqueda_MotivoBloqueoDesbloqueo_Servlet?tipoTransaccion='+tipoTransaccion+'&valor=&criterio='+criterio;
+                
+            <%}else if(strTabla.equals("PERSONAJURIDICA")){%>
+                document.title = "Búsqueda de Personas Juridicas";
+                url = '<%=path%>/Busqueda_PersonasJuridicas_Servlet?criterio='+criterio+'&valor=';
+                
+            <%}else if(strTabla.equals("PERSONANATURAL")){%>
+                document.title = "Búsqueda de Personas Naturales";
+                url = '<%=path%>/Busqueda_PersonaNatural_Servlet?criterio='+criterio+'&valor='+valor;
+                
+             <%}//prios 06.09.11
+             else if(strTabla.equals("PERSONA_RUC")){%>
+                document.title = "Búsqueda de Personas";
+                url = '<%=path%>/Busqueda_Personas_RUC_Servlet?criterio='+criterio+'&valor='+valor;
+              
+             <%}//mnieves 10.01.2012
+             else if(strTabla.equals("CUENTA_CONTABLE_INVENTARIO")){%>
+                document.title = "Búsqueda de Cuenta Contable";
+                aux ='<%=strAux%>';
+                url = '<%=path%>/Busqueda_CuentaContable_Inventario_Servlet?criterio='+criterio+'&valor='+valor+'&auxiliar='+aux;
+             <%}//mnieves 22.06.2012
+            else if(strTabla.equals("PRODUCTOS_NIEVELES_GRUPO_CREDITO")){%>
+                document.title = "Búsqueda de Producto Niveles Grupo Crédito";
+                aux ='<%=strAux%>';
+                url = '<%=path%>/Busqueda_ProductosNivelesGrupoProducto_Servlet?criterio='+criterio+'&valor='+valor;
+            <%}//mnieves 22.06.2012
+            else if(strTabla.equals("GESTOR_COBRANZA")){%>
+                document.title = "Búsqueda de Gestor de Cobranza";
+                aux ='<%=strAux%>';
+                url = '<%=path%>/Busqueda_GestorCobranza_Servlet?criterio='+criterio+'&valor='+valor;
+            <%}//mnieves 22.06.2012
+            else if(strTabla.equals("EMPRESA_EXTERNA")){%>
+                document.title = "Búsqueda Gestor de Empresa Externa";
+                aux ='<%=strAux%>';
+                url = '<%=path%>/Busqueda_GestorCobranza_Servlet?criterio='+criterio+'&valor='+valor+'&valorFiltro=<%=valorFiltro%>';  
+            <%}//jgonzales 27.08.2012
+            else if(strTabla.equals("GESTION_REALIZADA")){%>
+                document.title = "Búsqueda de Gestiones Realizadas";
+                url = '<%=path%>/Busqueda_GestionRealizada_Servlet?criterio='+criterio+'&valor='+valor;
+            <%}//jgonzales 27.08.2012
+            else if(strTabla.equals("RESPUESTA_GESTION")){%>
+                document.title = "Búsqueda de Respuestas de Gestión";
+                url = '<%=path%>/Busqueda_RespuestaGestion_Servlet?criterio='+criterio+'&valor='+valor;  
+                
+             //Los que no realizan búsquedas, pero necesitan poner el título     
+            <%}else if(strTabla.equals("CUENTACONTABLE")){%>
+                document.title = "Búsqueda de Cuentas Contables";
+                url = '<%=path%>/Busqueda_CuentaContable_Servlet?criterio='+criterio+'&valor='+valor+'&auxiliar='+auxiliar+'&fechaAplicacion='+fechaAplicacion;
+            
+            <%}else if(strTabla.equals("NROCUENTAENTIDAD")){%>
+                document.title = "Búsqueda de Sectores Económicos";                         
+                //[Req. 13-057] jchilon 27.05.2013 Se agrega un parámetro a la búsqueda.            
+                url = '<%=path%>/Busqueda_NroCuentaEntidadFinanciera_Servlet?criterio='+criterio+'&valor='+valor+'&filtroTipoMoneda=<%=filtroTipoMoneda%>'
+                +'&filtroCE=<%=chequeElectronico%>';
+                
+            //fvalle 31.01.2011
+           <%}else if(strTabla.equals("PERSONALTFC")){%>                            
+              document.title = "Búsqueda de Personal TFC";
+              url = '<%=path%>/Busqueda_PersonasHabilitacion_Servlet?tipo=PT&criterio='+criterio+'&valor='+valor; 
+           <%}else if(strTabla.equals("EMPRTRANSPDIN")){%>
+              document.title = "Búsqueda de Empresa Transportadora";
+              url = '<%=path%>/Busqueda_PersonasHabilitacion_Servlet?tipo=ET&criterio='+criterio+'&valor='+valor; 
+                
+            <%}else if(strTabla.equals("CUENTACONTABLEPRESUPUESTO")){%>
+                document.title = "Búsqueda de Cuentas Contables";
+                url = '<%=path%>/Busqueda_CuentaContablePresupuesto_Servlet?criterio='+criterio+
+                      '&valor='+valor+'&auxiliar='+auxiliar+'&fechaAplicacion='+fechaAplicacion;
+                      
+            <%}else if(strTabla.equals("PROVEEDORES")){%>
+                document.title = "Búsqueda de Proveedores";
+                url = '<%=path%>/Busqueda_Proveedor_Servlet?criterio='+criterio+'&valor='+valor+'&typePerson='+typePerson
+                // ajimenez 06.05.2013
+                + "&estadoRegistro=<%=estadoRegistro%>";
+            
+            <%}else if(strTabla.equals("CONTACTOS")){%>
+                document.title = "Búsqueda de Contactos";
+                url = '<%=path%>/Busqueda_Contacto_Servlet?criterio='+criterio+'&valor='+valor+'&typePerson='+typePerson+'&auxiliar='+auxiliar;
+            
+            <%}else if(strTabla.equals("CUENTAPROVEEDOR")){%>
+                document.title = "Búsqueda de Cuentas Bancarias de Persona";
+                url = '<%=path%>/Busqueda_CuentaProveedor_Servlet?criterio='+criterio+'&valor='+valor+'&typePerson='+typePerson+'&auxiliar='+auxiliar;;
+                    
+            <%}else if(strTabla.equals("PERSONAS")){%>
+                document.title = "Búsqueda de Personas";
+                <%-- [Req.14-020] esalazar 11.05.2016 --%>
+                url = '<%=path%>/Busqueda_GeneralPersonas_Servlet?criterio='+criterio+'&valor='+valor+'&typePerson='+typePerson +'&codigoFuncionario=<%=codigoFuncionario%>';
+            <!--Inicio [Req. S16-025] kdelacruz 05.09.2016 -->
+            <%}else if(strTabla.equals("OPCIONMENU")){%>
+                document.title = "Búsqueda Opción Menú";
+                var url = '<%=path%>/SS_T_MantenimientoMenuOpcion_Servlet?criterio='+criterio+'&tipoCarga=O&valor='+valor+'&indicadorNivel=<%=indicadorNivel%>&modulo=<%=codigoModulo%>&subModulo=<%=codigoSubModulo%>';
+            <!--Fin [Req. S16-025] -->
+            //Inicio [Req.S16-037] kdelacruz 23.11.2016 Adecuación del registro de Centro de Costos
+            <%}else if(strTabla.equals("GASTOSINVERSIONES")){%>
+                document.title = "Búsqueda de Gasos de Inversiones";
+                url = '<%=path%>/Busqueda_GastosInversiones_Servlet?action=GASTOSINVERSIONES&criterio='+criterio+'&valor='+valor;
+             //Fin [Req.S16-037] 
+                //Inicio [Req. S14-142] aromero 15.12.2014
+            <%}else if(strTabla.equals("PERSONASPOSICLI")){%>
+                document.title = "Búsqueda de Personas";
+                var flag='flagPosi';
+                 url = '<%=path%>/Busqueda_GeneralPersonas_Servlet?criterio='+criterio+'&valor='+valor+'&typePerson='+typePerson+'&flag='+flag;
+            //Fin [Req. S14-142] aromero 15.12.2014
+
+            //Inicio [Req. 14-135] framirez 09.12.2014
+            <%}else if(strTabla.equals("PERSONAS_CONYUGUE")){%>
+                 var cony = 'S';
+                 document.title = "Búsqueda de Personas";
+                 url = '<%=path%>/GA_R_TitularesGarantia_Servlet?criterio='+criterio+'&valor='+valor+'&typePerson='+typePerson+'&cony='+cony;
+            <%}else if(strTabla.equals("APODERADO")){%>
+                 document.title = "Búsqueda de Apoderados";
+                 url = '<%=path%>/GA_T_MantenimientoApoderadosGarantia_Servlet?action=BUSCAR_APODERADOS_RELACIONADOS&codigoTitular=<%=codigoTitular%>&criterio='+criterio+'&valor='+valor+'&typePerson='+typePerson;
+            <%}else if(strTabla.equals("APODERADO_PROPIETARIO")){%>
+                 var action_ = 'BUSCAR_APODERADOS_RELACIONADOS';
+                 document.title = "Búsqueda de Apoderados";
+                 url = '<%=path%>/GA_T_MantenimientoRegistroApoderadoPropietarioBien_Servlet?action=BUSCAR_APODERADOS_RELACIONADOS&codigoPropietario=<%=codigoPropietario%>&criterio='+criterio+'&valor='+valor+'&typePerson='+typePerson;
+                 
+            <%}else if(strTabla.equals("NATURALEZA_GARANTIA")){%>
+                 var action_ = 'BUSCAR_NATURALEZA_GARANTIA';
+                 document.title = "Búsqueda de Naturaleza Garantia";
+                 url = '<%=path%>/GA_C_NaturalezaGarantia_Servlet?action=BUSCAR_NATURALEZA_GARANTIA&criterio='+criterio+'&valor='+valor;
+            //Fin [Req. 14-135]
+
+            //Inicio [Req. 14-121] aromero 08.09.2014
+            <%}else if(strTabla.equals("ADQUIRENTES")){%>
+                
+                document.title = "Búsqueda de Personas";
+                 var flag='flag';
+                 var codCorp=<%=codCorp%>;
+                 url = '<%=path%>/Busqueda_GeneralPersonas_Servlet?criterio='+criterio+'&valor='+valor+'&typePerson='+typePerson+'&flag='+flag+'&codCorp='+codCorp;
+                //Fin [Req. 14-121]
+            <%}else if(strTabla.equals("CLIENTESRCC")){%>
+                document.title = "Búsqueda de Personas";
+                url = '<%=path%>/Busqueda_ClientesRCC_Servlet?criterio='+criterio+'&valor='+valor+'&idPeriodo='+codigoconcepto;
+            <%}else if(strTabla.equals("FIDEICOMISO")){%>
+                document.title = "Búsqueda de fideicomisos";
+                url = '<%=path%>/Busqueda_Fideicomiso_Servlet?criterio='+criterio+'&valor='+valor;               
+                 
+            <%}else if(strTabla.equals("CHEQUE")){%>
+                document.title = "Búsqueda de Cheques Depósito";            
+                           
+            <%}else if(strTabla.equals("TIPOGARANTIA")){%>
+                document.title = "Búsqueda Tipo Garantia";
+                url = '<%=path%>/Busqueda_TipoGarantia_Servlet?criterio='+criterio+'&valor='+valor;    
+                
+            <%}else if(strTabla.equals("PAIS")){%>
+                document.title = "Búsqueda de Paises";
+                url = '<%=path%>/Busqueda_Pais_Servlet?criterio='+criterio+'&valor='+valor+'<%=urlPais%>';
+            
+            <%}else if(strTabla.equals("REQUISITOS")){%>
+                document.title = "Búsqueda de Requisitos";
+                url = '<%=path%>/Busqueda_Requisitos_Servlet?criterio='+criterio+'&valor='+valor;
+            
+            
+            <%}else if(strTabla.equals("AGRUPMOTIVOINGRESOLN")){%>
+            document.title = "Búsqueda de Cuentas Contables";
+            url = '<%=path%>/Busqueda_AgrupacionMotivoListaNegra_Servlet?criterio='+criterio+'&valor='+valor;
+                
+             <%}else if(strTabla.equals("CARGOSLABORALES")){%>
+                document.title = "Búsqueda Cargos Laborales";
+                url = '<%=path%>/Busqueda_CargoLaboral_Servlet?criterio='+criterio+'&valor='+valor;    
+                
+            <%}else if(strTabla.equals("CIUDAD")){%>
+                document.title = "Búsqueda de Paises";
+                url = '<%=path%>/Busqueda_Ciudad_Servlet?criterio='+criterio+'&valor='+valor;  
+            
+            <%}else if(strTabla.equals("GIRONEGOCIO")){%>
+                document.title = "Búsqueda de Paises";
+                url = '<%=path%>/Busqueda_GiroNegocio_Servlet?criterio='+criterio+'&valor='+valor;                      
+                
+            <%}else if(strTabla.equals("GIRONEGOCIOXCIIU")){%>
+                document.title = "Búsqueda de Giro de Negocio";
+                url = '<%=path%>/Busqueda_GiroNegocioCiiu_Servlet?criterio='+criterio+'&valor='+valor+'&txtCodigoAdic='+codigoAdic;
+           
+            <%}else if(strTabla.equals("CANALVENTAS")){%>
+                document.title = "Búsqueda de Canal de Ventas";
+                url = '<%=path%>/Busqueda_CanalVentas_Servlet?criterio='+criterio+'&valor='+valor;
+                
+            //gliceta 07.07.2011: Automatizacion de Encajes    
+            <%}else if(strTabla.equals("ATRIBUTOOPERATIVO")){%>
+                document.title = "Búsqueda de Atributos Operativos";
+                url = '<%=path%>/Busqueda_AtributoOperativo_Servlet?criterio='+criterio+'&valor='+valor;     
+            
+            //jpantoja 06.02.2012: Concepto Operativo
+            <%}else if(strTabla.equals("CONCEPTOOPERATIVO")){%>
+                document.title = "Búsqueda de Conceptos Operativos";
+                url = '<%=path%>/Busqueda_ConceptoOperativo_Servlet?criterio='+criterio+'&valor='+valor;
+                
+<%}else if(strTabla.equals("OFICINA")){%>
+                document.title = "Búsqueda de Oficina";
+                url = '<%=path%>/Busqueda_Oficina_Servlet?criterio='+criterio+'&valor='+valor; 
+            <%}else if(strTabla.equals("DISTRITO")){%>
+                document.title = "Búsqueda de Distrito";
+                url = '<%=path%>/Busqueda_Distrito_Servlet?criterio='+criterio+'&valor='+valor;  
+            <%}else if(strTabla.equals("CUADRANTE")){%>
+                document.title = "Búsqueda de Cuadrantes";
+                url = '<%=path%>/Busqueda_Cuadrante_Servlet?criterio='+criterio+'&valor='+valor; 
+            <%}else if(strTabla.equals("ROLES")){%>
+                document.title = "Búsqueda de Roles";
+                url = '<%=path%>/Busqueda_Roles_Servlet?criterio='+criterio+'&valor='+valor;              
+            <%}else if(strTabla.equals("BASEINSPECCION")){%>
+                document.title = "Búsqueda de Bases de Inspeccion";
+                url = '<%=path%>/Busqueda_Bases_Servlet?criterio='+criterio+'&valor='+valor+"&buscarXTipoBase=I";               
+            <%}else if(strTabla.equals("BASE")){%>
+                document.title = "Búsqueda de Bases de Inspeccion";
+                url = '<%=path%>/Busqueda_Bases_Servlet?criterio='+criterio+'&valor='+valor;            
+            <%}else if(strTabla.equals("COORDINADORBASE")){%>
+                document.title = "Búsqueda de Coordinador de Base";
+                url = '<%=path%>/Busqueda_CoordinadorBase_Servlet?criterio='+criterio+'&valor='+valor+"&codigoBase="+codigoBase; 
+            <%}else if(strTabla.equals("PRODUCTOXTIENDA")){%>
+                document.title = "Búsqueda de Producto po Tienda";
+                url = '<%=path%>/Busqueda_ProductoTienda_Servlet?criterio='+criterio+'&valor='+valor; 
+            <%}else if(strTabla.equals("PRODUCTOFINANCIERO")){%>
+                document.title = "Búsqueda de Producto Financiero.";
+                url = '<%=path%>/Busqueda_ProductoFinanciero_Servlet?criterio='+criterio+'&valor='+valor;                       
+            
+            <%}else if(strTabla.equals("BUSQUEDAINSPECTOR")){%>
+                document.title = "Búsqueda de Inspectores";
+                url = '<%=path%>/Busqueda_Inspectores_Servlet?criterio='+criterio+'&valor='+valor+"&codigoBase="+codigoBase;
+            <%}else if(strTabla.equals("BUSQUEDAGARANTE")){%>
+                document.title = "Búsqueda de Garantes";
+                url = '<%=path%>/Busqueda_Garantes_Servlet?criterio='+criterio+'&valor='+valor+"&nroSolCredito="+nroSolCredito; 
+            <%}else if(strTabla.equals("BUSQUEDARESULTADO")){%>
+                document.title = "Búsqueda de Resultado";
+                url = '<%=path%>/Busqueda_ResultadoRevision_Servlet?criterio='+criterio+'&valor='+valor+"&nroSolCredito=<%=request.getParameter("nroSolCredito")%>"; 
+            <%}else if(strTabla.equals("BUSQUEDAPARENTESCO")){%>
+                document.title = "Búsqueda de Parentesco";
+                url = '<%=path%>/Busqueda_Parentesco_Servlet?criterio='+criterio+'&valor='+valor+"&nroSolCredito=<%=request.getParameter("nroSolCredito")%>";               
+            <%}else if(strTabla.equals("BUSQUEDATIPDOCCOBRANZA")){%>
+                document.title = "Búsqueda de Documentos de Cobranza";
+                url = '<%=path%>/Busqueda_TipoDocCobranza?criterio='+criterio+'&valor='+valor;  
+            <%}else if(strTabla.equals("BUSQUEDAGESTORCOBRANZA")){%>
+                document.title = "Búsqueda de Gestores de Cobranza";
+                url = '<%=path%>/Busqueda_GestoresCobranza?criterio='+criterio+'&valor='+valor+"&codRolUsrId="+codRolUsrId;     
+            <%}else if(strTabla.equals("BUSQUEDANUMERORECIBO")){%>
+                document.title = "Búsqueda de Recibo";
+                url = '<%=path%>/Busqueda_NumeroRecibo_Servlet?criterio='+criterio+'&valor='+valor+"&codRolUsrId="+codRolUsrId+"&gestorCobranza=<%=request.getParameter("gestorCobranza")%>";
+            <%}else if(strTabla.equals("BUSQUEDASERIE")){%>
+                document.title = "Búsqueda de Series de Recibos Cobranza";
+                url = '<%=path%>/Busqueda_SeriesRecibos_Servlet?criterio='+criterio+'&valor='+valor+"&tipDoc=<%=request.getParameter("tipDoc")%>";  
+                
+            <%}else if(strTabla.equals("EMPRESAINSPECCIONLABORAL")){%>      
+                document.title = "Búsqueda de Empresa Inspeccion Laboral.";
+                url = '<%=path%>/Busqueda_Empresa_Inspecion_Laboral?criterio='+criterio+'&valor='+valor; 
+             <%}else if(strTabla.equals("USUARIOROL")){%>
+                document.title = "Búsqueda de Usuarios";
+                url = '<%=path%>/Busqueda_UsuarioPorRol_Servlet?criterio='+criterio+'&valor='+valor;
+           
+                
+               <%}else if(strTabla.equals("PRODUCTOSTIENDA")){ %>
+               document.title = "Búsqueda de Productos";               
+               url = '<%=path%>/Busqueda_Productos_Servlet?criterio='+criterio+'&valor='+valor;       
+             <%}else if(strTabla.equals("RESULTADOS")){ %>
+               document.title = "Búsqueda de RESULTADOS";               
+               url = '<%=path%>/Busqueda_Resultados_Servlet?criterio='+criterio+'&valor='+valor; 
+                <%}else if(strTabla.equals("PRODUCTOCREDITOCARTERA")){ %>
+               document.title = "Búsqueda de Producto"; 
+               url = '<%=path%>/Busqueda_ProductoCreditoCartera_Servlet?criterio='+criterio+'&valor='+valor;  
+              <%}else if(strTabla.equals("ESTADOCREDITO")){ %>
+               document.title = "Búsqueda de Estado Credito"; 
+               url = '<%=path%>/Busqueda_EstadoContable_Servlet?criterio='+criterio+'&valor='+valor;                 
+               <%}else if(strTabla.equals("GESTORCOBRANZA")){%>
+                document.title = "Búsqueda de Gestor de Cobranza";
+                url = '<%=path%>/Busqueda_GestorCobranza_Servlet?filtroDireccion='+filtroDireccion+'&criterio='+criterio+'&valor='+valor+'&strTabla=<%=strTabla%>';
+               <%}else if(strTabla.equals("GESTOR")){%>
+                document.title = "Búsqueda de gestores de cobranza";
+                url = '<%=path%>/Busqueda_Gestor_Servlet?criterio='+criterio+'&valor='+valor;
+              
+              <%}else if(strTabla.equals("RECIBO")){ %>
+               document.title = "Búsqueda de Recibo"; 
+               url = '<%=path%>/Busqueda_Recibo_Servlet?criterio='+criterio+'&valor='+valor;    
+                <%}else if(strTabla.equals("CREDITO")){%>
+               document.title = "Búsqueda de Solicitud de Credito";
+               url = '<%=path%>/Busqueda_SolicitudesCredito_Servlet?criterio='+criterio+'&valor='+valor;                   
+             <%}else if(strTabla.equals("ASIGNACION")){ %>  
+               document.title = "Búsqueda de Asignacion"; 
+               solicitud =  '<%= request.getParameter("txtCodigoSolicitud")%>';    
+                   
+               url = '<%=path%>/Busqueda_Asignacion_Servlet?criterio='+criterio+'&valor='+valor+'&solicitud='+solicitud;       
+             <%}else if(strTabla.equals("SUPERVISOR")){ %>
+               document.title = "Búsqueda de Supervisor";
+               url = '<%=path%>/Busqueda_Supervisor_Servlet?criterio='+criterio+'&valor='+valor;                
+               document.title = "Búsqueda de Credito";
+             <%}else if(strTabla.equals("CREDITOCARTERA")){%>
+               url = '<%=path%>/Busqueda_CreditoCartera_Servlet?criterio='+criterio+'&valor='+valor;
+            <%}else if(strTabla.equals("INMOBILIARIA")){%>
+               url = '<%=path%>/Busqueda_Inmobiliaria_Servlet?criterio='+criterio+'&valor='+valor; 
+            //gliceta 16.04.2012: Req. 12-058 - Cumplimiento Normativo
+            //Grupo de Reporte de Informe
+            <%}else if(strTabla.equals("GRUPOINFORME")){%>
+               url = '<%=path%>/Busqueda_GrupoInforme_Servlet?criterio='+criterio+'&valor='+valor;
+            //Tipo de Informe
+            <%}else if(strTabla.equals("TIPOINFORME")){%>
+               url = '<%=path%>/Busqueda_TipoInforme_Servlet?criterio='+criterio+'&valor='+valor   
+            //Grupo de Referencia Indice Nota SBS    
+            <%}else if(strTabla.equals("REFINDICESBS")){%>
+               url = '<%=path%>/Busqueda_RefIndiceNotaSBS_Servlet?criterio='+criterio+'&valor='+valor; 
+            //Firmas de Informe    
+            <%}else if(strTabla.equals("FIRMAINFORME")){%>
+               url = '<%=path%>/Busqueda_FirmasInformeCumplimiento_Servlet?criterio='+criterio+'&valor='+valor;                        
+            <%}else if(strTabla.equals("CONCESIONARIO")){%>
+               url = '<%=path%>/Busqueda_Concesionario_Servlet?criterio='+criterio+'&valor='+valor;
+            <%}else if(strTabla.equals("TALLER_GNV")){%>
+               url = '<%=path%>/Busqueda_TallerGNV_Servlet?criterio='+criterio+'&valor='+valor;               
+            <%}else if(strTabla.equals("OTRASPERSONAS")){%>            
+               document.title = "Búsqueda de Otras Personas";
+               //[CC17-002] gmeza 16.01.2017
+               url = '<%=path%>/Busqueda_OtrasPersonas_Servlet?criterio='+criterio+'&valor='+valor+'&codigoOtrasPersonas='+codigoOtrasPersonas+'&tipoRepresentante='+tipoRepresentante+'&tipoPersona=<%=tipoPersona%>';
+            <%}else if(strTabla.equals("TALLER")){%>
+               var cConces =  '<%= request.getParameter("cConces")%>'; 
+               url = '<%=path%>/Busqueda_Taller_Servlet?criterio='+criterio+'&valor='+valor+'&cConces='+cConces + '&codigoOtrasPersonas='+codigoOtrasPersonas;
+             <%}else if(strTabla.equals("LOCALIDAD")){
+                   if(request.getParameter("filtro")!=null){  %>          
+                              document.title = "Búsqueda de Area";
+               <%  }else{  %>
+                  document.title = "Búsqueda de Agencia";
+               <% }  %>   
+               filtro = '<%= request.getParameter("filtro")%>';         
+               url = '<%=path%>/Busqueda_Localidad_Servlet?criterio='+criterio+'&valor='+valor+'&filtro='+filtro;   
+            
+            
+
+                
+           <%}else if(strTabla.equals("VENDEDORES")){%>
+                //[Req. S14-115] jtomasto 09.10.2014
+                // document.title = "Búsqueda de Canal de Ventas";
+                document.title = "Búsqueda de Vendedores";
+                // [Req. S14-115] Fin
+                var indVendedorXAgenciaAut = '<%= request.getParameter("indVendedorXAgenciaAut")!=null?request.getParameter("indVendedorXAgenciaAut"):"NULO"%>';
+                var codAgencia = '<%= request.getParameter("codAgencia")!=null?request.getParameter("codAgencia"):"NULO"%>';
+                url = '<%=path%>/Busqueda_Vendedores_Servlet?criterio='+criterio+'&valor='+valor+'&indVendedorXAgenciaAut='+indVendedorXAgenciaAut+'&codAgencia='+codAgencia;
+           
+           <%}else if(strTabla.equals("LISTAUSUARIOS")){%>
+                document.title = "Lista de Usuarios";
+                url = '<%=path%>/Busqueda_ListaUsuarios_Servlet?criterio='+criterio+'&valor='+valor+'&indUsuarioCELB=<%=indUsuarioCELB%>'+'&codAreaLaboral=<%=codAreaLaboral%>';//gliceta 16.04.2012: Req. 12-058 - Cumplimiento Normativo     
+           
+           <%}else if(strTabla.equals("LISTAROLES")){%>
+                document.title = "Lista de Roles";
+                url = '<%=path%>/Busqueda_ListaRoles_Servlet?criterio='+criterio+'&valor='+valor;          
+                      
+           <%}else if(strTabla.equals("LISTATIPOOBSERVACION")){%>
+                document.title = "Lista de Observacion";
+                url = '<%=path%>/Busqueda_ListaObservacion_Servlet?criterio='+criterio+'&valor='+valor;          
+                
+           <%}else if(strTabla.equals("ARTICULOS")){%>
+                document.title = "Búsqueda de Articulos";
+                //jpantoja 16.01.2011 modificado para agregar un parametro de busqueda 
+                // ajimenez 28.05.2013 [13-038-II] - Parametro Empresa Retail
+                url = '<%=path%>/Busqueda_Articulos_Servlet?criterio='+criterio+'&valor='+valor+'&valorFiltro=<%=valorFiltro%>&idRetail=<%=idRetail%>';
+           
+           <%}else if(strTabla.equals("MOTIVOBLOQUEOLIBERACION")){%>
+                document.title = "Búsqueda de Motivo Bloqueo Liberacion";
+                url = '<%=path%>/Busqueda_MotivoBloqueoLiberacion_Servlet?criterio='+criterio+'&valor='+valor+"&tipoTransaccion="+tipoTransaccion;
+                
+            <%}else if(strTabla.equals("GARANTIACREDITO")){%>
+                document.title = "Búsqueda de Garantias de Credito";
+                url = '<%=path%>/Busqueda_GarantiaCredito_Servlet?criterio='+criterio+'&valor='+valor;
+                
+            <%}else if(strTabla.equals("MEDIDACAUTELAR")){%>
+                document.title = "Búsqueda de Medidas Cautelares";
+                url = '<%=path%>/Busqueda_MedidaCautelar_Servlet?criterio='+criterio+'&valor='+valor;
+
+            <%}else if(strTabla.equals("IDENTIFICACIONCOLUMNA")){%>
+                document.title = "Búsqueda de Identificadores de Columnas";
+                url = '<%=path%>/Busqueda_IdentificacionColumna_Servlet?criterio='+criterio+'&valor='+valor;
+                
+            <%}else if(strTabla.equals("PERITOTASADOR")){%>
+               document.title = "Búsqueda de Peritos";
+               url = '<%=path%>/Busqueda_PeritoTasador_Servlet?tipo=PE&criterio='+criterio+'&valor='+valor;
+            
+              <%}else if(strTabla.equals("NOTARIO")){%>
+              document.title = "Búsqueda de Notarios";
+              url = '<%=path%>/Busqueda_PeritoTasador_Servlet?tipo=NT&criterio='+criterio+'&valor='+valor;          
+             <%}else if(strTabla.equals("MOTIVOBLOQUEODESBLOQUEOTOTAL")){%>
+                 //Inicio [T-9101] gmeza 11.03.2016
+                 document.title = "Búsqueda de Motivos";
+                 var codigoGarantia=<%=codigoGarantia%>;
+                 url = '<%=path%>/Busqueda_MotivoBloqueoDesbloqueo_Servlet?criterio='+criterio+'&valor='+valor+'&codigoGarantia='+codigoGarantia;
+                 //Fin [T-9101]
+               <%}else if(strTabla.equals("SECTORECONOMICO")){%>
+               document.title = "Búsqueda de Cargos Laborales";
+               url = '<%=path%>/Busqueda_SectorEconomico_Servlet?criterio='+criterio+'&valor='+valor; 
+         
+              
+           <%}else if(strTabla.equals("GIROSOLICITUD")){%>
+              document.title = "Búsqueda de Cargos Laborales";
+              url = '<%=path%>/Busqueda_RemesasSolicitudGiro_Servlet?criterio='+criterio+'&valor='+valor;     
+           <%//rgutierrez 11.05.2012
+           }else if(strTabla.equals("CANALOPERACIONES")){%>
+              document.title = "Búsqueda de Canal de Operaciones";
+              url = '<%=path%>/Busqueda_CanalOperaciones_Servlet?criterio='+criterio+'&valor=';     
+           <%}else if(strTabla.equals("ENTIDADRECAUDADORA")){%>          
+              document.title = "Búsqueda de Entidad Recaudadora";
+              url = '<%=path%>/Busqueda_CanalOperacionRecaudacionExterna_Servlet?criterio='+criterio+'&valor=';     
+           <%//rgutierrez 06.08.2012
+              }else if(strTabla.equals("PROMOCIONCAMP")){%>
+              document.title = "Búsqueda de Campaña";
+              
+              url = '<%=path%>/Busqueda_Campana_Servlet?criterio='+criterio+'&valor='+valor;     
+        <%//Aromero 14.05.2014
+              }else if(strTabla.equals("CAMPANA")){%>
+              document.title = "Búsqueda de Campaña";
+              url = '<%=path%>/Busqueda_Campana_Servlet?criterio='+criterio+'&valor='+valor+'&tipC='+campana;
+              
+        <%}else if(strTabla.equals("INSTITUCIONES")){%>             
+              document.title = "Búsqueda de Instituciones";
+              url = '<%=path%>/Busqueda_Instituciones_Servlet?criterio='+criterio+'&valor='+valor;
+         <%}else if(strTabla.equals("CLIENINSTI")){%>             
+              document.title = "Búsqueda de Clientes";
+              var codInst=<%=codInst%>;
+              url = '<%=path%>/Busqueda_ClientesInstitucion_Servlet?criterio='+criterio+'&valor='+valor+'&codInst='+codInst;        
+         <%}else if(strTabla.equals("AHORROSOLES")){%>             
+              document.title = "Búsqueda de Ahorro Soles";
+              url = '<%=path%>/Busqueda_AhorroSoles_Servlet?criterio='+criterio+'&valor='+valor;
+              <%}else if(strTabla.equals("AHORRODOLARES")){%>             
+              document.title = "Búsqueda de Ahorro Dolares";
+              url = '<%=path%>/Busqueda_AhorroDolares_Servlet?criterio='+criterio+'&valor='+valor;
+                
+       <%//gfernandez 25.09.2012
+              }else if(strTabla.equals("TIPOSPROCESO")){%>
+              document.title = "Búsqueda de Tipos de proceso";
+              url = '<%=path%>/Busqueda_TiposProceso_Servlet?criterio='+criterio+'&valor='+valor;
+           <%//gfernandez 25.09.2012
+              }else if(strTabla.equals("CAMPANASUBCONCEPTOCONTABLE")){%>
+              document.title = "Búsqueda de subconcepto contable por Campaña";
+              url = '<%=path%>/Busqueda_SubConceptoContableCampana_Servlet?criterio='+criterio+'&valor='+valor;     
+            <%//gfernandez 03.12.2012
+              }else if(strTabla.equals("TIPOPERSONA")){%>
+              document.title = "Búsqueda de tipo de persona";
+              url = '<%=path%>/Busqueda_TipoPersona_Servlet?criterio='+criterio+'&valor='+valor;     
+            <%//gfernandez 03.12.2012
+              }else if(strTabla.equals("NIVELRIESGOLA")){%>
+              document.title = "Búsqueda del nivel de riesgo para Lavado de Activos";
+              url = '<%=path%>/Busqueda_NivelRiesgoLA_Servlet?criterio='+criterio+'&valor='+valor;     
+            <%//gfernandez 03.12.2012
+              }else if(strTabla.equals("TIPOCUENTA")){%>
+              document.title = "Búsqueda de tipo de cuenta";
+              url = '<%=path%>/Busqueda_TipoCuenta_Servlet?criterio='+criterio+'&valor='+valor;     
+            <%//gfernandez 09.12.2012
+              }else if(strTabla.equals("UBIGEODEPARTAMENTO")){%>
+              document.title = "Búsqueda de Departamentos";
+              url = '<%=path%>/Busqueda_UbigeoDepartamento_Servlet?criterio='+criterio+'&valor='+valor;     
+            <%//gfernandez 17.01.2012
+              }else if(strTabla.equals("NIVELINGRESO")){%>
+              document.title = "Búsqueda de Nivel de Riesgo";
+              url = '<%=path%>/Busqueda_NivelIngreso_Servlet?criterio='+criterio+'&valor='+valor;                
+
+            <%//ajimenez 05.04.2013
+              }else if (strTabla.equals("GRUPOPRODUCTOCREDITO")){%>
+              document.title = "Búsqueda de Grupo de Producto de Credito";
+              url = '<%=path%>/Busqueda_GrupoProductoCredito_Servlet?criterio='+criterio+'&valor='+valor;
+            
+            <%//jventura 22.05.2014 Req [S14-61]          
+              }else if (strTabla.equals("TIPOFECHAPAGO")){%>
+              document.title = "Búsqueda Tipo de Fecha de Pago";
+              url = '<%=path%>/Busqueda_TipoFechadePago_Servlet?criterio='+criterio+'&valor='+valor;
+              
+           <%//jventura 22.05.2014 Req [S14-61]          
+              }else if (strTabla.equals("TIPOSEGURO")){%>
+              document.title = "Búsqueda Tipo de Seguro";
+              url = '<%=path%>/Busqueda_TipoSeguro_Servlet?criterio='+criterio+'&valor='+valor;
+              
+           <%//jventura 22.05.2014 Req [S14-61]          
+              }else if (strTabla.equals("ENTIDADASEGURADORA")){%>
+              document.title = "Búsqueda Empresas Aseguradora";
+              url = '<%=path%>/Busqueda_EmpresaSeguros_Servlet?criterio='+criterio+'&valor='+valor;
+              
+            <%//jgonzales 26.04.2013
+              }else if(strTabla.equals("TIPOBANCARIZACION")){%>
+              document.title = "Búsqueda de Clasificacion de Bancarizacion";
+              url = '<%=path%>/CR_C_Busqueda_TipoBancarizacion_Servlet?criterio='+criterio+'&valor='+valor;
+              <%// [Req. 14-020] esalazar 19.03.2014 
+                }else if(strTabla.equals("VALORCONDICION")){%>
+                document.title = "Búsqueda de Valores por Condicion";
+                url = '<%=path%>/CR_T_MantenimientoValoresPorCondicion_Servlet?action=CARGAR_POPUP&criterio='+criterio+'&valor='+valor+'&indicadorPropuesta=<%=indicadorPropuesta%>&indicadorExcepcion=<%=indicadorExcepcion%>&codigoValorCondicion=<%=codigoValorCondicion%>';
+              <%// [Req. 14-020] gmoran 07.04.2014 
+                }else if(strTabla.equals("BUSQUEDAPERSONASCLAF")){%>
+                document.title = "Búsqueda Personas";
+                url = '<%=path%>/Busqueda_PersonasClasificacion_Servlet?criterio='+criterio+'&valor='+valor+'&tipoClasificacion='+tipoClasificacion+'&codigoPersonaF='+codigoPersonaF;              
+                      
+             <%// [Req. 14-020] gmoran 07.04.2014 
+                }else if(strTabla.equals("PRODUCTOSBANTIQ")){%>
+                document.title = "Búsqueda Consulta Productos Bantiq";
+                url = '<%=path%>/Busqueda_ProductosBantiq_Servlet?criterio='+criterio+'&valor='+valor;
+
+             <%// [Req. 14-020] gmoran 07.04.2014 
+                }else if(strTabla.equals("PRODUCTOSDELFIN")){%>
+                document.title = "Búsqueda Productos Delfin";
+                url = '<%=path%>/Busqueda_ProductosDelfin_Servlet?criterio='+criterio+'&valor='+valor+'&codigoMoneda=<%=codigoMoneda%>';
+                
+                
+             <%// [Req. 14-020] gmoran 07.04.2014 
+                }else if(strTabla.equals("CONSULTAPRODUCTOSBANTIQ")){%>
+                document.title = "Búsqueda Consulta Productos Bantiq";
+                url = '<%=path%>/Busqueda_ConsultaProductosBantiq_Servlet?criterio='+criterio+'&valor='+valor+'&indicadorHijos=<%=indicadorHijosBantiq%>&codigoPadre=<%=codigoPadreBantiq%>';
+              
+              <%// [Req. 14-020] gmoran 07.04.2014 
+                }else if(strTabla.equals("CONSULTACONCEPTOSBANTIQ")){%>
+                document.title = "Búsqueda Consulta Conceptos Bantiq";
+                url = '<%=path%>/Busqueda_ConsultaConceptosBantiq_Servlet?criterio='+criterio+'&valor='+valor;
+              
+              <%// [Req. 14-020] gmoran 07.04.2014 
+                }else if(strTabla.equals("CONCEPTOSCOMISION")){%>
+                document.title = "Búsqueda Conceptos Comisión";
+                url = '<%=path%>/Busqueda_ConceptoComision_Servlet?criterio='+criterio+'&valor='+valor;                
+
+              <%// [Req. 14-020] esalazar 11.05.2016 
+                }else if(strTabla.equals("FUNCIONARIOS_NEGOCIOS")){%>
+                document.title = "Búsqueda de Funcionarios de Negocio";
+                url = '<%=path%>/CR_T_MantenimientoUsuarioFuncionario_Servlet?action=BUSCAR_FUNCIONARIOS&criterio=' + criterio + '&valor=' + valor + '&codigoTipoBanca=<%=codigoTipoBanca%>' + '&filtrarUsuarioConectado=<%=filtrarUsuarioConectado%>';
+
+            <%//[Req. 14-003] mnieves 04.04.2014
+            }else if(strTabla.equals("CLIENTESCORPORATIVOS")){%>
+                document.title = "Búsqueda de Clientes Corporativos";
+                url = '<%=path%>/Busqueda_GeneralClientesCorporativos_Servlet?criterio='+criterio+'&valor='+valor+'&typePerson='+typePerson;                
+            <%//[Req. 14-074] dfujimoto 26.05.2014
+            }else if(strTabla.equals("PROMOTORAHORRO")){%>
+                document.title = "Búsqueda Promotor";
+                url = '<%=path%>/Busqueda_PromotorAhorro_Servlet?criterio='+criterio+'&valor='+valor+'&tipoFuncionario='+typePerson+'&action='+concepto;
+            <%}else if(strTabla.equals("AGENCIAFUNCIONARIO")){ %>
+                document.title = "Búsqueda de Agencia por Promotor";
+                url = '<%=path%>/Busqueda_PromotorAhorro_Servlet?criterio='+criterio+'&valor='+valor+'&action='+concepto;              
+            //[Req. 14-057] cchalco
+            <%}else if(strTabla.equals("CLIENTEPROVEEDORVINCULADO")){
+                String codigoAliado = request.getParameter("codigoAliado");%>
+                document.title = "Búsqueda de Clientes Proveedores";
+                 var codigoAliado = <%=codigoAliado%>;
+                url = '<%=path%>/Busqueda_ClientesProveedoresVinculados_Servlet?criterio='+criterio+'&valor='+valor+'&auxiliar='+auxiliar+'&codigoAliado='+codigoAliado;
+        //Req. S14-088 fbramirez 01.08.2014
+        <%}else if(strTabla.equals("PRODUCTOCREDITOGESTIONRIESGO")){%>
+            document.title = "Búsqueda de Productos Gestion Riesgo";
+            url = '<%=path%>/Busqueda_ProductoCredito_Servlet?tipoCredito=<%=tipoCredito%>&subTipoCredito=<%=subTipoCredito%>&flagGR=<%=flagGR%>&criterio='+criterio+'&valor='+valor+'<%=urlProducto%>';
+        <%}else if(strTabla.equals("ASOCIACIONBANCAPRODUCTO")){%>
+            document.title = "Búsqueda de Productos en Asociación Gestion Riesgo";
+            url = '<%=path%>/GR_C_MantenimientoAsociacionGestionRiesgo_Servlet?action=BUSCARPRODUCTOASOCIACION&criterio='+criterio+'&valor='+valor;    
+        //[Req. S14-088] anunez 30.10.2014
+        <%}else if(strTabla.equals("BANCAS")){%>
+            document.title = "Búsqueda de Bancas";
+            url = '<%=path%>/GR_C_MantenimientoAsociacionGestionRiesgo_Servlet?action=BUSCAR_BANCA&criterio='+criterio+'&valor='+valor;
+            
+            
+            
+            //[Fin Req. 14-057]
+            //[Req. 14-094] dfujimoto 08.07.2014
+            <%}else if(strTabla.equals("ROLESCTS")){%>
+                document.title = "Búsqueda Roles CTS";
+                url = '<%=path%>/Busqueda_RolesCTS_Servlet?criterio='+criterio+'&valor='+valor;
+            //[Req. 14-103] dfujimoto 15.09.2014
+            <%}else if(strTabla.equals("DESTINOCREDITO")){%>
+                document.title = "Búsqueda Destino Crédito";
+                url = '<%=path%>/Busqueda_DestinoCredito_Servlet?criterio='+criterio+'&valor='+valor;
+            <%-- Inicio [Req. 14-150] dfujimoto 06.02.2015 --%>
+            <%}else if(strTabla.equals("LOTEAPERTURACTS")){%>
+                document.title = "Búsqueda Lote Apertura CTS";
+                url = '<%=path%>/Busqueda_LoteAperturaCTS_Servlet?criterio='+criterio+'&valor='+valor;
+            <%-- Fin [Req. 14-150] --%>
+            <%}%>
+
+               
+            }
+            window.document.ifrmBusqueda.location.replace(url);
+        }
+        
+        function enviar(){
+            try{
+                document.frames[0].eliminarTodos();
+            }catch(error){}
+            document.getElementById('hidepage').style.visibility = '';
+        
+            var criterio        = document.frmBusqueda.cboTipoBusqueda.value;
+            var valor           = document.frmBusqueda.txtBusqueda.value.toUpperCase();
+            concepto            = "<%=strConcepto%>";
+            auxiliar            = "<%=strAux%>";
+            codigoconcepto      = "<%= strConceptoOperacion %>";
+            fechaAplicacion     = "<%= fechaAplicacion %>";
+            var tipoTransaccion = "<%= tipoTransaccion%>";
+            var listaConceptos = "<%= listaConceptos%>";
+            var codigoOtrasPersonas = "<%=codigoOtrasPersonas%>";
+            var tipoRepresentante = "<%=tipoRepresentante%>";
+            var typePerson = "<%=typePerson%>";
+         // [Req.14-020] gmoran 27.05.2014
+            var tipoClasificacion = "<%=strTipoClasificacion%>";
+            var codigoPersonaF = "<%=codigoPersonaF%>";
+        <%if(strTabla.equals("CUENTACONTABLE")){%>
+            document.title = "Búsqueda de Cuentas Contables";
+            url = '<%=path%>/Busqueda_CuentaContable_Servlet?criterio='+criterio+'&valor='+valor+'&auxiliar='+auxiliar+'&fechaAplicacion='+fechaAplicacion+'&auxCerrarVentana=N';
+            
+        // Agregado gfernandez 15.02.2012: Calculo incentivo emprendedor
+        <%}else if(strTabla.equals("TIPOINCENTIVO")){%>
+            document.title = "Búsqueda Tipo Incentivo";
+            url = '<%=path%>/Busqueda_TipoIncentivo_Servlet?criterio='+criterio+'&valor='+valor;
+        // Agregado gfernandez 15.02.2012: Calculo incentivo emprendedor                
+        <%}else if(strTabla.equals("CATEGORIAXINCENTIVO")){%>
+              document.title = "Búsqueda Categoria Incentivo";
+              url = '<%=path%>/Busqueda_CategoriaXIncentivo_Servlet?criterio='+criterio+'&valor='+valor+'&auxiliar='+auxiliar;
+        // Agregado gfernandez 15.02.2012: Calculo incentivo emprendedor                
+        <%}else if(strTabla.equals("GRUPOINCENTIVO")){%>
+              document.title = "Búsqueda Grupo Incentivo";
+              url = '<%=path%>/Busqueda_GrupoCalculoIncentivo_Servlet?criterio='+criterio+'&valor='+valor;
+        // Agregado gfernandez 15.02.2012: Calculo incentivo emprendedor                        
+        <%}else if(strTabla.equals("MORAXFILATIPOINCENTIVO")){%>
+              document.title = "Búsqueda Mora por Fila de Tipo Incentivo";
+              url = '<%=path%>/Busqueda_MoraXFilaIncentivo_Servlet?criterio='+criterio+'&valor='+valor;                                                     
+            
+        // Agregado gfernandez 29.12.2010: Validar Bloqueos y Limites Operativos: Busqueda de por Limites Operativos    
+        <%}else if(strTabla.equals("TIPOSLIMITESOPERATIVOS")){%>
+                 
+              document.title = "Búsqueda Limites Opertivos";
+              url = '<%=path%>/Busqueda_LimitesOperativos_Servlet?criterio='+criterio+'&valor='+valor;     
+          // Agregado gfernandez 11.12.2010: Validar Bloqueos y Limites Operativos: Busqueda de Tipos de credito externo            
+           <%}else if(strTabla.equals("TIPCRED")){%>
+                 
+              document.title = "Búsqueda Tipo de Creditos";
+              url = '<%=path%>/Busqueda_TipoCreditoExterno_Servlet?criterio='+criterio+'&valor='+valor;     
+                        
+          <%}else if(strTabla.equals("NROCUENTAENTIDAD")){%>
+              document.title = "Búsqueda de Sectores Económicos";
+              //[Req. 13-057] jchilon 27.05.2013 Se agrega un parámetro a la búsqueda.                          
+              url = '<%=path%>/Busqueda_NroCuentaEntidadFinanciera_Servlet?criterio='+criterio+'&valor='+valor+'&filtroCE=<%=chequeElectronico%>';
+
+            //fvalle 31.01.2011
+         <%}else if(strTabla.equals("PERSONALTFC")){%>
+              document.title = "Búsqueda de Personal TFC";
+              url = '<%=path%>/Busqueda_PersonasHabilitacion_Servlet?tipo=PT&criterio='+criterio+'&valor='+valor; 
+         <%}else if(strTabla.equals("EMPRTRANSPDIN")){%>
+              document.title = "Búsqueda de Empresa Transportadora";
+              url = '<%=path%>/Busqueda_PersonasHabilitacion_Servlet?tipo=ET&criterio='+criterio+'&valor='+valor; 
+                                
+        <%}else if(strTabla.equals("CUENTACONTABLEPRESUPUESTO")){%>
+            document.title = "Búsqueda de Cuentas Contables";
+            url = '<%=path%>/Busqueda_CuentaContablePresupuesto_Servlet?criterio='+criterio+
+                  '&valor='+valor+'&auxiliar='+auxiliar+'&fechaAplicacion='+fechaAplicacion+'&auxCerrarVentana=N';
+                  
+        <%}else if(strTabla.equals("RELACIONDINAMICA")){%>
+            document.title = "Búsqueda de Grupos Contables para Relación Dinámica";
+            url = '<%=path%>/Busqueda_RelacionDinamica_Servlet?criterio='+criterio+'&valor='+valor;
+         <%}else if(strTabla.equals("VISITADOR")){%>
+                document.title = "Búsqueda de Visitadores";
+                url = '<%=path%>/Busqueda_Visitadores_Servlet?criterio='+criterio+'&valor='+valor;   
+        <%}else if(strTabla.equals("MOTIVOREGISTRONCND")){%>
+            document.title = "Búsqueda de Motivo Registro Nota Crédito/Débito";
+            url = '<%=path%>/Busqueda_MotivoRegistroNotaCreditoDebito_Servlet?criterio='+criterio+'&valor='+valor+"&tipoTransaccion="+tipoTransaccion;                    
+            
+        <%}else if(strTabla.equals("CONCEPTO")){%>
+            document.title = "Búsqueda de Conceptos";
+            url = '<%=path%>/Busqueda_Conceptos_Servlet?criterio='+criterio+'&valor='+valor+'&concepto='+concepto;
+            
+        <%}else if(strTabla.equals("CONCEPTOCONTABLE")){%>            
+            document.title = "Búsqueda de Conceptos Contable";
+            url = '<%=path%>/Busqueda_ConceptoContable_Servlet?criterio='+criterio+'&valor='+valor;
+            
+        <%}else if(strTabla.equals("COLUMNA")){%>
+            document.title = "Búsqueda de Columnas";
+            url = '<%=path%>/Busqueda_Columnas_Servlet?criterio='+criterio+'&valor='+valor+'&tabla=<%= nombreTabla %>&campo=<%= nombreCampo %>';
+            
+        <%}else if(strTabla.equals("CARGOS")){%>
+            document.title = "Búsqueda de Cargos";
+            url = '<%=path%>/Busqueda_Cargos_Servlet?criterio='+criterio+'&valor='+valor;
+            
+        <%}else if(strTabla.equals("COBRADORES")){%>
+            document.title = "Búsqueda de cobradores";
+            url = '<%=path%>/Busqueda_Cobradores_Servlet?criterio='+criterio+'&valor='+valor;
+            
+        <%}else if(strTabla.equals("EXPEDIENTEJUDICIAL")){%>
+            document.title = "Búsqueda de Expediente Judicial";
+            url = '<%=path%>/Busqueda_ExpedienteJudicial?criterio='+criterio+'&valor='+valor+"&numeroCredito="+numeroCredito;
+            
+        <%}else if(strTabla.equals("SUBACTIVIDADlINEAVIDA")){%>
+            document.title = "Búsqueda de Sub Actividades de la linea de vida del crédito";
+            url = '<%=path%>/Busqueda_ActividadLineaVida_Servlet?criterio='+criterio+'&valor='+valor+"&tipoActividad="+tipoActividad;
+            
+        <%}else if(strTabla.equals("CONVENIOS")){%>
+            document.title = "Búsqueda de Convenios";
+            url = '<%=path%>/Busqueda_Convenios_Servlet?criterio='+criterio+'&valor='+valor;
+            
+        <%}else if(strTabla.equals("OBLIGACION")){%>
+            document.title = "Búsqueda de Obligaciones";
+            url = '<%=path%>/Busqueda_Obligaciones_Servlet?criterio='+criterio+'&valor='+valor+"&listaConceptos="+listaConceptos;
+            
+        <%}else if(strTabla.equals("TIPOCREDITO")){%>
+            document.title = "Búsqueda de tipos de crédito";
+            url = '<%=path%>/Busqueda_TipoCredito_Servlet?criterio='+criterio+'&valor='+valor;                    
+            
+        <%}else if(strTabla.equals("SUBTIPOCREDITO")){%>
+            document.title = "Búsqueda de subtipos de crédito";
+            url = '<%=path%>/Busqueda_SubTipoCredito_Servlet?criterio='+criterio+'&valor='+valor+'&codoperacion='+codigoconcepto+"&codigoTipoCredito=<%=tipoCredito%>&tipoBusqueda=<%=strAux%>";                    
+            
+        <%}else if(strTabla.equals("TIPODOCUMENTO")){%>
+            document.title = "Búsqueda de Tipos de Documentos";
+            if(criterio == "Codigo" && valor != "")
+                url = '<%=path%>/Busqueda_TipoDocumentos_Servlet?criterio='+criterio+'&valor=<%=strCodEmp%>'+rellenar(valor,"0",7,"1");
+            else
+                url = '<%=path%>/Busqueda_TipoDocumentos_Servlet?criterio='+criterio+'&valor='+valor;
+        // Inicio [Req. 14-100] jventura 16.02.2016
+         <%}else if(strTabla.equals("LIQUIDACIONBANTIQ")){%>
+             document.title = "Búsqueda de Pre-Liquidación BANTIQ";
+             url = '<%=path%>/Busqueda_LiquidacionBantiq_Servlet?action=LIQUIDACIONBANTIQ&criterio='+criterio+'&valor='+valor;   
+         // Fin [Req. 14-100]   
+         // Inicio [S16-019] dlazo 12.04.2016
+         <%}else if(strTabla.equals("ROLESBANTIQ")){%>
+             document.title = "Búsqueda de Roles BANTIQ";
+             url = '<%=path%>/Busqueda_RolesBantiq_Servlet?criterio='+criterio+'&valor='+valor;
+          // Fin [S16-019] dlazo 12.04.2016
+          // Inicio [S16-003] dlazo 12.04.2016
+          <%}else if(strTabla.equals("ASUNTO_SOLICITUD")){%>
+              document.title = "Búsqueda de Asunto de Solicitud";
+              url = '<%=path%>/Busqueda_AsuntoSolicitud_Servlet?criterio='+criterio+'&valor='+valor;
+           // Fin [S16-003] dlazo 12.04.2016
+        // Inicio [S16-034] DLAZO 07.10.2016
+        <%}else if(strTabla.equals("SECTORIAL")){%>
+            document.title = "Búsqueda de código sectorial";
+            url = '<%=path%>/Busqueda_CodigoSectorial_Servlet?criterio='+criterio+'&valor='+valor;
+        // Fin [S16-034]
+        <%}else if(strTabla.equals("UBIGEO")){%>
+            document.title = "Búsqueda de Ubigeo";
+            url = '<%=path%>/Busqueda_Ubigeo_Servlet?criterio='+criterio+'&valor='+valor;
+            
+        <%}else if(strTabla.equals("ACTIVIDADlINEAVIDA")){%>
+             document.title = "Búsqueda de Actividades del linea de vida del crédito";
+             url = '<%=path%>/Busqueda_ActividadLineaVida_Servlet?criterio='+criterio+'&valor='+valor;
+             
+        <%}else if(strTabla.equals("IMPUESTO")){%>
+            document.title = "Búsqueda de Impuestos";
+            url = '<%=path%>/Busqueda_Impuestos_Servlet?criterio='+criterio+'&valor='+valor;
+            
+        <%}else if(strTabla.equals("AGENCIA")){%>
+            document.title = "Búsqueda de Agencias";
+            //[CC17-026] gmeza 28.02.2017
+            url = '<%=path%>/Busqueda_Agencia_Servlet?criterio='+criterio+'&valor='+valor+'&indicadorEnFuncionamiento=<%=indicadorEnFuncionamiento%>';;
+            
+        // Agregado gliceta 22.09.2010: Seguimiento de Riesgos: Busqueda de Cargo Funcional
+        <%}else if(strTabla.equals("CARGOFUNCIONAL")){%>
+            document.title = "Búsqueda de Cargo Funcional";
+            url = '<%=path%>/Busqueda_CargoFuncional_Servlet?criterio='+criterio+'&valor='+valor;
+        //gliceta 07.07.2011: Automatizacion de Encajes 
+        <%}else if(strTabla.startsWith("SBTGREN")){%>
+            document.title = "Búsqueda de Codigos de Encaje";
+            url = '<%=path%>/servlet/EN_B_CodEncaje_Servlet?criterio='+criterio+'&valor='+valor+'&tabla='+'<%=request.getParameter("tabla")%>'; 
+        <%}else if(strTabla.equals("NUMEROCARTA")){%>
+                document.title = "Búsqueda de Cartas";
+                url = '<%=path%>/Busqueda_CartaCambioRecaudo_Servlet?criterio='+criterio+'&valor='+valor;   
+        <%}else if(strTabla.equals("AJUSTE")){%>
+            document.title = "Búsqueda de Grupos de Ajuste";
+            url = '<%=path%>/Busqueda_GrupoAjuste_Servlet?criterio='+criterio+'&valor='+valor;
+            
+        <%}else if(strTabla.equals("REVALUACION")){%>
+            document.title = "Búsqueda de Grupos de Revaluación";
+            url = '<%=path%>/Busqueda_GrupoRevaluacion_Servlet?criterio='+criterio+'&valor='+valor;
+            
+        <%}else if(strTabla.equals("SUBCONCEPTO")){%>
+            document.title = "Búsqueda de Subconceptos";
+            if(criterio == "Codigo")
+                url = '<%=path%>/Busqueda_SubConceptoOperacion_Servlet?criterio='+criterio+'&valor='+codigoconcepto+valor+'&codoperacion='+codigoconcepto;
+            else
+                url = '<%=path%>/Busqueda_SubConceptoOperacion_Servlet?criterio='+criterio+'&valor='+valor+"&codoperacion="+codigoconcepto;
+        
+        <%}else if(strTabla.equals("SUBCONCOMISI")){%>
+            document.title = "Búsqueda de Subconceptos";
+            if(criterio == "Codigo")
+                url = '<%=path%>/Busqueda_Subconcepto_Comision_Institucion_Servlet?criterio='+criterio+'&valor='+codigoconcepto+valor+'&codoperacion='+codigoconcepto;
+            else
+                url = '<%=path%>/Busqueda_Subconcepto_Comision_Institucion_Servlet?criterio='+criterio+'&valor='+valor+"&codoperacion="+codigoconcepto;
+        
+        <%-- Inicio [Req.14-150] aromero 28.03.2015 --%>
+        <%}else if(strTabla.equals("SUBCONCEPTOCTS")){%>
+            document.title = "Búsqueda de Subconceptos";
+             var tipoNota=<%=tipoNota%>;
+             var formaAbono=<%=formaAbono%>;
+             var claseProducto=<%=claseProducto%>;
+            if(criterio == "Codigo")
+                url = '<%=path%>/Busqueda_SubConceptoOperacion_Servlet?criterio='+criterio+'&valor='+codigoconcepto+valor+'&codoperacion='+codigoconcepto+'&tipoNota='+tipoNota+'&formaAbono='+formaAbono+'&claseProducto='+claseProducto;
+            else
+                url = '<%=path%>/Busqueda_SubConceptoOperacion_Servlet?criterio='+criterio+'&valor='+valor+"&codoperacion="+codigoconcepto+"&tipoNota="+tipoNota+"&formaAbono="+formaAbono+'&claseProducto='+claseProducto;
+        <%-- Fin [Req.14-150] --%>
+                
+        <%}else if(strTabla.equals("SUBCONCEPTOCREDITO")){%>
+            document.title = "Búsqueda de Subconceptos";
+            if(criterio == "Codigo")
+                url = '<%=path%>/Busqueda_SubConceptoOperacionCreditos_Servlet?criterio='+criterio+'&valor='+codigoconcepto+valor+'&codoperacion='+codigoconcepto;
+            else
+                url = '<%=path%>/Busqueda_SubConceptoOperacionCreditos_Servlet?criterio='+criterio+'&valor='+valor+"&codoperacion="+codigoconcepto;
+        
+        <%}else if(strTabla.equals("CONCEPTO_INSTI")){%>             
+              document.title = "Búsqueda de Concpeto Instituciones";
+              url = '<%=path%>/Busqueda_Concepto_Instituciones_Servlet?criterio='+criterio+'&valor='+valor;
+                    
+        <%}else if(strTabla.equals("SUBCONCEPTOTERCEROS")){%> //vperez 31.08.2010 subconceptos terceros
+            document.title = "Búsqueda de Subconceptos";
+            hicodcia='&hiEmpresaTerceros='+<%=hiEmpresaTerceros%>;
+            if(criterio == "Codigo")
+                url = '<%=path%>/Busqueda_SubConceptoOperacionTerceros_Servlet?criterio='+criterio+'&valor='+codigoconcepto+valor+'&codoperacion='+codigoconcepto+hicodcia;
+            else
+                url = '<%=path%>/Busqueda_SubConceptoOperacionTerceros_Servlet?criterio='+criterio+'&valor='+valor+"&codoperacion="+codigoconcepto+hicodcia;        
+                
+        <%}else if(strTabla.equals("ENTIDADES_MANEJADORA_VALORES_ACTIVO")){%>
+                document.title = "Búsqueda de Entidades Manejadora Efectivo Activos";
+                url = '<%=path%>/OP_EntidadesManejadoraValoresActivo_Servlet?criterio='+criterio+'&valor='+valor;       
+        <%}else if(strTabla.equals("ENTIDADES_MANEJADORA_VALORES_ACTIVO_BOVEDA")){%>
+                document.title = "Búsqueda de Entidades Manejadora Efectivo Activos";
+                url = '<%=path%>/OP_EntidadesManejadoraValoresActivo_Servlet?boveda=S&criterio='+criterio+'&valor='+valor;      
+        <%}else if(strTabla.equals("EFINANCIERAS")){%>
+            document.title = "Búsqueda de Entidades Financieras";
+            url = '<%=path%>/Busqueda_EntidadFinanciera_Servlet?criterio='+criterio+'&valor='+valor+'<%=urlEfin%>';
+            
+        <%}else if(strTabla.equals("MONEDA")){%>
+            document.title = "Búsqueda de Monedas";
+            url = '<%=path%>/Busqueda_Moneda_Servlet?criterio='+criterio+'&valor='+valor;
+        
+        <%}else if(strTabla.equals("PROVEEDORES")){%>
+                document.title = "Búsqueda de Proveedores";
+                url = '<%=path%>/Busqueda_Proveedor_Servlet?criterio='+criterio+'&valor='+valor+'&typePerson='+typePerson
+                // ajimenez 06.05.2013
+                + "&estadoRegistro=<%=estadoRegistro%>";
+        
+        <%}else if(strTabla.equals("CONTACTOS")){%>
+                document.title = "Búsqueda de Contactos";
+                url = '<%=path%>/Busqueda_Contacto_Servlet?criterio='+criterio+'&valor='+valor+'&typePerson='+typePerson+'&auxiliar='+auxiliar;
+        
+        <%}else if(strTabla.equals("CUENTAPROVEEDOR")){%>
+                document.title = "Búsqueda de Cuentas Bancarias de Persona";
+                url = '<%=path%>/Busqueda_CuentaProveedor_Servlet?criterio='+criterio+'&valor='+valor+'&typePerson='+typePerson+'&auxiliar='+auxiliar;;
+                
+        <%}else if(strTabla.equals("PERSONAS")){%>
+            document.title = "Búsqueda de Personas";
+            <%-- [Req.14-020] esalazar 11.05.2016 --%>
+            url = '<%=path%>/Busqueda_GeneralPersonas_Servlet?criterio='+criterio+'&valor='+valor+'&typePerson='+typePerson +'&codigoFuncionario=<%=codigoFuncionario%>';
+         <!--Inicio [Req. S16-025] kdelacruz 05.09.2016 -->
+         <%}else if(strTabla.equals("OPCIONMENU")){%>
+             document.title = "Búsqueda Opción Menú";
+             var url = '<%=path%>/SS_T_MantenimientoMenuOpcion_Servlet?criterio='+criterio+'&tipoCarga=O&valor='+valor+'&indicadorNivel=<%=indicadorNivel%>&modulo=<%=codigoModulo%>&subModulo=<%=codigoSubModulo%>';
+         <!--Fin [Req. S16-025] -->
+         //Inicio [Req.S16-037] kdelacruz 23.11.2016 Adecuación del registro de Centro de Costos
+         <%}else if(strTabla.equals("GASTOSINVERSIONES")){%>
+             document.title = "Búsqueda de Gasos de Inversiones";
+             url = '<%=path%>/Busqueda_GastosInversiones_Servlet?action=GASTOSINVERSIONES&criterio='+criterio+'&valor='+valor;
+         //Fin [Req.S16-037] 
+            //Inicio [Req. S14-142] aromero 15.12.2014
+        <%}else if(strTabla.equals("PERSONASPOSICLI")){%>
+            document.title = "Búsqueda de Personas";
+            var flag='flagPosi';
+            url = '<%=path%>/Busqueda_GeneralPersonas_Servlet?criterio='+criterio+'&valor='+valor+'&typePerson='+typePerson+'&flag='+flag;
+        //Fin [Req. S14-142] aromero 15.12.2014
+
+         //Inicio [Req. 14-135] framirez 09.12.2014
+         <%}else if(strTabla.equals("PERSONAS_CONYUGUE")){%>
+              var cony = 'S';
+              document.title = "Búsqueda de Personas";
+              url = '<%=path%>/GA_R_TitularesGarantia_Servlet?criterio='+criterio+'&valor='+valor+'&typePerson='+typePerson+'&cony='+cony;
+              
+         <%}else if(strTabla.equals("APODERADO")){%>
+              document.title = "Búsqueda de Apoderados";
+              url = '<%=path%>/GA_T_MantenimientoApoderadosGarantia_Servlet?action=BUSCAR_APODERADOS_RELACIONADOS&codigoTitular=<%=codigoTitular%>&criterio='+criterio+'&valor='+valor+'&typePerson='+typePerson;
+              
+         <%}else if(strTabla.equals("APODERADO_PROPIETARIO")){%>
+              var action_ = 'BUSCAR_APODERADOS_RELACIONADOS';
+              document.title = "Búsqueda de Apoderados";
+              url = '<%=path%>/GA_T_MantenimientoRegistroApoderadoPropietarioBien_Servlet?action=BUSCAR_APODERADOS_RELACIONADOS&codigoPropietario=<%=codigoPropietario%>&criterio='+criterio+'&valor='+valor+'&typePerson='+typePerson;
+              
+         <%}else if(strTabla.equals("NATURALEZA_GARANTIA")){%>
+              var action_ = 'BUSCAR_NATURALEZA_GARANTIA';
+              document.title = "Búsqueda de Naturaleza Garantia";
+              url = '<%=path%>/GA_C_NaturalezaGarantia_Servlet?action=BUSCAR_NATURALEZA_GARANTIA&criterio='+criterio+'&valor='+valor;
+         //Fin [Req. 14-135]
+
+        //Inicio [Req. 14-121] aromero 08.09.2014
+        <%}else if(strTabla.equals("ADQUIRENTES")){%>
+                document.title = "Búsqueda de Personas";
+                var flag='flag';
+                 var codCorp=<%=codCorp%>;
+                 url = '<%=path%>/Busqueda_GeneralPersonas_Servlet?criterio='+criterio+'&valor='+valor+'&typePerson='+typePerson+'&flag='+flag+'&codCorp='+codCorp;
+         //Fin [Req. 14-121]       
+        <%}else if(strTabla.equals("CLIENTESRCC")){%>
+                document.title = "Búsqueda de Personas";
+                url = '<%=path%>/Busqueda_ClientesRCC_Servlet?criterio='+criterio+'&valor='+valor+'&idPeriodo='+codigoconcepto;
+        <%}else if(strTabla.equals("FIDEICOMISO")){%>
+            document.title = "Búsqueda de fideicomisos";
+            url = '<%=path%>/Busqueda_Fideicomiso_Servlet?criterio='+criterio+'&valor='+valor;               
+                            
+        <%}else if(strTabla.equals("ETAPASPROCESALES")){%>
+            document.title = "Búsqueda de Etapas procesale";
+            url = '<%=path%>/Busqueda_EtapasProcesales_Servlet?criterio='+criterio+'&valor='+valor;                 
+            
+        <%}else if(strTabla.equals("CUENTAEFINANCIERAS")){%>
+            document.title = "Búsqueda de Cuentas-Bancos";
+            url = '<%=path%>/Busqueda_NroCuentaEntidadFinanciera_Servlet?criterio='+criterio+'&valor='+valor+'&auxiliar='+auxiliar;
+            
+        <%}else if(strTabla.equals("DEMANDANTE")){%>
+             document.title = "Búsqueda de Abogados";
+                url = '<%=path%>/Busqueda_Abogados_Servlet?criterio='+criterio+'&valor='+valor;
+            
+        <%}else if(strTabla.equals("DEMANDANDO")){%>
+             document.title = "Búsqueda de Abogados";
+                url = '<%=path%>/Busqueda_Demandado_Servlet?criterio='+criterio+'&valor='+valor;
+      
+        <%}else if(strTabla.equals("JUZGADO")){%>
+            document.title = "Búsqueda de Juzgado";
+        //Inicio [CC17-002] gmeza 16.01.2017
+            url = '<%=path%>/Busqueda_Juzgado_Servlet?criterio='+criterio+'&valor='+valor+'&codigoDistritoJudicial=<%=codigoDistritoJudicial%>';
+
+        <%}else if(strTabla.equals("DISTRITOJUDICIAL")){%>
+            document.title = "Búsqueda de Distrito Judicial";
+            url = '<%=path%>/CR_C_DistritoJudicial_Servlet?criterio='+criterio+'&valor='+valor;
+        //Fin [CC17-002]
+
+        //Inicio [CC17-012] gmeza 31.01.2017
+        <%}else if(strTabla.equals("CATALOGOCOMBOGENERICO")){%>
+            document.title = "Búsqueda de Catálogo";
+            url = '<%=path%>/CB_C_CatalogoComboGenerico_Servlet?criterio='+criterio+'&valor='+valor+'&nombreCombo=<%=nombreCombo%>'+'&metodoInsertar=<%=metodoInsertar%>';
+
+        <%}else if(strTabla.equals("TIPOGASTOJUDICIAL")){%>
+            document.title = "Búsqueda de Tipo de Gasto Judicial";
+            url = '<%=path%>/CR_C_TipoGastoJudicial_Servlet?criterio='+criterio+'&valor='+valor;
+        //Fin [CC17-012]
+        //Inicio [Req.S17-007] kdelacruz 06.03.2017
+        <%}else if(strTabla.equals("NOTARIOS")){%>
+            document.title = "Búsqueda de Notarios";
+            url = '<%=path%>/CL_C_Notarios_Servlet?criterio='+criterio+'&valor='+valor;
+        // Fin [Req.S17-007]
+        <%}else if(strTabla.equals("SECRETARIO")){%>
+            document.title = "Búsqueda de Secretario de Juzgado";
+            url = '<%=path%>/Busqueda_SecretarioJuzgado_Servlet?criterio='+criterio+'&valor='+valor;
+            
+        <%}else if(strTabla.equals("RESPUESTANOTIFICACION")){%>
+                document.title = "Búsqueda de Respuesta Notificacion";
+                url = '<%=path%>/Busqueda_RespuestaNotificacion_Servlet?criterio='+criterio+'&valor='+valor;
+                
+        <%}else if(strTabla.equals("PRODUCTOAHORRO")){%>
+            document.title = "Búsqueda de Productos de Ahorro";
+            url = '<%=path%>/Busqueda_ProductosAhorro_Servlet?criterio='+criterio+'&valor='+valor+'&tipoPersona='+concepto;
+            
+        <%}else if(strTabla.equals("PRODUCTOAHORROSINTASA")){%>
+            document.title = "Búsqueda de Productos de Ahorro";
+            url = '<%=path%>/Busqueda_ProductosAhorroSinTasa_Servlet?criterio='+criterio+'&valor='+valor+'&tipoPersona='+concepto;
+            
+        <%}else if(strTabla.equals("PRODUCTODPF")){%>
+            document.title = "Búsqueda de Productos a Plazo Fijo";
+            url = '<%=path%>/Busqueda_ProductosDPF_Servlet?criterio='+criterio+'&valor='+valor+'&tipoPersona='+concepto;
+            
+        <%}else if(strTabla.equals("PRODUCTODPFSINTASA")){%>
+            document.title = "Búsqueda de Productos de Plazo Fijo";
+            url = '<%=path%>/Busqueda_ProductosDPFSinTasa_Servlet?criterio='+criterio+'&valor='+valor;
+            
+        <%}else if(strTabla.equals("PRODUCTOCTS")){%>
+            document.title = "Búsqueda de Productos CTS";
+            url = '<%=path%>/Busqueda_ProductosCTS_Servlet?criterio='+criterio+'&valor='+valor+'&tipoPersona='+concepto;
+            
+        <%}else if(strTabla.equals("PRODUCTOCTSSINTASA")){%>
+            document.title = "Búsqueda de Productos CTS";
+            url = '<%=path%>/Busqueda_Productos?criterio='+criterio+'&valor='+valor+'&claseProducto='+concepto;
+            
+        <%}else if(strTabla.equals("PRODUCTOCUENTA")){%>
+                document.title = "Búsqueda de Productos Cuenta";
+                url = '<%=path%>/Busqueda_Producto_Cuenta?criterio='+criterio+'&valor='+valor;        
+            
+        <%}else if(strTabla.equals("TIPOBLOQUEO")){%>
+            document.title = "Búsqueda de Tipos de Bloqueo";
+            url = '<%=path%>/Busqueda_TipoBloqueo_Servlet?criterio='+criterio+'&valor='+valor; 
+         /* [Req.14-020] gmoran 27.05.2014 */
+         <%}else if(strTabla.equals("FASE")){%>
+             document.title = "Búsqueda de Fases";
+             url = '<%=path%>/CR_T_MantenimientoNivelesFlujo_Servlet?action=CARGA_POPUP&criterio='+criterio+'&valor='+valor;    
+         /* [Req.14-020] gmoran 27.05.2014 */                
+        <%}else if(strTabla.equals("TIPOBLOQUEOAHO")){%>
+            document.title = "Búsqueda de Tipos de Bloqueo";
+            url = '<%=path%>/Busqueda_TipoBloqueoAho_Servlet?criterio='+criterio+'&valor='+valor;
+         
+        <%}else if(strTabla.equals("FORMABLOQUEO")){%>
+            document.title = "Búsqueda de Tipos de Bloqueo";
+            url = '<%=path%>/Busqueda_FormaBloqueo_Servlet?criterio='+criterio+'&valor='+valor; 
+           
+        <%}else if(strTabla.equals("CHEQUE")){%>
+            document.title = "Búsqueda de Cheques Depósito";
+            url = '<%=path%>/Busqueda_ChequeDeposito_Servlet?criterio='+criterio+'&valor='+valor;
+            
+        <%}else if(strTabla.equals("CENTROCOSTO")){%>
+            document.title = "Búsqueda de Centros de Costos";
+            url = '<%=path%>/Busqueda_CentroCosto_Servlet?criterio='+criterio+'&valor='+valor;
+            
+        <%}else if(strTabla.equals("CUENTABANCARIA")){%>
+            document.title = "Búsqueda de Cuentas Bancarias";
+            url = '<%=path%>/Busqueda_CuentaBancaria_Servlet?valor='+valor;
+            
+        <%}else if(strTabla.equals("PRODUCTO")){%>
+            document.title = "Búsqueda de Productos";
+            url = '<%=path%>/Busqueda_Producto_Servlet?criterio='+criterio+'&valor='+valor;
+          <%}else if(strTabla.equals("NACIONALINTERNACIONAL")){%>
+                document.title = "Búsqueda de Procedencia";
+                url = '<%=path%>/Busqueda_NacionalInternacional_Servlet?criterio='+criterio+'&valor='+valor;                
+        <%}//mnieves 22.08.2011
+                else if(strTabla.equals("TIPOCREDITOSBS")){%>
+                document.title = "Búsqueda de tipos de crédito SBS";
+                url = '<%=path%>/Busqueda_TipoCreditoSBS_Servlet?criterio='+criterio+'&valor='+valor;
+        <%}//mnieves 22.08.2011
+                else if(strTabla.equals("TIPOPERSONAJURIDICA")){%>
+                document.title = "Búsqueda de tipos de persona juridica";
+                url = '<%=path%>/Busqueda_TipoPersonaJuridica_Servlet?criterio='+criterio+'&valor='+valor;
+            <%}//mnieves 24.08.2011
+                else if(strTabla.equals("NUMEROCUENTADPF")){%>
+                document.title = "Búsqueda de Numero Cuenta DPF";
+                url = '<%=path%>/Busqueda_NumeroCuentaDPF_Servlet?criterio='+criterio+'&valor='+valor;
+        <%}else if(strTabla.equals("USUARIO")){%>
+            document.title = "Búsqueda de Usuarios";
+            //[Req.S17-007] kdelacruz 06.03.2017
+            url = '<%=path%>/Busqueda_Usuarios_Servlet?criterio='+criterio+'&valor='+valor + '&indicadorTipo=<%=indicadorTipo%>';
+            
+        <%}else if(strTabla.equals("USUARIOALL")){%>
+            document.title = "Búsqueda de Usuarios";
+            url = '<%=path%>/Busqueda_UsuariosAll_Servlet?criterio='+criterio+'&valor='+valor;
+            
+        <%}else if(strTabla.equals("FORMATO")){%>
+            document.title = "Búsqueda de Formatos";
+            url = '<%=path%>/Busqueda_Formato_Servlet?criterio='+criterio+'&valor='+valor;
+            
+        <%}else if(strTabla.equals("PERSONAJURIDICA")){%>
+            document.title = "Búsqueda de Personas Juridicas";
+            url = '<%=path%>/Busqueda_PersonasJuridicas_Servlet?criterio='+criterio+'&valor='+valor;
+            
+        <%}else if(strTabla.equals("PERSONANATURAL")){%>
+            document.title = "Búsqueda de Personas Naturales";
+            url = '<%=path%>/Busqueda_PersonaNatural_Servlet?criterio='+criterio+'&valor='+valor;
+            
+        <%}//prios 06.09.11
+            else if(strTabla.equals("PERSONA_RUC")){%>
+            document.title = "Búsqueda de Personas";
+            url = '<%=path%>/Busqueda_Personas_RUC_Servlet?criterio='+criterio+'&valor='+valor;
+            
+        <%}//mnieves 10.01.2012
+        else if(strTabla.equals("CUENTA_CONTABLE_INVENTARIO")){%>
+            document.title = "Búsqueda de Cuenta Contable";
+            aux ='<%=strAux%>';
+            url = '<%=path%>/Busqueda_CuentaContable_Inventario_Servlet?criterio='+criterio+'&valor='+valor+'&auxiliar='+aux;
+        <%}//mnieves 22.06.2012
+            else if(strTabla.equals("PRODUCTOS_NIEVELES_GRUPO_CREDITO")){%>
+                document.title = "Búsqueda de Producto Niveles Grupo Crédito";
+                aux ='<%=strAux%>';
+                url = '<%=path%>/Busqueda_ProductosNivelesGrupoProducto_Servlet?criterio='+criterio+'&valor='+valor;
+        <%}//mnieves 22.06.2012
+            else if(strTabla.equals("GESTOR_COBRANZA")){%>
+                document.title = "Búsqueda de Gestor de Cobranza";
+                aux ='<%=strAux%>';
+                url = '<%=path%>/Busqueda_GestorCobranza_Servlet?criterio='+criterio+'&valor='+valor;
+        <%}//mnieves 22.06.2012
+            else if(strTabla.equals("EMPRESA_EXTERNA")){%>
+                document.title = "Búsqueda Gestor de Empresa Externa";
+                aux ='<%=strAux%>';
+                url = '<%=path%>/Busqueda_GestorCobranza_Servlet?criterio='+criterio+'&valor='+valor+'&valorFiltro=<%=valorFiltro%>';
+        <%}//jgonzales 27.08.2012
+            else if(strTabla.equals("GESTION_REALIZADA")){%>
+                document.title = "Búsqueda de Gestiones Realizadas";
+                url = '<%=path%>/Busqueda_GestionRealizada_Servlet?criterio='+criterio+'&valor='+valor;
+        <%}//jgonzales 27.08.2012
+            else if(strTabla.equals("RESPUESTA_GESTION")){%>
+                document.title = "Búsqueda de Respuestas de Gestión";
+                url = '<%=path%>/Busqueda_RespuestaGestion_Servlet?criterio='+criterio+'&valor='+valor;  
+                
+        <%}else if(strTabla.equals("CODIGOAUXILIAR")){%>
+            document.title = "Búsqueda de Códigos Auxiliares";
+            valor = (criterio == "Codigo" && valor != "")?concepto+valor:valor;
+            url = '<%=path%>/Busqueda_CodigoAuxiliar_Servlet?criterio='+criterio+'&valor='+valor+'&cod='+concepto;
+            
+        <%}else if(strTabla.equals("MOTIVOBLOQUEODESBLOQUEO")){%>
+            document.title = "Búsqueda de Motivos Bloqueo Desbloqueo";
+            url = '<%=path%>/Busqueda_MotivoBloqueoDesbloqueo_Servlet?tipoTransaccion='+tipoTransaccion+'&valor='+valor+'&criterio='+criterio;
+            
+        <%}else if(strTabla.equals("TIPOGARANTIA")){%>
+                document.title = "Búsqueda Tipo Garantia";
+                url = '<%=path%>/Busqueda_TipoGarantia_Servlet?criterio='+criterio+'&valor='+valor;
+        
+        
+        <%}else if(strTabla.equals("PAIS")){%>
+            document.title = "Búsqueda de Paises";
+            url = '<%=path%>/Busqueda_Pais_Servlet?criterio='+criterio+'&valor='+valor+'<%=urlPais%>';
+               
+        <%}else if(strTabla.equals("REQUISITOS")){%>
+                document.title = "Búsqueda de Requisitos";
+                url = '<%=path%>/Busqueda_Requisitos_Servlet?criterio='+criterio+'&valor='+valor;
+         
+          <%}else if(strTabla.equals("CARGOSLABORALES")){%>
+                document.title = "Búsqueda Cargos Laborales";
+                url = '<%=path%>/Busqueda_CargoLaboral_Servlet?criterio='+criterio+'&valor='+valor;
+         
+        <%}else if(strTabla.equals("CIUDAD")){%>
+                document.title = "Búsqueda de Paises";
+                url = '<%=path%>/Busqueda_Ciudad_Servlet?criterio='+criterio+'&valor='+valor;  
+        
+        <%}else if(strTabla.equals("AGRUPMOTIVOINGRESOLN")){%>
+            document.title = "Búsqueda de Cuentas Contables";
+            url = '<%=path%>/Busqueda_AgrupacionMotivoListaNegra_Servlet?criterio='+criterio+'&valor='+valor;
+        
+                
+         <%}else if(strTabla.equals("GIRONEGOCIO")){%>
+                document.title = "Búsqueda de Paises";
+                url = '<%=path%>/Busqueda_GiroNegocio_Servlet?criterio='+criterio+'&valor='+valor;    
+                
+         <%}else if(strTabla.equals("GIRONEGOCIOXCIIU")){%>
+                document.title = "Búsqueda de Giro de Negocio";
+                url = '<%=path%>/Busqueda_GiroNegocioCiiu_Servlet?criterio='+criterio+'&valor='+valor+'&txtCodigoAdic='+codigoAdic;
+                            
+        <%}else if(strTabla.equals("CANALVENTAS")){%>
+                document.title = "Búsqueda de Canal de Ventas";
+                url = '<%=path%>/Busqueda_CanalVentas_Servlet?criterio='+criterio+'&valor='+valor;       
+
+        //gliceta 07.07.2011: Automatizacion de Encajes
+        <%}else if(strTabla.equals("ATRIBUTOOPERATIVO")){%>
+             document.title = "Búsqueda de Atributos Operativos";
+             url = '<%=path%>/Busqueda_AtributoOperativo_Servlet?criterio='+criterio+'&valor='+valor; 
+        
+        //jpantoja 06.02.2012: Concepto Operativo
+        <%}else if(strTabla.equals("CONCEPTOOPERATIVO")){%>
+             document.title = "Búsqueda de Conceptos Operativos";
+             url = '<%=path%>/Busqueda_ConceptoOperativo_Servlet?criterio='+criterio+'&valor='+valor;
+             
+<%}else if(strTabla.equals("OFICINA")){%>
+                document.title = "Búsqueda de Oficina";
+                url = '<%=path%>/Busqueda_Oficina_Servlet?criterio='+criterio+'&valor='+valor; 
+            <%}else if(strTabla.equals("DISTRITO")){%>
+                document.title = "Búsqueda de Distrito";
+                url = '<%=path%>/Busqueda_Distrito_Servlet?criterio='+criterio+'&valor='+valor;  
+            <%}else if(strTabla.equals("CUADRANTE")){%>
+                document.title = "Búsqueda de Cuadrantes";
+                url = '<%=path%>/Busqueda_Cuadrante_Servlet?criterio='+criterio+'&valor='+valor; 
+            <%}else if(strTabla.equals("ROLES")){%>
+                document.title = "Búsqueda de Roles";
+                url = '<%=path%>/Busqueda_Roles_Servlet?criterio='+criterio+'&valor='+valor;            
+            <%}else if(strTabla.equals("BASEINSPECCION")){%>
+                document.title = "Búsqueda de Bases de Inspeccion";
+                url = '<%=path%>/Busqueda_Bases_Servlet?criterio='+criterio+'&valor='+valor+"&buscarXTipoBase=I";               
+            <%}else if(strTabla.equals("BASE")){%>
+                document.title = "Búsqueda de Bases de Inspeccion";
+                url = '<%=path%>/Busqueda_Bases_Servlet?criterio='+criterio+'&valor='+valor;            
+            <%}else if(strTabla.equals("COORDINADORBASE")){%>
+                document.title = "Búsqueda de Coordinador de Base";
+                url = '<%=path%>/Busqueda_CoordinadorBase_Servlet?criterio='+criterio+'&valor='+valor+"&codigoBase="+codigoBase; 
+            <%}else if(strTabla.equals("PRODUCTOXTIENDA")){%>
+                document.title = "Búsqueda de Producto po Tienda";
+                url = '<%=path%>/Busqueda_ProductoTienda_Servlet?criterio='+criterio+'&valor='+valor; 
+            <%}else if(strTabla.equals("PRODUCTOFINANCIERO")){%>
+                document.title = "Búsqueda de Producto Financiero.";
+                url = '<%=path%>/Busqueda_ProductoFinanciero_Servlet?criterio='+criterio+'&valor='+valor;                       
+            /**
+                 * BUSQUEDAINSPECTOR,BusquedaDeLosInspectores
+                 * 
+                 *@author gfernandez
+                 *@since 04.11.2010
+                **/
+            <%}else if(strTabla.equals("BUSQUEDAINSPECTOR")){%>
+                document.title = "Búsqueda de Inspectores";
+                url = '<%=path%>/Busqueda_Inspectores_Servlet?criterio='+criterio+'&valor='+valor+"&codigoBase="+codigoBase;
+            <%}else if(strTabla.equals("BUSQUEDAGARANTE")){%>
+                document.title = "Búsqueda de Garantes";
+                url = '<%=path%>/Busqueda_Garantes_Servlet?criterio='+criterio+'&valor='+valor+"&nroSolCredito="+nroSolCredito; 
+            <%}else if(strTabla.equals("BUSQUEDARESULTADO")){%>
+                document.title = "Búsqueda de Resultado";
+                url = '<%=path%>/Busqueda_ResultadoRevision_Servlet?criterio='+criterio+'&valor='+valor+"&nroSolCredito=<%=request.getParameter("nroSolCredito")%>"; 
+            <%}else if(strTabla.equals("BUSQUEDAPARENTESCO")){%>
+                document.title = "Búsqueda de Parentesco";
+                url = '<%=path%>/Busqueda_Parentesco_Servlet?criterio='+criterio+'&valor='+valor+"&nroSolCredito=<%=request.getParameter("nroSolCredito")%>";               
+            <%}else if(strTabla.equals("BUSQUEDATIPDOCCOBRANZA")){%>
+                document.title = "Búsqueda de Documentos de Cobranza";
+                url = '<%=path%>/Busqueda_TipoDocCobranza?criterio='+criterio+'&valor='+valor;  
+            <%}else if(strTabla.equals("BUSQUEDAGESTORCOBRANZA")){%>
+                document.title = "Búsqueda de Gestores de Cobranza";
+                url = '<%=path%>/Busqueda_GestoresCobranza?criterio='+criterio+'&valor='+valor+"&codRolUsrId="+codRolUsrId;     
+            <%}else if(strTabla.equals("BUSQUEDANUMERORECIBO")){%>
+                document.title = "Búsqueda de Recibo";
+                url = '<%=path%>/Busqueda_NumeroRecibo_Servlet?criterio='+criterio+'&valor='+valor+"&gestorCobranza=<%=request.getParameter("gestorCobranza")%>";
+            <%}else if(strTabla.equals("BUSQUEDASERIE")){%>
+                document.title = "Búsqueda de Series de Recibos Cobranza";
+                url = '<%=path%>/Busqueda_SeriesRecibos_Servlet?criterio='+criterio+'&valor='+valor+"&tipDoc=<%=request.getParameter("tipDoc")%>";  
+                
+            <%}else if(strTabla.equals("EMPRESAINSPECCIONLABORAL")){%>      
+                document.title = "Búsqueda de Empresa Inspeccion Laboral.";
+                url = '<%=path%>/Busqueda_Empresa_Inspecion_Laboral?criterio='+criterio+'&valor='+valor; 
+             <%}else if(strTabla.equals("USUARIOROL")){%>
+                document.title = "Búsqueda de Usuarios";
+                url = '<%=path%>/Busqueda_UsuarioPorRol_Servlet?criterio='+criterio+'&valor='+valor;
+           
+                
+               <%}else if(strTabla.equals("PRODUCTOSTIENDA")){ %>
+               document.title = "Búsqueda de Productos";               
+               url = '<%=path%>/Busqueda_Productos_Servlet?criterio='+criterio+'&valor='+valor;       
+             <%}else if(strTabla.equals("RESULTADOS")){ %>
+               document.title = "Búsqueda de RESULTADOS";               
+               url = '<%=path%>/Busqueda_Resultados_Servlet?criterio='+criterio+'&valor='+valor; 
+                <%}else if(strTabla.equals("PRODUCTOCREDITOCARTERA")){ %>
+               document.title = "Búsqueda de Producto"; 
+               url = '<%=path%>/Busqueda_ProductoCreditoCartera_Servlet?criterio='+criterio+'&valor='+valor;  
+              <%}else if(strTabla.equals("ESTADOCREDITO")){ %>
+               document.title = "Búsqueda de Estado Credito"; 
+               url = '<%=path%>/Busqueda_EstadoContable_Servlet?criterio='+criterio+'&valor='+valor;                 
+               <%}else if(strTabla.equals("GESTORCOBRANZA")){%>
+                document.title = "Búsqueda de Gestor de Cobranza";
+                url = '<%=path%>/Busqueda_GestorCobranza_Servlet?filtroDireccion='+filtroDireccion+'&criterio='+criterio+'&valor='+valor+'&strTabla=<%=strTabla%>';
+               <%}else if(strTabla.equals("GESTOR")){%>
+                document.title = "Búsqueda de gestores de cobranza";
+                url = '<%=path%>/Busqueda_Gestor_Servlet?criterio='+criterio+'&valor='+valor;
+              
+              <%}else if(strTabla.equals("RECIBO")){ %>
+               document.title = "Búsqueda de Recibo"; 
+               url = '<%=path%>/Busqueda_Recibo_Servlet?criterio='+criterio+'&valor='+valor;    
+                <%}else if(strTabla.equals("CREDITO")){%>
+               
+               document.title = "Búsqueda de Solicitud de Credito";
+               url = '<%=path%>/Busqueda_SolicitudesCredito_Servlet?criterio='+criterio+'&valor='+valor;                   
+             <%}else if(strTabla.equals("ASIGNACION")){ %>  
+               document.title = "Búsqueda de Asignacion"; 
+               solicitud =  '<%= request.getParameter("txtCodigoSolicitud")%>';    
+                   
+               url = '<%=path%>/Busqueda_Asignacion_Servlet?criterio='+criterio+'&valor='+valor+'&solicitud='+solicitud;       
+             <%}else if(strTabla.equals("SUPERVISOR")){ %>
+               document.title = "Búsqueda de Supervisor";
+               url = '<%=path%>/Busqueda_Supervisor_Servlet?criterio='+criterio+'&valor='+valor;                
+               document.title = "Búsqueda de Credito";
+             <%}else if(strTabla.equals("CREDITOCARTERA")){%>
+               url = '<%=path%>/Busqueda_CreditoCartera_Servlet?criterio='+criterio+'&valor='+valor;
+             <%}else if(strTabla.equals("INMOBILIARIA")){%>
+               url = '<%=path%>/Busqueda_Inmobiliaria_Servlet?criterio='+criterio+'&valor='+valor;
+             <%}else if(strTabla.equals("CONCESIONARIO")){%>
+               url = '<%=path%>/Busqueda_Concesionario_Servlet?criterio='+criterio+'&valor='+valor;  
+             //gliceta 16.04.2012: Req. 12-058 - Cumplimiento Normativo
+             //Grupo de Reporte de Informe
+             <%}else if(strTabla.equals("GRUPOINFORME")){%>
+               url = '<%=path%>/Busqueda_GrupoInforme_Servlet?criterio='+criterio+'&valor='+valor;
+             //Tipo de Informe
+             <%}else if(strTabla.equals("TIPOINFORME")){%>
+               url = '<%=path%>/Busqueda_TipoInforme_Servlet?criterio='+criterio+'&valor='+valor;  
+             //Grupo de Referencia Indice Nota SBS    
+             <%}else if(strTabla.equals("REFINDICESBS")){%>
+               url = '<%=path%>/Busqueda_RefIndiceNotaSBS_Servlet?criterio='+criterio+'&valor='+valor;
+             //Firmas de Informe    
+             <%}else if(strTabla.equals("FIRMAINFORME")){%>
+               url = '<%=path%>/Busqueda_FirmasInformeCumplimiento_Servlet?criterio='+criterio+'&valor='+valor;  
+             <%}else if(strTabla.equals("TALLER_GNV")){%>
+               url = '<%=path%>/Busqueda_TallerGNV_Servlet?criterio='+criterio+'&valor='+valor;
+             <%}else if(strTabla.equals("OTRASPERSONAS")){%>
+               document.title = "Búsqueda de Otras Personas";
+               //[CC17-002] gmeza 16.01.2017
+               url = '<%=path%>/Busqueda_OtrasPersonas_Servlet?criterio='+criterio+'&valor='+valor+'&codigoOtrasPersonas='+codigoOtrasPersonas+'&tipoRepresentante='+tipoRepresentante+'&tipoPersona=<%=tipoPersona%>';
+             <%}else if(strTabla.equals("TALLER")){%>
+               var cConces =  '<%= request.getParameter("cConces")%>'; 
+               url = '<%=path%>/Busqueda_Taller_Servlet?criterio='+criterio+'&valor='+valor+'&cConces='+cConces + '&codigoOtrasPersonas='+codigoOtrasPersonas;
+             <%}else if(strTabla.equals("LOCALIDAD")){
+                   if(request.getParameter("filtro")!=null){  %>          
+                              document.title = "Búsqueda de Area";
+               <%  }else{  %>
+                  document.title = "Búsqueda de Agencia";
+               <% }  %>   
+               filtro = '<%= request.getParameter("filtro")%>';         
+               url = '<%=path%>/Busqueda_Localidad_Servlet?criterio='+criterio+'&valor='+valor+'&filtro='+filtro;   
+            
+            
+
+
+                
+           <%}else if(strTabla.equals("VENDEDORES")){%>
+                document.title = "Búsqueda de Canal de Ventas";
+                var indVendedorXAgenciaAut = '<%= request.getParameter("indVendedorXAgenciaAut")!=null?request.getParameter("indVendedorXAgenciaAut"):"NULO"%>';
+                var codAgencia = '<%= request.getParameter("codAgencia")!=null?request.getParameter("codAgencia"):"NULO"%>';
+                url = '<%=path%>/Busqueda_Vendedores_Servlet?criterio='+criterio+'&valor='+valor+'&indVendedorXAgenciaAut='+indVendedorXAgenciaAut+'&codAgencia='+codAgencia;
+                
+           <%}else if(strTabla.equals("LISTAUSUARIOS")){%>
+                document.title = "Lista de Usuarios";
+                url = '<%=path%>/Busqueda_ListaUsuarios_Servlet?criterio='+criterio+'&valor='+valor+'&indUsuarioCELB=<%=indUsuarioCELB%>'+'&codAreaLaboral=<%=codAreaLaboral%>';//gliceta 16.04.2012: Req. 12-058 - Cumplimiento Normativo     
+                
+           <%}else if(strTabla.equals("LISTAROLES")){%>
+                document.title = "Lista de Roles";
+                url = '<%=path%>/Busqueda_ListaRoles_Servlet?criterio='+criterio+'&valor='+valor;               
+  
+        <%}else if(strTabla.equals("LISTATIPOOBSERVACION")){%>
+                document.title = "Lista de Observacion";
+                url = '<%=path%>/Busqueda_ListaObservacion_Servlet?criterio='+criterio+'&valor='+valor;          
+                
+        <%}else if(strTabla.equals("ARTICULOS")){%>
+                document.title = "Búsqueda de Articulos";
+                //jpantoja 16.01.2011 modificado para agregar un parametro de busqueda 
+                // ajimenez 28.05.2013 [13-038-II] - Parametro Empresa Retail
+                url = '<%=path%>/Busqueda_Articulos_Servlet?criterio='+criterio+'&valor='+valor+'&valorFiltro=<%=valorFiltro%>&idRetail=<%=idRetail%>';
+                   
+        <%}else if(strTabla.equals("PRODUCTOCREDITO")){%>
+            <%-- Inicio [Req. 14-055]  jvilcapaza 20.06.2014 --%>
+            document.title = "Búsqueda de Productos";
+            url = '<%=path%>/Busqueda_ProductoCredito_Servlet?tipoPersonaTitular=<%=tipoPersonaTitular%>&tipoCredito=<%=tipoCredito%>&subTipoCredito=<%=subTipoCredito%>&criterio='+criterio+'&valor='+valor+'<%=urlProducto%>';
+               
+        <%}else if(strTabla.equals("PRODUCTOASEGURADORA")){%>
+                document.title = "Búsqueda de Productos Aseguradora";
+                url = '<%=path%>/OP_T_EmpresasAseguradoras_Servlet?action=BUSQUEDA_PRODUCTO_ASEGURADORA_TABLA&codigoAseguradora=<%=codigoAseguradora%>&criterio='+criterio+'&valor='+valor;
+        <%-- Fin [Req. 14-055] --%>
+        <%}else if(strTabla.equals("PRODUCTOCREDITOLC")){%>
+                document.title = "Búsqueda de Productos Credito";
+                url = '<%=path%>/Busqueda_ProductoCreditoLC_Servlet?tipoCredito=<%=tipoCredito%>&subTipoCredito=<%=subTipoCredito%>&criterio='+criterio+'&valor='+valor+'<%=urlProducto%>';    
+             
+        <%}else if(strTabla.equals("PROMOTOR")){%>
+            document.title = "Búsqueda de PROMOTOR";
+            url = '<%=path%>/Busqueda_Usuarios_Servlet?criterio='+criterio+'&valor='+valor+'&strTabla=<%=strTabla%>';
+            
+        <%}else if(strTabla.equals("ANALISTA")){%>
+            document.title = "Búsqueda de ANALISTA";
+            url = '<%=path%>/Busqueda_Usuarios_Servlet?criterio='+criterio+'&valor='+valor+'&strTabla=<%=strTabla%>';
+            
+        <%}else if(strTabla.equals("EJECUTIVO")){%>
+            document.title = "Búsqueda de EJECUTIVO";
+            url = '<%=path%>/Busqueda_Usuarios_Servlet?criterio='+criterio+'&valor='+valor+'&strTabla=<%=strTabla%>';
+          //stacanga 29.03.2012
+        <%}else if(strTabla.equals("PRE-ANALISTA")){%>
+                document.title = "Búsqueda de PRE ANALISTA";
+                url = '<%=path%>/Busqueda_Usuarios_Servlet?criterio='+criterio+'&valor='+valor+'&strTabla=<%=strTabla%>';      
+        <%}else if(strTabla.equals("CIIU")){%>
+            document.title = "Búsqueda de CIIU";
+            url = '<%=path%>/Busqueda_Ciiu_Servlet?criterio='+criterio+'&valor='+valor;
+            
+        <%}else if(strTabla.equals("CIIUXSECTOR")){%>
+            document.title = "Búsqueda de CIIU x Sector";
+            url = '<%=path%>/Busqueda_CiiuSector_Servlet?criterio='+criterio+'&valor='+valor+'&txtCodigoAdic='+codigoAdic;
+            
+      <%}else if(strTabla.equals("ZONAITINERANTE")){%>
+                document.title = "Búsqueda de Zona Itinerante del Cliente";
+                url = '<%=path%>/Busqueda_ZonaItinerante_Servlet?criterio='+criterio+'&valor='+valor+'&txtCodigoAdic='+codigoAdic;
+             
+        <%}else if(strTabla.equals("MOTIVORECHAZOSC")){%>
+            document.title = "Búsqueda de Motivo Rechazo de la Solicitud";
+            url = '<%=path%>/Busqueda_MotivoRechazo_Servlet?criterio='+criterio+'&valor='+valor;
+            
+        <%}else if(strTabla.equals("GARANTIACREDITO")){%>
+            document.title = "Búsqueda de Garantias de Credito";
+            url = '<%=path%>/Busqueda_GarantiaCredito_Servlet?criterio='+criterio+'&valor='+valor;
+            
+        <%}else if(strTabla.equals("MOTIVOBLOQUEOLIBERACION")){%>
+            document.title = "Búsqueda de Motivo Bloqueo Liberacion";
+            url = '<%=path%>/Busqueda_MotivoBloqueoLiberacion_Servlet?criterio='+criterio+'&valor='+valor+"&tipoTransaccion="+tipoTransaccion;
+            
+        <%}else if(strTabla.equals("PROFESION")){%>
+            document.title = "Búsqueda de Profesiones";
+            url = '<%=path%>/Busqueda_Profesion_Servlet?criterio='+criterio+'&valor='+valor;
+            
+        <%}else if(strTabla.equals("CARGOOCUPACION")){%>
+                document.title = "Búsqueda de Profesiones";
+                url = '<%=path%>/Busqueda_CargoOcupacion_Servlet?criterio='+criterio+'&valor='+valor;
+                
+            <%}else if(strTabla.equals("OFICIO")){%>
+                document.title = "Búsqueda de Profesiones";
+                url = '<%=path%>/Busqueda_Oficio_Servlet?criterio='+criterio+'&valor='+valor;            
+            
+            <%}else if(strTabla.equals("AREALABORAL")){%>
+                document.title = "Búsqueda de Areas Laborales";
+                url = '<%=path%>/Busqueda_AreaLaboral_Servlet?criterio='+criterio+'&valor='+valor;
+            
+        <%}else if(strTabla.equals("CUADRANTE")){%>
+                document.title = "Búsqueda de Cuadrantes";
+                url = '<%=path%>/Busqueda_Cuadrante_Servlet?criterio='+criterio+'&valor='+valor;
+                
+        <%}else if(strTabla.equals("SECTOR")){%>
+            document.title = "Búsqueda de Sectores Económicos";
+            url = '<%=path%>/Busqueda_SectorEconomico_Servlet?criterio='+criterio+'&valor='+valor;
+            
+        <%}else if(strTabla.equals("MOTIVOINGRESOLN")){%>
+            document.title = "Búsqueda de Motivos de Ingreso a Base Negativa";
+            url = '<%=path%>/Busqueda_MotivoIngresoLN_Servlet?criterio='+criterio+'&valor='+valor;
+       
+        <%}else if(strTabla.equals("IDENTIFICACIONCOLUMNA")){%>
+                document.title = "Búsqueda de Identificadores de Columnas";
+                url = '<%=path%>/Busqueda_IdentificacionColumna_Servlet?criterio='+criterio+'&valor='+valor;
+               
+        <%}else if(strTabla.equals("CARGOLABORAL")){%>
+            document.title = "Búsqueda de Cargos Laborales";
+            url = '<%=path%>/Busqueda_CargoLaboral_Servlet?criterio='+criterio+'&valor='+valor;
+            
+        <%}else if(strTabla.equals("PERITOTASADOR")){%>
+            document.title = "Búsqueda de Peritos";
+            url = '<%=path%>/Busqueda_PeritoTasador_Servlet?tipo=PE&criterio='+criterio+'&valor='+valor;
+            
+          <%}else if(strTabla.equals("NOTARIO")){%>
+              document.title = "Búsqueda de Notarios";
+              url = '<%=path%>/Busqueda_PeritoTasador_Servlet?tipo=NT&criterio='+criterio+'&valor='+valor;          
+          <%}else if(strTabla.equals("MOTIVOBLOQUEODESBLOQUEOTOTAL")){%>
+              document.title = "Búsqueda de Cargos Laborales";
+              //Inicio [T-9101] gmeza 11.03.2016
+              var codigoGarantia=<%=codigoGarantia%>;
+              url = '<%=path%>/Busqueda_MotivoBloqueoDesbloqueo_Servlet?criterio='+criterio+'&valor='+valor+'&codigoGarantia='+codigoGarantia;          
+              //Fin [T-9101]          
+        <%}else if(strTabla.equals("SECTORECONOMICO")){%>
+            document.title = "Búsqueda de Sectores Econo&acutemicos";
+            url = '<%=path%>/Busqueda_SectorEconomico_Servlet?criterio='+criterio+'&valor='+valor; 
+           <%}else if(strTabla.equals("GIROSOLICITUD")){%>
+              document.title = "Búsqueda de Cargos Laborales";
+              url = '<%=path%>/Busqueda_RemesasSolicitudGiro_Servlet?criterio='+criterio+'&valor='+valor;                            
+            <%//rgutierrez 11.05.2012
+           }else if(strTabla.equals("CANALOPERACIONES")){%>
+              document.title = "Búsqueda de Canal de Operaciones";
+              url = '<%=path%>/Busqueda_CanalOperaciones_Servlet?criterio='+criterio+'&valor='+valor;       
+           <%}else if(strTabla.equals("ENTIDADRECAUDADORA")){%>          
+              document.title = "Búsqueda de Entidad Recaudadora";
+              url = '<%=path%>/Busqueda_CanalOperacionRecaudacionExterna_Servlet?criterio='+criterio+'&valor='+valor;        
+           <%//rgutierrez 06.08.2012
+              }else if(strTabla.equals("PROMOCIONCAMP")){%>
+              document.title = "Búsqueda de Campaña";
+              
+              url = '<%=path%>/Busqueda_Campana_Servlet?criterio='+criterio+'&valor='+valor;     
+        <%//Aromero 14.05.2014
+              }else if(strTabla.equals("CAMPANA")){%>
+              document.title = "Búsqueda de Campaña";
+              url = '<%=path%>/Busqueda_Campana_Servlet?criterio='+criterio+'&valor='+valor+'&tipC='+campana;
+        
+        <%}else if(strTabla.equals("INSTITUCIONES")){%>             
+              document.title = "Búsqueda de Instituciones";
+              url = '<%=path%>/Busqueda_Instituciones_Servlet?criterio='+criterio+'&valor='+valor;
+        
+        <%}else if(strTabla.equals("CLIENINSTI")){%>             
+              document.title = "Búsqueda de Clientes";
+              var codInst=<%=codInst%>;
+              url = '<%=path%>/Busqueda_ClientesInstitucion_Servlet?criterio='+criterio+'&valor='+valor+'&codInst='+codInst;   
+        <%}else if(strTabla.equals("AHORROSOLES")){%>             
+              document.title = "Búsqueda de Ahorro Soles";
+              url = '<%=path%>/Busqueda_AhorroSoles_Servlet?criterio='+criterio+'&valor='+valor;
+        <%}else if(strTabla.equals("AHORRODOLARES")){%>             
+              document.title = "Búsqueda de Ahorro Dolares";
+              url = '<%=path%>/Busqueda_AhorroDolares_Servlet?criterio='+criterio+'&valor='+valor;
+                
+       <%//gfernandez 25.09.2012
+              }else if(strTabla.equals("TIPOSPROCESO")){%>
+              document.title = "Búsqueda de Tipos de proceso";
+              url = '<%=path%>/Busqueda_TiposProceso_Servlet?criterio='+criterio+'&valor='+valor;
+           <%//gfernandez 25.09.2012
+              }else if(strTabla.equals("CAMPANASUBCONCEPTOCONTABLE")){%>
+              document.title = "Búsqueda de subconcepto contable por Campaña";
+              url = '<%=path%>/Busqueda_SubConceptoContableCampana_Servlet?criterio='+criterio+'&valor='+valor;
+            <%//gfernandez 03.12.2012
+              }else if(strTabla.equals("TIPOPERSONA")){%>
+              document.title = "Búsqueda de tipo de persona";
+              url = '<%=path%>/Busqueda_TipoPersona_Servlet?criterio='+criterio+'&valor='+valor;     
+            <%//gfernandez 03.12.2012
+              }else if(strTabla.equals("NIVELRIESGOLA")){%>
+              document.title = "Búsqueda del nivel de riesgo para Lavado de Activos";
+              url = '<%=path%>/Busqueda_NivelRiesgoLA_Servlet?criterio='+criterio+'&valor='+valor;     
+            <%//gfernandez 03.12.2012
+              }else if(strTabla.equals("TIPOCUENTA")){%>
+              document.title = "Búsqueda de tipo de cuenta";
+              url = '<%=path%>/Busqueda_TipoCuenta_Servlet?criterio='+criterio+'&valor='+valor;     
+            <%//gfernandez 09.12.2012
+              }else if(strTabla.equals("UBIGEODEPARTAMENTO")){%>
+              document.title = "Búsqueda de Departamentos";
+              url = '<%=path%>/Busqueda_UbigeoDepartamento_Servlet?criterio='+criterio+'&valor='+valor;     
+            <%//gfernandez 17.01.2012
+              }else if(strTabla.equals("NIVELINGRESO")){%>
+              document.title = "Búsqueda de Nivel de Riesgo";
+              url = '<%=path%>/Busqueda_NivelIngreso_Servlet?criterio='+criterio+'&valor='+valor;                
+
+            <%//ajimenez 05.04.2013
+              }else if (strTabla.equals("GRUPOPRODUCTOCREDITO")){%>
+              document.title = "Búsqueda de Grupo de Producto de Credito";
+              url = '<%=path%>/Busqueda_GrupoProductoCredito_Servlet?criterio='+criterio+'&valor='+valor;
+            
+            <%//jventura 22.05.2014 Req [S14-61]          
+              }else if (strTabla.equals("TIPOFECHAPAGO")){%>
+              document.title = "Búsqueda Tipo de Fecha de Pago";
+              url = '<%=path%>/Busqueda_TipoFechadePago_Servlet?criterio='+criterio+'&valor='+valor;
+           
+           <%//jventura 22.05.2014 Req [S14-61]          
+              }else if (strTabla.equals("TIPOSEGURO")){%>
+              document.title = "Búsqueda Tipo de Seguro";
+              url = '<%=path%>/Busqueda_TipoSeguro_Servlet?criterio='+criterio+'&valor='+valor;
+           
+           <%//jventura 22.05.2014 Req [S14-61]          
+              }else if (strTabla.equals("ENTIDADASEGURADORA")){%>
+              document.title = "Búsqueda Empresas Aseguradora";
+              url = '<%=path%>/Busqueda_EmpresaSeguros_Servlet?criterio='+criterio+'&valor='+valor;
+           
+            <%//jgonzales 26.04.2013
+              }else if(strTabla.equals("TIPOBANCARIZACION")){%>
+              document.title = "Búsqueda de Clasificacion de Bancarizacion";
+                 url = '<%=path%>/CR_C_Busqueda_TipoBancarizacion_Servlet?criterio='+criterio+'&valor='+valor;
+             <%// [Req. 14-020] esalazar 19.03.2014 
+               }else if(strTabla.equals("VALORCONDICION")){%>
+               document.title = "Búsqueda de Valores por Condicion";
+               url = '<%=path%>/CR_T_MantenimientoValoresPorCondicion_Servlet?action=CARGAR_POPUP&criterio='+criterio+'&valor='+valor+'&indicadorPropuesta=<%=indicadorPropuesta%>&indicadorExcepcion=<%=indicadorExcepcion%>&codigoValorCondicion=<%=codigoValorCondicion%>';
+             <%// [Req. 14-020] gmoran 07.04.2014 
+               }else if(strTabla.equals("BUSQUEDAPERSONASCLAF")){%>
+               document.title = "Búsqueda de Personas";
+               url = '<%=path%>/Busqueda_PersonasClasificacion_Servlet?criterio='+criterio+'&valor='+valor+'&tipoClasificacion='+tipoClasificacion+'&codigoPersonaF='+codigoPersonaF;
+             <%// [Req. 14-020] gmoran 07.04.2014 
+               }else if(strTabla.equals("PRODUCTOSBANTIQ")){%>
+               document.title = "Búsqueda Productos Bantiq";
+               url = '<%=path%>/Busqueda_ProductosBantiq_Servlet?criterio='+criterio+'&valor='+valor;
+             <%// [Req. 14-020] gmoran 07.04.2014 
+               }else if(strTabla.equals("PRODUCTOSDELFIN")){%>
+               document.title = "Búsqueda Productos Delfin";
+               url = '<%=path%>/Busqueda_ProductosDelfin_Servlet?criterio='+criterio+'&valor='+valor+'&codigoMoneda=<%=codigoMoneda%>';
+             <%// [Req. 14-020] gmoran 07.04.2014 
+               }else if(strTabla.equals("CONSULTAPRODUCTOSBANTIQ")){%>
+               document.title = "Búsqueda Consulta Productos Bantiq";
+               url = '<%=path%>/Busqueda_ConsultaProductosBantiq_Servlet?criterio='+criterio+'&valor='+valor+'&indicadorHijos=<%=indicadorHijosBantiq%>&codigoPadre=<%=codigoPadreBantiq%>';
+             <%// [Req. 14-020] gmoran 07.04.2014 
+               }else if(strTabla.equals("CONSULTACONCEPTOSBANTIQ")){%>
+               document.title = "Búsqueda Consulta Conceptos Bantiq";
+               url = '<%=path%>/Busqueda_ConsultaConceptosBantiq_Servlet?criterio='+criterio+'&valor='+valor;
+             <%// [Req. 14-020] gmoran 07.04.2014 
+               }else if(strTabla.equals("CONCEPTOSCOMISION")){%>
+               document.title = "Búsqueda Conceptos Comisión";
+               url = '<%=path%>/Busqueda_ConceptoComision_Servlet?criterio='+criterio+'&valor='+valor;                    
+            <%//[Req. 14-003] mnieves 04.04.2014
+            }else if(strTabla.equals("CLIENTESCORPORATIVOS")){%>
+                document.title = "Búsqueda de Clientes Corporativos";
+                url = '<%=path%>/Busqueda_GeneralClientesCorporativos_Servlet?criterio='+criterio+'&valor='+valor+'&typePerson='+typePerson;                
+            <%//[Req. 14-074] dfujimoto 26.05.2014
+            }else if(strTabla.equals("PROMOTORAHORRO")){%>
+                document.title = "Búsqueda Promotor";
+                url = '<%=path%>/Busqueda_PromotorAhorro_Servlet?criterio='+criterio+'&valor='+valor+'&tipoFuncionario='+typePerson+'&action='+concepto;                
+            <%}else if(strTabla.equals("AGENCIAFUNCIONARIO")){ %>
+                document.title = "Búsqueda de Agencia por Promotor";
+                url = '<%=path%>/Busqueda_PromotorAhorro_Servlet?criterio='+criterio+'&valor='+valor+'&action='+concepto;                
+            <%//[Req. 14-057] cchalco
+             } else if(strTabla.equals("CLIENTEPROVEEDORVINCULADO")){
+                String codigoAliado = request.getParameter("codigoAliado"); %>
+                document.title = "Búsqueda de Clientes Proveedores";
+                var codigoAliado = <%=codigoAliado%>;
+                url = '<%=path%>/Busqueda_ClientesProveedoresVinculados_Servlet?criterio='+criterio+'&valor='+valor+'&auxiliar='+auxiliar+'&codigoAliado='+codigoAliado;
+        //Req. S14-088 fbramirez 01.08.2014
+        <%}else if(strTabla.equals("PRODUCTOCREDITOGESTIONRIESGO")){%>
+            document.title = "Búsqueda de Productos Gestion Riesgo";
+            url = '<%=path%>/Busqueda_ProductoCredito_Servlet?tipoCredito=<%=tipoCredito%>&subTipoCredito=<%=subTipoCredito%>&flagGR=<%=flagGR%>&criterio='+criterio+'&valor='+valor+'<%=urlProducto%>';
+        <%}else if(strTabla.equals("ASOCIACIONBANCAPRODUCTO")){%>
+            document.title = "Búsqueda de Productos en Asociación Gestion Riesgo";
+            url = '<%=path%>/GR_C_MantenimientoAsociacionGestionRiesgo_Servlet?action=BUSCARPRODUCTOASOCIACION&criterio='+criterio+'&valor='+valor;
+        //[Req. S14-088] anunez 30.10.2014
+        <%}else if(strTabla.equals("BANCAS")){%>
+            document.title = "Búsqueda de Bancas";
+            url = '<%=path%>/GR_C_MantenimientoAsociacionGestionRiesgo_Servlet?action=BUSCAR_BANCA&criterio='+criterio+'&valor='+valor;
+ 
+            //[Fin Req. 14-057]  
+            //[Req. 14-094] dfujimoto 08.07.2014
+            <%}else if(strTabla.equals("ROLESCTS")){%>
+                document.title = "Búsqueda Roles CTS";
+                url = '<%=path%>/Busqueda_RolesCTS_Servlet?criterio='+criterio+'&valor='+valor;
+            //[Req. 14-103] dfujimoto 15.09.2014
+            <%}else if(strTabla.equals("DESTINOCREDITO")){%>
+                document.title = "Búsqueda Destino Crédito";
+                url = '<%=path%>/Busqueda_DestinoCredito_Servlet?criterio='+criterio+'&valor='+valor;
+            <%-- Inicio [Req. 14-150] dfujimoto 06.02.2015 --%>
+            <%}else if(strTabla.equals("LOTEAPERTURACTS")){%>
+                document.title = "Búsqueda Lote Apertura CTS";
+                url = '<%=path%>/Busqueda_LoteAperturaCTS_Servlet?criterio='+criterio+'&valor='+valor;
+            <%-- Fin [Req. 14-150] --%>
+            <%// [Req. 14-020] esalazar 11.05.2016 
+            }else if(strTabla.equals("FUNCIONARIOS_NEGOCIOS")){%>
+            document.title = "Búsqueda de Funcionarios de Negocio";
+            url = '<%=path%>/CR_T_MantenimientoUsuarioFuncionario_Servlet?action=BUSCAR_FUNCIONARIOS&criterio=' + criterio + '&valor=' + valor + '&codigoTipoBanca=<%=codigoTipoBanca%>' + '&filtrarUsuarioConectado=<%=filtrarUsuarioConectado%>';
+            <%}%>
+
+            <%-- [Req.14-020] esalazar 11.05.2016 --%>
+            window.document.ifrmBusqueda.location.replace(url + '&timeCache=' + (new Date()).getTime());
+        }
+
+        function pag(direccion){
+            var flagGR = '<%=flagGR%>';
+            if(flagGR=='GR'){
+            document.frames[0].paginacion(direccion,flagGR);
+            }else{
+            document.frames[0].paginacion(direccion);
+            }
+            
+        }
+        
+        function salir(){
+            window.close();
+        }
+        
+        //Ventana ACERCA DE...
+        function ayuda(){
+            alert("Estamos trabajando");
+        }
+    </script>
+    </body>
 </html>
\ No newline at end of file
diff --git a/DELFINWEBNEW/WebRoot/GENERAL/BusquedaNotarios_TABLA.jsp b/DELFINWEBNEW/WebRoot/GENERAL/BusquedaNotarios_TABLA.jsp
new file mode 100644
index 0000000..4ccf8e9
--- /dev/null
+++ b/DELFINWEBNEW/WebRoot/GENERAL/BusquedaNotarios_TABLA.jsp
@@ -0,0 +1,178 @@
+<!-- BusquedaNotarios_TABLA.jsp -->
+<%-- [S17-007] kdelacruz 06.03.2017 - Implementación WorkFlow Legal --%>
+    
+<jsp:directive.page import="general.utils.Paginacion"/>
+<%@ taglib prefix="c" uri="http://java.sun.com/jstl/core"%>
+<%@ taglib prefix='fmt' uri='http://java.sun.com/jstl/fmt'%>
+<%String path =request.getContextPath();
+
+    String paginaActual = (String)(session.getAttribute("hid_paginaActual")==null?"0":session.getAttribute("hid_paginaActual"));
+    int hid_paginaActual = Integer.parseInt(paginaActual);
+    String strTotReg = (String)(session.getAttribute("total")==null?"0":session.getAttribute("total"));
+    int totReg = Integer.parseInt(strTotReg);
+    String strLista = session.getAttribute("listaBusqueda")!= null?session.getAttribute("listaBusqueda").toString():""; 
+    String hid_pagina = request.getParameter("hid_pagina") != null?request.getParameter("hid_pagina"):"1";
+
+    if(session.getAttribute("strNumeroPag") != null){
+        hid_pagina = session.getAttribute("strNumeroPag").toString();
+        session.removeAttribute("strNumeroPag");
+    }
+
+    String ini = session.getAttribute("inicio") != null?(String)session.getAttribute("inicio"):"0";
+    String fin = session.getAttribute("indFin") != null?(String)session.getAttribute("indFin"):"0";
+
+%>
+<HTML>
+<HEAD>
+<link id="css" href="<%=request.getContextPath()%>/UTILS/css/DELFIN.css" rel="stylesheet" type="text/css">
+    <!-- Invocación de Java Scripts -->
+    <script src="<%=request.getContextPath()%>/UTILS/Script/grid.js"></script>  
+    <script src="<%=request.getContextPath()%>/UTILS/Script/MsgValidacion.js"></script>
+ <style>
+     .active-controls-grid {height: 100%; font: menu;}   
+     .active-column-0 {width: 90px;text-align: left;}        
+     .active-column-1 {width: 400px;text-align: left;}  
+     .active-column-2 {width: 90px;text-align: left;}  
+     .active-grid-column {border-right: 1px solid threedlightshadow; }  
+     .active-grid-row {border-bottom: 1px solid threedlightshadow; }  
+</style> 
+</head>
+<body onLoad="parent.loadImages()">
+<script>
+    var posini;
+    var posfin;
+    var f = parent.document.forms[0];
+
+
+    var myData = [<c:out value="${myData}" escapeXml="false"/>];
+    var myColumns = ['Código','Descripcion'];
+    var obj = new Active.Controls.Grid;
+    obj.setId("obj");
+
+    obj.gridColumn = myColumns;
+    obj.gridData = myData;
+    obj.getColumnCount = function() {return this.gridColumn.length};
+    obj.getColumnText = function(i){return this.gridColumn[i]};
+    obj.getDataCount = function() {return this.gridData.length};
+    obj.getDataText = function(i, j){return this.gridData[i][j]};
+    obj.setDataText = function(value, i, j){this.gridData[i][j] = value};
+    obj.setRowHeaderWidth("20x");
+    obj.setColumnHeaderHeight("20px");
+    var defaultEventHandler = obj.getEvent("onkeydown");
+    var myEventHandler = function(event){
+        if(event.keyCode==13){ 
+            var callerWindowObj = dialogArguments;
+            var index =  obj.getSelectionProperty("index");
+            var fila = new Array(myColumns.length);
+                for (i=0; i<myColumns.length; i++){
+                    fila[i] = obj.getDataProperty("text", index, i);
+                }
+                callerWindowObj.<%=request.getParameter("insert")%>;
+            window.close();
+        }else if(event.keyCode==27)
+            parent.salir()
+        else{
+            defaultEventHandler.call(this, event);
+        }
+    } 
+        obj.setEvent("onkeydown", myEventHandler);
+        var row = new Active.Templates.Row;
+        row.setEvent("ondblclick", function(){this.action("myAction")});
+        obj.setTemplate("row", row);
+        obj.setAction("myAction", function(src){
+                var callerWindowObj = dialogArguments;
+                var index =  obj.getSelectionProperty("index");
+                var fila = new Array(myColumns.length);
+                    for (i=0; i<myColumns.length; i++){
+                        fila[i] = obj.getDataProperty("text", index, i);
+                    }
+
+            callerWindowObj.<%=request.getParameter("insert")%>;                                
+                window.close();
+        });
+        
+        var column0 = new Active.Templates.Text;
+        column0.setStyle("text-align","left");
+        obj.setTemplate("column", column0, 0);
+        var column1 = new Active.Templates.Text;
+        column1.setStyle("text-align", 'left');
+        obj.setTemplate("column", column1, 1);
+        document.write(obj);
+        if(myData.length>0){
+        var filx = obj.getRowProperty("values").length-1;
+        document.getElementById("obj.data.item:"+filx+".item:0").focus();
+        obj.setSelectionIndex(0);
+        }
+        //Empieza la paginación
+
+        valores();
+         var criterio = f.cboTipoBusqueda.value;
+         var valor    = f.txtBusqueda.value.toUpperCase();
+        //Llamada del Servlet
+        
+    function paginacion(direccion){
+        if(myData.length>0){
+            var pag = eval("<%=hid_pagina%>")+eval(direccion);
+            if(direccion == "-1"){
+            <%  if (!(ini + "").equals("0")) {%>
+                    parent.document.getElementById('hidepage').style.visibility = '';
+                    urlPeriodo = "<%=path%>/CL_C_Notarios_Servlet?criterio="+
+                    criterio+"&valor="+valor+"&hid_pagina="+pag;
+                    parent.window.document.ifrmBusqueda.location.replace(urlPeriodo);
+            <%  } else {%>
+                     alert(m_0060);
+            <%  }%>
+            }else{
+            <%  if (fin.equals("0")) {%> 
+                    parent.document.getElementById('hidepage').style.visibility = '';
+                    urlPeriodo = "<%=path%>/CL_C_Notarios_Servlet?criterio="+
+                    criterio+"&valor="+valor+"&hid_pagina="+pag;
+                    parent.window.document.ifrmBusqueda.location.replace(urlPeriodo);
+            <%  } else {%>
+                    alert(m_0061);
+            <%  }%>
+            }
+        } else {
+            return; 
+        }
+     }
+         
+        //Asignación de valores a las flechas de paginación
+         function valores(){
+         
+            var inicio = <%=Paginacion.getNumInicioActual(hid_paginaActual)%>;
+            var total = <%=totReg%>;
+            var final;
+            if(total><%=Paginacion.NUM_REG%>)
+                {
+                final = <%=Paginacion.getNumFinActual(hid_paginaActual)%>;
+                if(final > total)
+                    {
+                    final = total;
+                    }
+                }   
+                else{
+                    final=total;
+            } 
+            var ini = <%= session.getAttribute("total")%>;
+            
+           if( ini == 1 ) {
+                total  = 1;
+                final  = 1;
+            }
+         
+            if(myData.length>0){
+                parent.inicial.innerHTML = eval(inicio);
+                parent.final.innerHTML   = eval(final);
+                parent.total.innerHTML   = "de " + eval(total);
+            }else{
+                parent.inicial.innerHTML = "";
+                parent.final.innerHTML   = "";
+                parent.total.innerHTML   = "";
+            }
+         }
+        
+        
+</script>
+</body>
+</html>
diff --git a/DELFINWEBNEW/WebRoot/REPORTES/WFL0001.jasper b/DELFINWEBNEW/WebRoot/REPORTES/WFL0001.jasper
new file mode 100644
index 0000000..7658189
--- /dev/null
+++ b/DELFINWEBNEW/WebRoot/REPORTES/WFL0001.jasper
Binary files differ
diff --git a/DELFINWEBNEW/WebRoot/REPORTES/WFL0002.jasper b/DELFINWEBNEW/WebRoot/REPORTES/WFL0002.jasper
new file mode 100644
index 0000000..a471522
--- /dev/null
+++ b/DELFINWEBNEW/WebRoot/REPORTES/WFL0002.jasper
Binary files differ
diff --git a/DELFINWEBNEW/WebRoot/UTILS/Script/DELFIN-Utiles.js b/DELFINWEBNEW/WebRoot/UTILS/Script/DELFIN-Utiles.js
index bdb3a30..e06a66a 100644
--- a/DELFINWEBNEW/WebRoot/UTILS/Script/DELFIN-Utiles.js
+++ b/DELFINWEBNEW/WebRoot/UTILS/Script/DELFIN-Utiles.js
@@ -445,4 +445,31 @@
         }
     }
 }
-// Fin [Req. S16-041]
\ No newline at end of file
+// Fin [Req. S16-041]
+
+// Inicio [Req.S17-007] kdelacruz 27.03.2017
+function adjuntarFile(nombreCampo) {
+	var pagina = path + '/CB_T_File_Servlet?action=MOSTRAR_TMP&nombreCampo=' + nombreCampo;
+	window.showModalDialog(pagina, window,"dialogHeight:140px;dialogWidth:404px;center:yes;help:no;resizable:no;status:no");
+}
+function downloadFileTemporal(idFile) {
+	var form=document.createElement('FORM');
+	form.name='myFormFileTemporal';
+	form.method='POST';
+	document.body.appendChild(form);
+	
+	form.action= path + '/CB_T_File_Servlet?action=DESCARGAR_TMP&idFile=' + idFile;
+	form.target= '_blank';
+	form.submit();
+}
+function downloadFile(idFile) {
+	var form=document.createElement('FORM');
+	form.name='myFormFileTemporal';
+	form.method='POST';
+	document.body.appendChild(form);
+	
+	form.action= path + '/CB_T_File_Servlet?action=DESCARGAR&idFile=' + idFile;
+	form.target= '_blank';
+	form.submit();
+}
+//Fin [Req.S17-007]
\ No newline at end of file
diff --git a/DELFINWEBNEW/WebRoot/UTILS/Script/MsgValidacion.js b/DELFINWEBNEW/WebRoot/UTILS/Script/MsgValidacion.js
index 0a67faf..1b559ee 100644
--- a/DELFINWEBNEW/WebRoot/UTILS/Script/MsgValidacion.js
+++ b/DELFINWEBNEW/WebRoot/UTILS/Script/MsgValidacion.js
@@ -1429,6 +1429,10 @@
 var m_10112 = 'Fecha de Programación no puede ser vacío. Se debe realizar Programación primero.';
 var m_10113 = 'Fecha de Gestión debe ser mayor o igual a Fecha de Programación.';
 //Fin [CC17-026]
+//Inicio [Req.S17-007] kdelacruz 07.03.2017
+var m_10116 = 'Debe seleccionar un registro';
+var m_10120 = 'No se encuentra en la Etapa o no cuenta con Permisos';
+//Fin [Req.S17-007]
 
 function ayuda(){
   window.showModalDialog(f.path.value+"/GENERAL/Ayuda.jsp?nombre="+
diff --git a/DELFINWEBNEW/WebRoot/UTILS/file/CB_T_File_CHILD.jsp b/DELFINWEBNEW/WebRoot/UTILS/file/CB_T_File_CHILD.jsp
new file mode 100644
index 0000000..ab43907
--- /dev/null
+++ b/DELFINWEBNEW/WebRoot/UTILS/file/CB_T_File_CHILD.jsp
@@ -0,0 +1,168 @@
+<!-- CB_T_File_CHILD.jsp -->
+<%-- [Req.17-007] kdelacruz 06.03.2017 - Implementación WorkFlow Legal --%>
+
+<%@ taglib uri="/delfin" prefix="delfinTagHtml"%>
+<%@ taglib prefix="c" uri="http://java.sun.com/jstl/core"%>
+<%@ taglib prefix='fmt' uri='http://java.sun.com/jstl/fmt'%>
+
+<html>
+<head>
+    <META HTTP-EQUIV="Pragma" CONTENT="no-cache" />
+    <!-- Titulo del Módulo -->
+    <title>Adjuntar Archivo</title>
+    <!-- Invocación de Estilos -->
+    <link id="css" href="<%=request.getContextPath()%>/UTILS/css/DELFIN.css" rel="stylesheet" type="text/css">
+    <!-- Invocación de Java Scripts -->
+    <script src="<%=request.getContextPath()%>/UTILS/Script/MsgValidacion.js"></script>
+    <script src="<%=request.getContextPath()%>/UTILS/Script/DELFIN-Utiles.js"></script>
+
+  <script type="text/javascript">
+        var form;
+        var path = '<%=request.getContextPath()%>';
+        var operacionEnProceso = false;
+        
+        function onLoad(){
+            form = document.frmRegistro;
+            document.getElementById('hidepage').style.visibility = '';
+            mensajeRespuesta('<c:out value="${codigoError}" />', '<c:out value="${mensajeRespuesta}" />');
+            var vieneDeGuardar = '<c:out value="${requestScope.vieneDeGuardar}" />';
+            var nombreCampo = '<c:out value="${requestScope.nombreCampo}" />';
+            var idFile = '<c:out value="${requestScope.idFile}" />';
+            if(vieneDeGuardar=='S'){
+            	alert(m_8570);
+            	dialogArguments.insertarIdArchivo(nombreCampo, idFile);
+                salir();
+            }
+        }
+  
+        function guardar(){
+            if(!operacionEnProceso){
+                if(validar()){
+                    operacionEnProceso = true;
+                    document.getElementById('hidepage').style.visibility = '';
+                    form.submit();
+                }  
+            }else{
+                alert(m_0156);
+            }
+        }
+
+        function validar(){
+            if (form.txtFileTemporal.value == ""){
+                alert(m_9133);
+                return false;
+            }
+            
+            var str = form.txtFileTemporal.value.toUpperCase();
+            var extension = str.substring(str.lastIndexOf('.')+1);
+            return true;
+        }
+
+
+        function salir(){
+            window.close();
+        }
+        
+        function respuestaMultipartOK(){
+            alert(m_0021);
+            salir();
+        }
+        
+        document.onkeydown = keyDown;
+        function keyDown(DnEvents) {
+          k = window.event.keyCode;
+          if (k == 27) {
+            salir();
+            return false;
+          }
+        }
+        
+        function cancelClick(event){
+            event = event || window.event;
+            event.preventDefault ? event.preventDefault() : event.returnValue = false;
+        }
+
+  </script>
+</head>
+
+<body class="colorbody" onload="onLoad();">
+    <div id="hidepage" class="hidePage" style="left: 140px; top: 50px; width: 180; height: 25; display:none">
+        <img src="<%=request.getContextPath()%>/UTILS/img/loading.gif"><br/>
+        <center>Validando Formato . . .</center>
+    </div>
+  
+  <form id="frmRegistro" name="frmRegistro" method="post" target="ifrmHidden" enctype="multipart/form-data" action="<%=request.getContextPath()%>/CB_T_File_Servlet">
+      <input type="hidden" id="action" name="action" value="GUARDAR_TMP" />
+      <div id="wndHide" ></div>
+      <table cellpadding="0" cellspacing="0" width="100%">
+        <tr>
+          <td class="tituloopcion">
+            Adjuntar Archivo
+          </td>
+        </tr>
+        <tr>
+          <td height="4">
+            <img src="<%=request.getContextPath()%>/UTILS/img/t.gif" width="1" height="2">
+          </td>
+        </tr>
+      </table>
+      <table border="0" cellpadding="0" cellspacing="2" width="99.5%" align="center" >
+        <tr>
+          <td>
+            <table border="1" cellpadding="0" cellspacing="0" width="100%" align="center" class="frame">
+              <tr>
+                <td height="20" align="center">
+                  <table width="100%" cellpadding="0" cellspacing="0" border="0">
+                    <tr>
+                      <td align="left" colspan="4" valign="middle">
+                        <delfinTagHtml:boton nombre="BT_Grabar_P.gif" onclick="JavaScript:guardar();" />
+                        <delfinTagHtml:boton nombre="BT_Salir_P.gif" onclick="JavaScript:salir();" />
+                      </td>
+                    </tr>
+                  </table>
+                </td>
+              </tr>
+            </table>
+          </td>
+        </tr>
+        <tr>
+          <td height="4">
+            <img src="<%=request.getContextPath()%>/UTILS/img/t.gif" width="1" height="1">
+          </td>
+        </tr>
+        <tr>
+          <td>
+            <table border="2" cellpadding="0" cellspacing="0" width="100%" align="center" class="frame">
+              <tr>
+                <td height="20" align="center">
+                  <table width="99%" cellpadding="0" cellspacing="2" border="0">
+                    <tr>
+                      <td>
+                        <input type="hidden" name="nombreCampo" id="nombreCampo" value="<c:out value="${requestScope.nombreCampo}" />">
+                        <input type="file" id="txtFileTemporal" name="txtFileTemporal" class="campodisplayiz" onkeypress="alert('Debe usar el botón Examinar'); return false;" style="width:380px;height: 22px;" alt="Examinar"/>
+                      </td>
+                    </tr>
+                  </table>
+                </td>
+              </tr>
+            </table>
+          </td>
+        </tr>
+        <tr>
+          <td height="4">
+            <img src="<%=request.getContextPath()%>/UTILS/img/t.gif" width="1" height="2">
+          </td>
+        </tr>
+      </table>
+      <table cellpadding="0" cellspacing="0" align="center">
+        <tr>
+          <td height="10">
+            <img src="<%=request.getContextPath()%>/UTILS/img/t.gif" width="1" height="2">
+          </td>
+        </tr>
+      </table>
+  </form>
+  <iframe id="ifrmHidden" name="ifrmHidden" style="display: none"></iframe>
+</body>
+</html>
+
diff --git a/DELFINWEBNEW/WebRoot/UTILS/img/attachment.png b/DELFINWEBNEW/WebRoot/UTILS/img/attachment.png
new file mode 100644
index 0000000..83aa32c
--- /dev/null
+++ b/DELFINWEBNEW/WebRoot/UTILS/img/attachment.png
Binary files differ
diff --git a/DELFINWEBNEW/WebRoot/UTILS/img/download.png b/DELFINWEBNEW/WebRoot/UTILS/img/download.png
new file mode 100644
index 0000000..823e6b1
--- /dev/null
+++ b/DELFINWEBNEW/WebRoot/UTILS/img/download.png
Binary files differ
diff --git a/DELFINWEBNEW/WebRoot/UTILS/img/folder.png b/DELFINWEBNEW/WebRoot/UTILS/img/folder.png
new file mode 100644
index 0000000..df5c797
--- /dev/null
+++ b/DELFINWEBNEW/WebRoot/UTILS/img/folder.png
Binary files differ
diff --git a/DELFINWEBNEW/WebRoot/WEB-INF/web.xml b/DELFINWEBNEW/WebRoot/WEB-INF/web.xml
index f5e2f62..3df57bd 100644
--- a/DELFINWEBNEW/WebRoot/WEB-INF/web.xml
+++ b/DELFINWEBNEW/WebRoot/WEB-INF/web.xml
@@ -24461,4 +24461,164 @@
         <url-pattern>/CP_T_MantenimientoRepresentantesCuenta_Servlet</url-pattern>
     </servlet-mapping>
     <!-- Fin [Req.17-008] -->
+    <!-- Inicio [Req-S17-007] kdelacruz 07.03.2017 -->
+    <servlet>
+        <servlet-name>WF_C_Legal_Servlet</servlet-name>
+        <servlet-class>financ.workflow.legal.servlets.WF_C_Legal_Servlet</servlet-class>
+    </servlet>
+    <servlet-mapping>
+        <servlet-name>WF_C_Legal_Servlet</servlet-name>
+        <url-pattern>/WF_C_Legal_Servlet</url-pattern>
+    </servlet-mapping>
+
+    <servlet>
+        <servlet-name>WF_T_Maestra_Servlet</servlet-name>
+        <servlet-class>financ.workflow.servlets.WF_T_Maestra_Servlet</servlet-class>
+    </servlet>
+    <servlet-mapping>
+        <servlet-name>WF_T_Maestra_Servlet</servlet-name>
+        <url-pattern>/WF_T_Maestra_Servlet</url-pattern>
+    </servlet-mapping>
+    
+    <servlet>
+        <servlet-name>CR_C_CuentaCredito_Servlet</servlet-name>
+        <servlet-class>financ.creditos.cuentaCredito.servlets.CR_C_CuentaCredito_Servlet</servlet-class>
+    </servlet>
+    <servlet-mapping>
+        <servlet-name>CR_C_CuentaCredito_Servlet</servlet-name>
+        <url-pattern>/CR_C_CuentaCredito_Servlet</url-pattern>
+    </servlet-mapping>
+    <servlet>
+        <servlet-name>CB_T_File_Servlet</servlet-name>
+        <servlet-class>util.file.servlets.CB_T_File_Servlet</servlet-class>
+    </servlet>
+    <servlet-mapping>
+        <servlet-name>CB_T_File_Servlet</servlet-name>
+        <url-pattern>/CB_T_File_Servlet</url-pattern>
+    </servlet-mapping>
+    <servlet>
+        <servlet-name>WF_C_Documentos_Servlet</servlet-name>
+        <servlet-class>financ.workflow.servlets.WF_C_Documentos_Servlet</servlet-class>
+    </servlet>
+    <servlet-mapping>
+        <servlet-name>WF_C_Documentos_Servlet</servlet-name>
+        <url-pattern>/WF_C_Documentos_Servlet</url-pattern>
+    </servlet-mapping>
+    <servlet>
+        <servlet-name>WF_C_Movimientos_Servlet</servlet-name>
+        <servlet-class>financ.workflow.servlets.WF_C_Movimientos_Servlet</servlet-class>
+    </servlet>
+    <servlet-mapping>
+        <servlet-name>WF_C_Movimientos_Servlet</servlet-name>
+        <url-pattern>/WF_C_Movimientos_Servlet</url-pattern>
+    </servlet-mapping>
+    <servlet>
+        <servlet-name>CL_C_Notarios_Servlet</servlet-name>
+        <servlet-class>general.busquedas.CL_C_Notarios_Servlet</servlet-class>
+    </servlet>
+    <servlet-mapping>
+        <servlet-name>CL_C_Notarios_Servlet</servlet-name>
+        <url-pattern>/CL_C_Notarios_Servlet</url-pattern>
+    </servlet-mapping>
+    
+    <servlet>
+        <servlet-name>WF_C_TipoDocumento_Servlet</servlet-name>
+        <servlet-class>financ.workflow.servlets.WF_C_TipoDocumento_Servlet</servlet-class>
+    </servlet>
+    <servlet-mapping>
+        <servlet-name>WF_C_TipoDocumento_Servlet</servlet-name>
+        <url-pattern>/WF_C_TipoDocumento_Servlet</url-pattern>
+    </servlet-mapping>
+
+    <servlet>
+        <servlet-name>WF_T_Notaria_Servlet</servlet-name>
+        <servlet-class>financ.workflow.legal.servlets.WF_T_Notaria_Servlet</servlet-class>
+    </servlet>
+    <servlet-mapping>
+        <servlet-name>WF_T_Notaria_Servlet</servlet-name>
+        <url-pattern>/WF_T_Notaria_Servlet</url-pattern>
+    </servlet-mapping>
+    
+    <servlet>
+        <servlet-name>WF_T_SolicitudEstudioTitulo_Servlet</servlet-name>
+        <servlet-class>financ.workflow.legal.servlets.WF_T_SolicitudEstudioTitulo_Servlet</servlet-class>
+    </servlet>
+    <servlet-mapping>
+        <servlet-name>WF_T_SolicitudEstudioTitulo_Servlet</servlet-name>
+        <url-pattern>/WF_T_SolicitudEstudioTitulo_Servlet</url-pattern>
+    </servlet-mapping>
+    
+    <servlet>
+        <servlet-name>WF_T_GenericoComentario_Servlet</servlet-name>
+        <servlet-class>financ.workflow.legal.servlets.WF_T_GenericoComentario_Servlet</servlet-class>
+    </servlet>
+    <servlet-mapping>
+        <servlet-name>WF_T_GenericoComentario_Servlet</servlet-name>
+        <url-pattern>/WF_T_GenericoComentario_Servlet</url-pattern>
+    </servlet-mapping>
+    
+    <servlet>
+        <servlet-name>WF_T_GenericoDocumentoComentario_Servlet</servlet-name>
+        <servlet-class>financ.workflow.legal.servlets.WF_T_GenericoDocumentoComentario_Servlet</servlet-class>
+    </servlet>
+    <servlet-mapping>
+        <servlet-name>WF_T_GenericoDocumentoComentario_Servlet</servlet-name>
+        <url-pattern>/WF_T_GenericoDocumentoComentario_Servlet</url-pattern>
+    </servlet-mapping>
+    
+    <servlet>
+        <servlet-name>WF_T_GenericoFechaComentario_Servlet</servlet-name>
+        <servlet-class>financ.workflow.legal.servlets.WF_T_GenericoFechaComentario_Servlet</servlet-class>
+    </servlet>
+    <servlet-mapping>
+        <servlet-name>WF_T_GenericoFechaComentario_Servlet</servlet-name>
+        <url-pattern>/WF_T_GenericoFechaComentario_Servlet</url-pattern>
+    </servlet-mapping>
+    
+    <servlet>
+        <servlet-name>WF_T_InscripcionDefinitiva_Servlet</servlet-name>
+        <servlet-class>financ.workflow.legal.servlets.WF_T_InscripcionDefinitiva_Servlet</servlet-class>
+    </servlet>
+    <servlet-mapping>
+        <servlet-name>WF_T_InscripcionDefinitiva_Servlet</servlet-name>
+        <url-pattern>/WF_T_InscripcionDefinitiva_Servlet</url-pattern>
+    </servlet-mapping>
+    
+    <servlet>
+        <servlet-name>WF_T_BloqueoRegistral_Servlet</servlet-name>
+        <servlet-class>financ.workflow.legal.servlets.WF_T_BloqueoRegistral_Servlet</servlet-class>
+    </servlet>
+    <servlet-mapping>
+        <servlet-name>WF_T_BloqueoRegistral_Servlet</servlet-name>
+        <url-pattern>/WF_T_BloqueoRegistral_Servlet</url-pattern>
+    </servlet-mapping>
+    
+    <servlet>
+        <servlet-name>WF_T_RevisionDocumentos_Servlet</servlet-name>
+        <servlet-class>financ.workflow.legal.servlets.WF_T_RevisionDocumentos_Servlet</servlet-class>
+    </servlet>
+    <servlet-mapping>
+        <servlet-name>WF_T_RevisionDocumentos_Servlet</servlet-name>
+        <url-pattern>/WF_T_RevisionDocumentos_Servlet</url-pattern>
+    </servlet-mapping>
+    
+    <servlet>
+        <servlet-name>WF_T_TomaFirma_Servlet</servlet-name>
+        <servlet-class>financ.workflow.legal.servlets.WF_T_TomaFirma_Servlet</servlet-class>
+    </servlet>
+    <servlet-mapping>
+        <servlet-name>WF_T_TomaFirma_Servlet</servlet-name>
+        <url-pattern>/WF_T_TomaFirma_Servlet</url-pattern>
+    </servlet-mapping>
+    
+    <servlet>
+        <servlet-name>WF_T_EscrituraPublica_Servlet</servlet-name>
+        <servlet-class>financ.workflow.legal.servlets.WF_T_EscrituraPublica_Servlet</servlet-class>
+    </servlet>
+    <servlet-mapping>
+        <servlet-name>WF_T_EscrituraPublica_Servlet</servlet-name>
+        <url-pattern>/WF_T_EscrituraPublica_Servlet</url-pattern>
+    </servlet-mapping>
+    
+    <!-- Fin [Req.S17-007] -->"
 </web-app>
\ No newline at end of file
diff --git a/DELFINWEBNEW/src/financ/creditos/cuentaCredito/servlets/CR_C_CuentaCredito_Servlet.java b/DELFINWEBNEW/src/financ/creditos/cuentaCredito/servlets/CR_C_CuentaCredito_Servlet.java
new file mode 100644
index 0000000..543d880
--- /dev/null
+++ b/DELFINWEBNEW/src/financ/creditos/cuentaCredito/servlets/CR_C_CuentaCredito_Servlet.java
@@ -0,0 +1,109 @@
+package financ.creditos.cuentaCredito.servlets;
+
+import financ.creditos.beans.BeanObtenerSolicitud;
+import financ.creditos.facade.CRCuentaCreditoExternoFacade;
+import financ.creditos.facade.CRSolicitudCreditosFacade;
+import financ.creditos.local.CRCuentaCreditoExternoFacadeInterfaceLocal;
+import financ.creditos.local.CRSolicitudCreditosFacadeInterfaceLocal;
+import financ.util.Constante;
+import financ.util.FormatoNumero;
+import general.servlets.GE_BaseMethodInvocation_Servlet;
+
+import java.util.List;
+import java.util.Map;
+
+import pe.com.tfc.utils.RequestMapping;
+import pe.com.tfc.utils.ResponseType;
+import admin.contab.beans.BeanParametrosAuditoria;
+
+/**
+ * CR_C_CuentaCredito_Servlet
+ * 
+ * @author kdelacruz
+ * @since [Req.17-007] 06.03.2017 Implementación WorkFlow Legal
+ */
+
+public class CR_C_CuentaCredito_Servlet extends GE_BaseMethodInvocation_Servlet {
+
+    private static final long serialVersionUID = 7100106152081379661L;
+    private static final String PATH_CUENTA_CREDITO = "/FINANCIERO/creditos/cuentaCredito/";
+    private static final String URL_MOSTRAR_CONTENEDOR = PATH_CUENTA_CREDITO + "CR_C_CuentaCredito_CNTR.jsp";
+    private static final String URL_MOSTRAR_TABLA = PATH_CUENTA_CREDITO + "CR_C_CuentaCredito_TABLA.jsp";
+
+    private CRSolicitudCreditosFacadeInterfaceLocal crSolicitudCreditosFacadeInterfaceLocal;
+    private CRCuentaCreditoExternoFacadeInterfaceLocal crCuentaCreditoExternoFacadeInterfaceLocal;
+
+    protected void initEJBs() throws Exception {
+        crSolicitudCreditosFacadeInterfaceLocal = lookup(CRSolicitudCreditosFacade.LocalJNDIName);
+        crCuentaCreditoExternoFacadeInterfaceLocal = lookup(CRCuentaCreditoExternoFacade.LocalJNDIName);
+    }
+
+    protected void execute(ServletParams servletParams) throws Exception {
+
+    }
+
+    @RequestMapping(value = "MOSTRAR", url = URL_MOSTRAR_CONTENEDOR)
+    protected void consultarClienteHandler(ServletParams servletParams) throws Exception {
+        String codigoPersona = getParameter(servletParams, "codigoPersona");
+
+        setRequestAttribute(servletParams, "codigoPersona", codigoPersona);
+        forward(servletParams);
+    }
+
+    @RequestMapping(value = "MOSTRAR_DETALLE", url = URL_MOSTRAR_TABLA)
+    protected void consultarClienteDetalleHandler(ServletParams servletParams) throws Exception {
+        String codigoPersona = getParameter(servletParams, "codigoPersona");
+        String tipoOperacion = getParameter(servletParams, "tipoOperacion");
+        List<BeanObtenerSolicitud> lstBeanObtenerSolicituds = null;
+        BeanObtenerSolicitud beanObtenerSolicitud = new BeanObtenerSolicitud();
+
+        BeanParametrosAuditoria beanParametrosAuditoria = getBeanParametrosAuditoria(servletParams);
+
+        if (_equiv(tipoOperacion, Constante.TIPO_OPERACION_EXTERNA)) {
+            Map<String, Object> mapRespuesta = crCuentaCreditoExternoFacadeInterfaceLocal.buscarSolicitudesCreditoExternos(codigoPersona,
+                                                                                                                           0,
+                                                                                                                           beanParametrosAuditoria);
+            lstBeanObtenerSolicituds = (List<BeanObtenerSolicitud>) mapRespuesta.get("listBeanObtenerSolicitud");
+        } else {
+            lstBeanObtenerSolicituds = crSolicitudCreditosFacadeInterfaceLocal.findByCodigoPersona(codigoPersona,
+                                                                                                   beanParametrosAuditoria);
+        }
+
+        String myData = getMyData(lstBeanObtenerSolicituds,
+                                  "numeroSolicitud",
+                                  "codigoProducto",
+                                  "productoNombre",
+                                  "codigoMonedaAprobado",
+                                  "monedaDescripcion",
+                                  "montoSolicitado",
+                                  "estadoSolicitud",
+                                  "codigoAnalistaResponsable",
+                                  "tipoOperacion");
+
+        setRequestAttribute(servletParams, "myData", myData);
+        forward(servletParams);
+    }
+
+    @RequestMapping(value = "CONSULTAR_SOLICITUD_CREDITO_EXTERNO", responseType = ResponseType.XML)
+    protected void consultarSolicitudCreditoExterno(final ServletParams servletParams) throws Exception {
+        BeanParametrosAuditoria beanParametrosAuditoria = getBeanParametrosAuditoria(servletParams);
+        final String numeroSolicitud = getParameter(servletParams, "numeroSolicitud");
+
+        BeanObtenerSolicitud beanObtenerSolicitud = new BeanObtenerSolicitud();
+        beanObtenerSolicitud = crSolicitudCreditosFacadeInterfaceLocal.buscarSolicitudCreditoExterno(numeroSolicitud,
+                                                                                                     beanParametrosAuditoria);
+
+        final StringBuilder sbRespuesta = new StringBuilder();
+        sbRespuesta.append("<codigoPersona>" + beanObtenerSolicitud.getCodigoPersona() + "</codigoPersona>");
+        sbRespuesta.append("<nombreRazonSocial>" + beanObtenerSolicitud.getNombreRazonSocial() + "</nombreRazonSocial>");
+        sbRespuesta.append("<codigoProducto>" + beanObtenerSolicitud.getCodigoProducto() + "</codigoProducto>");
+        sbRespuesta.append("<productoNombre>" + beanObtenerSolicitud.getProductoNombre() + "</productoNombre>");
+        sbRespuesta.append("<montoSolicitado>" + FormatoNumero.formatoImpresionDecimal(beanObtenerSolicitud.getMontoSolicitado(), 2) + "</montoSolicitado>");
+        sbRespuesta.append("<codigoAnalistaResponsable>" + beanObtenerSolicitud.getCodigoAnalistaResponsable() + "</codigoAnalistaResponsable>");
+        sbRespuesta.append("<codigoTipoBien>" + beanObtenerSolicitud.getCodigoTipoBien() + "</codigoTipoBien>");
+        sbRespuesta.append("<descripcionAgencia>" + beanObtenerSolicitud.getDescripcionAgencia() + "</descripcionAgencia>");
+        sbRespuesta.append("<codigoError>" + NO_ERROR + "</codigoError>");
+        responseXML(servletParams, sbRespuesta.toString());
+    }
+
+}
diff --git a/DELFINWEBNEW/src/financ/workflow/legal/servlets/WF_C_Legal_Servlet.java b/DELFINWEBNEW/src/financ/workflow/legal/servlets/WF_C_Legal_Servlet.java
new file mode 100644
index 0000000..b10234a
--- /dev/null
+++ b/DELFINWEBNEW/src/financ/workflow/legal/servlets/WF_C_Legal_Servlet.java
@@ -0,0 +1,158 @@
+package financ.workflow.legal.servlets;
+
+import financ.util.Constante;
+import financ.workflow.bean.BeanWFEstado;
+import financ.workflow.bean.BeanWFEtapa;
+import financ.workflow.bean.BeanWFMaestra;
+import financ.workflow.facade.WFEstadoFacade;
+import financ.workflow.facade.WFEtapaFacade;
+import financ.workflow.facade.WFMaestraFacade;
+import financ.workflow.local.WFEstadoFacadeInterfaceLocal;
+import financ.workflow.local.WFEtapaFacadeInterfaceLocal;
+import financ.workflow.local.WFMaestraFacadeInterfaceLocal;
+import general.servlets.GE_BaseMethodInvocation_Servlet;
+
+import java.util.ArrayList;
+import java.util.Arrays;
+import java.util.List;
+import java.util.Map;
+
+import pe.com.tfc.utils.RequestMapping;
+import pe.com.tfc.utils.ResponseType;
+import admin.contab.beans.BeanParametrosAuditoria;
+
+/**
+ * WF_C_Maestro_Servlet
+ * 
+ * @author kdelacruz
+ * @since [Req.17-007] 06.03.2017 Implementación WorkFlow Legal
+ */
+
+public class WF_C_Legal_Servlet extends GE_BaseMethodInvocation_Servlet {
+
+    private static final long serialVersionUID = 1L;
+    private static final String URL_CONTENEDOR_DETALLE = Constante.RUTA_WORKFLOW + "WF_C_Maestra_CNTR.jsp";
+    private static final String URL_TABLA_DETALLE = Constante.RUTA_WORKFLOW + "WF_C_Maestra_TABLA.jsp";
+    private static final String URL_ASIGNAR_SOLICITUD = Constante.RUTA_WORKFLOW + "legal/asignacion/WF_T_AsignarSolicitud_CHILD.jsp";
+
+    private WFMaestraFacadeInterfaceLocal wfMaestraFacadeInterfaceLocal;
+    private WFEstadoFacadeInterfaceLocal wfEstadoFacadeInterfaceLocal;
+    private WFEtapaFacadeInterfaceLocal wfEtapaFacadeInterfaceLocal;
+
+    protected void initEJBs() throws Exception {
+        wfMaestraFacadeInterfaceLocal = lookup(WFMaestraFacade.LocalJNDIName);
+        wfEstadoFacadeInterfaceLocal = lookup(WFEstadoFacade.LocalJNDIName);
+        wfEtapaFacadeInterfaceLocal = lookup(WFEtapaFacade.LocalJNDIName);
+    }
+
+    @Override
+    protected void execute(ServletParams servletParams) throws Exception {
+    }
+
+    @RequestMapping(value = "MOSTRAR_DETALLE", responseType = ResponseType.HTML, url = URL_CONTENEDOR_DETALLE)
+    protected void mostrarDetalle(final ServletParams servletParams) throws Exception {
+        BeanParametrosAuditoria beanParametrosAuditoria = getBeanParametrosAuditoria(servletParams);
+        String idModulo = getParameter(servletParams, "idModulo");
+
+        List<BeanWFEstado> listBeanWFEstado = wfEstadoFacadeInterfaceLocal.listarCboEstado(idModulo, beanParametrosAuditoria);
+
+        List<BeanWFEtapa> listBeanWFEtapa = wfEtapaFacadeInterfaceLocal.listarTodasEtapa(beanParametrosAuditoria);
+
+        setRequestAttribute(servletParams, "listBeanWFEtapa", listBeanWFEtapa);
+        setRequestAttribute(servletParams, "listBeanWFEstado", listBeanWFEstado);
+        setRequestAttribute(servletParams, "idModulo", idModulo);
+        forward(servletParams);
+    }
+
+    @RequestMapping(value = "CARGAR_DETALLE", responseType = ResponseType.HTML, url = URL_TABLA_DETALLE)
+    protected void cargarDetalle(ServletParams servletParams) throws Exception {
+        String codCliente = getParameter(servletParams, "codCliente");
+        String fechaSolicitud = getParameter(servletParams, "fechaSolicitud");
+        String estadoSolicitud = getParameter(servletParams, "cboEstado");
+        String idModulo = getParameter(servletParams, "idModulo");
+        String usuarioSolicitante = getParameter(servletParams, "usuarioSolicitante");
+        String etapaSolicitud = getParameter(servletParams, "cboEtapa");
+        String usuarioLegal = getParameter(servletParams, "usuarioLegal");
+
+        // Indica si es el final
+        String fin = "0";
+        // Cantidad de registros por Pág. y Página actual
+        String strCanPag = getSessionAttribute(servletParams, "paginacion", String.class, "50");
+        String strPagina = getParameter(servletParams, "hid_pagina", "1");
+
+        int cantReg = _toInteger(strCanPag);
+        int intPagina = _toInteger(strPagina);
+
+        // Posiciones inicial y final
+        int pos_ini = (intPagina - 1) * cantReg;
+        int pos_fin = intPagina * cantReg;
+        Long totalRegistros = new Long(0);
+
+        BeanParametrosAuditoria beanParametrosAuditoria = getBeanParametrosAuditoria(servletParams);
+
+        Map<String, Object> mapRespuesta = wfMaestraFacadeInterfaceLocal.buscarDetalleLegal(codCliente,
+                                                                                            fechaSolicitud,
+                                                                                            estadoSolicitud,
+                                                                                            usuarioSolicitante,
+                                                                                            etapaSolicitud,
+                                                                                            usuarioLegal,
+                                                                                            intPagina,
+                                                                                            beanParametrosAuditoria);
+
+        List<BeanWFMaestra> listbeanWFMaestra = (List<BeanWFMaestra>) mapRespuesta.get("listbeanWFMaestra");
+        totalRegistros = (Long) mapRespuesta.get("cantReg");
+        String myData = "";
+        if (!_isEmpty(listbeanWFMaestra)) {
+            myData = getMyData(listbeanWFMaestra,
+                               false,
+                               "",
+                               "idMaestra",
+                               "numeroOperacion",
+                               "nombreCliente",
+                               "tipoCredito",
+                               "idEstado",
+                               "descripcionEstado",
+                               "idEtapa",
+                               "descripcionEtapa",
+                               "usuarioSolicitante",
+                               "usuarioAtiende");
+        }
+
+        if (pos_fin + 1 > totalRegistros) {
+            fin = "1";
+            pos_fin = totalRegistros.intValue();
+        }
+
+        setRequestAttribute(servletParams, "hid_paginaActual", strPagina);
+        setRequestAttribute(servletParams, "myData", myData);
+        setRequestAttribute(servletParams, "inicio", _toStr(pos_ini));
+        setRequestAttribute(servletParams, "fin", _toStr(pos_fin));
+        setRequestAttribute(servletParams, "indFin", fin);
+        setRequestAttribute(servletParams, "total", _toStr(totalRegistros));
+        setRequestAttribute(servletParams, "idModulo", idModulo);
+        forward(servletParams);
+    }
+
+    @RequestMapping(value = "ASIGNAR_SOLICITUD", responseType = ResponseType.HTML, url = URL_ASIGNAR_SOLICITUD)
+    protected void asignarSolicitud(final ServletParams servletParams) throws Exception {
+
+        forward(servletParams);
+    }
+
+    @RequestMapping(value = "GRABAR_ASIGNACION", responseType = ResponseType.XML)
+    protected void grabarAsignacion(final ServletParams servletParams) throws Exception {
+        final String codigoFuncionario = getParameter(servletParams, "codigoFuncionario");
+        final String cadenaSeleccionadosIdsWorkflowUsuarioLegal = getParameter(servletParams,
+                                                                               "cadenaSeleccionadosIdsWorkflowUsuarioLegal");
+
+        final String[] vIdsWorkflowUsuarioLegalSeleccionados = cadenaSeleccionadosIdsWorkflowUsuarioLegal.split("-");
+
+        wfMaestraFacadeInterfaceLocal.grabarAsignarSolicitud(codigoFuncionario,
+                                                             Arrays.asList(vIdsWorkflowUsuarioLegalSeleccionados),
+                                                             getBeanParametrosAuditoria(servletParams));
+
+        final StringBuilder sbRespuesta = new StringBuilder();
+        sbRespuesta.append("<codigoError>" + NO_ERROR + "</codigoError>");
+        responseXML(servletParams, sbRespuesta.toString());
+    }
+}
diff --git a/DELFINWEBNEW/src/financ/workflow/legal/servlets/WF_T_BloqueoRegistral_Servlet.java b/DELFINWEBNEW/src/financ/workflow/legal/servlets/WF_T_BloqueoRegistral_Servlet.java
new file mode 100644
index 0000000..e7c5ef8
--- /dev/null
+++ b/DELFINWEBNEW/src/financ/workflow/legal/servlets/WF_T_BloqueoRegistral_Servlet.java
@@ -0,0 +1,134 @@
+package financ.workflow.legal.servlets;
+
+import financ.util.Constante;
+import financ.workflow.bean.BeanWFDetalleComentario;
+import financ.workflow.bean.BeanWFDocumentos;
+import financ.workflow.bean.BeanWFLegal;
+import financ.workflow.bean.BeanWFMaestra;
+import financ.workflow.bean.BeanWFTipoDocumento;
+import financ.workflow.facade.WFDetalleComentarioFacade;
+import financ.workflow.facade.WFDocumentoPorEtapaFacade;
+import financ.workflow.facade.WFDocumentosFacade;
+import financ.workflow.facade.WFEtapaFacade;
+import financ.workflow.facade.WFLegalFacade;
+import financ.workflow.facade.WFMaestraFacade;
+import financ.workflow.local.WFDetalleComentarioFacadeInterfaceLocal;
+import financ.workflow.local.WFDocumentoPorEtapaFacadeInterfaceLocal;
+import financ.workflow.local.WFDocumentosFacadeInterfaceLocal;
+import financ.workflow.local.WFEtapaFacadeInterfaceLocal;
+import financ.workflow.local.WFLegalFacadeInterfaceLocal;
+import financ.workflow.local.WFMaestraFacadeInterfaceLocal;
+import general.servlets.GE_BaseMethodInvocation_Servlet;
+
+import java.util.List;
+
+import pe.com.tfc.utils.ErrorControladoException;
+import pe.com.tfc.utils.RequestMapping;
+import pe.com.tfc.utils.ResponseType;
+import admin.contab.beans.BeanParametrosAuditoria;
+import admin.util.ConstantesErrores;
+
+/**
+ * WF_T_BloqueoRegistral_Servlet
+ * 
+ * @author kdelacruz
+ * @since [Req.17-007] 06.03.2017 Implementación WorkFlow Legal
+ */
+
+public class WF_T_BloqueoRegistral_Servlet extends GE_BaseMethodInvocation_Servlet {
+
+    /**
+     * 
+     */
+    private static final long serialVersionUID = -8637921303056588610L;
+    private static final String URL_TAB_BLOQUEO_REGISTRAL = Constante.RUTA_WORKFLOW + "legal/etapa/WF_T_BloqueoRegistral_CHILD.jsp";
+    private WFDocumentosFacadeInterfaceLocal wfDocumentosFacadeInterfaceLocal;
+    private WFLegalFacadeInterfaceLocal wfLegalFacadeInterfaceLocal;
+    private WFDetalleComentarioFacadeInterfaceLocal wfDetalleComentarioFacadeInterfaceLocal;
+    private WFEtapaFacadeInterfaceLocal wfEtapaFacadeInterfaceLocal;
+    private WFMaestraFacadeInterfaceLocal wfMaestraFacadeInterfaceLocal;
+
+    protected void initEJBs() throws Exception {
+        wfDocumentosFacadeInterfaceLocal = lookup(WFDocumentosFacade.LocalJNDIName);
+        wfLegalFacadeInterfaceLocal = lookup(WFLegalFacade.LocalJNDIName);
+        wfDetalleComentarioFacadeInterfaceLocal = lookup(WFDetalleComentarioFacade.LocalJNDIName);
+        wfEtapaFacadeInterfaceLocal = lookup(WFEtapaFacade.LocalJNDIName);
+        wfMaestraFacadeInterfaceLocal = lookup(WFMaestraFacade.LocalJNDIName);
+    }
+
+    @Override
+    protected void execute(ServletParams servletParams) throws Exception {
+        // TODO Auto-generated method stub
+
+    }
+
+    @RequestMapping(value = "MOSTRAR_DETALLE", responseType = ResponseType.HTML, url = URL_TAB_BLOQUEO_REGISTRAL)
+    protected void mostrarDetalle(final ServletParams servletParams) throws Exception {
+        BeanParametrosAuditoria beanParametrosAuditoria = getBeanParametrosAuditoria(servletParams);
+        String idEtapa = getParameter(servletParams, "idEtapa");
+        String idMaestra = getParameter(servletParams, "idMaestra");
+
+        BeanWFDetalleComentario beanWFDetalleComentario = wfDetalleComentarioFacadeInterfaceLocal.get(idMaestra,
+                                                                                                      idEtapa,
+                                                                                                      beanParametrosAuditoria);
+
+        String comportamiento = wfEtapaFacadeInterfaceLocal.validarEtapaEdicion(idMaestra,
+                                                                                idEtapa,
+                                                                                beanParametrosAuditoria);
+
+        BeanWFLegal beanWFLegal = wfLegalFacadeInterfaceLocal.get(idMaestra, beanParametrosAuditoria);
+
+        setRequestAttribute(servletParams, "beanWFDetalleComentario", beanWFDetalleComentario);
+        setRequestAttribute(servletParams, "beanWFLegal", beanWFLegal);
+        setRequestAttribute(servletParams, "idEtapa", idEtapa);
+        setRequestAttribute(servletParams, "strComportamiento", comportamiento);
+        forward(servletParams);
+    }
+
+    @RequestMapping(value = "ENVIAR", responseType = ResponseType.XML)
+    protected void enviar(final ServletParams servletParams) throws Exception {
+        BeanParametrosAuditoria beanParametrosAuditoria = getBeanParametrosAuditoria(servletParams);
+        BeanWFMaestra beanWFMaestra = mapearBean(servletParams, BeanWFMaestra.class);
+        BeanWFLegal beanWFLegal = mapearBean(servletParams, BeanWFLegal.class);
+        String idEvento = getParameter(servletParams, "idEvento");
+        String textoComentario = getParameter(servletParams, "textoComentario");
+        String lista = getParameter(servletParams, "lista");
+
+        BeanWFLegal beanWFLegal2 = wfLegalFacadeInterfaceLocal.get(beanWFMaestra.getIdMaestra(),
+                                                                   beanParametrosAuditoria);
+        if (_isEmpty(beanWFLegal2.getNumeroKardex())) {
+            throw new ErrorControladoException(ConstantesErrores.ERROR_11163);
+        }
+
+        if (validarEtapaUsuario(beanWFMaestra.getIdMaestra(), beanWFMaestra.getIdEtapa(), beanParametrosAuditoria)) {
+            throw new ErrorControladoException(ConstantesErrores.ERROR_11162);
+        }
+
+        List<BeanWFDocumentos> lstBeanWFDocumentos = wfDocumentosFacadeInterfaceLocal.mapear(lista);
+
+        wfLegalFacadeInterfaceLocal.enviaBloqueRegistral(beanWFMaestra,
+                                                         beanWFLegal,
+                                                         idEvento,
+                                                         textoComentario,
+                                                         lstBeanWFDocumentos,
+                                                         beanParametrosAuditoria);
+
+        final StringBuilder sbRespuesta = new StringBuilder();
+        sbRespuesta.append("<codigoError>" + NO_ERROR + "</codigoError>");
+        responseXML(servletParams, sbRespuesta.toString());
+    }
+
+    private boolean validarEtapaUsuario(String idMaestra,
+                                        String idEtapa,
+                                        BeanParametrosAuditoria beanParametrosAuditoria) throws Exception {
+        BeanWFMaestra beanWFMaestra = new BeanWFMaestra();
+        Boolean validar = false;
+
+        beanWFMaestra = wfMaestraFacadeInterfaceLocal.consultarMaestra(idMaestra, beanParametrosAuditoria);
+        if (!_equiv(beanWFMaestra.getUsuarioAtiende(), beanParametrosAuditoria.getUsuarioInsercion())) {
+            throw new ErrorControladoException(ConstantesErrores.ERROR_11162);
+        }
+
+        return validar;
+    }
+}
diff --git a/DELFINWEBNEW/src/financ/workflow/legal/servlets/WF_T_EscrituraPublica_Servlet.java b/DELFINWEBNEW/src/financ/workflow/legal/servlets/WF_T_EscrituraPublica_Servlet.java
new file mode 100644
index 0000000..b9aae93
--- /dev/null
+++ b/DELFINWEBNEW/src/financ/workflow/legal/servlets/WF_T_EscrituraPublica_Servlet.java
@@ -0,0 +1,110 @@
+package financ.workflow.legal.servlets;
+
+import financ.util.Constante;
+import financ.workflow.bean.BeanWFDetalleComentario;
+import financ.workflow.bean.BeanWFLegal;
+import financ.workflow.bean.BeanWFMaestra;
+import financ.workflow.facade.WFDetalleComentarioFacade;
+import financ.workflow.facade.WFEtapaFacade;
+import financ.workflow.facade.WFLegalFacade;
+import financ.workflow.facade.WFMaestraFacade;
+import financ.workflow.local.WFDetalleComentarioFacadeInterfaceLocal;
+import financ.workflow.local.WFEtapaFacadeInterfaceLocal;
+import financ.workflow.local.WFLegalFacadeInterfaceLocal;
+import financ.workflow.local.WFMaestraFacadeInterfaceLocal;
+import general.servlets.GE_BaseMethodInvocation_Servlet;
+import pe.com.tfc.utils.ErrorControladoException;
+import pe.com.tfc.utils.RequestMapping;
+import pe.com.tfc.utils.ResponseType;
+import admin.contab.beans.BeanParametrosAuditoria;
+import admin.util.ConstantesErrores;
+
+/**
+ * WF_T_EscrituraPublica_Servlet
+ * 
+ * @author kdelacruz
+ * @since [Req.17-007] 06.03.2017 Implementación WorkFlow Legal
+ */
+
+public class WF_T_EscrituraPublica_Servlet extends GE_BaseMethodInvocation_Servlet {
+
+    /**
+     * 
+     */
+    private static final long serialVersionUID = -8637921303056588610L;
+    private static final String URL_TAB_ESCRITURA_PUBLICA = Constante.RUTA_WORKFLOW + "legal/etapa/WF_T_EscrituraPublica_CHILD.jsp";
+    private WFLegalFacadeInterfaceLocal wfLegalFacadeInterfaceLocal;
+    private WFDetalleComentarioFacadeInterfaceLocal wfDetalleComentarioFacadeInterfaceLocal;
+    private WFEtapaFacadeInterfaceLocal wfEtapaFacadeInterfaceLocal;
+    private WFMaestraFacadeInterfaceLocal wfMaestraFacadeInterfaceLocal;
+
+    protected void initEJBs() throws Exception {
+        wfLegalFacadeInterfaceLocal = lookup(WFLegalFacade.LocalJNDIName);
+        wfDetalleComentarioFacadeInterfaceLocal = lookup(WFDetalleComentarioFacade.LocalJNDIName);
+        wfEtapaFacadeInterfaceLocal = lookup(WFEtapaFacade.LocalJNDIName);
+        wfMaestraFacadeInterfaceLocal = lookup(WFMaestraFacade.LocalJNDIName);
+    }
+
+    @Override
+    protected void execute(ServletParams servletParams) throws Exception {
+    }
+
+    @RequestMapping(value = "MOSTRAR_DETALLE", responseType = ResponseType.HTML, url = URL_TAB_ESCRITURA_PUBLICA)
+    protected void mostrarDetalleDescarga(final ServletParams servletParams) throws Exception {
+        BeanParametrosAuditoria beanParametrosAuditoria = getBeanParametrosAuditoria(servletParams);
+        String idEtapa = getParameter(servletParams, "idEtapa");
+        String idMaestra = getParameter(servletParams, "idMaestra");
+
+        BeanWFLegal beanWFLegal = wfLegalFacadeInterfaceLocal.get(idMaestra, beanParametrosAuditoria);
+
+        BeanWFDetalleComentario beanWFDetalleComentario = wfDetalleComentarioFacadeInterfaceLocal.get(idMaestra,
+                                                                                                      idEtapa,
+                                                                                                      beanParametrosAuditoria);
+
+        String comportamiento = wfEtapaFacadeInterfaceLocal.validarEtapaEdicion(idMaestra,
+                                                                                idEtapa,
+                                                                                beanParametrosAuditoria);
+        setRequestAttribute(servletParams, "beanWFLegal", beanWFLegal);
+        setRequestAttribute(servletParams, "beanWFDetalleComentario", beanWFDetalleComentario);
+        setRequestAttribute(servletParams, "idEtapa", idEtapa);
+        setRequestAttribute(servletParams, "strComportamiento", comportamiento);
+        forward(servletParams);
+    }
+
+    @RequestMapping(value = "ENVIAR_ESCRITURA_PUBLICA", responseType = ResponseType.XML)
+    protected void enviarEscrituraPublica(final ServletParams servletParams) throws Exception {
+        BeanParametrosAuditoria beanParametrosAuditoria = getBeanParametrosAuditoria(servletParams);
+        BeanWFMaestra beanWFMaestra = mapearBean(servletParams, BeanWFMaestra.class);
+        BeanWFLegal beanWFLegal = mapearBean(servletParams, BeanWFLegal.class);
+        String idEvento = getParameter(servletParams, "idEvento");
+        String comentario = getParameter(servletParams, "comentario");
+
+        if (validarEtapaUsuario(beanWFMaestra.getIdMaestra(), beanWFMaestra.getIdEtapa(), beanParametrosAuditoria)) {
+            throw new ErrorControladoException(ConstantesErrores.ERROR_11162);
+        }
+
+        wfLegalFacadeInterfaceLocal.enviarEscrituraPublica(beanWFMaestra,
+                                                           beanWFLegal,
+                                                           idEvento,
+                                                           comentario,
+                                                           beanParametrosAuditoria);
+
+        final StringBuilder sbRespuesta = new StringBuilder();
+        sbRespuesta.append("<codigoError>" + NO_ERROR + "</codigoError>");
+        responseXML(servletParams, sbRespuesta.toString());
+    }
+
+    private boolean validarEtapaUsuario(String idMaestra,
+                                        String idEtapa,
+                                        BeanParametrosAuditoria beanParametrosAuditoria) throws Exception {
+        BeanWFMaestra beanWFMaestra = new BeanWFMaestra();
+        Boolean validar = false;
+
+        beanWFMaestra = wfMaestraFacadeInterfaceLocal.consultarMaestra(idMaestra, beanParametrosAuditoria);
+        if (!_equiv(beanWFMaestra.getUsuarioAtiende(), beanParametrosAuditoria.getUsuarioInsercion())) {
+            throw new ErrorControladoException(ConstantesErrores.ERROR_11162);
+        }
+
+        return validar;
+    }
+}
diff --git a/DELFINWEBNEW/src/financ/workflow/legal/servlets/WF_T_GenericoDocumentoComentario_Servlet.java b/DELFINWEBNEW/src/financ/workflow/legal/servlets/WF_T_GenericoDocumentoComentario_Servlet.java
new file mode 100644
index 0000000..db42237
--- /dev/null
+++ b/DELFINWEBNEW/src/financ/workflow/legal/servlets/WF_T_GenericoDocumentoComentario_Servlet.java
@@ -0,0 +1,148 @@
+package financ.workflow.legal.servlets;
+
+import financ.util.Constante;
+import financ.workflow.bean.BeanWFDetalleComentario;
+import financ.workflow.bean.BeanWFDocumentos;
+import financ.workflow.bean.BeanWFMaestra;
+import financ.workflow.bean.BeanWFRuta;
+import financ.workflow.bean.BeanWFTipoDocumento;
+import financ.workflow.facade.WFDetalleComentarioFacade;
+import financ.workflow.facade.WFDocumentoPorEtapaFacade;
+import financ.workflow.facade.WFDocumentosFacade;
+import financ.workflow.facade.WFEtapaFacade;
+import financ.workflow.facade.WFLegalFacade;
+import financ.workflow.facade.WFMaestraFacade;
+import financ.workflow.facade.WFRutaFacade;
+import financ.workflow.local.WFDetalleComentarioFacadeInterfaceLocal;
+import financ.workflow.local.WFDocumentoPorEtapaFacadeInterfaceLocal;
+import financ.workflow.local.WFDocumentosFacadeInterfaceLocal;
+import financ.workflow.local.WFEtapaFacadeInterfaceLocal;
+import financ.workflow.local.WFLegalFacadeInterfaceLocal;
+import financ.workflow.local.WFMaestraFacadeInterfaceLocal;
+import financ.workflow.local.WFRutaFacadeInterfaceLocal;
+import general.servlets.GE_BaseMethodInvocation_Servlet;
+
+import java.util.List;
+
+import pe.com.tfc.utils.ErrorControladoException;
+import pe.com.tfc.utils.RequestMapping;
+import pe.com.tfc.utils.ResponseType;
+import admin.contab.beans.BeanParametrosAuditoria;
+import admin.util.ConstantesErrores;
+
+/**
+ * WF_T_GenericoDocumentoComentario_Servlet
+ * 
+ * @author kdelacruz
+ * @since [Req.17-007] 06.03.2017 Implementación WorkFlow Legal
+ */
+
+public class WF_T_GenericoDocumentoComentario_Servlet extends GE_BaseMethodInvocation_Servlet {
+
+    /**
+     * 
+     */
+    private static final long serialVersionUID = -8637921303056588610L;
+    private static final String URL_TAB_GENERICODC = Constante.RUTA_WORKFLOW + "legal/etapa/WF_T_GenericoDocumentoComentario_CHILD.jsp";
+    private WFDocumentoPorEtapaFacadeInterfaceLocal wfDocumentoPorEtapaFacadeInterfaceLocal;
+    private WFDocumentosFacadeInterfaceLocal wfDocumentosFacadeInterfaceLocal;
+    private WFLegalFacadeInterfaceLocal wfLegalFacadeInterfaceLocal;
+    private WFDetalleComentarioFacadeInterfaceLocal wfDetalleComentarioFacadeInterfaceLocal;
+    private WFEtapaFacadeInterfaceLocal wfEtapaFacadeInterfaceLocal;
+    private WFMaestraFacadeInterfaceLocal wfMaestraFacadeInterfaceLocal;
+    private WFRutaFacadeInterfaceLocal wfRutaFacadeInterfaceLocal;
+
+    protected void initEJBs() throws Exception {
+        wfDocumentoPorEtapaFacadeInterfaceLocal = lookup(WFDocumentoPorEtapaFacade.LocalJNDIName);
+        wfDocumentosFacadeInterfaceLocal = lookup(WFDocumentosFacade.LocalJNDIName);
+        wfLegalFacadeInterfaceLocal = lookup(WFLegalFacade.LocalJNDIName);
+        wfDetalleComentarioFacadeInterfaceLocal = lookup(WFDetalleComentarioFacade.LocalJNDIName);
+        wfEtapaFacadeInterfaceLocal = lookup(WFEtapaFacade.LocalJNDIName);
+        wfMaestraFacadeInterfaceLocal = lookup(WFMaestraFacade.LocalJNDIName);
+        wfRutaFacadeInterfaceLocal = lookup(WFRutaFacade.LocalJNDIName);
+    }
+
+    @Override
+    protected void execute(ServletParams servletParams) throws Exception {
+        // TODO Auto-generated method stub
+    }
+
+    @RequestMapping(value = "MOSTRAR_DETALLE", responseType = ResponseType.HTML, url = URL_TAB_GENERICODC)
+    protected void mostrarDetalleDescarga(final ServletParams servletParams) throws Exception {
+        BeanParametrosAuditoria beanParametrosAuditoria = getBeanParametrosAuditoria(servletParams);
+        String idMaestra = getParameter(servletParams, "idMaestra");
+        String idEtapa = getParameter(servletParams, "idEtapa");
+        
+        List<BeanWFTipoDocumento> listBeanWFTipoDocumento = wfDocumentoPorEtapaFacadeInterfaceLocal.listarDetalleDocumento(idMaestra, idEtapa, beanParametrosAuditoria);
+
+        BeanWFDetalleComentario beanWFDetalleComentario = wfDetalleComentarioFacadeInterfaceLocal.get(idMaestra,
+                                                                                                      idEtapa,
+                                                                                                      beanParametrosAuditoria);
+
+        String comportamiento = wfEtapaFacadeInterfaceLocal.validarEtapaEdicion(idMaestra,
+                                                                                idEtapa,
+                                                                                beanParametrosAuditoria);
+
+        setRequestAttribute(servletParams, "cantidadDocumento", listBeanWFTipoDocumento.size());
+        setRequestAttribute(servletParams, "beanWFDetalleComentario", beanWFDetalleComentario);
+        setRequestAttribute(servletParams, "idEtapa", idEtapa);
+        setRequestAttribute(servletParams, "strComportamiento", comportamiento);
+        forward(servletParams);
+    }
+
+    @RequestMapping(value = "ENVIAR", responseType = ResponseType.XML)
+    protected void enviar(final ServletParams servletParams) throws Exception {
+        BeanParametrosAuditoria beanParametrosAuditoria = getBeanParametrosAuditoria(servletParams);
+        BeanWFMaestra beanWFMaestra = mapearBean(servletParams, BeanWFMaestra.class);
+        String idEvento = getParameter(servletParams, "idEvento");
+        String textoComentario = getParameter(servletParams, "textoComentario");
+        String lista = getParameter(servletParams, "lista");
+
+        if (validarEtapaUsuario(beanWFMaestra.getIdMaestra(), beanWFMaestra.getIdEtapa(), beanParametrosAuditoria)) {
+            throw new ErrorControladoException(ConstantesErrores.ERROR_11162);
+        }
+
+        List<BeanWFDocumentos> lstBeanWFDocumentos = wfDocumentosFacadeInterfaceLocal.mapear(lista);
+
+        wfLegalFacadeInterfaceLocal.enviarGenericoDocumentoComentario(beanWFMaestra,
+                                                                      idEvento,
+                                                                      textoComentario,
+                                                                      lstBeanWFDocumentos,
+                                                                      beanParametrosAuditoria);
+
+        final StringBuilder sbRespuesta = new StringBuilder();
+        sbRespuesta.append("<codigoError>" + NO_ERROR + "</codigoError>");
+        responseXML(servletParams, sbRespuesta.toString());
+    }
+
+    private boolean validarEtapaUsuario(String idMaestra,
+                                        String idEtapa,
+                                        BeanParametrosAuditoria beanParametrosAuditoria) throws Exception {
+        BeanWFMaestra beanWFMaestra = new BeanWFMaestra();
+        BeanWFRuta beanWFRuta;
+        Boolean validar = false;
+
+        beanWFMaestra = wfMaestraFacadeInterfaceLocal.consultarMaestra(idMaestra, beanParametrosAuditoria);
+        if ((_equiv(idEtapa, Constante.WF_ETAPA_EMISION_DE_CONTRATOS)
+                        || _equiv(idEtapa, Constante.WF_ETAPA_CONFORMIDAD_LEGAL_PARA_DESEMBOLSO)
+                        || _equiv(idEtapa, Constante.WF_ETAPA_FIRMA_DE_VENDEDOR)
+                        || _equiv(idEtapa,Constante.WF_ETAPA_FIRMA_DE_TFC)
+                        || _equiv(idEtapa, Constante.WF_ETAPA_TESTIMONIO)) && !_equiv(beanWFMaestra.getUsuarioAtiende(), beanParametrosAuditoria.getUsuarioInsercion())) {
+
+            validar = true;
+
+        } else if (_equiv(idEtapa, Constante.WF_ETAPA_INGRESO_DE_DOCUMENTOS_A_NOTARIA)) {
+            beanWFRuta = new BeanWFRuta();
+            beanWFRuta = wfRutaFacadeInterfaceLocal.obtenerPlaza(idMaestra, beanParametrosAuditoria);
+            if (_equiv(beanWFRuta.getKey001(), Constante.WF_RUTA_LIMA) && !_equiv(beanWFMaestra.getUsuarioAtiende(), beanParametrosAuditoria.getUsuarioInsercion())) {
+                validar = true;
+            } else if (_equiv(beanWFRuta.getKey001(), Constante.WF_RUTA_PROVINCIA) && !_equiv(beanWFMaestra.getUsuarioSolicitante(), beanParametrosAuditoria.getUsuarioInsercion())) {
+                validar = true;
+            }
+        }
+        if (_equiv(idEtapa, Constante.WF_ETAPA_CONFIRMACION_DE_DESEMBOLSO)) {
+            validar = false;
+        }
+        return validar;
+    }
+}
diff --git a/DELFINWEBNEW/src/financ/workflow/legal/servlets/WF_T_InscripcionDefinitiva_Servlet.java b/DELFINWEBNEW/src/financ/workflow/legal/servlets/WF_T_InscripcionDefinitiva_Servlet.java
new file mode 100644
index 0000000..358907b
--- /dev/null
+++ b/DELFINWEBNEW/src/financ/workflow/legal/servlets/WF_T_InscripcionDefinitiva_Servlet.java
@@ -0,0 +1,126 @@
+package financ.workflow.legal.servlets;
+
+import financ.util.Constante;
+import financ.workflow.bean.BeanWFDetalleComentario;
+import financ.workflow.bean.BeanWFDocumentos;
+import financ.workflow.bean.BeanWFLegal;
+import financ.workflow.bean.BeanWFMaestra;
+import financ.workflow.bean.BeanWFTipoDocumento;
+import financ.workflow.facade.WFDetalleComentarioFacade;
+import financ.workflow.facade.WFDocumentoPorEtapaFacade;
+import financ.workflow.facade.WFDocumentosFacade;
+import financ.workflow.facade.WFEtapaFacade;
+import financ.workflow.facade.WFLegalFacade;
+import financ.workflow.facade.WFMaestraFacade;
+import financ.workflow.local.WFDetalleComentarioFacadeInterfaceLocal;
+import financ.workflow.local.WFDocumentoPorEtapaFacadeInterfaceLocal;
+import financ.workflow.local.WFDocumentosFacadeInterfaceLocal;
+import financ.workflow.local.WFEtapaFacadeInterfaceLocal;
+import financ.workflow.local.WFLegalFacadeInterfaceLocal;
+import financ.workflow.local.WFMaestraFacadeInterfaceLocal;
+import general.servlets.GE_BaseMethodInvocation_Servlet;
+
+import java.util.List;
+
+import pe.com.tfc.utils.ErrorControladoException;
+import pe.com.tfc.utils.RequestMapping;
+import pe.com.tfc.utils.ResponseType;
+import admin.contab.beans.BeanParametrosAuditoria;
+import admin.util.ConstantesErrores;
+
+/**
+ * WF_T_InscripcionDefinitiva_Servlet
+ * 
+ * @author kdelacruz
+ * @since [Req.17-007] 06.03.2017 Implementación WorkFlow Legal
+ */
+
+public class WF_T_InscripcionDefinitiva_Servlet extends GE_BaseMethodInvocation_Servlet {
+
+    /**
+     * 
+     */
+    private static final long serialVersionUID = -8637921303056588610L;
+    private static final String URL_TAB_INSCRIPCION_DEF = Constante.RUTA_WORKFLOW + "legal/etapa/WF_T_InscripcionDefinitiva_CHILD.jsp";
+    private WFDocumentosFacadeInterfaceLocal wfDocumentosFacadeInterfaceLocal;
+    private WFLegalFacadeInterfaceLocal wfLegalFacadeInterfaceLocal;
+    private WFDetalleComentarioFacadeInterfaceLocal wfDetalleComentarioFacadeInterfaceLocal;
+    private WFEtapaFacadeInterfaceLocal wfEtapaFacadeInterfaceLocal;
+    private WFMaestraFacadeInterfaceLocal wfMaestraFacadeInterfaceLocal;
+
+    protected void initEJBs() throws Exception {
+        wfDocumentosFacadeInterfaceLocal = lookup(WFDocumentosFacade.LocalJNDIName);
+        wfLegalFacadeInterfaceLocal = lookup(WFLegalFacade.LocalJNDIName);
+        wfDetalleComentarioFacadeInterfaceLocal = lookup(WFDetalleComentarioFacade.LocalJNDIName);
+        wfEtapaFacadeInterfaceLocal = lookup(WFEtapaFacade.LocalJNDIName);
+        wfMaestraFacadeInterfaceLocal = lookup(WFMaestraFacade.LocalJNDIName);
+    }
+
+    @Override
+    protected void execute(ServletParams servletParams) throws Exception {
+        // TODO Auto-generated method stub
+    }
+
+    @RequestMapping(value = "MOSTRAR_DETALLE", responseType = ResponseType.HTML, url = URL_TAB_INSCRIPCION_DEF)
+    protected void mostrarDetalle(final ServletParams servletParams) throws Exception {
+        BeanParametrosAuditoria beanParametrosAuditoria = getBeanParametrosAuditoria(servletParams);
+        String idEtapa = getParameter(servletParams, "idEtapa");
+        String idMaestra = getParameter(servletParams, "idMaestra");
+
+        BeanWFLegal beanWFLegal = wfLegalFacadeInterfaceLocal.get(idMaestra, beanParametrosAuditoria);
+
+        BeanWFDetalleComentario beanWFDetalleComentario = wfDetalleComentarioFacadeInterfaceLocal.get(idMaestra,
+                                                                                                      idEtapa,
+                                                                                                      beanParametrosAuditoria);
+
+        String comportamiento = wfEtapaFacadeInterfaceLocal.validarEtapaEdicion(idMaestra,
+                                                                                idEtapa,
+                                                                                beanParametrosAuditoria);
+        setRequestAttribute(servletParams, "beanWFLegal", beanWFLegal);
+        setRequestAttribute(servletParams, "beanWFDetalleComentario", beanWFDetalleComentario);
+        setRequestAttribute(servletParams, "idEtapa", idEtapa);
+        setRequestAttribute(servletParams, "strComportamiento", comportamiento);
+        forward(servletParams);
+    }
+
+    @RequestMapping(value = "ENVIAR", responseType = ResponseType.XML)
+    protected void enviar(final ServletParams servletParams) throws Exception {
+        BeanParametrosAuditoria beanParametrosAuditoria = getBeanParametrosAuditoria(servletParams);
+        BeanWFMaestra beanWFMaestra = mapearBean(servletParams, BeanWFMaestra.class);
+        BeanWFLegal beanWFLegal = mapearBean(servletParams, BeanWFLegal.class);
+        String idEvento = getParameter(servletParams, "idEvento");
+        String comentario = getParameter(servletParams, "comentario");
+        String lista = getParameter(servletParams, "lista");
+
+        if (validarEtapaUsuario(beanWFMaestra.getIdMaestra(), beanWFMaestra.getIdEtapa(), beanParametrosAuditoria)) {
+            throw new ErrorControladoException(ConstantesErrores.ERROR_11162);
+        }
+
+        List<BeanWFDocumentos> lstBeanWFDocumentos = wfDocumentosFacadeInterfaceLocal.mapear(lista);
+
+        wfLegalFacadeInterfaceLocal.enviarInscripcionDefinitiva(beanWFMaestra,
+                                                                beanWFLegal,
+                                                                idEvento,
+                                                                comentario,
+                                                                lstBeanWFDocumentos,
+                                                                beanParametrosAuditoria);
+
+        final StringBuilder sbRespuesta = new StringBuilder();
+        sbRespuesta.append("<codigoError>" + NO_ERROR + "</codigoError>");
+        responseXML(servletParams, sbRespuesta.toString());
+    }
+
+    private boolean validarEtapaUsuario(String idMaestra,
+                                        String idEtapa,
+                                        BeanParametrosAuditoria beanParametrosAuditoria) throws Exception {
+        BeanWFMaestra beanWFMaestra = new BeanWFMaestra();
+        Boolean validar = false;
+
+        beanWFMaestra = wfMaestraFacadeInterfaceLocal.consultarMaestra(idMaestra, beanParametrosAuditoria);
+        if (!_equiv(beanWFMaestra.getUsuarioAtiende(), beanParametrosAuditoria.getUsuarioInsercion())) {
+            throw new ErrorControladoException(ConstantesErrores.ERROR_11162);
+        }
+
+        return validar;
+    }
+}
diff --git a/DELFINWEBNEW/src/financ/workflow/legal/servlets/WF_T_Notaria_Servlet.java b/DELFINWEBNEW/src/financ/workflow/legal/servlets/WF_T_Notaria_Servlet.java
new file mode 100644
index 0000000..936621a
--- /dev/null
+++ b/DELFINWEBNEW/src/financ/workflow/legal/servlets/WF_T_Notaria_Servlet.java
@@ -0,0 +1,117 @@
+package financ.workflow.legal.servlets;
+
+import financ.util.BeanCombo;
+import financ.util.Constante;
+import financ.util.local.UtilFacadeIntrefaceLocal;
+import financ.util.session.UtilFacade;
+import financ.workflow.bean.BeanWFDocumentos;
+import financ.workflow.bean.BeanWFLegal;
+import financ.workflow.facade.WFDocumentosFacade;
+import financ.workflow.facade.WFLegalFacade;
+import financ.workflow.local.WFDocumentosFacadeInterfaceLocal;
+import financ.workflow.local.WFLegalFacadeInterfaceLocal;
+import general.servlets.GE_BaseMethodInvocation_Servlet;
+
+import java.io.File;
+import java.util.HashMap;
+import java.util.List;
+import java.util.Map;
+
+import pe.com.tfc.utils.ErrorControladoException;
+import pe.com.tfc.utils.RequestMapping;
+import pe.com.tfc.utils.ResponseType;
+import admin.contab.beans.BeanParametrosAuditoria;
+import admin.util.ConstantesErrores;
+
+/**
+ * WF_T_Notaria_Servlet
+ * 
+ * @author kdelacruz
+ * @since [Req.17-007] 06.03.2017 Implementación WorkFlow Legal
+ */
+public class WF_T_Notaria_Servlet extends GE_BaseMethodInvocation_Servlet {
+
+    private static final long serialVersionUID = -4034047563094983044L;
+
+    private static final String PATH_DOCUMENTO = Constante.RUTA_WORKFLOW + "legal/notaria/";
+    private static final String URL_MOSTRAR = PATH_DOCUMENTO + "WF_T_Notaria_CHILD.jsp";
+
+    private WFLegalFacadeInterfaceLocal wfLegalFacadeInterfaceLocal;
+    private UtilFacadeIntrefaceLocal utilFacadeIntrefaceLocal;
+    private WFDocumentosFacadeInterfaceLocal wfDocumentosFacadeInterfaceLocal;
+
+    protected void initEJBs() throws Exception {
+        wfLegalFacadeInterfaceLocal = lookup(WFLegalFacade.LocalJNDIName);
+        utilFacadeIntrefaceLocal = lookup(UtilFacade.LocalJNDIName);
+        wfDocumentosFacadeInterfaceLocal = lookup(WFDocumentosFacade.LocalJNDIName);
+
+    }
+
+    @Override
+    protected void execute(ServletParams servletParams) throws Exception {
+        // TODO Auto-generated method stub
+    }
+
+    @RequestMapping(value = "MOSTRAR", url = URL_MOSTRAR)
+    protected void mostrarHandler(ServletParams servletParams) throws Exception {
+        String idMaestra = getParameter(servletParams, "idMaestra");
+
+        BeanWFLegal beanWFLegal = wfLegalFacadeInterfaceLocal.get(idMaestra, getBeanParametrosAuditoria(servletParams));
+
+        List<BeanCombo> lstindicadorCancelacion = utilFacadeIntrefaceLocal.lstDataCatalogo("WFDLEGA", "C_INDCAN", true);
+
+        List<BeanCombo> lstindicadorFinanciamiento = utilFacadeIntrefaceLocal.lstDataCatalogo("WFDLEGA",
+                                                                                              "C_INDFIN",
+                                                                                              true);
+
+        setRequestAttribute(servletParams, "beanWFLegal", beanWFLegal);
+        setRequestAttribute(servletParams, "lstindicadorCancelacion", lstindicadorCancelacion);
+        setRequestAttribute(servletParams, "lstindicadorFinanciamiento", lstindicadorFinanciamiento);
+        forward(servletParams);
+    }
+
+    @RequestMapping(value = "GUARDAR", responseType = ResponseType.XML)
+    protected void guardarHandler(ServletParams servletParams) throws Exception {
+        BeanWFLegal beanWfLegal = mapearBean(servletParams, BeanWFLegal.class);
+        String lista = getParameter(servletParams, "lista");
+
+        List<BeanWFDocumentos> lstBeanWFDocumentos = wfDocumentosFacadeInterfaceLocal.mapear(lista);
+
+        wfLegalFacadeInterfaceLocal.guardarDatosNotaria(beanWfLegal,
+                                                        lstBeanWFDocumentos,
+                                                        getBeanParametrosAuditoria(servletParams));
+
+        StringBuilder sbRespuesta = new StringBuilder();
+        sbRespuesta.append("<codigoError>" + NO_ERROR + "</codigoError>");
+        responseXML(servletParams, sbRespuesta.toString());
+    }
+
+    @RequestMapping(value = "EXPORTAR_MEMORANDUM")
+    private void exportarReporte(final ServletParams servletParams) throws Exception {
+        final String idMaestra = getParameter(servletParams, "idMaestra");
+        final BeanParametrosAuditoria beanParametrosAuditoria = getBeanParametrosAuditoria(servletParams);
+        String archivoJasper;   
+        BeanWFLegal beanWFLegal = wfLegalFacadeInterfaceLocal.get(idMaestra, beanParametrosAuditoria);
+        
+        if(_equiv(beanWFLegal.getCodigoTipoBien(), Constante.WF_TIPO_BIEN_FUTURO)){
+            archivoJasper = "WFL0001.jasper";
+        }else{
+            archivoJasper = "WFL0002.jasper";
+        }
+        final String tipoArchivo = Constante.TIPO_ARCHIVO_REPORTE_WORD;
+
+        final Map<String, Object> parameters = new HashMap<String, Object>(0);
+        final String separador = File.separator;
+        final String subcarpeta = separador + "REPORTES" + separador;
+        String ruta = getServletContext().getRealPath(subcarpeta);
+        ruta = ruta.replace(separador, separador + separador);
+        ruta = ruta + separador + separador;
+
+        parameters.put("P_ID_MAESTRA", idMaestra);
+        parameters.put("P_FECHA", beanParametrosAuditoria.getFechaProceso());
+
+        getServletContext().getRealPath(subcarpeta + archivoJasper);
+        exportarJasper(servletParams, archivoJasper, parameters, tipoArchivo);
+    }
+
+}
diff --git a/DELFINWEBNEW/src/financ/workflow/legal/servlets/WF_T_RevisionDocumentos_Servlet.java b/DELFINWEBNEW/src/financ/workflow/legal/servlets/WF_T_RevisionDocumentos_Servlet.java
new file mode 100644
index 0000000..91161fb
--- /dev/null
+++ b/DELFINWEBNEW/src/financ/workflow/legal/servlets/WF_T_RevisionDocumentos_Servlet.java
@@ -0,0 +1,129 @@
+package financ.workflow.legal.servlets;
+
+import financ.util.Constante;
+import financ.workflow.bean.BeanWFDetalleComentario;
+import financ.workflow.bean.BeanWFDocumentos;
+import financ.workflow.bean.BeanWFLegal;
+import financ.workflow.bean.BeanWFMaestra;
+import financ.workflow.bean.BeanWFTipoDocumento;
+import financ.workflow.facade.WFDetalleComentarioFacade;
+import financ.workflow.facade.WFDocumentoPorEtapaFacade;
+import financ.workflow.facade.WFDocumentosFacade;
+import financ.workflow.facade.WFEtapaFacade;
+import financ.workflow.facade.WFLegalFacade;
+import financ.workflow.facade.WFMaestraFacade;
+import financ.workflow.local.WFDetalleComentarioFacadeInterfaceLocal;
+import financ.workflow.local.WFDocumentoPorEtapaFacadeInterfaceLocal;
+import financ.workflow.local.WFDocumentosFacadeInterfaceLocal;
+import financ.workflow.local.WFEtapaFacadeInterfaceLocal;
+import financ.workflow.local.WFLegalFacadeInterfaceLocal;
+import financ.workflow.local.WFMaestraFacadeInterfaceLocal;
+import general.servlets.GE_BaseMethodInvocation_Servlet;
+
+import java.util.List;
+
+import pe.com.tfc.utils.ErrorControladoException;
+import pe.com.tfc.utils.RequestMapping;
+import pe.com.tfc.utils.ResponseType;
+import admin.contab.beans.BeanParametrosAuditoria;
+import admin.util.ConstantesErrores;
+
+/**
+ * WF_T_RevisionDocumentos_Servlet
+ * 
+ * @author kdelacruz
+ * @since [Req.17-007] 06.03.2017 Implementación WorkFlow Legal
+ */
+
+public class WF_T_RevisionDocumentos_Servlet extends GE_BaseMethodInvocation_Servlet {
+
+    /**
+     * 
+     */
+    private static final long serialVersionUID = -8637921303056588610L;
+    private static final String URL_TAB_SOLICITUD = Constante.RUTA_WORKFLOW + "legal/etapa/WF_T_RevisionDocumento_CHILD.jsp";
+    private WFDocumentoPorEtapaFacadeInterfaceLocal wfDocumentoPorEtapaFacadeInterfaceLocal;
+    private WFDocumentosFacadeInterfaceLocal wfDocumentosFacadeInterfaceLocal;
+    private WFLegalFacadeInterfaceLocal wfLegalFacadeInterfaceLocal;
+    private WFDetalleComentarioFacadeInterfaceLocal wfDetalleComentarioFacadeInterfaceLocal;
+    private WFEtapaFacadeInterfaceLocal wfEtapaFacadeInterfaceLocal;
+    private WFMaestraFacadeInterfaceLocal wfMaestraFacadeInterfaceLocal;
+
+    protected void initEJBs() throws Exception {
+        wfDocumentoPorEtapaFacadeInterfaceLocal = lookup(WFDocumentoPorEtapaFacade.LocalJNDIName);
+        wfDocumentosFacadeInterfaceLocal = lookup(WFDocumentosFacade.LocalJNDIName);
+        wfLegalFacadeInterfaceLocal = lookup(WFLegalFacade.LocalJNDIName);
+        wfDetalleComentarioFacadeInterfaceLocal = lookup(WFDetalleComentarioFacade.LocalJNDIName);
+        wfEtapaFacadeInterfaceLocal = lookup(WFEtapaFacade.LocalJNDIName);
+        wfMaestraFacadeInterfaceLocal = lookup(WFMaestraFacade.LocalJNDIName);
+    }
+
+    @Override
+    protected void execute(ServletParams servletParams) throws Exception {
+        // TODO Auto-generated method stub
+
+    }
+
+    @RequestMapping(value = "MOSTRAR_DETALLE", responseType = ResponseType.HTML, url = URL_TAB_SOLICITUD)
+    protected void mostrarDetalle(final ServletParams servletParams) throws Exception {
+        BeanParametrosAuditoria beanParametrosAuditoria = getBeanParametrosAuditoria(servletParams);
+        String idEtapa = getParameter(servletParams, "idEtapa");
+        String idMaestra = getParameter(servletParams, "idMaestra");
+
+        BeanWFDetalleComentario beanWFDetalleComentario = wfDetalleComentarioFacadeInterfaceLocal.get(idMaestra,
+                                                                                                      idEtapa,
+                                                                                                      beanParametrosAuditoria);
+
+        BeanWFLegal beanWFLegal = wfLegalFacadeInterfaceLocal.get(idMaestra, beanParametrosAuditoria);
+
+        String comportamiento = wfEtapaFacadeInterfaceLocal.validarEtapaEdicion(idMaestra,
+                                                                                idEtapa,
+                                                                                beanParametrosAuditoria);
+        setRequestAttribute(servletParams, "beanWFDetalleComentario", beanWFDetalleComentario);
+        setRequestAttribute(servletParams, "beanWFLegal", beanWFLegal);
+        setRequestAttribute(servletParams, "idEtapa", idEtapa);
+        setRequestAttribute(servletParams, "strComportamiento", comportamiento);
+        forward(servletParams);
+    }
+
+    @RequestMapping(value = "ENVIAR", responseType = ResponseType.XML)
+    protected void enviar(final ServletParams servletParams) throws Exception {
+        BeanParametrosAuditoria beanParametrosAuditoria = getBeanParametrosAuditoria(servletParams);
+        BeanWFMaestra beanWFMaestra = mapearBean(servletParams, BeanWFMaestra.class);
+        BeanWFLegal beanWFLegal = mapearBean(servletParams, BeanWFLegal.class);
+        String idEvento = getParameter(servletParams, "idEvento");
+        String comentario = getParameter(servletParams, "comentario");
+        String lista = getParameter(servletParams, "lista");
+
+        if (validarEtapaUsuario(beanWFMaestra.getIdMaestra(), beanWFMaestra.getIdEtapa(), beanParametrosAuditoria)) {
+            throw new ErrorControladoException(ConstantesErrores.ERROR_11162);
+        }
+
+        List<BeanWFDocumentos> lstBeanWFDocumentos = wfDocumentosFacadeInterfaceLocal.mapear(lista);
+
+        wfLegalFacadeInterfaceLocal.enviarRevisionDocumento(beanWFMaestra,
+                                                            beanWFLegal,
+                                                            idEvento,
+                                                            comentario,
+                                                            lstBeanWFDocumentos,
+                                                            beanParametrosAuditoria);
+
+        final StringBuilder sbRespuesta = new StringBuilder();
+        sbRespuesta.append("<codigoError>" + NO_ERROR + "</codigoError>");
+        responseXML(servletParams, sbRespuesta.toString());
+    }
+
+    private boolean validarEtapaUsuario(String idMaestra,
+                                        String idEtapa,
+                                        BeanParametrosAuditoria beanParametrosAuditoria) throws Exception {
+        BeanWFMaestra beanWFMaestra = new BeanWFMaestra();
+        Boolean validar = false;
+
+        beanWFMaestra = wfMaestraFacadeInterfaceLocal.consultarMaestra(idMaestra, beanParametrosAuditoria);
+        if (!_equiv(beanWFMaestra.getUsuarioAtiende(), beanParametrosAuditoria.getUsuarioInsercion())) {
+            throw new ErrorControladoException(ConstantesErrores.ERROR_11162);
+        }
+
+        return validar;
+    }
+}
diff --git a/DELFINWEBNEW/src/financ/workflow/legal/servlets/WF_T_SolicitudEstudioTitulo_Servlet.java b/DELFINWEBNEW/src/financ/workflow/legal/servlets/WF_T_SolicitudEstudioTitulo_Servlet.java
new file mode 100644
index 0000000..aa76075
--- /dev/null
+++ b/DELFINWEBNEW/src/financ/workflow/legal/servlets/WF_T_SolicitudEstudioTitulo_Servlet.java
@@ -0,0 +1,129 @@
+package financ.workflow.legal.servlets;
+
+import financ.util.BeanCombo;
+import financ.util.Constante;
+import financ.util.local.UtilFacadeIntrefaceLocal;
+import financ.util.session.UtilFacade;
+import financ.workflow.bean.BeanWFDetalleComentario;
+import financ.workflow.bean.BeanWFDocumentos;
+import financ.workflow.bean.BeanWFLegal;
+import financ.workflow.bean.BeanWFMaestra;
+import financ.workflow.bean.BeanWFTipoDocumento;
+import financ.workflow.facade.WFDetalleComentarioFacade;
+import financ.workflow.facade.WFDocumentoPorEtapaFacade;
+import financ.workflow.facade.WFDocumentosFacade;
+import financ.workflow.facade.WFEtapaFacade;
+import financ.workflow.facade.WFLegalFacade;
+import financ.workflow.facade.WFMaestraFacade;
+import financ.workflow.local.WFDetalleComentarioFacadeInterfaceLocal;
+import financ.workflow.local.WFDocumentoPorEtapaFacadeInterfaceLocal;
+import financ.workflow.local.WFDocumentosFacadeInterfaceLocal;
+import financ.workflow.local.WFEtapaFacadeInterfaceLocal;
+import financ.workflow.local.WFLegalFacadeInterfaceLocal;
+import financ.workflow.local.WFMaestraFacadeInterfaceLocal;
+import general.servlets.GE_BaseMethodInvocation_Servlet;
+
+import java.util.ArrayList;
+import java.util.List;
+
+import pe.com.tfc.utils.RequestMapping;
+import pe.com.tfc.utils.ResponseType;
+import admin.contab.beans.BeanParametrosAuditoria;
+
+/**
+ * WF_T_SolicitudEstudioTitulo_Servlet
+ * 
+ * @author kdelacruz
+ * @since [Req.17-007] 06.03.2017 Implementación WorkFlow Legal
+ */
+
+public class WF_T_SolicitudEstudioTitulo_Servlet extends GE_BaseMethodInvocation_Servlet {
+
+    /**
+     * 
+     */
+    private static final long serialVersionUID = -8637921303056588610L;
+    private static final String URL_TAB_SOLICITUD = Constante.RUTA_WORKFLOW + "legal/etapa/WF_T_SolicitudEstudioTitulo_CHILD.jsp";
+    private WFDocumentoPorEtapaFacadeInterfaceLocal wfDocumentoPorEtapaFacadeInterfaceLocal;
+    private WFLegalFacadeInterfaceLocal wfLegalFacadeInterfaceLocal;
+    private WFDocumentosFacadeInterfaceLocal wfDocumentosFacadeInterfaceLocal;
+    private WFMaestraFacadeInterfaceLocal wfMaestraFacadeInterfaceLocal;
+    private WFDetalleComentarioFacadeInterfaceLocal wfDetalleComentarioFacadeInterfaceLocal;
+    private WFEtapaFacadeInterfaceLocal wfEtapaFacadeInterfaceLocal;
+    private UtilFacadeIntrefaceLocal utilFacadeInterfaceLocal;
+
+    protected void initEJBs() throws Exception {
+        wfDocumentoPorEtapaFacadeInterfaceLocal = lookup(WFDocumentoPorEtapaFacade.LocalJNDIName);
+        wfLegalFacadeInterfaceLocal = lookup(WFLegalFacade.LocalJNDIName);
+        wfDocumentosFacadeInterfaceLocal = lookup(WFDocumentosFacade.LocalJNDIName);
+        wfMaestraFacadeInterfaceLocal = lookup(WFMaestraFacade.LocalJNDIName);
+        wfDetalleComentarioFacadeInterfaceLocal = lookup(WFDetalleComentarioFacade.LocalJNDIName);
+        wfEtapaFacadeInterfaceLocal = lookup(WFEtapaFacade.LocalJNDIName);
+        utilFacadeInterfaceLocal = lookup(UtilFacade.LocalJNDIName);
+    }
+
+    @Override
+    protected void execute(ServletParams servletParams) throws Exception {
+        // TODO Auto-generated method stub
+
+    }
+
+    @RequestMapping(value = "MOSTRAR_DETALLE_NUEVA_SOLICITUD", responseType = ResponseType.HTML, url = URL_TAB_SOLICITUD)
+    protected void mostrarDetalleNuevaSolicitud(final ServletParams servletParams) throws Exception {
+        BeanParametrosAuditoria beanParametrosAuditoria = getBeanParametrosAuditoria(servletParams);
+        String idEtapa = getParameter(servletParams, "idEtapa");
+        String idMaestra = getParameter(servletParams, "idMaestra");
+        BeanWFLegal beanWFLegal = new BeanWFLegal();
+
+        
+        String comportamiento = wfEtapaFacadeInterfaceLocal.validarEtapaEdicion(idMaestra,
+                                                                                idEtapa,
+                                                                                beanParametrosAuditoria);
+
+        BeanWFDetalleComentario beanWFDetalleComentario = wfDetalleComentarioFacadeInterfaceLocal.get(idMaestra,
+                                                                                                      idEtapa,
+                                                                                                      beanParametrosAuditoria);
+        if (!_isEmpty(idMaestra)) {
+            beanWFLegal = wfLegalFacadeInterfaceLocal.get(idMaestra, beanParametrosAuditoria);
+        }
+
+        final List<BeanCombo> lstIndicadorTipoBien = new ArrayList<BeanCombo>(0);
+        lstIndicadorTipoBien.add(new BeanCombo("", "SELECCIONE", "SELECCIONE"));
+        lstIndicadorTipoBien.addAll(utilFacadeInterfaceLocal.lstTipoBien(Constante.ESTADO_REGISTRO_VIGENTE));
+        setRequestAttribute(servletParams, "lstIndicadorTipoBien", lstIndicadorTipoBien);
+
+        setRequestAttribute(servletParams, "beanWFDetalleComentario", beanWFDetalleComentario);
+        setRequestAttribute(servletParams, "idEtapa", idEtapa);
+        setRequestAttribute(servletParams, "beanWFLegal", beanWFLegal);
+        setRequestAttribute(servletParams, "strComportamiento", comportamiento);
+        forward(servletParams);
+    }
+
+    @RequestMapping(value = "ENVIAR", responseType = ResponseType.XML)
+    protected void enviarSolicitud(final ServletParams servletParams) throws Exception {
+        BeanParametrosAuditoria beanParametrosAuditoria = getBeanParametrosAuditoria(servletParams);
+        BeanWFMaestra beanWFMaestra = mapearBean(servletParams, BeanWFMaestra.class);
+        BeanWFLegal beanWFLegal = mapearBean(servletParams, BeanWFLegal.class);
+        String idEvento = getParameter(servletParams, "idEvento");
+        String textoComentario = getParameter(servletParams, "textoComentario");
+        String lista = getParameter(servletParams, "lista");
+        String codigoTipoBien = getParameter(servletParams, "codigoTipoBien");
+        String codigoTipoOperacion = getParameter(servletParams, "codigoTipoOperacion");
+        beanWFLegal.setCodigoTipoBien(codigoTipoBien);
+
+        List<BeanWFDocumentos> lstBeanWFDocumentos = wfDocumentosFacadeInterfaceLocal.mapear(lista);
+
+        String idMaestra = wfLegalFacadeInterfaceLocal.enviarDatosSolicitud(idEvento,
+                                                                            beanWFMaestra,
+                                                                            beanWFLegal,
+                                                                            textoComentario,
+                                                                            codigoTipoOperacion,
+                                                                            lstBeanWFDocumentos,
+                                                                            beanParametrosAuditoria);
+
+        final StringBuilder sbRespuesta = new StringBuilder();
+        sbRespuesta.append("<idMaestra>" + idMaestra + "</idMaestra>");
+        sbRespuesta.append("<codigoError>" + NO_ERROR + "</codigoError>");
+        responseXML(servletParams, sbRespuesta.toString());
+    }
+}
diff --git a/DELFINWEBNEW/src/financ/workflow/legal/servlets/WF_T_TomaFirma_Servlet.java b/DELFINWEBNEW/src/financ/workflow/legal/servlets/WF_T_TomaFirma_Servlet.java
new file mode 100644
index 0000000..98809fa
--- /dev/null
+++ b/DELFINWEBNEW/src/financ/workflow/legal/servlets/WF_T_TomaFirma_Servlet.java
@@ -0,0 +1,112 @@
+package financ.workflow.legal.servlets;
+
+import financ.util.Constante;
+import financ.workflow.bean.BeanWFDetalleComentario;
+import financ.workflow.bean.BeanWFLegal;
+import financ.workflow.bean.BeanWFMaestra;
+import financ.workflow.facade.WFDetalleComentarioFacade;
+import financ.workflow.facade.WFEtapaFacade;
+import financ.workflow.facade.WFLegalFacade;
+import financ.workflow.facade.WFMaestraFacade;
+import financ.workflow.local.WFDetalleComentarioFacadeInterfaceLocal;
+import financ.workflow.local.WFEtapaFacadeInterfaceLocal;
+import financ.workflow.local.WFLegalFacadeInterfaceLocal;
+import financ.workflow.local.WFMaestraFacadeInterfaceLocal;
+import general.servlets.GE_BaseMethodInvocation_Servlet;
+import pe.com.tfc.utils.ErrorControladoException;
+import pe.com.tfc.utils.RequestMapping;
+import pe.com.tfc.utils.ResponseType;
+import admin.contab.beans.BeanParametrosAuditoria;
+import admin.util.ConstantesErrores;
+
+/**
+ * WF_T_TomaFirma_Servlet
+ * 
+ * @author kdelacruz
+ * @since [Req.17-007] 06.03.2017 Implementación WorkFlow Legal
+ */
+
+public class WF_T_TomaFirma_Servlet extends GE_BaseMethodInvocation_Servlet {
+
+    /**
+     * 
+     */
+    private static final long serialVersionUID = -8637921303056588610L;
+    private static final String URL_TAB_TOMA_FIRMA = Constante.RUTA_WORKFLOW + "legal/etapa/WF_T_TomaFirma_CHILD.jsp";
+    private WFLegalFacadeInterfaceLocal wfLegalFacadeInterfaceLocal;
+    private WFDetalleComentarioFacadeInterfaceLocal wfDetalleComentarioFacadeInterfaceLocal;
+    private WFEtapaFacadeInterfaceLocal wfEtapaFacadeInterfaceLocal;
+    private WFMaestraFacadeInterfaceLocal wfMaestraFacadeInterfaceLocal;
+
+    protected void initEJBs() throws Exception {
+        wfLegalFacadeInterfaceLocal = lookup(WFLegalFacade.LocalJNDIName);
+        wfDetalleComentarioFacadeInterfaceLocal = lookup(WFDetalleComentarioFacade.LocalJNDIName);
+        wfEtapaFacadeInterfaceLocal = lookup(WFEtapaFacade.LocalJNDIName);
+        wfMaestraFacadeInterfaceLocal = lookup(WFMaestraFacade.LocalJNDIName);
+    }
+
+    @Override
+    protected void execute(ServletParams servletParams) throws Exception {
+        // TODO Auto-generated method stub
+
+    }
+
+    @RequestMapping(value = "MOSTRAR_DETALLE", responseType = ResponseType.HTML, url = URL_TAB_TOMA_FIRMA)
+    protected void mostrarDetalleDescarga(final ServletParams servletParams) throws Exception {
+        BeanParametrosAuditoria beanParametrosAuditoria = getBeanParametrosAuditoria(servletParams);
+        String idMaestra = getParameter(servletParams, "idMaestra");
+        String idEtapa = getParameter(servletParams, "idEtapa");
+
+        BeanWFLegal beanWFLegal = wfLegalFacadeInterfaceLocal.get(idMaestra, beanParametrosAuditoria);
+
+        BeanWFDetalleComentario beanWFDetalleComentario = wfDetalleComentarioFacadeInterfaceLocal.get(idMaestra,
+                                                                                                      idEtapa,
+                                                                                                      beanParametrosAuditoria);
+
+        String comportamiento = wfEtapaFacadeInterfaceLocal.validarEtapaEdicion(idMaestra,
+                                                                                idEtapa,
+                                                                                beanParametrosAuditoria);
+        setRequestAttribute(servletParams, "beanWFLegal", beanWFLegal);
+        setRequestAttribute(servletParams, "idEtapa", idEtapa);
+        setRequestAttribute(servletParams, "beanWFDetalleComentario", beanWFDetalleComentario);
+        setRequestAttribute(servletParams, "strComportamiento", comportamiento);
+        forward(servletParams);
+    }
+
+    @RequestMapping(value = "ENVIAR", responseType = ResponseType.XML)
+    protected void enviar(final ServletParams servletParams) throws Exception {
+        BeanParametrosAuditoria beanParametrosAuditoria = getBeanParametrosAuditoria(servletParams);
+        BeanWFMaestra beanWFMaestra = mapearBean(servletParams, BeanWFMaestra.class);
+        BeanWFLegal beanWFLegal = mapearBean(servletParams, BeanWFLegal.class);
+        String idEvento = getParameter(servletParams, "idEvento");
+        String textoComentario = getParameter(servletParams, "textoComentario");
+
+        if (validarEtapaUsuario(beanWFMaestra.getIdMaestra(), beanWFMaestra.getIdEtapa(), beanParametrosAuditoria)) {
+            throw new ErrorControladoException(ConstantesErrores.ERROR_11162);
+        }
+
+        wfLegalFacadeInterfaceLocal.enviarTomaFirma(beanWFMaestra,
+                                                    beanWFLegal,
+                                                    idEvento,
+                                                    textoComentario,
+                                                    beanParametrosAuditoria);
+
+        final StringBuilder sbRespuesta = new StringBuilder();
+        sbRespuesta.append("<codigoError>" + NO_ERROR + "</codigoError>");
+        responseXML(servletParams, sbRespuesta.toString());
+    }
+
+    private boolean validarEtapaUsuario(String idMaestra,
+                                        String idEtapa,
+                                        BeanParametrosAuditoria beanParametrosAuditoria) throws Exception {
+        BeanWFMaestra beanWFMaestra = new BeanWFMaestra();
+        Boolean validar = false;
+
+        beanWFMaestra = wfMaestraFacadeInterfaceLocal.consultarMaestra(idMaestra, beanParametrosAuditoria);
+        if (!_equiv(beanWFMaestra.getUsuarioSolicitante(), beanParametrosAuditoria.getUsuarioInsercion())) {
+            throw new ErrorControladoException(ConstantesErrores.ERROR_11162);
+        }
+
+        return validar;
+    }
+}
diff --git a/DELFINWEBNEW/src/financ/workflow/servlets/WF_C_Documentos_Servlet.java b/DELFINWEBNEW/src/financ/workflow/servlets/WF_C_Documentos_Servlet.java
new file mode 100644
index 0000000..b586712
--- /dev/null
+++ b/DELFINWEBNEW/src/financ/workflow/servlets/WF_C_Documentos_Servlet.java
@@ -0,0 +1,122 @@
+package financ.workflow.servlets;
+
+import java.io.File;
+import java.util.HashMap;
+import java.util.List;
+import java.util.Map;
+
+import admin.contab.beans.BeanParametrosAuditoria;
+import pe.com.tfc.utils.RequestMapping;
+import financ.util.Constante;
+import financ.util.FormatoFecha;
+import financ.workflow.bean.BeanWFDocumentos;
+import financ.workflow.bean.BeanWFLegal;
+import financ.workflow.facade.WFDocumentosFacade;
+import financ.workflow.local.WFDocumentosFacadeInterfaceLocal;
+import general.servlets.GE_BaseMethodInvocation_Servlet;
+import general.servlets.GE_Base_Servlet.ServletParams;
+
+/**
+ * WF_C_Documento_Servlet
+ * 
+ * @author kdelacruz
+ * @since [Req.17-007] 06.03.2017 Implementación WorkFlow Legal
+ */
+public class WF_C_Documentos_Servlet extends GE_BaseMethodInvocation_Servlet {
+
+    private static final long serialVersionUID = -6304023025314539553L;
+
+    private static final String PATH_DOCUMENTO = Constante.RUTA_WORKFLOW + "documentos/";
+    private static final String URL_MOSTRAR_DETALLE = PATH_DOCUMENTO + "WF_C_Documentos_CNTR.jsp";
+    private static final String URL_TABLA = PATH_DOCUMENTO + "WF_C_Documentos_TABLA.jsp";
+
+    private WFDocumentosFacadeInterfaceLocal wfDocumentosFacadeInterfaceLocal;
+
+    protected void initEJBs() throws Exception {
+        wfDocumentosFacadeInterfaceLocal = lookup(WFDocumentosFacade.LocalJNDIName);
+    }
+
+    @Override
+    protected void execute(ServletParams servletParams) throws Exception {
+        // TODO Auto-generated method stub
+
+    }
+
+    @RequestMapping(value = "MOSTRAR", url = URL_MOSTRAR_DETALLE)
+    protected void mostrarHandler(ServletParams servletParams) throws Exception {
+        String idMaestra = getParameter(servletParams, "idMaestra");
+        String idTipoDocumento = getParameter(servletParams, "idTipoDocumento");
+        String idEtapa = getParameter(servletParams, "idEtapa");
+
+        setRequestAttribute(servletParams, "idMaestra", idMaestra);
+        setRequestAttribute(servletParams, "idTipoDocumento", idTipoDocumento);
+        setRequestAttribute(servletParams, "idEtapa", idEtapa);
+        forward(servletParams);
+    }
+
+    @RequestMapping(value = "EXPORTAR_HISTORIAL")
+    private void exportarReporte(final ServletParams servletParams) throws Exception {
+        final String idMaestra = getParameter(servletParams, "idMaestra");
+        final String idTipoDocumento = getParameter(servletParams, "idTipoDocumento");
+        final String idEtapa = getParameter(servletParams, "idEtapa");
+        final BeanParametrosAuditoria beanParametrosAuditoria = getBeanParametrosAuditoria(servletParams);
+        String archivoJasper = "WFL0001.jasper";
+        final String tipoArchivo = Constante.TIPO_ARCHIVO_REPORTE_PDF;
+
+        final Map<String, Object> parameters = new HashMap<String, Object>(0);
+        final String separador = File.separator;
+        final String subcarpeta = separador + "REPORTES" + separador;
+        String ruta = getServletContext().getRealPath(subcarpeta);
+        ruta = ruta.replace(separador, separador + separador);
+        ruta = ruta + separador + separador;
+
+        parameters.put("P_ID_MAESTRA", idMaestra);
+        parameters.put("P_FECHA", beanParametrosAuditoria.getFechaProceso());
+
+        getServletContext().getRealPath(subcarpeta + archivoJasper);
+        exportarJasper(servletParams, archivoJasper, parameters, tipoArchivo);
+    }
+
+    @RequestMapping(value = "MOSTRAR_TABLA", url = URL_TABLA)
+    protected void mostrarTablaHandler(ServletParams servletParams) throws Exception {
+        String idEtapa = getParameter(servletParams, "idEtapa");
+        String idTipoDocumento = getParameter(servletParams, "idTipoDocumento");
+        String idMaestra = getParameter(servletParams, "idMaestra");
+
+        List<BeanWFDocumentos> lstBeanWFDocumentos = wfDocumentosFacadeInterfaceLocal.buscar(idEtapa,
+                                                                                             idTipoDocumento,
+                                                                                             idMaestra,
+                                                                                             getBeanParametrosAuditoria(servletParams));
+
+        String strEnlace;
+        BeanWFDocumentos beanWFDocumentos;
+        StringBuilder sbMyData = new StringBuilder();
+
+        for (int i = 0; i < lstBeanWFDocumentos.size(); i++) {
+            beanWFDocumentos = lstBeanWFDocumentos.get(i);
+
+            strEnlace = CADENA_VACIA;
+            if (!_isEmpty(beanWFDocumentos.getIdArchivo())) {
+                strEnlace = "<img id='idDescargar' style='cursor:hand' title='Descargar' width=15 height=15 src='" + servletParams.getRequest().getContextPath() + "/UTILS/img/download.png' onclick=downloadFile('" + beanWFDocumentos.getIdArchivo() + "')>";
+            }
+
+            sbMyData.append("[");
+
+            sbMyData.append("\"" + _toBlankObject(beanWFDocumentos.getIdDocumento()) + "\",");
+            sbMyData.append("\"" + _toBlankObject(beanWFDocumentos.getIdMaestra()) + "\",");
+            sbMyData.append("\"" + FormatoFecha.dateToStringDDMMYYYY24HHMMSS(beanWFDocumentos.getFechaInsercion()) + "\",");
+            sbMyData.append("\"" + _toBlankObject(beanWFDocumentos.getUsuarioInsercion()) + "\",");
+            sbMyData.append("\"" + _toBlankObject(beanWFDocumentos.getDescripcionTipoDocumento()) + "\",");
+            sbMyData.append("\"" + strEnlace + "\"");
+
+            sbMyData.append("]");
+
+            if ((i < lstBeanWFDocumentos.size() - 1)) {
+                sbMyData.append(",");
+            }
+        }
+
+        setRequestAttribute(servletParams, "myData", sbMyData.toString());
+        forward(servletParams);
+    }
+}
diff --git a/DELFINWEBNEW/src/financ/workflow/servlets/WF_C_Movimientos_Servlet.java b/DELFINWEBNEW/src/financ/workflow/servlets/WF_C_Movimientos_Servlet.java
new file mode 100644
index 0000000..7c40127
--- /dev/null
+++ b/DELFINWEBNEW/src/financ/workflow/servlets/WF_C_Movimientos_Servlet.java
@@ -0,0 +1,67 @@
+package financ.workflow.servlets;
+
+import financ.util.Constante;
+import financ.workflow.bean.BeanWFMovimientos;
+import financ.workflow.facade.WFMovimientosFacade;
+import financ.workflow.local.WFMovimientosFacadeInterfaceLocal;
+import general.servlets.GE_BaseMethodInvocation_Servlet;
+
+import java.util.List;
+
+import pe.com.tfc.utils.RequestMapping;
+
+/**
+ * WF_C_Documento_Servlet
+ * 
+ * @author kdelacruz
+ * @since [Req.17-007] 06.03.2017 Implementación WorkFlow Legal
+ */
+public class WF_C_Movimientos_Servlet extends GE_BaseMethodInvocation_Servlet {
+
+    private static final long serialVersionUID = -2125434134533988888L;
+
+    private static final String PATH_DOCUMENTO = Constante.RUTA_WORKFLOW + "movimientos/";
+    private static final String URL_MOSTRAR = PATH_DOCUMENTO + "WF_C_Movimientos_CNTR.jsp";
+    private static final String URL_TABLA = PATH_DOCUMENTO + "WF_C_Movimientos_TABLA.jsp";
+
+    private WFMovimientosFacadeInterfaceLocal wfMovimientosFacadeInterfaceLocal;
+
+    protected void initEJBs() throws Exception {
+        wfMovimientosFacadeInterfaceLocal = lookup(WFMovimientosFacade.LocalJNDIName);
+    }
+
+    @Override
+    protected void execute(ServletParams servletParams) throws Exception {
+        // TODO Auto-generated method stub
+    }
+
+    @RequestMapping(value = "MOSTRAR", url = URL_MOSTRAR)
+    protected void mostrarHandler(ServletParams servletParams) throws Exception {
+        String idMaestra = getParameter(servletParams, "idMaestra");
+
+        setRequestAttribute(servletParams, "idMaestra", idMaestra);
+        forward(servletParams);
+    }
+
+    @RequestMapping(value = "MOSTRAR_TABLA", url = URL_TABLA)
+    protected void mostrarTablaHandler(ServletParams servletParams) throws Exception {
+        String idMaestra = getParameter(servletParams, "idMaestra");
+
+        List<BeanWFMovimientos> lstBeanWFMovimientos = wfMovimientosFacadeInterfaceLocal.buscar(idMaestra,
+                                                                                                getBeanParametrosAuditoria(servletParams));
+
+        String myData = getMyData(lstBeanWFMovimientos,
+                                  "idMaestra",
+                                  "fechaProceso",
+                                  "horaProceso",
+                                  "usuarioProceso",
+                                  "descripcionEtapaInicial",
+                                  "descripcionEtapaFinal",
+                                  "descripcionEstadoInicial",
+                                  "descripcionEstadoFinal",
+                                  "tiempoTranscurrido");
+
+        setRequestAttribute(servletParams, "myData", myData);
+        forward(servletParams);
+    }
+}
diff --git a/DELFINWEBNEW/src/financ/workflow/servlets/WF_C_TipoDocumento_Servlet.java b/DELFINWEBNEW/src/financ/workflow/servlets/WF_C_TipoDocumento_Servlet.java
new file mode 100644
index 0000000..501de07
--- /dev/null
+++ b/DELFINWEBNEW/src/financ/workflow/servlets/WF_C_TipoDocumento_Servlet.java
@@ -0,0 +1,102 @@
+package financ.workflow.servlets;
+
+import financ.util.Constante;
+import financ.workflow.bean.BeanWFTipoDocumento;
+import financ.workflow.facade.WFDocumentoPorEtapaFacade;
+import financ.workflow.facade.WFTipoDocumentoFacade;
+import financ.workflow.local.WFDocumentoPorEtapaFacadeInterfaceLocal;
+import financ.workflow.local.WFTipoDocumentoFacadeInterfaceLocal;
+import general.servlets.GE_BaseMethodInvocation_Servlet;
+
+import java.util.List;
+
+import pe.com.tfc.utils.RequestMapping;
+import pe.com.tfc.utils.ResponseType;
+
+/**
+ * WF_C_TipoDocumento_Servlet
+ * 
+ * @author kdelacruz
+ * @since [Req.17-007] 06.03.2017 Implementación WorkFlow Legal
+ */
+
+public class WF_C_TipoDocumento_Servlet extends GE_BaseMethodInvocation_Servlet {
+
+    private static final long serialVersionUID = 1L;
+    private static final String URL_TAB_TIPO_DOCUMENTO = Constante.RUTA_WORKFLOW + "tipoDocumento/WF_T_TipoDocumento_TABLA.jsp";
+
+    private WFDocumentoPorEtapaFacadeInterfaceLocal wfDocumentoPorEtapaFacadeInterfaceLocal;
+    private WFTipoDocumentoFacadeInterfaceLocal wfTipoDocumentoFacadeInterfaceLocal;
+
+    protected void initEJBs() throws Exception {
+        wfDocumentoPorEtapaFacadeInterfaceLocal = lookup(WFDocumentoPorEtapaFacade.LocalJNDIName);
+        wfTipoDocumentoFacadeInterfaceLocal = lookup(WFTipoDocumentoFacade.LocalJNDIName);
+    }
+
+    @Override
+    protected void execute(ServletParams servletParams) throws Exception {
+        // TODO Auto-generated method stub
+
+    }
+
+    @RequestMapping(value = "CARGAR_DETALLE_SOLICITUD_ESTUDIO_TITULO", responseType = ResponseType.HTML, url = URL_TAB_TIPO_DOCUMENTO)
+    protected void cargarDetalleSolicitud(ServletParams servletParams) throws Exception {
+        String idEtapa = getParameter(servletParams, "idEtapa");
+        String idMaestra = getParameter(servletParams, "idMaestra");
+
+        List<BeanWFTipoDocumento> listBeanWFTipoDocumento = wfDocumentoPorEtapaFacadeInterfaceLocal.listarDetalleDocumento(idMaestra,
+                                                                                                                           idEtapa,
+                                                                                                                           getBeanParametrosAuditoria(servletParams));
+
+        StringBuilder sbMyData = getMydata(listBeanWFTipoDocumento, idEtapa, idMaestra, servletParams);
+
+        setRequestAttribute(servletParams, "myData", sbMyData.toString());
+        forward(servletParams);
+    }
+
+    @RequestMapping(value = "CARGAR_DETALLE_DOCUMENTO", responseType = ResponseType.HTML, url = URL_TAB_TIPO_DOCUMENTO)
+    protected void cargarDetalleDocumento(ServletParams servletParams) throws Exception {
+        String keyTipoDocumento = getParameter(servletParams, "keyTipoDocumento");
+        String idMaestra = getParameter(servletParams, "idMaestra");
+
+        List<BeanWFTipoDocumento> lstBeanWFTipoDocumentos = wfTipoDocumentoFacadeInterfaceLocal.obtenerPorKey(idMaestra,
+                                                                                                              keyTipoDocumento,
+                                                                                                              getBeanParametrosAuditoria(servletParams));
+
+        StringBuilder sbMyData = getMydata(lstBeanWFTipoDocumentos, "", idMaestra, servletParams);
+
+        setRequestAttribute(servletParams, "indicadorDescripcionCorta", Constante.INDICADOR_SI);
+        setRequestAttribute(servletParams, "myData", sbMyData.toString());
+        forward(servletParams);
+    }
+
+    private StringBuilder getMydata(List<BeanWFTipoDocumento> listBeanWFTipoDocumento,
+                                    String idEtapa,
+                                    String idMaestra,
+                                    ServletParams servletParams) {
+        StringBuilder sbMyData = new StringBuilder();
+        if (!_isEmpty(listBeanWFTipoDocumento)) {
+
+            for (int i = 0; i < listBeanWFTipoDocumento.size(); i++) {
+                BeanWFTipoDocumento beanwfTipoDocumento = listBeanWFTipoDocumento.get(i);
+                String variables = "'" + beanwfTipoDocumento.getIdTipoDocumento() + "','" + idEtapa + "','" + idMaestra + "'";
+                sbMyData.append("[");
+                sbMyData.append("\"" + beanwfTipoDocumento.getIndicadorSeleccionado() + "\",");
+                sbMyData.append("\"" + beanwfTipoDocumento.getIdTipoDocumento() + "\",");
+                sbMyData.append("\"" + "" + "\",");
+                sbMyData.append("\"" + beanwfTipoDocumento.getDescripcionTipoDocumento() + "\",");
+                sbMyData.append("\"" + "" + "\",");
+                sbMyData.append("\"" + "" + "\",");
+                sbMyData.append("\"" + "<img id='idHistorial' style='cursor:hand' title='Historial' width=15 height=15 src='" + servletParams.getRequest().getContextPath() + "/UTILS/img/folder.png' onclick=parent.parent.verHistorialDocumento(" + variables + ")>" + "\",");
+                sbMyData.append("\"" + "<img id='idAdjuntar' style='cursor:hand;' title='Adjuntar' width=15 height=15 src='" + servletParams.getRequest().getContextPath() + "/UTILS/img/attachment.png' onclick=adjuntarFile(" + i + ")>" + "\",");
+                sbMyData.append("\"" + "<img id='idDescargar' style='cursor:hand' title='Descargar' width=15 height=15 src='" + servletParams.getRequest().getContextPath() + "/UTILS/img/download.png' onclick=downloadFileTemporal(eval(myData[" + i + "][2]))>" + "\",");
+                sbMyData.append("]");
+                if (i < listBeanWFTipoDocumento.size() - 1) {
+                    sbMyData.append(",");
+                }
+            }
+        }
+        return sbMyData;
+    }
+
+}
diff --git a/DELFINWEBNEW/src/financ/workflow/servlets/WF_T_Maestra_Servlet.java b/DELFINWEBNEW/src/financ/workflow/servlets/WF_T_Maestra_Servlet.java
new file mode 100644
index 0000000..1bb4e2d
--- /dev/null
+++ b/DELFINWEBNEW/src/financ/workflow/servlets/WF_T_Maestra_Servlet.java
@@ -0,0 +1,97 @@
+package financ.workflow.servlets;
+
+import financ.util.Constante;
+import financ.workflow.bean.BeanWFEtapa;
+import financ.workflow.bean.BeanWFEvento;
+import financ.workflow.bean.BeanWFEventoPorEtapa;
+import financ.workflow.facade.WFEtapaFacade;
+import financ.workflow.facade.WFEventoFacade;
+import financ.workflow.facade.WFEventoPorEtapaFacade;
+import financ.workflow.local.WFEtapaFacadeInterfaceLocal;
+import financ.workflow.local.WFEventoFacadeInterfaceLocal;
+import financ.workflow.local.WFEventoPorEtapaFacadeInterfaceLocal;
+import general.servlets.GE_BaseMethodInvocation_Servlet;
+
+import java.util.List;
+
+import pe.com.tfc.utils.RequestMapping;
+import pe.com.tfc.utils.ResponseType;
+import admin.contab.beans.BeanParametrosAuditoria;
+
+/**
+ * WF_C_Maestra_Servlet
+ * 
+ * @author kdelacruz
+ * @since [Req.17-007] 06.03.2017 Implementación WorkFlow Legal
+ */
+
+public class WF_T_Maestra_Servlet extends GE_BaseMethodInvocation_Servlet {
+
+    private static final long serialVersionUID = 1L;
+    private static final String URL_CONTENEDOR = Constante.RUTA_WORKFLOW + "WF_T_Contenedor_CNTR.jsp";
+
+    private WFEtapaFacadeInterfaceLocal wfEtapaFacadeInterfaceLocal;
+    private WFEventoFacadeInterfaceLocal wfEventoFacadeInterfaceLocal;
+    private WFEventoPorEtapaFacadeInterfaceLocal wfEventoPorEtapaFacadeInterfaceLocal;
+
+    protected void initEJBs() throws Exception {
+        wfEtapaFacadeInterfaceLocal = lookup(WFEtapaFacade.LocalJNDIName);
+        wfEventoFacadeInterfaceLocal = lookup(WFEventoFacade.LocalJNDIName);
+        wfEventoPorEtapaFacadeInterfaceLocal = lookup(WFEventoPorEtapaFacade.LocalJNDIName);
+    }
+
+    @Override
+    protected void execute(ServletParams servletParams) throws Exception {
+        // TODO Auto-generated method stub
+
+    }
+
+    @RequestMapping(value = "MOSTRAR_CONTENEDOR_WORKFLOW", responseType = ResponseType.HTML, url = URL_CONTENEDOR)
+    protected void mostrarContenedorWorkflow(final ServletParams servletParams) throws Exception {
+        String idModulo = getParameter(servletParams, "idModulo");
+        String indInicio = getParameter(servletParams, "indInicio");
+        String idMaestra = getParameter(servletParams, "idMaestra");
+        String idEtapaPendiente = null;
+
+        BeanParametrosAuditoria beanParametrosAuditoria = getBeanParametrosAuditoria(servletParams);
+
+        List<BeanWFEtapa> listBeanWFEtapa = wfEtapaFacadeInterfaceLocal.listarEtapa(idModulo,
+                                                                                    indInicio,
+                                                                                    idMaestra,
+                                                                                    beanParametrosAuditoria);
+        
+        List<BeanWFEvento> listBeanWFEvento = wfEventoFacadeInterfaceLocal.listar(idModulo, beanParametrosAuditoria);
+        
+        if(!_isEmpty(idMaestra)){
+             idEtapaPendiente = wfEtapaFacadeInterfaceLocal.obtenerEtapaPendiente(idMaestra, beanParametrosAuditoria);
+        }
+        if(_isEmpty(idEtapaPendiente)){
+            idEtapaPendiente = listBeanWFEtapa.get(0).getIdEtapa();
+        }
+
+        setRequestAttribute(servletParams, "idEtapaPendiente", idEtapaPendiente);
+        setRequestAttribute(servletParams, "idModulo", idModulo);
+        setRequestAttribute(servletParams, "idMaestra", idMaestra);
+        setRequestAttribute(servletParams, "listBeanWFEvento", listBeanWFEvento);
+        setRequestAttribute(servletParams, "listBeanWFEtapa", listBeanWFEtapa);
+        forward(servletParams);
+    }
+
+    @RequestMapping(value = "HABILITAR_BOTONES", responseType = ResponseType.XML)
+    protected void habilitarBotones(final ServletParams servletParams) throws Exception {
+        BeanParametrosAuditoria beanParametrosAuditoria = getBeanParametrosAuditoria(servletParams);
+        String idEtapa = getParameter(servletParams, "idEtapa");
+        String cadenaIdEvento = CADENA_VACIA;
+        List<BeanWFEventoPorEtapa> listBeanWFEventoPorEtapa = wfEventoPorEtapaFacadeInterfaceLocal.listar(idEtapa, beanParametrosAuditoria);
+        
+        for (BeanWFEventoPorEtapa beanWFEventoPorEtapa : listBeanWFEventoPorEtapa) {
+            cadenaIdEvento += beanWFEventoPorEtapa.getIdEvento() + "---";
+        }
+
+
+        final StringBuilder sbRespuesta = new StringBuilder();
+        sbRespuesta.append("<cadenaIdEvento>" + cadenaIdEvento + "</cadenaIdEvento>");
+        sbRespuesta.append("<codigoError>" + NO_ERROR + "</codigoError>");
+        responseXML(servletParams, sbRespuesta.toString());
+    }
+}
diff --git a/DELFINWEBNEW/src/general/busquedas/Busqueda_Usuarios_Servlet.java b/DELFINWEBNEW/src/general/busquedas/Busqueda_Usuarios_Servlet.java
index 4cb9be4..dac3cd6 100644
--- a/DELFINWEBNEW/src/general/busquedas/Busqueda_Usuarios_Servlet.java
+++ b/DELFINWEBNEW/src/general/busquedas/Busqueda_Usuarios_Servlet.java
@@ -53,6 +53,8 @@
 		String strValor = request.getParameter("valor");
 		String strPagina = request.getParameter("hid_pagina") != null ?request.getParameter("hid_pagina") : "1";
 		String strTabla = request.getParameter("strTabla");
+		//[Req.S17-007] kdelacruz 27.03.2017 Implementación WorkFlow Legal
+		String indicadorTipo =  request.getParameter("indicadorTipo");
 
 		//Indica si es el final
 		String fin = "0";
@@ -273,8 +275,8 @@
 	    //stacanga 29.03.2012	    	
 	    }else if("PRE-ANALISTA".equals(strTabla)){
 	    	out.println("  		callerWindowObj.insertarPreAnalista(fila);	" );
-	    }else{	    
-	    	out.println("  		callerWindowObj.insertarUsuario(fila);	" );
+	    }else{
+	    	out.println("  		callerWindowObj.insertarUsuario(fila, " + indicadorTipo + ");	" ); //[Req.S17-007] kdelacruz 27.03.2017
 	    }
 		out.println(" 	window.close();" );
 		out.println(" });" );
diff --git a/DELFINWEBNEW/src/general/busquedas/CL_C_Notarios_Servlet.java b/DELFINWEBNEW/src/general/busquedas/CL_C_Notarios_Servlet.java
new file mode 100644
index 0000000..830d4a1
--- /dev/null
+++ b/DELFINWEBNEW/src/general/busquedas/CL_C_Notarios_Servlet.java
@@ -0,0 +1,78 @@
+package general.busquedas;
+
+import financ.clientes.beans.BeanCLNotarios;
+import financ.clientes.facade.CLNotariosFacade;
+import financ.clientes.local.CLNotariosFacadeInterfaceLocal;
+import general.servlets.GE_BaseMethodInvocation_Servlet;
+
+import java.util.List;
+import java.util.Map;
+
+import admin.contab.beans.BeanParametrosAuditoria;
+
+/**
+ * CL_C_Notarios_Servlet
+ * 
+ * @author kdelacruz
+ * @since [Req.17-007] 06.03.2017 Implementación WorkFlow Legal
+ */
+
+public class CL_C_Notarios_Servlet extends GE_BaseMethodInvocation_Servlet {
+
+    private static final long serialVersionUID = 5868218263743484761L;
+    private static final String PATH_BUSQUEDA = "/GENERAL/";
+    private static final String URL_BUSCAR = PATH_BUSQUEDA + "BusquedaNotarios_TABLA.jsp";
+
+    private CLNotariosFacadeInterfaceLocal clNotariosFacadeInterfaceLocal;
+
+    protected void initEJBs() throws Exception {
+        clNotariosFacadeInterfaceLocal = lookup(CLNotariosFacade.LocalJNDIName);
+    }
+
+    @Override
+    protected void execute(ServletParams servletParams) throws Exception {
+        String criterio = getParameter(servletParams, "criterio");
+        String valor = getParameter(servletParams, "valor");
+
+        // Indica si es el final
+        String fin = "0";
+        // Cantidad de registros por Pág. y Página actual
+        String strCanPag = getSessionAttribute(servletParams, "paginacion", String.class, "50");
+        String strPagina = getParameter(servletParams, "hid_pagina", "1");
+
+        int cantReg = _toInteger(strCanPag);
+        int intPagina = _toInteger(strPagina);
+
+        // Posiciones inicial y final
+        int pos_ini = (intPagina - 1) * cantReg;
+        int pos_fin = intPagina * cantReg;
+        Long totalRegistros = new Long(0);
+
+        BeanParametrosAuditoria beanParametrosAuditoria = getBeanParametrosAuditoria(servletParams);
+
+        Map<String, Object> mapRespuesta = clNotariosFacadeInterfaceLocal.buscar(criterio,
+                                                                                 valor,
+                                                                                 intPagina,
+                                                                                 beanParametrosAuditoria);
+
+        List<BeanCLNotarios> lstBeanCLNotarios = (List<BeanCLNotarios>) mapRespuesta.get("lstBeanCLNotarios");
+        totalRegistros = (Long) mapRespuesta.get("cantReg");
+        String myData = "";
+        if (!_isEmpty(lstBeanCLNotarios)) {
+            myData = getMyData(lstBeanCLNotarios, "codigoPersona", "nombrePersona");
+        }
+
+        if (pos_fin + 1 > totalRegistros) {
+            fin = "1";
+            pos_fin = totalRegistros.intValue();
+        }
+
+        setSessionAttribute(servletParams, "hid_paginaActual", strPagina);
+        setSessionAttribute(servletParams, "myData", myData);
+        setSessionAttribute(servletParams, "inicio", _toStr(pos_ini));
+        setSessionAttribute(servletParams, "fin", _toStr(pos_fin));
+        setSessionAttribute(servletParams, "indFin", fin);
+        setSessionAttribute(servletParams, "total", _toStr(totalRegistros));
+        forward(servletParams, URL_BUSCAR + "?insert=insertarNotario(fila)");
+    }
+}
diff --git a/DELFINWEBNEW/src/general/servlets/GE_Base_Servlet.java b/DELFINWEBNEW/src/general/servlets/GE_Base_Servlet.java
index fb98daf..71853fa 100644
--- a/DELFINWEBNEW/src/general/servlets/GE_Base_Servlet.java
+++ b/DELFINWEBNEW/src/general/servlets/GE_Base_Servlet.java
@@ -79,7 +79,7 @@
     //[S14-020] 02.03.2016 gmeza
     protected static final String CADENA_VACIA = admin.util.Constante.CADENA_VACIA;
     protected static final String SLASH = "/";
- // inicio [Req.s14-138] acnunez 30.01.2015
+    // inicio [Req.s14-138] acnunez 30.01.2015
     protected static final String AMPERSAN = "&";
     protected static final String PALOTE = "|";
     // fin [Req.s14-138] acnunez 30.01.2015
@@ -219,7 +219,8 @@
 
     /**
      * Enviar respuesta en formato TXT (HTML)
-     * @author acnunez  [Req.s14-138]  
+     * 
+     * @author acnunez [Req.s14-138]
      * @since 30.01.2015
      * @param servletParams
      * @param strRespuesta
@@ -233,7 +234,7 @@
         out.flush();
         out.close();
     }
-    
+
     /**
      * Enviar respuesta en formato JSON (AJAX)
      * 
@@ -1182,7 +1183,7 @@
      * @param evento
      * @return
      */
-    
+
     protected String armarComboDinamico(List<BeanCombo> listBeanCombo,
                                         String name,
                                         String evento,
@@ -1194,13 +1195,13 @@
         StringBuilder sbCombo = new StringBuilder();
         String opcion;
         String selected;
-        if(_isEmpty(nextField)){
+        if (_isEmpty(nextField)) {
             nextField = "none";
         }
-        if(_isEmpty(tabIndex)){
+        if (_isEmpty(tabIndex)) {
             tabIndex = "1";
         }
-        String componente = "<select name=\"" + name + "\" id=\"" + name + "\" style=\"" + style + "\" onchange=\"JavaScript:" + (!_isEmpty(evento) ? evento + "()" : "") + "\" class=\"campoobligatorioiz\" onfocus=\"nextfield='"+nextField+"'\" tabindex=\""+tabIndex+"\"> ";
+        String componente = "<select name=\"" + name + "\" id=\"" + name + "\" style=\"" + style + "\" onchange=\"JavaScript:" + (!_isEmpty(evento) ? evento + "()" : "") + "\" class=\"campoobligatorioiz\" onfocus=\"nextfield='" + nextField + "'\" tabindex=\"" + tabIndex + "\"> ";
         sbCombo.append(componente);
         if (agregarItemSel) {
             opcion = String.format("<option value=\"%s\" >%s</option>", "0", "SELECCIONE...");
@@ -1217,7 +1218,7 @@
         sbCombo.append("</select>");
         return "<![CDATA[" + sbCombo.toString() + "]]>";
     }
-    
+
     protected String armarComboDinamico(List<BeanCombo> listBeanCombo,
                                         String name,
                                         String evento,
@@ -1241,27 +1242,27 @@
                                            String style,
                                            String codigoSeleccionado,
                                            boolean agregarItemSel) {
-       StringBuilder sbCombo = new StringBuilder();
-       String opcion;
-       String selected;
-       String componente = "<select name=\"" + name + "\" id=\"" + name + "\" style=\"" + style + "\" onchange=\"JavaScript:" + (!_isEmpty(evento) ? evento + "()" : "") + "\" class=\"campoobligatorioiz\" >";
-       sbCombo.append(componente);
-       if (agregarItemSel) {
-          opcion = String.format("<option value=\"%s\" >%s</option>", "0", "SELECCIONE...");
-          sbCombo.append(opcion);
-       }
-       for (admin.util.BeanCombo beanCombo : listBeanCombo) {
-          selected = _equiv(beanCombo.getCodigo(), codigoSeleccionado) ? "selected" : "";
-          opcion = String.format("<option value=\"%s\" %s >%s</option>",
-                                 beanCombo.getCodigo(),
-                                 selected,
-                                 beanCombo.getDescripcion());
-          sbCombo.append(opcion);
-       }
-       sbCombo.append("</select>");
-       return "<![CDATA[" + sbCombo.toString() + "]]>";
+        StringBuilder sbCombo = new StringBuilder();
+        String opcion;
+        String selected;
+        String componente = "<select name=\"" + name + "\" id=\"" + name + "\" style=\"" + style + "\" onchange=\"JavaScript:" + (!_isEmpty(evento) ? evento + "()" : "") + "\" class=\"campoobligatorioiz\" >";
+        sbCombo.append(componente);
+        if (agregarItemSel) {
+            opcion = String.format("<option value=\"%s\" >%s</option>", "0", "SELECCIONE...");
+            sbCombo.append(opcion);
+        }
+        for (admin.util.BeanCombo beanCombo : listBeanCombo) {
+            selected = _equiv(beanCombo.getCodigo(), codigoSeleccionado) ? "selected" : "";
+            opcion = String.format("<option value=\"%s\" %s >%s</option>",
+                                   beanCombo.getCodigo(),
+                                   selected,
+                                   beanCombo.getDescripcion());
+            sbCombo.append(opcion);
+        }
+        sbCombo.append("</select>");
+        return "<![CDATA[" + sbCombo.toString() + "]]>";
     }
-    
+
     /**
      * Generador de reportes
      * 
@@ -1401,6 +1402,12 @@
             exporter.setParameter(JRExporterParameter.JASPER_PRINT, jasperPrint);
             exporter.setParameter(JRExporterParameter.OUTPUT_STREAM, outputStream);
             exporter.exportReport();
+        } else if (_equiv(tipoArchivo, Constante.TIPO_ARCHIVO_REPORTE_WORD)) {
+            servletParams.getResponse().setContentType("application/msword");
+            exporter = new JRPdfExporter();
+            exporter.setParameter(JRExporterParameter.JASPER_PRINT, jasperPrint);
+            exporter.setParameter(JRExporterParameter.OUTPUT_STREAM, outputStream);
+            exporter.exportReport();
         } else if (_equiv(tipoArchivo, Constante.TIPO_ARCHIVO_REPORTE_EXCEL)) {
             parameters.put("IS_IGNORE_PAGINATION", true);
             servletParams.getResponse().setContentType("application/vnd.ms-excel");
@@ -1431,8 +1438,8 @@
      * Método que inicializa parámetros para la paginación de un bean
      * 
      * @author agarcia
-     * @since [Req.S16-041] 15.12.2016 
-     *  
+     * @since [Req.S16-041] 15.12.2016
+     * 
      * @param servletParams
      * @param paginable
      */
@@ -1448,11 +1455,10 @@
     }
 
     /**
-     * Método que termina la configuración para la paginación de un bean
-     * estableciendo los atributos en la petición (request)
+     * Método que termina la configuración para la paginación de un bean estableciendo los atributos en la petición (request)
      * 
      * @author agarcia
-     * @since [Req.S16-041] 15.12.2016 
+     * @since [Req.S16-041] 15.12.2016
      * 
      * @param servletParams
      * @param lstReturn
@@ -1478,12 +1484,12 @@
         setRequestAttribute(servletParams, "total", _toStr(totalRegistros));
         setRequestAttribute(servletParams, "indFin", fin);
     }
-    
+
     // Inicio [Req. S16-039] agarcia 13.01.2016
     protected String getMyDataBeanRelacionados(List<?> listBeans, String... campos) throws Exception {
         return getMyDataBeanRelacionados(listBeans, true, campos);
     }
-    
+
     private String getMyDataBeanRelacionados(List<?> listBeans, boolean validarCampos, String... campos) throws Exception {
         StringBuilder sbMyData = new StringBuilder();
         boolean isAccessible;
@@ -1492,7 +1498,7 @@
         boolean isAccessibleRelacionado;
         Field fieldRelacionado = null;
         boolean campoRelacionado = false;
-        
+
         if (_isEmpty(listBeans)) {
             return sbMyData.toString();
         }
@@ -1506,31 +1512,31 @@
                 sbMyData.append("[");
                 for (int j = 0; j < campos.length; j++) {
                     if (!_isEmpty(campos[j])) {
-                        
+
                         campoRelacionado = false;
-                        if (campos[j].contains(".")){
+                        if (campos[j].contains(".")) {
                             campoRelacionado = true;
                         }
-                        if (campoRelacionado){
+                        if (campoRelacionado) {
                             nombreCampo = campos[j].split("\\.");
                             fieldRelacionado = mapFields.get(nombreCampo[0]);
-                            if (!_isEmpty(fieldRelacionado)){
+                            if (!_isEmpty(fieldRelacionado)) {
                                 mapFieldsRelacionado = _toMapFields(fieldRelacionado.getType());
                                 fieldRelacionado = mapFieldsRelacionado.get(nombreCampo[1]);
                             }
-                            field = mapFields.get(nombreCampo[0]); 
+                            field = mapFields.get(nombreCampo[0]);
                         } else {
-                            field = mapFields.get(campos[j]); 
+                            field = mapFields.get(campos[j]);
                         }
-                        
+
                         if (!_isEmpty(field)) {
                             if (!(isAccessible = field.isAccessible())) {
                                 field.setAccessible(true);
                             }
-                            
-                            if (campoRelacionado){
+
+                            if (campoRelacionado) {
                                 valor = field.get(listBeans.get(i));
-                                if (!_isEmpty(fieldRelacionado)){
+                                if (!_isEmpty(fieldRelacionado)) {
                                     if (!(isAccessibleRelacionado = fieldRelacionado.isAccessible())) {
                                         fieldRelacionado.setAccessible(true);
                                     }
@@ -1538,19 +1544,19 @@
                                     if (!isAccessibleRelacionado) {
                                         fieldRelacionado.setAccessible(false);
                                     }
-                                }else if (validarCampos) {
+                                } else if (validarCampos) {
                                     throw new RuntimeException("myData: No se encontro campo en lista de Beans.");
                                 }
-                            }else{
+                            } else {
                                 valor = field.get(listBeans.get(i));
                             }
-                            
+
                             if (campoRelacionado) {
                                 valor = getValorCampo(valor, fieldRelacionado);
                             } else {
                                 valor = getValorCampo(valor, field);
                             }
-                            
+
                             if (!isAccessible) {
                                 field.setAccessible(false);
                             }
diff --git a/DELFINWEBNEW/src/general/utils/tags/botonesDelfinWeb.properties b/DELFINWEBNEW/src/general/utils/tags/botonesDelfinWeb.properties
index fe26b5b..6897f14 100644
--- a/DELFINWEBNEW/src/general/utils/tags/botonesDelfinWeb.properties
+++ b/DELFINWEBNEW/src/general/utils/tags/botonesDelfinWeb.properties
@@ -1408,5 +1408,11 @@
 #[Req. S17-006] agarcia 31.01.2017
 BT_CronogramaManual.gif=Cronograma Manual@@G
 #[Req.17-008] acnunez 23.02.2017
+#Inicio [Req.S17-007] kdelacruz
 BT_MostrarRepLegales.gif=Mostrar Representantes Legales@@G
-#Fin[Req.17-008]
\ No newline at end of file
+BT_AsignarSolicitud.gif=Asignar@@G
+BT_AtenderSolicitud.gif=Atender@@G
+BT_BuscarSolicitud.gif=Buscar@@G
+BT_Observar.gif=Observar@@G
+BT_ExportarExcel.git=Exportar@@G
+#Fin[Req.S17-007]
diff --git a/DELFINWEBNEW/src/util/file/servlets/CB_T_File_Servlet.java b/DELFINWEBNEW/src/util/file/servlets/CB_T_File_Servlet.java
new file mode 100644
index 0000000..b5bc4b4
--- /dev/null
+++ b/DELFINWEBNEW/src/util/file/servlets/CB_T_File_Servlet.java
@@ -0,0 +1,120 @@
+package util.file.servlets;
+
+import financ.util.file.bean.BeanCBFile;
+import financ.util.file.bean.BeanCBFileTemporal;
+import financ.util.file.facade.CBFileFacade;
+import financ.util.file.facade.CBFileTemporalFacade;
+import financ.util.file.local.CBFileFacadeInterfaceLocal;
+import financ.util.file.local.CBFileTemporalFacadeInterfaceLocal;
+import general.servlets.GE_BaseMethodInvocation_Servlet;
+
+import java.io.ByteArrayInputStream;
+
+import javax.servlet.ServletOutputStream;
+
+import pe.com.tfc.utils.ErrorControladoException;
+import pe.com.tfc.utils.FormFile;
+import pe.com.tfc.utils.RequestMapping;
+import admin.util.Constante;
+import admin.util.ConstantesErrores;
+
+/**
+ * CB_T_File_Servlet
+ * 
+ * @author kdelacruz
+ * @since [Req.17-007] 06.03.2017 Implementación WorkFlow Legal
+ */
+public class CB_T_File_Servlet extends GE_BaseMethodInvocation_Servlet {
+
+    private static final long serialVersionUID = 4385324561046694246L;
+    private static final String PATH_FILE = "/UTILS/file/";
+    private static final String URL_MOSTRAR = PATH_FILE + "CB_T_File_CHILD.jsp";
+
+    private CBFileTemporalFacadeInterfaceLocal cbFileTemporalFacadeInterfaceLocal;
+    private CBFileFacadeInterfaceLocal cbFileFacadeInterfaceLocal;
+
+    protected void initEJBs() throws Exception {
+        cbFileTemporalFacadeInterfaceLocal = lookup(CBFileTemporalFacade.LocalJNDIName);
+        cbFileFacadeInterfaceLocal = lookup(CBFileFacade.LocalJNDIName);
+    }
+
+    @Override
+    protected void execute(ServletParams servletParams) throws Exception {
+        // TODO Auto-generated method stub
+
+    }
+
+    @RequestMapping(value = "MOSTRAR_TMP", url = URL_MOSTRAR)
+    protected void mostrarTemporalHandler(ServletParams servletParams) throws Exception {
+        String nombreCampo = getParameter(servletParams, "nombreCampo");
+        setRequestAttribute(servletParams, "nombreCampo", nombreCampo);
+
+        forward(servletParams);
+    }
+
+    @RequestMapping(value = "GUARDAR_TMP", url = URL_MOSTRAR)
+    protected void guardarTemporalHandler(ServletParams servletParams) throws Exception {
+        FormFile formFile = getRequestAttribute(servletParams, "txtFileTemporal", FormFile.class);
+        String nombreCampo = getParameter(servletParams, "nombreCampo");
+
+        String idFile = cbFileTemporalFacadeInterfaceLocal.guardar(formFile, getBeanParametrosAuditoria(servletParams));
+
+        setRequestAttribute(servletParams, "vieneDeGuardar", Constante.INDICADOR_SI);
+        setRequestAttribute(servletParams, "nombreCampo", nombreCampo);
+        setRequestAttribute(servletParams, "idFile", idFile);
+        forward(servletParams);
+    }
+
+    @RequestMapping(value = "DESCARGAR_TMP")
+    protected void descargarTemporalHandler(final ServletParams servletParams) throws Exception {
+        final String idFile = getParameter(servletParams, "idFile");
+
+        BeanCBFileTemporal beanCBFileTemporal = cbFileTemporalFacadeInterfaceLocal.get(idFile,
+                                                                                       getBeanParametrosAuditoria(servletParams));
+
+        if (_isEmpty(beanCBFileTemporal)) {
+            throw new ErrorControladoException(ConstantesErrores.ERROR_11143);
+        }
+
+        ServletOutputStream servletOutputStream = servletParams.getResponse().getOutputStream();
+        servletParams.getResponse().setContentType(beanCBFileTemporal.getContentType());
+        servletParams.getResponse().setHeader("Content-disposition",
+                                              "attachment; filename=" + beanCBFileTemporal.getNombre());
+
+        byte[] buf = new byte[1024];
+        int length;
+        ByteArrayInputStream byteArrayInputStream = new ByteArrayInputStream(beanCBFileTemporal.getContenido());
+
+        while ((length = byteArrayInputStream.read(buf)) > 0) {
+            servletOutputStream.write(buf, 0, length);
+        }
+        byteArrayInputStream.close();
+        servletOutputStream.close();
+    }
+
+    @RequestMapping(value = "DESCARGAR")
+    protected void descargarHandler(final ServletParams servletParams) throws Exception {
+        final String idFile = getParameter(servletParams, "idFile");
+
+        BeanCBFile beanCBFile = cbFileFacadeInterfaceLocal.get(idFile, getBeanParametrosAuditoria(servletParams));
+
+        if (_isEmpty(beanCBFile)) {
+            throw new ErrorControladoException(ConstantesErrores.ERROR_11143);
+        }
+
+        ServletOutputStream servletOutputStream = servletParams.getResponse().getOutputStream();
+        servletParams.getResponse().setContentType(beanCBFile.getContentType());
+        servletParams.getResponse().setHeader("Content-disposition", "attachment; filename=" + beanCBFile.getNombre());
+
+        byte[] buf = new byte[1024];
+        int length;
+        ByteArrayInputStream byteArrayInputStream = new ByteArrayInputStream(beanCBFile.getContenido());
+
+        while ((length = byteArrayInputStream.read(buf)) > 0) {
+            servletOutputStream.write(buf, 0, length);
+        }
+        byteArrayInputStream.close();
+        servletOutputStream.close();
+    }
+
+}
diff --git a/FINANCIERONEW/src/financ/clientes/beans/BeanCLNotarios.java b/FINANCIERONEW/src/financ/clientes/beans/BeanCLNotarios.java
new file mode 100644
index 0000000..ac1c03f
--- /dev/null
+++ b/FINANCIERONEW/src/financ/clientes/beans/BeanCLNotarios.java
@@ -0,0 +1,58 @@
+package financ.clientes.beans;
+
+import java.io.Serializable;
+/**
+ * BeanCLNotarios
+ * 
+ * @author kdelacruz
+ * @since [Req.17-007] 06.03.2017 Implementación WorkFlow Legal
+ */
+public class BeanCLNotarios implements Serializable {
+
+    private static final long serialVersionUID = 4759066723154840112L;
+    private String codigoNotario;
+    private String codigoPersona;
+    private String nombrePersona;
+    private String numeroColegiatura;
+    private String numeroRepev;
+
+    public String getCodigoNotario() {
+        return codigoNotario;
+    }
+
+    public void setCodigoNotario(String codigoNotario) {
+        this.codigoNotario = codigoNotario;
+    }
+
+    public String getCodigoPersona() {
+        return codigoPersona;
+    }
+
+    public void setCodigoPersona(String codigoPersona) {
+        this.codigoPersona = codigoPersona;
+    }
+
+    public String getNombrePersona() {
+        return nombrePersona;
+    }
+
+    public void setNombrePersona(String nombrePersona) {
+        this.nombrePersona = nombrePersona;
+    }
+
+    public String getNumeroColegiatura() {
+        return numeroColegiatura;
+    }
+
+    public void setNumeroColegiatura(String numeroColegiatura) {
+        this.numeroColegiatura = numeroColegiatura;
+    }
+
+    public String getNumeroRepev() {
+        return numeroRepev;
+    }
+
+    public void setNumeroRepev(String numeroRepev) {
+        this.numeroRepev = numeroRepev;
+    }
+}
diff --git a/FINANCIERONEW/src/financ/clientes/entity/CLNotarios.java b/FINANCIERONEW/src/financ/clientes/entity/CLNotarios.java
index 38dd22a..723d91b 100644
--- a/FINANCIERONEW/src/financ/clientes/entity/CLNotarios.java
+++ b/FINANCIERONEW/src/financ/clientes/entity/CLNotarios.java
@@ -1,6 +1,4 @@
 package financ.clientes.entity;
- 
-import java.util.Date;
 
 import javax.persistence.Column;
 import javax.persistence.Entity;
@@ -9,201 +7,64 @@
 import javax.persistence.JoinColumn;
 import javax.persistence.ManyToOne;
 import javax.persistence.Table;
-import javax.persistence.Temporal;
-import javax.persistence.TemporalType;
+
+import pe.com.tfc.utils.Auditable;
 
 /**
  * CLNotarios generated by GONZALES DAZA WALTER - IRAZABAL CUADROS CARLOS
+ * @since [Req.S17-007] kdelacruz 27.03.2017
  */
 @Entity
 @Table(name = "CLMNTAR", schema = "DFIN", uniqueConstraints = {})
-public class CLNotarios implements java.io.Serializable {
+public class CLNotarios extends Auditable { //[Req.S17-007] kdelacruz 27.03.2017
+    private static final long serialVersionUID = 9080512401219751948L;
 
-	// Fields
+    private String codigoNotario;
 
-	/**
-	 * 
-	 */
-	private static final long serialVersionUID = 9080512401219751948L;
+    private CLPersonas clPersonas;
 
-	private String codigoNotario;
+    //evargas 24.08.2012
+    private String numeroColegiatura;
 
-	private CLPersonas clPersonas;
-	
-	//evargas 24.08.2012
-	private String numeroColegiatura;
-	
-	private String numeroRepev;
+    private String numeroRepev;
 
-	private String estadoRegistro;
+    // Property accessors
+    @Id
+    @Column(name = "C_NOTARI", unique = true, nullable = false, insertable = true, updatable = true, length = 13)
+    public String getCodigoNotario() {
+        return this.codigoNotario;
+    }
 
-	private Date fechaInsercion;
+    public void setCodigoNotario(String codigoNotario) {
+        this.codigoNotario = codigoNotario;
+    }
 
-	private String usuarioInsercion;
+    @ManyToOne(cascade = {}, fetch = FetchType.LAZY)
+    @JoinColumn(name = "C_NOTARI", unique = true, nullable = false, insertable = false, updatable = false)
+    public CLPersonas getClPersonas() {
+        return this.clPersonas;
+    }
 
-	private String terminalInsercion;
+    public void setClPersonas(CLPersonas clPersonas) {
+        this.clPersonas = clPersonas;
+    }
 
-	private String ipInsercion;
+    //evargas 24.08.2012
+    @Column(name = "C_IDCOLE", unique = false, nullable = true, insertable = true, updatable = true, length = 10)
+    public String getNumeroColegiatura() {
+        return this.numeroColegiatura;
+    }
 
-	private Date fechaModificacion;
+    public void setNumeroColegiatura(String numeroColegiatura) {
+        this.numeroColegiatura = numeroColegiatura;
+    }
 
-	private String usuarioModificacion;
+    @Column(name = "C_IDREPV", unique = false, nullable = true, insertable = true, updatable = true, length = 10)
+    public String getNumeroRepev() {
+        return this.numeroRepev;
+    }
 
-	private String terminalModificacion;
-
-	private String ipModificacion;
-
-	// Constructors
-
-	/** default constructor */
-	public CLNotarios() {
-	}
-
-	/** minimal constructor */
-	public CLNotarios(String codigoNotario, CLPersonas clPersonas, String estadoRegistro) {
-		this.codigoNotario = codigoNotario;
-		this.clPersonas = clPersonas;
-		this.estadoRegistro = estadoRegistro;
-	}
-
-	/** full constructor */
-	public CLNotarios(String codigoNotario, CLPersonas clPersonas, String estadoRegistro,
-			Date fechaInsercion, String usuarioInsercion, String terminalInsercion, String ipInsercion,
-			Date fechaModificacion, String usuarioModificacion, String terminalModificacion, String ipModificacion) {
-		this.codigoNotario = codigoNotario;
-		this.clPersonas = clPersonas;
-		this.estadoRegistro = estadoRegistro;
-		this.fechaInsercion = fechaInsercion;
-		this.usuarioInsercion = usuarioInsercion;
-		this.terminalInsercion = terminalInsercion;
-		this.ipInsercion = ipInsercion;
-		this.fechaModificacion = fechaModificacion;
-		this.usuarioModificacion = usuarioModificacion;
-		this.terminalModificacion = terminalModificacion;
-		this.ipModificacion = ipModificacion;
-	}
-
-	// Property accessors
-	@Id
-	@Column(name = "C_NOTARI", unique = true, nullable = false, insertable = true, updatable = true, length = 13)
-	public String getCodigoNotario() {
-		return this.codigoNotario;
-	}
-
-	public void setCodigoNotario(String codigoNotario) {
-		this.codigoNotario = codigoNotario;
-	}
-
-	@ManyToOne(cascade = {}, fetch = FetchType.LAZY)
-	@JoinColumn(name = "C_NOTARI", unique = true, nullable = false, insertable = false, updatable = false)
-	public CLPersonas getClPersonas() {
-		return this.clPersonas;
-	}
-
-	public void setClPersonas(CLPersonas clPersonas) {
-		this.clPersonas = clPersonas;
-	}
-	
-	//evargas 24.08.2012
-	@Column(name = "C_IDCOLE", unique = false, nullable = true, insertable = true, updatable = true, length = 10)
-	public String getNumeroColegiatura() {
-		return this.numeroColegiatura;
-	}
-
-	public void setNumeroColegiatura(String numeroColegiatura) {
-		this.numeroColegiatura = numeroColegiatura;
-	}
-
-	@Column(name = "C_IDREPV", unique = false, nullable = true, insertable = true, updatable = true, length = 10)
-	public String getNumeroRepev() {
-		return this.numeroRepev;
-	}
-
-	public void setNumeroRepev(String numeroRepev) {
-		this.numeroRepev = numeroRepev;
-	}
-
-	@Column(name = "C_ESTREG", unique = false, nullable = false, insertable = true, updatable = true, length = 1)
-	public String getEstadoRegistro() {
-		return this.estadoRegistro;
-	}
-
-	public void setEstadoRegistro(String estadoRegistro) {
-		this.estadoRegistro = estadoRegistro;
-	}
-
-	@Temporal(TemporalType.TIMESTAMP)
-	@Column(name = "A_FECINS", unique = false, nullable = true, insertable = true, updatable = true, length = 7)
-	public Date getFechaInsercion() {
-		return this.fechaInsercion;
-	}
-
-	public void setFechaInsercion(Date fechaInsercion) {
-		this.fechaInsercion = fechaInsercion;
-	}
-
-	@Column(name = "A_USUINS", unique = false, nullable = true, insertable = true, updatable = true, length = 15)
-	public String getUsuarioInsercion() {
-		return this.usuarioInsercion;
-	}
-
-	public void setUsuarioInsercion(String usuarioInsercion) {
-		this.usuarioInsercion = usuarioInsercion;
-	}
-
-	@Column(name = "A_TERINS", unique = false, nullable = true, insertable = true, updatable = true, length = 30)
-	public String getTerminalInsercion() {
-		return this.terminalInsercion;
-	}
-
-	public void setTerminalInsercion(String terminalInsercion) {
-		this.terminalInsercion = terminalInsercion;
-	}
-
-	@Column(name = "A_IPEINS", unique = false, nullable = true, insertable = true, updatable = true, length = 20)
-	public String getIpInsercion() {
-		return this.ipInsercion;
-	}
-
-	public void setIpInsercion(String ipInsercion) {
-		this.ipInsercion = ipInsercion;
-	}
-
-	@Temporal(TemporalType.TIMESTAMP)
-	@Column(name = "A_FECMOD", unique = false, nullable = true, insertable = true, updatable = true, length = 7)
-	public Date getFechaModificacion() {
-		return this.fechaModificacion;
-	}
-
-	public void setFechaModificacion(Date fechaModificacion) {
-		this.fechaModificacion = fechaModificacion;
-	}
-
-	@Column(name = "A_USUMOD", unique = false, nullable = true, insertable = true, updatable = true, length = 15)
-	public String getUsuarioModificacion() {
-		return this.usuarioModificacion;
-	}
-
-	public void setUsuarioModificacion(String usuarioModificacion) {
-		this.usuarioModificacion = usuarioModificacion;
-	}
-
-	@Column(name = "A_TERMOD", unique = false, nullable = true, insertable = true, updatable = true, length = 30)
-	public String getTerminalModificacion() {
-		return this.terminalModificacion;
-	}
-
-	public void setTerminalModificacion(String terminalModificacion) {
-		this.terminalModificacion = terminalModificacion;
-	}
-
-	@Column(name = "A_IPEMOD", unique = false, nullable = true, insertable = true, updatable = true, length = 20)
-	public String getIpModificacion() {
-		return this.ipModificacion;
-	}
-
-	public void setIpModificacion(String ipModificacion) {
-		this.ipModificacion = ipModificacion;
-	}
-
+    public void setNumeroRepev(String numeroRepev) {
+        this.numeroRepev = numeroRepev;
+    }
 }
\ No newline at end of file
diff --git a/FINANCIERONEW/src/financ/clientes/facade/CLNotariosFacade.java b/FINANCIERONEW/src/financ/clientes/facade/CLNotariosFacade.java
new file mode 100644
index 0000000..6e611b7
--- /dev/null
+++ b/FINANCIERONEW/src/financ/clientes/facade/CLNotariosFacade.java
@@ -0,0 +1,91 @@
+package financ.clientes.facade;
+
+import java.util.ArrayList;
+import java.util.HashMap;
+import java.util.List;
+import java.util.Map;
+
+import javax.ejb.EJB;
+import javax.ejb.Stateless;
+
+import pe.com.tfc.utils.AbstractFacade;
+import pe.com.tfc.utils.PropertyParams;
+import admin.contab.beans.BeanParametrosAuditoria;
+import financ.clientes.beans.BeanCLNotarios;
+import financ.clientes.entity.CLNotarios;
+import financ.clientes.local.CLNotariosFacadeInterfaceLocal;
+import financ.clientes.local.CLNotariosInterfaceLocal;
+import financ.util.Constante;
+import financ.util.Paginacion;
+/**
+ * CLNotariosFacade
+ * 
+ * @author kdelacruz
+ * @since [Req.17-007] 06.03.2017 Implementación WorkFlow Legal
+ */
+@Stateless
+public class CLNotariosFacade extends AbstractFacade<CLNotarios> implements CLNotariosFacadeInterfaceLocal {
+
+    public static final String LocalJNDIName = CLNotariosFacade.class.getSimpleName() + "/local";
+
+    @EJB
+    CLNotariosInterfaceLocal clNotariosInterfaceLocal;
+
+    public Map<String, Object> buscar(String criterio,
+                                      String valor,
+                                      int intPagina,
+                                      BeanParametrosAuditoria beanParametrosAuditoria) throws Exception {
+        String modulo = "CLNotariosFacade.buscar()";
+        String usuario = beanParametrosAuditoria.getUsuarioInsercion();
+        List<BeanCLNotarios> lstBeanCLNotarios = new ArrayList<BeanCLNotarios>();
+        List<CLNotarios> lstCLNotarios;
+        PropertyParams propertyParams;
+        Map<String, Object> mapRespuesta = new HashMap<String, Object>();
+        Long cantReg = 0L;
+        try {
+            /** PAGINADO PROPUESTA CREDITO **/
+            int inicio = (intPagina - 1) * Paginacion.NUM_REG;
+
+            propertyParams = new PropertyParams();
+            if (_equiv(criterio, Constante.CRITERIO_BUSQUEDA_CODIGO)) {
+                propertyParams.addProperty("codigoNotario", valor + "%", true);
+            } else {
+                propertyParams.addProperty("clPersonas.nombreoRazonSocial", valor + "%", true);
+            }
+
+            cantReg = clNotariosInterfaceLocal.countByProperties(propertyParams);
+
+            propertyParams.setFirstResult(inicio);
+            propertyParams.setMaxResults(Paginacion.NUM_REG);
+            propertyParams.addPropertyOrder("id");
+
+            lstCLNotarios = clNotariosInterfaceLocal.findByProperties(propertyParams);
+
+            for (CLNotarios clNotarios : lstCLNotarios) {
+                lstBeanCLNotarios.add(getBeanCLNotarios(clNotarios));
+            }
+
+            mapRespuesta.put("lstBeanCLNotarios", lstBeanCLNotarios);
+            mapRespuesta.put("cantReg", cantReg);
+        } catch (Exception e) {
+            throw handlerError(e, usuario, modulo);
+        }
+        return mapRespuesta;
+    }
+
+    private BeanCLNotarios getBeanCLNotarios(CLNotarios clNotarios) {
+        BeanCLNotarios beanClNotarios = new BeanCLNotarios();
+        if (_isEmpty(clNotarios)) {
+            return beanClNotarios;
+        }
+
+        beanClNotarios.setCodigoNotario(clNotarios.getCodigoNotario());
+        beanClNotarios.setCodigoPersona(clNotarios.getClPersonas().getCodigoPersona());
+        beanClNotarios.setNombrePersona(clNotarios.getClPersonas().getNombreoRazonSocial());
+        beanClNotarios.setNumeroColegiatura(clNotarios.getNumeroColegiatura());
+        beanClNotarios.setNumeroRepev(clNotarios.getNumeroRepev());
+
+        return beanClNotarios;
+    }
+
+}
diff --git a/FINANCIERONEW/src/financ/clientes/local/CLNotariosFacadeInterfaceLocal.java b/FINANCIERONEW/src/financ/clientes/local/CLNotariosFacadeInterfaceLocal.java
new file mode 100644
index 0000000..ead2ecf
--- /dev/null
+++ b/FINANCIERONEW/src/financ/clientes/local/CLNotariosFacadeInterfaceLocal.java
@@ -0,0 +1,22 @@
+package financ.clientes.local;
+
+import java.util.Map;
+
+import javax.ejb.Local;
+
+import admin.contab.beans.BeanParametrosAuditoria;
+/**
+ * CLNotariosFacadeInterfaceLocal
+ * 
+ * @author kdelacruz
+ * @since [Req.17-007] 06.03.2017 Implementación WorkFlow Legal
+ */
+@Local
+public interface CLNotariosFacadeInterfaceLocal {
+
+    public Map<String, Object> buscar(String criterio,
+                                      String valor,
+                                      int intPagina,
+                                      BeanParametrosAuditoria beanParametrosAuditoria) throws Exception;
+
+}
diff --git a/FINANCIERONEW/src/financ/clientes/local/CLNotariosInterfaceLocal.java b/FINANCIERONEW/src/financ/clientes/local/CLNotariosInterfaceLocal.java
index 8726de7..e116163 100644
--- a/FINANCIERONEW/src/financ/clientes/local/CLNotariosInterfaceLocal.java
+++ b/FINANCIERONEW/src/financ/clientes/local/CLNotariosInterfaceLocal.java
@@ -1,42 +1,20 @@
 package financ.clientes.local;
 
-import financ.clientes.entity.*;
-
-
 import java.util.*;
 
 import javax.ejb.Local;
+
+import financ.clientes.entity.CLNotarios;
+import pe.com.tfc.utils.GenericInterface;
 
 /**
  * Local interface for CLNotariosFacade.
  * 
  * @author GONZALES DAZA WALTER - IRAZABAL CUADROS CARLOS
+ * @since [Req.S17-007] kdelacruz 27.03.2017
  */
 @Local
-public interface CLNotariosInterfaceLocal {
-	public void save(CLNotarios transientInstance);
-
-	public void delete(CLNotarios persistentInstance);
-
-	public CLNotarios update(CLNotarios detachedInstance);
-
-	public CLNotarios findById(String id);
-
-	public List findByProperty(String propertyName, Object value);
-
-	public List findByEstadoRegistro(Object estadoRegistro);
-
-	public List findByUsuarioInsercion(Object usuarioInsercion);
-
-	public List findByTerminalInsercion(Object terminalInsercion);
-
-	public List findByIpInsercion(Object ipInsercion);
-
-	public List findByUsuarioModificacion(Object usuarioModificacion);
-
-	public List findByTerminalModificacion(Object terminalModificacion);
-
-	public List findByIpModificacion(Object ipModificacion);
+public interface CLNotariosInterfaceLocal extends GenericInterface<CLNotarios, String>{
 	
 	//evargas 24.08.2012
 	public List findByCodigoPersona(
diff --git a/FINANCIERONEW/src/financ/clientes/session/CLNotariosSession.java b/FINANCIERONEW/src/financ/clientes/session/CLNotariosSession.java
index 874021f..64a59b3 100644
--- a/FINANCIERONEW/src/financ/clientes/session/CLNotariosSession.java
+++ b/FINANCIERONEW/src/financ/clientes/session/CLNotariosSession.java
@@ -5,122 +5,25 @@
 import javax.ejb.Stateless;
 import javax.ejb.TransactionAttribute;
 import javax.ejb.TransactionAttributeType;
-import javax.persistence.EntityManager;
-import javax.persistence.PersistenceContext;
-
+import pe.com.tfc.utils.AbstractSession;
 import financ.clientes.entity.CLNotarios;
 import financ.clientes.local.CLNotariosInterfaceLocal;
-import financ.clientes.remote.CLNotariosInterfaceRemote;
 import financ.util.Paginacion;
-
+/**
+ * CLNotariosSession
+ * 
+ * @since [Req.S17-007] kdelacruz 27.03.2017
+ */
 @TransactionAttribute(TransactionAttributeType.REQUIRED)
 @Stateless
-public class CLNotariosSession implements CLNotariosInterfaceLocal, CLNotariosInterfaceRemote {
-	// property constants
-	public static final String ESTADOREGISTRO = "estadoRegistro";
-
-	public static final String USUARIOINSERCION = "usuarioInsercion";
-
-	public static final String TERMINALINSERCION = "terminalInsercion";
-
-	public static final String IPINSERCION = "ipInsercion";
-
-	public static final String USUARIOMODIFICACION = "usuarioModificacion";
-
-	public static final String TERMINALMODIFICACION = "terminalModificacion";
-
-	public static final String IPMODIFICACION = "ipModificacion";
-
-	@PersistenceContext
-	private EntityManager entityManager;
-
-	public void save(CLNotarios transientInstance) {
-		try {
-			entityManager.persist(transientInstance);
-			
-		} catch (RuntimeException re) {
-			throw re;
-		}
-	}
-
-	public void delete(CLNotarios persistentInstance) {
-		try {
-			entityManager.remove(persistentInstance);
-			
-		} catch (RuntimeException re) {
-			throw re;
-		}
-	}
-
-	public CLNotarios update(CLNotarios detachedInstance) {
-		try {
-			CLNotarios result = entityManager.merge(detachedInstance);
-			return result;
-		} catch (RuntimeException re) {
-			throw re;
-		}
-	}
-
-	public CLNotarios findById(String id) {
-		try {
-			CLNotarios instance = entityManager.find(CLNotarios.class, id);
-			return instance;
-		} catch (RuntimeException re) {
-			throw re;
-		}
-	}
-
-	@SuppressWarnings("unchecked")
-	public List<CLNotarios> findByProperty(String propertyName, Object value) {
-		try {
-			String queryString = "select model from CLNotarios model where model."
-					+ propertyName + "= :propertyValue";
-			return entityManager.createQuery(queryString).setParameter(
-					"propertyValue", value).getResultList();
-		} catch (RuntimeException re) {
-			throw re;
-		}
-	}
-
-	public List<CLNotarios> findByEstadoRegistro(Object estadoRegistro) {
-		return findByProperty(ESTADOREGISTRO, estadoRegistro);
-	}
-
-	public List<CLNotarios> findByUsuarioInsercion(Object usuarioInsercion) {
-		return findByProperty(USUARIOINSERCION, usuarioInsercion);
-	}
-
-	public List<CLNotarios> findByTerminalInsercion(Object terminalInsercion) {
-		return findByProperty(TERMINALINSERCION, terminalInsercion);
-	}
-
-	public List<CLNotarios> findByIpInsercion(Object ipInsercion) {
-		return findByProperty(IPINSERCION, ipInsercion);
-	}
-
-	public List<CLNotarios> findByUsuarioModificacion(Object usuarioModificacion) {
-		return findByProperty(USUARIOMODIFICACION, usuarioModificacion);
-	}
-
-	public List<CLNotarios> findByTerminalModificacion(Object terminalModificacion) {
-		return findByProperty(TERMINALMODIFICACION, terminalModificacion);
-	}
-
-	public List<CLNotarios> findByIpModificacion(Object ipModificacion) {
-		return findByProperty(IPMODIFICACION, ipModificacion);
-	}
-
-	@SuppressWarnings("unchecked")
-	public List<CLNotarios> findAll() {
-		try {
-			String queryString = "select model from CLNotarios model";
-			return entityManager.createQuery(queryString).getResultList();
-		} catch (RuntimeException re) {
-			throw re;
-		}
-	}
+public class CLNotariosSession extends AbstractSession<CLNotarios, String> implements CLNotariosInterfaceLocal {
 	
-	//evargas 24.08.2012
+	public CLNotariosSession() {
+        super(CLNotarios.class);
+        // TODO Auto-generated constructor stub
+    }
+
+    //evargas 24.08.2012
 	public List findByCodigoPersona(
 			String codigoPersona,
 			String estado,
diff --git a/FINANCIERONEW/src/financ/creditos/beans/BeanObtenerSolicitud.java b/FINANCIERONEW/src/financ/creditos/beans/BeanObtenerSolicitud.java
index 9248066..ec6f738 100644
--- a/FINANCIERONEW/src/financ/creditos/beans/BeanObtenerSolicitud.java
+++ b/FINANCIERONEW/src/financ/creditos/beans/BeanObtenerSolicitud.java
@@ -5,2340 +5,2911 @@
 
 import financ.clientes.beans.BeanCLDireccionPersonas;
 
-public class BeanObtenerSolicitud implements Serializable{
+public class BeanObtenerSolicitud implements Serializable {
 
-private static final long serialVersionUID = 100000000050178L;
-	
-	private String 	numeroSolicitud;
-	private Date 	fechaSolicitud;
-	private String  estadoSolicitud;
-	private String  tipoSolicitud;
-	private String  descripcionTipoSolicitud;
-	private String  codigoEstadoSolicitud;
-	private String  tipoTasa;
-	private Date 	fechaAplicacion;
-	private String  numeroCredito;
-	private String 	formaDesembolso;
-	private Date 	fechaDesembolso;
-	private String 	correlativoPlanPago;
-	private String 	modalidadCredito;
-	
-	//tipo sbs
-	private String  descripcionTipoCreditoSBS;
-	private String  codigoTipoCreditoSBS;
-	
-	private String  estadoSolicitudCambioCondiciones;
-	private Date 	fechaCambioUltEstado;
-	
-	private String  usuarioSolicito;
-	private String  usuarioAplico;
-	
-	private String  codigoDocumento;
-	private String  numeroDocumento;
-	private String  nombreRazonSocial;
-	private String  nombreCliente;
+    private static final long serialVersionUID = 100000000050178L;
 
-	/********************************************************************/
-	private String 	productoNombre;
-	private String 	codigoProducto;
-	private String 	productoIndicadorLineaCredito;
-	
-	private String 	indicadorLineaCredito;
-	
-	private String 	descripcionProductoAprobado;
-	private String 	codigoProductoAprobado;
-	/********************************************************************/
-	private String 	monedaDescripcion;
-	private String 	monedaCodigo;
-	
-	private String 	codigoMonedaAprobado;
-	private String 	descripcionMonedaAprobado;
-	/********************************************************************/
-	
-	private Double	montoSolicitado;
-	private Double	montoAprobado;
-	
-	/********************************************************************/
-	private String 	tipoCuotaDescripcion;
-	private String 	codigoTipoCuota;
-	
-	private String 	codigoTipoCuotaAprobado;
-	private String 	descripcionTipoCuotaAprobado;
-	
-	/********************************************************************/
-	private String 	frecuenciaPagoDescripcion;
-	private String 	codigoFrecuenciaPago;
-	
-	private String 	descripcionFrecuenciaPagoAprobada;
-	private String 	codigoFrecuenciaPagoAprobada;
-	/********************************************************************/
-	
-	private Long numeroCuota;
-	
-	/************ Usada para el caso de Registro Resolucion ***********/
-	private Long numeroCuotaResolucion;
-	
-	private Date    fechaPrimerPago;
-	
-	/************ Usada para el caso de Registro Resolucion ***********/
-	private Date    fechaPrimerPagoResolucion;
-	
-	private Long numeroCuotaGracia;
-	
-	/************ Usada para el caso de Registro Resolucion ***********/
-	private Long numeroCuotaGraciaResolucion;
-	
-	private Double 	valorCuotaSolicitado;
-	private Double 	valorCuotaAprobado;
-	
-	private Date    fechaVencimiento;
-	
-	/************ Usada para el caso de Registro Resolucion ***********/
-	private Date    fechaVencimientoResolucion;
-	
-	/****************************************************************/
-	private String  codigoTipoCreditoSolicitado;
-	private String  codigoSubTipoCreditoSolicitado;
-	
-	private String  descripcionTipoCredito;
-	private String  descripcionSubTipoCredito;
-	
-	private String  codigoTipoCreditoAprobado;
-	private String  descripcionTipoCreditoAprobado;
-	
-	private String  codigoSubTipoCreditoAprobado;
-	private String  descripcionSubTipoCreditoAprobado;
-	/****************************************************************/
-	
-	/********************************** CIIU ******************************/
-	private String  descripcionCIIU;
-	private String  codigoCIIU;
-	
-	private String  codigoCIIUaux;
+    private String numeroSolicitud;
+    private Date fechaSolicitud;
+    private String estadoSolicitud;
+    private String tipoSolicitud;
+    private String descripcionTipoSolicitud;
+    private String codigoEstadoSolicitud;
+    private String tipoTasa;
+    private Date fechaAplicacion;
+    private String numeroCredito;
+    private String formaDesembolso;
+    private Date fechaDesembolso;
+    private String correlativoPlanPago;
+    private String modalidadCredito;
 
-	private String  descripcionGiroNegocio;
-	private String  codigoGiroNegocio;
+    //tipo sbs
+    private String descripcionTipoCreditoSBS;
+    private String codigoTipoCreditoSBS;
 
-	private String  descripcionSectorEconomico;
-	private String  codigoSectorEconomico;
-	
-	private String  convenioPersonaJuridica;
-	private String  descripcionConvenio;
-	private String  cobranzaDiaria;
-	private String  zonaCobranza;
-	private String  codigoCobradorItinerante;
-	private String  cargoCuenta;
-	
-	private String  nombreUsuarioAprobacion;
-	private String  codigoUsuarioAprobacion;
-	private String  nombrePromotor;
-	private String  codigoPromotor;	
-	private String  nombreAnalistaResponsable;
-	private String  codigoAnalistaResponsable;
-	private String  nombreEjecutivo;
-	private String  codigoEjecutivo;
-	
-	private String  numeroPagare;
-	
-	private String  observaciones;
-	private String  observacionesResolucion;
-	
-	private String  fuenteFinanciamiento;
-	private String  codigoFuenteFinanciamiento;
-	private String  abreviaturaFuenteFinanciamiento;
-	
-	private String  lineaFinanciamiento;
-	private String  codigoLineaFinanciamiento;
-	private String  abreviaturaLineaFinanciamiento;
-		
-	/************ Usada para el caso de Registro Solicitud Credito ***********/
-	private Double  tasaInteresCuota;
-	private Double  tasaInteresPeriodoSolicitado;
-	
-	/************ Usada para el caso de Registro Resolucion ***********/
-	private Double  tasaInteresCuotaResolucion;
-	
-		/******TEA***/
-	private Double  tasaInteresMoratorio;
-	
-	/************ Usada para el caso de Registro Resolucion ***********/
-	private Double  tasaInteresMoratorioResolucion;
-	
-		/******TEA Dif 1mes Vcto***/
-	private Double  tasaInteresCompensatorio;
-	
-	/************ Usada para el caso de Registro Resolucion ***********/
-	private Double  tasaInteresCompensatorioResolucion;
-	
-	/*******Si es COMERCIAL **********************/
-	private String codigocanalVentas;
-	private String descCanalVentas;
-	
-	private String codigoVendedor;
-	private String descVendedor;	
-	
-	private String  descripcionEstado;
-	
-	private String  condicionSolicitud;
-	private String  descripcionCondicionSolicitud;
-	private String  tipoPlanilla;
-	
-	private String  direccion;
-	private String  direccionCorrespondencia;
-	private Date  	fechaNacimiento;
-	private String  estado;
-	private Date  	fechaPrimerAporte;
-	private String  codigoCliente;
-	private String  usuarioRegistro;
-	private String  indicadorConvenio;
-	private String  indicadorCobranzaDiaria;
-	private String  indicadorCargo;
-	
-	/********************************************************************/
-	private String motivoRechazo;
-	
-	private String codigoMotivoRechazo;
-	private String descripcionMotivoRechazo;
-	
-	private Long plazoDiasAprobado;
-	private Long plazoDiasSolicitado;
-	
-	private String  codigoTipoCalendarioSolicitado;
-	private String  codigoTipoCalendarioAprobado;
-	private String  tipoInteresFact;
-	
-	private String  indicadorPeriodoGraciaSolicitado;
-	private String  indicadorPeriodoGraciaAprobado;
-	
-	private String 	indicadorModificaFrecPago;
-	private String 	indicadorPermiteGracia;
-	
-	private Long diaPagoSolicitado;
-	private Long diaPagoAprobado;
-	private String  numeroConvenio;
-	private String  formaCredito;
-	
-	//Atributos Linea Credito	
-	private String idDiaPagoSolicitado;
-	private String idDiaPagoAprobado;
-	private Long diaCorte;
-	private Date fechaRevalidacionSolicitado;
-	private Date fechaRevalidacionAprobado;
-	private Long frecMinimaPago;
-	
-	
-	private Double tasaInteresEfectivaAnualSolicitado;
-	private Double tasaInteresEfectivaPeriodoSolicitado;
-	
-	//atributos para facturas vencidas
-	private Double tasaInteresEfectivaAnualSolicitadoVenc;
-	private Double tasaInteresEfectivaPeriodoSolicitadoVenc;	
-	
-	private String emiteFactura;
-	private String tipoInteres;
-	
-	private Double tasasInteresMoratorioAnualSolicitado;
-	private Double tasaInteresEfectivaAnualAprobado;
-	private Double tasaInteresEfectivaPeriodoAprobado;
-	private Double tasasInteresMoratorioAnualAprobado;
-	
-	//Atributos para Carta Fianza
-	private String numeroSolicitudCredito;
-	private String tipoCreditoIndirecto;
-	private String codigoPersonaAfianzada;
-	private String nombrePersonaAfianzada;
-	private String indAdjudicacionDirecta;
-	private String motivoFianza;
-	private String fechaTerminoSolicitado;
-	private Long plazoDiasSolicitadoCF;
-	private Double porcentajeComisionSolicitado;
-	private String fechaTerminoAprobado;
-	private Long plazoDiasAprobadoCF;
-	private Double porcentajeComisionAprobado;
-	
-	//Datos comisiones
-	private Double totalGastosComisiones;
-	private Double montoTotalFinanciado;
-	private String simboloMoneda;
-	
-	//Datos Agencia
-	private String codigoAgencia;
-	private String descripcionAgencia;
-	
-	private String estadoEvaluacion;
-	private String descEstadoEvaluacion;
-	private String estadoResolucion;
-	private String indEnvioEvaluacionSC;
-	
-	//evaluacion
-	private Double montoIngreso;
-	private Double factorCuota;
-	private Double cuotaEndeudamiento;
-	private Double descuento;
-	private Double cuotaMaxima;
-	
-	private Double montoInicial;
-	private String nroExperto;
-	
-	private String indColocacion;
-	private String codigoEntFin;
-	private String descEntFin;
-	private String codigoTipoTarjeta;
-	private String descTipoTarjeta;
-	private String nroTarjeta;
-	
-	private String capacidadEndeudamiento;
-	
-	private String tipoCredito;
-	
-	private String identificadorFactorendeudamiento;
-	private Double factorObtenido;
-	private Double precioLista;
-	//Descuento Letras y Factoring
-	
-	//credito vehicular
-	private String idConcesionario;
-	private Double valorVehiculo;
-	private Double importeInicial;
-	private String idClase;
-	private String descClase;
-	private String idMarca;
-	private String descMarca;
-	private String modelo;
-	private String idColor;
-	private String descColor;
-	private String numeroSerie;
-	private String numeroMotor;
-	private Integer anioFabricacion;
-	private String numeroChasis;
-	private String numeroPlaca;
-	private Double kmRecorridosDia;
-	private Double prcRecaudo;
-	private String descConcesionario;
-	private Double otrosMontosSolicitados;
-	private String idTipoClienteCredito;
-	private String verCalculadoraRecaudo;
-	private String codigoTaller;
-	private String descTaller;
-	private Double relacionCuotaAhorro;
-	private Double ingresoBrutoCalculado;
-	
-	private Long numeroDocumentos;
-	
-	private Double valorBienSolicitado;
-	private Double cuotaInicialSolicitado;
-	
-	private Double importeAseguradoSolicitado;
-	private String tipoSeguroDesgravamenSolicitado;
-	private Double tasaAnualSeguroBienSolicitado;
-	private Double valorBienAprobado;
-	private Double cuotaInicialAprobado;
-	private Double otrosMontosAprobado;
-	private Double importeAseguradoAprobado;
-	private String tipoSeguroDesgravamenAprobado;
-	private Double tasaAnualSeguroBienAprobado;
-	private Double tasaAnualSeguroDesgravamenAprobado;
-	
-	private String codigoTipoSeguroDesgravamen;
-	private Double valorBien;
-	private Double otrosSolicitado;
-	private Double montoAsegurado;
-	private Double tasaDesgravamen;
-	private Double tasaSegBien;
-	private Double tasaDesgravamenIndividualAnual;
-	private Double tasaDesgravamenMancomunadaAnual;
-	
-	private String permiteSeguroDesgravamen;
-	private String permiteSeguroBien;
-	
-	private String codigoPromocion;
-	private String descPromocion;
-	private String codigoPolitica;
-	private String descPolitica;
-	
-	//Atributos para Solicitudes de Hipotecario
-	private String codigoTipoInmueble;	
-	private String codigoTipoBien;	
-	private String codigoPersona;
-	private String descPersonaInmo;
-	private String codigoProyectoInmobiliaria;
-	private Double impBonoDamnificado;	
-	private Double impBonoMiVivienda;
-	private BeanCLDireccionPersonas beanCLDireccionPersonas;
-	private String indEsPropietario;
-	private Double montoADesembolsar;
-	
-	private String indEnListaNegra;
-	private String indTipoPersonaTitular;
-	
-	private Double tasaCompensatoriaInicialTarif;
-	private Double tasaMoratInicialTarif;
-	private Double tasaCompensatoriaFinalTarif;
-	private Double tasaMoratFinalTarif;
-	private String tasaErrorTarif;
-	
-	//stacanga 29.03.2012
-	private String codigoPreAnalista;
-	private String nombrePreAnalista;
-	
-	//credito emprendedor
-	private String montoActivoFijo;
-	private String montoCapitalTrabajo;
-	private String indicadorCredito;
-	
-	private String indicadorModalidadEmprendedor;
-	private String estadoDesembolsoCT;
-	private String estadoDesembolsoAF;
-	private String indicadorPrimerDesembolso;
-	private String indicadorActivaCredito;
-	
-	private Long count;
-	
-	private String descTipoSubTipoCredito;
-	
-	private Date fechaAprobacion;
-	
-	// Parámetros Fogapi Ini
+    private String estadoSolicitudCambioCondiciones;
+    private Date fechaCambioUltEstado;
+
+    private String usuarioSolicito;
+    private String usuarioAplico;
+
+    private String codigoDocumento;
+    private String numeroDocumento;
+    private String nombreRazonSocial;
+    private String nombreCliente;
+
+    /********************************************************************/
+    private String productoNombre;
+    private String codigoProducto;
+    private String productoIndicadorLineaCredito;
+
+    private String indicadorLineaCredito;
+
+    private String descripcionProductoAprobado;
+    private String codigoProductoAprobado;
+    /********************************************************************/
+    private String monedaDescripcion;
+    private String monedaCodigo;
+
+    private String codigoMonedaAprobado;
+    private String descripcionMonedaAprobado;
+    /********************************************************************/
+
+    private Double montoSolicitado;
+    private Double montoAprobado;
+
+    /********************************************************************/
+    private String tipoCuotaDescripcion;
+    private String codigoTipoCuota;
+
+    private String codigoTipoCuotaAprobado;
+    private String descripcionTipoCuotaAprobado;
+
+    /********************************************************************/
+    private String frecuenciaPagoDescripcion;
+    private String codigoFrecuenciaPago;
+
+    private String descripcionFrecuenciaPagoAprobada;
+    private String codigoFrecuenciaPagoAprobada;
+    /********************************************************************/
+
+    private Long numeroCuota;
+
+    /************ Usada para el caso de Registro Resolucion ***********/
+    private Long numeroCuotaResolucion;
+
+    private Date fechaPrimerPago;
+
+    /************ Usada para el caso de Registro Resolucion ***********/
+    private Date fechaPrimerPagoResolucion;
+
+    private Long numeroCuotaGracia;
+
+    /************ Usada para el caso de Registro Resolucion ***********/
+    private Long numeroCuotaGraciaResolucion;
+
+    private Double valorCuotaSolicitado;
+    private Double valorCuotaAprobado;
+
+    private Date fechaVencimiento;
+
+    /************ Usada para el caso de Registro Resolucion ***********/
+    private Date fechaVencimientoResolucion;
+
+    /****************************************************************/
+    private String codigoTipoCreditoSolicitado;
+    private String codigoSubTipoCreditoSolicitado;
+
+    private String descripcionTipoCredito;
+    private String descripcionSubTipoCredito;
+
+    private String codigoTipoCreditoAprobado;
+    private String descripcionTipoCreditoAprobado;
+
+    private String codigoSubTipoCreditoAprobado;
+    private String descripcionSubTipoCreditoAprobado;
+    /****************************************************************/
+
+    /********************************** CIIU ******************************/
+    private String descripcionCIIU;
+    private String codigoCIIU;
+
+    private String codigoCIIUaux;
+
+    private String descripcionGiroNegocio;
+    private String codigoGiroNegocio;
+
+    private String descripcionSectorEconomico;
+    private String codigoSectorEconomico;
+
+    private String convenioPersonaJuridica;
+    private String descripcionConvenio;
+    private String cobranzaDiaria;
+    private String zonaCobranza;
+    private String codigoCobradorItinerante;
+    private String cargoCuenta;
+
+    private String nombreUsuarioAprobacion;
+    private String codigoUsuarioAprobacion;
+    private String nombrePromotor;
+    private String codigoPromotor;
+    private String nombreAnalistaResponsable;
+    private String codigoAnalistaResponsable;
+    private String nombreEjecutivo;
+    private String codigoEjecutivo;
+
+    private String numeroPagare;
+
+    private String observaciones;
+    private String observacionesResolucion;
+
+    private String fuenteFinanciamiento;
+    private String codigoFuenteFinanciamiento;
+    private String abreviaturaFuenteFinanciamiento;
+
+    private String lineaFinanciamiento;
+    private String codigoLineaFinanciamiento;
+    private String abreviaturaLineaFinanciamiento;
+
+    /************ Usada para el caso de Registro Solicitud Credito ***********/
+    private Double tasaInteresCuota;
+    private Double tasaInteresPeriodoSolicitado;
+
+    /************ Usada para el caso de Registro Resolucion ***********/
+    private Double tasaInteresCuotaResolucion;
+
+    /****** TEA ***/
+    private Double tasaInteresMoratorio;
+
+    /************ Usada para el caso de Registro Resolucion ***********/
+    private Double tasaInteresMoratorioResolucion;
+
+    /****** TEA Dif 1mes Vcto ***/
+    private Double tasaInteresCompensatorio;
+
+    /************ Usada para el caso de Registro Resolucion ***********/
+    private Double tasaInteresCompensatorioResolucion;
+
+    /******* Si es COMERCIAL **********************/
+    private String codigocanalVentas;
+    private String descCanalVentas;
+
+    private String codigoVendedor;
+    private String descVendedor;
+
+    private String descripcionEstado;
+
+    private String condicionSolicitud;
+    private String descripcionCondicionSolicitud;
+    private String tipoPlanilla;
+
+    private String direccion;
+    private String direccionCorrespondencia;
+    private Date fechaNacimiento;
+    private String estado;
+    private Date fechaPrimerAporte;
+    private String codigoCliente;
+    private String usuarioRegistro;
+    private String indicadorConvenio;
+    private String indicadorCobranzaDiaria;
+    private String indicadorCargo;
+
+    /********************************************************************/
+    private String motivoRechazo;
+
+    private String codigoMotivoRechazo;
+    private String descripcionMotivoRechazo;
+
+    private Long plazoDiasAprobado;
+    private Long plazoDiasSolicitado;
+
+    private String codigoTipoCalendarioSolicitado;
+    private String codigoTipoCalendarioAprobado;
+    private String tipoInteresFact;
+
+    private String indicadorPeriodoGraciaSolicitado;
+    private String indicadorPeriodoGraciaAprobado;
+
+    private String indicadorModificaFrecPago;
+    private String indicadorPermiteGracia;
+
+    private Long diaPagoSolicitado;
+    private Long diaPagoAprobado;
+    private String numeroConvenio;
+    private String formaCredito;
+
+    //Atributos Linea Credito	
+    private String idDiaPagoSolicitado;
+    private String idDiaPagoAprobado;
+    private Long diaCorte;
+    private Date fechaRevalidacionSolicitado;
+    private Date fechaRevalidacionAprobado;
+    private Long frecMinimaPago;
+
+    private Double tasaInteresEfectivaAnualSolicitado;
+    private Double tasaInteresEfectivaPeriodoSolicitado;
+
+    //atributos para facturas vencidas
+    private Double tasaInteresEfectivaAnualSolicitadoVenc;
+    private Double tasaInteresEfectivaPeriodoSolicitadoVenc;
+
+    private String emiteFactura;
+    private String tipoInteres;
+
+    private Double tasasInteresMoratorioAnualSolicitado;
+    private Double tasaInteresEfectivaAnualAprobado;
+    private Double tasaInteresEfectivaPeriodoAprobado;
+    private Double tasasInteresMoratorioAnualAprobado;
+
+    //Atributos para Carta Fianza
+    private String numeroSolicitudCredito;
+    private String tipoCreditoIndirecto;
+    private String codigoPersonaAfianzada;
+    private String nombrePersonaAfianzada;
+    private String indAdjudicacionDirecta;
+    private String motivoFianza;
+    private String fechaTerminoSolicitado;
+    private Long plazoDiasSolicitadoCF;
+    private Double porcentajeComisionSolicitado;
+    private String fechaTerminoAprobado;
+    private Long plazoDiasAprobadoCF;
+    private Double porcentajeComisionAprobado;
+
+    //Datos comisiones
+    private Double totalGastosComisiones;
+    private Double montoTotalFinanciado;
+    private String simboloMoneda;
+
+    //Datos Agencia
+    private String codigoAgencia;
+    private String descripcionAgencia;
+
+    private String estadoEvaluacion;
+    private String descEstadoEvaluacion;
+    private String estadoResolucion;
+    private String indEnvioEvaluacionSC;
+
+    //evaluacion
+    private Double montoIngreso;
+    private Double factorCuota;
+    private Double cuotaEndeudamiento;
+    private Double descuento;
+    private Double cuotaMaxima;
+
+    private Double montoInicial;
+    private String nroExperto;
+
+    private String indColocacion;
+    private String codigoEntFin;
+    private String descEntFin;
+    private String codigoTipoTarjeta;
+    private String descTipoTarjeta;
+    private String nroTarjeta;
+
+    private String capacidadEndeudamiento;
+
+    private String tipoCredito;
+
+    private String identificadorFactorendeudamiento;
+    private Double factorObtenido;
+    private Double precioLista;
+    //Descuento Letras y Factoring
+
+    //credito vehicular
+    private String idConcesionario;
+    private Double valorVehiculo;
+    private Double importeInicial;
+    private String idClase;
+    private String descClase;
+    private String idMarca;
+    private String descMarca;
+    private String modelo;
+    private String idColor;
+    private String descColor;
+    private String numeroSerie;
+    private String numeroMotor;
+    private Integer anioFabricacion;
+    private String numeroChasis;
+    private String numeroPlaca;
+    private Double kmRecorridosDia;
+    private Double prcRecaudo;
+    private String descConcesionario;
+    private Double otrosMontosSolicitados;
+    private String idTipoClienteCredito;
+    private String verCalculadoraRecaudo;
+    private String codigoTaller;
+    private String descTaller;
+    private Double relacionCuotaAhorro;
+    private Double ingresoBrutoCalculado;
+
+    private Long numeroDocumentos;
+
+    private Double valorBienSolicitado;
+    private Double cuotaInicialSolicitado;
+
+    private Double importeAseguradoSolicitado;
+    private String tipoSeguroDesgravamenSolicitado;
+    private Double tasaAnualSeguroBienSolicitado;
+    private Double valorBienAprobado;
+    private Double cuotaInicialAprobado;
+    private Double otrosMontosAprobado;
+    private Double importeAseguradoAprobado;
+    private String tipoSeguroDesgravamenAprobado;
+    private Double tasaAnualSeguroBienAprobado;
+    private Double tasaAnualSeguroDesgravamenAprobado;
+
+    private String codigoTipoSeguroDesgravamen;
+    private Double valorBien;
+    private Double otrosSolicitado;
+    private Double montoAsegurado;
+    private Double tasaDesgravamen;
+    private Double tasaSegBien;
+    private Double tasaDesgravamenIndividualAnual;
+    private Double tasaDesgravamenMancomunadaAnual;
+
+    private String permiteSeguroDesgravamen;
+    private String permiteSeguroBien;
+
+    private String codigoPromocion;
+    private String descPromocion;
+    private String codigoPolitica;
+    private String descPolitica;
+
+    //Atributos para Solicitudes de Hipotecario
+    private String codigoTipoInmueble;
+    private String codigoTipoBien;
+    private String codigoPersona;
+    private String descPersonaInmo;
+    private String codigoProyectoInmobiliaria;
+    private Double impBonoDamnificado;
+    private Double impBonoMiVivienda;
+    private BeanCLDireccionPersonas beanCLDireccionPersonas;
+    private String indEsPropietario;
+    private Double montoADesembolsar;
+
+    private String indEnListaNegra;
+    private String indTipoPersonaTitular;
+
+    private Double tasaCompensatoriaInicialTarif;
+    private Double tasaMoratInicialTarif;
+    private Double tasaCompensatoriaFinalTarif;
+    private Double tasaMoratFinalTarif;
+    private String tasaErrorTarif;
+
+    //stacanga 29.03.2012
+    private String codigoPreAnalista;
+    private String nombrePreAnalista;
+
+    //credito emprendedor
+    private String montoActivoFijo;
+    private String montoCapitalTrabajo;
+    private String indicadorCredito;
+
+    private String indicadorModalidadEmprendedor;
+    private String estadoDesembolsoCT;
+    private String estadoDesembolsoAF;
+    private String indicadorPrimerDesembolso;
+    private String indicadorActivaCredito;
+
+    private Long count;
+
+    private String descTipoSubTipoCredito;
+
+    private Date fechaAprobacion;
+
+    // Parámetros Fogapi Ini
     private Double deudaSistemaFinanciero;
     private Double totalActivosEmpresa;
     private Double totalVentaMes;
     private String requiereInformacionFogapi;
     // Parámetros Fogapi Fin
-    
+
     private String codigoZonaItinerante;
     private String descripcionZonaItinerante;
-    
+
     private String indicadorInspeccion;
     private String indicadorInspeccionProducto;
 
-	/**Nuevo Campo Inspeccion por parte de la Agencia
-	 * 
-	 *@authorgfernandez
-	 *@since21.10.2010
-	 */
+    /**
+     * Nuevo Campo Inspeccion por parte de la Agencia
+     * 
+     * @authorgfernandez
+     * @since21.10.2010
+     */
     private String inspeccionAgencia;
-    
+
     private String codigoAfianzado;
     private String nombreAfianzado;
     private String codigoAFavorDe;
     private String nombreAFavorDe;
-	
+
     // Inicio agregado gliceta 28.09.2010: Seguimiento de Riesgos
     private String cadObjIndRiesgo;
-    
-	//Inicio [Req. 13-135] fvalle 09.04.2014
-	private String  indModificacionEnvioEECC;
-	private String  indComEECC;
-	private String  identificadorEnvioEECC;	
-	private String  medioEnvioEECC;
-	private String  idDireccion;
-	private String  idEmail;
+
+    //Inicio [Req. 13-135] fvalle 09.04.2014
+    private String indModificacionEnvioEECC;
+    private String indComEECC;
+    private String identificadorEnvioEECC;
+    private String medioEnvioEECC;
+    private String idDireccion;
+    private String idEmail;
     //Fin [Req. S13-135]
-    
+
     // gliceta 17.03.2011: Carta Fianza - Cobro de Comision
-    private String indTipoCobro;    
-	private String estCartaFianza;
+    private String indTipoCobro;
+    private String estCartaFianza;
     private Double mtoCobrado;
     //jpantoja 31.08.2011 Arbol Decisional
     private String indArbolDecisional;
-    
+
     //gliceta 19.12.2011: Req. 11-206 - Solicitudes Gestionadas 
     private String numeroPreSolicitud;
     private String numeroDocumentoPersona;
-    
+
     //jcabello 12.12.2012 Cantidad registros totales Consulta Solicitudes
     private int canreg;
 
     // galmerco 20.05.2012 Indicador de InspeccionObligatoria
     private String indicadorInspeccionObligatoria;
-    
+
     /* [Req. S14 - 067] jtomasto Incio */
     private Double montoRed;
     private Double montoDif;
-    /* [Req. S14 - 067] Fin */    
-   // [Req. 14-115] esalazar 26.08.2014
-   private String indicadorEvaluacionDPS;
+    /* [Req. S14 - 067] Fin */
+    // [Req. 14-115] esalazar 26.08.2014
+    private String indicadorEvaluacionDPS;
 
     // Req.14-106 dfujimoto 15.09.2014
     private String codigoDestinoCredito;
     private String descripcionDestinoCredito;
-    
+
     // [Req. S16-041] agarcia 05.12.2016
     private String codigoNivelAprobacion;
-   
-	public int getCanreg() {
-		return canreg;
-	}
-	public void setCanreg(int canreg) {
-		this.canreg = canreg;
-	}
-	public String getIndArbolDecisional() {
-		return indArbolDecisional;
-	}
-	public void setIndArbolDecisional(String indArbolDecisional) {
-		this.indArbolDecisional = indArbolDecisional;
-	}
-	public Double getMtoCobrado() {
-		return mtoCobrado;
-	}
-	public void setMtoCobrado(Double mtoCobrado) {
-		this.mtoCobrado = mtoCobrado;
-	}
-	public String getIndTipoCobro() {
-		return indTipoCobro;
-	}
-	public void setIndTipoCobro(String indTipoCobro) {
-		this.indTipoCobro = indTipoCobro;
-	}
-	public String getEstCartaFianza() {
-		return estCartaFianza;
-	}
-	public void setEstCartaFianza(String estCartaFianza) {
-		this.estCartaFianza = estCartaFianza;
-	}
-	
-	public String getIndicadorInspeccion() {
-		return indicadorInspeccion;
-	}
-	public void setIndicadorInspeccion(String indicadorInspeccion) {
-		this.indicadorInspeccion = indicadorInspeccion;
-	}
-	public String getRequiereInformacionFogapi() {
-		return requiereInformacionFogapi;
-	}
-	public void setRequiereInformacionFogapi(String requiereInformacionFogapi) {
-		this.requiereInformacionFogapi = requiereInformacionFogapi;
-	}
-	public String getEstadoDesembolsoAF() {
-		return estadoDesembolsoAF;
-	}
-	public void setEstadoDesembolsoAF(String estadoDesembolsoAF) {
-		this.estadoDesembolsoAF = estadoDesembolsoAF;
-	}
-	public String getEstadoDesembolsoCT() {
-		return estadoDesembolsoCT;
-	}
-	public void setEstadoDesembolsoCT(String estadoDesembolsoCT) {
-		this.estadoDesembolsoCT = estadoDesembolsoCT;
-	}
-	public String getIndicadorActivaCredito() {
-		return indicadorActivaCredito;
-	}
-	public void setIndicadorActivaCredito(String indicadorActivaCredito) {
-		this.indicadorActivaCredito = indicadorActivaCredito;
-	}
-	public String getIndicadorModalidadEmprendedor() {
-		return indicadorModalidadEmprendedor;
-	}
-	public void setIndicadorModalidadEmprendedor(
-			String indicadorModalidadEmprendedor) {
-		this.indicadorModalidadEmprendedor = indicadorModalidadEmprendedor;
-	}
-	public String getIndicadorPrimerDesembolso() {
-		return indicadorPrimerDesembolso;
-	}
-	public void setIndicadorPrimerDesembolso(String indicadorPrimerDesembolso) {
-		this.indicadorPrimerDesembolso = indicadorPrimerDesembolso;
-	}
-	public String getIndicadorCredito() {
-		return indicadorCredito;
-	}
-	public void setIndicadorCredito(String indicadorCredito) {
-		this.indicadorCredito = indicadorCredito;
-	}
-	public String getMontoActivoFijo() {
-		return montoActivoFijo;
-	}
-	public String getMontoCapitalTrabajo() {
-		return montoCapitalTrabajo;
-	}
-	public void setMontoActivoFijo(String montoActivoFijo) {
-		this.montoActivoFijo = montoActivoFijo;
-	}
-	public void setMontoCapitalTrabajo(String montoCapitalTrabajo) {
-		this.montoCapitalTrabajo = montoCapitalTrabajo;
-	}
-	public String getTipoInteresFact() {
-		return tipoInteresFact;
-	}
-	public void setTipoInteresFact(String tipoInteresFact) {
-		this.tipoInteresFact = tipoInteresFact;
-	}
-	public Long getNumeroDocumentos() {
-		return numeroDocumentos;
-	}
-	public void setNumeroDocumentos(Long numeroDocumentos) {
-		this.numeroDocumentos = numeroDocumentos;
-	}
-	public String getCapacidadEndeudamiento() {
-		return capacidadEndeudamiento;
-	}
-	public void setCapacidadEndeudamiento(String capacidadEndeudamiento) {
-		this.capacidadEndeudamiento = capacidadEndeudamiento;
-	}
+
+    // [Req.S17-007] kdelacruz 27.03.2017
+    private String tipoOperacion;
+
+    public int getCanreg() {
+        return canreg;
+    }
+
+    public void setCanreg(int canreg) {
+        this.canreg = canreg;
+    }
+
+    public String getIndArbolDecisional() {
+        return indArbolDecisional;
+    }
+
+    public void setIndArbolDecisional(String indArbolDecisional) {
+        this.indArbolDecisional = indArbolDecisional;
+    }
+
+    public Double getMtoCobrado() {
+        return mtoCobrado;
+    }
+
+    public void setMtoCobrado(Double mtoCobrado) {
+        this.mtoCobrado = mtoCobrado;
+    }
+
+    public String getIndTipoCobro() {
+        return indTipoCobro;
+    }
+
+    public void setIndTipoCobro(String indTipoCobro) {
+        this.indTipoCobro = indTipoCobro;
+    }
+
+    public String getEstCartaFianza() {
+        return estCartaFianza;
+    }
+
+    public void setEstCartaFianza(String estCartaFianza) {
+        this.estCartaFianza = estCartaFianza;
+    }
+
+    public String getIndicadorInspeccion() {
+        return indicadorInspeccion;
+    }
+
+    public void setIndicadorInspeccion(String indicadorInspeccion) {
+        this.indicadorInspeccion = indicadorInspeccion;
+    }
+
+    public String getRequiereInformacionFogapi() {
+        return requiereInformacionFogapi;
+    }
+
+    public void setRequiereInformacionFogapi(String requiereInformacionFogapi) {
+        this.requiereInformacionFogapi = requiereInformacionFogapi;
+    }
+
+    public String getEstadoDesembolsoAF() {
+        return estadoDesembolsoAF;
+    }
+
+    public void setEstadoDesembolsoAF(String estadoDesembolsoAF) {
+        this.estadoDesembolsoAF = estadoDesembolsoAF;
+    }
+
+    public String getEstadoDesembolsoCT() {
+        return estadoDesembolsoCT;
+    }
+
+    public void setEstadoDesembolsoCT(String estadoDesembolsoCT) {
+        this.estadoDesembolsoCT = estadoDesembolsoCT;
+    }
+
+    public String getIndicadorActivaCredito() {
+        return indicadorActivaCredito;
+    }
+
+    public void setIndicadorActivaCredito(String indicadorActivaCredito) {
+        this.indicadorActivaCredito = indicadorActivaCredito;
+    }
+
+    public String getIndicadorModalidadEmprendedor() {
+        return indicadorModalidadEmprendedor;
+    }
+
+    public void setIndicadorModalidadEmprendedor(String indicadorModalidadEmprendedor) {
+        this.indicadorModalidadEmprendedor = indicadorModalidadEmprendedor;
+    }
+
+    public String getIndicadorPrimerDesembolso() {
+        return indicadorPrimerDesembolso;
+    }
+
+    public void setIndicadorPrimerDesembolso(String indicadorPrimerDesembolso) {
+        this.indicadorPrimerDesembolso = indicadorPrimerDesembolso;
+    }
+
+    public String getIndicadorCredito() {
+        return indicadorCredito;
+    }
+
+    public void setIndicadorCredito(String indicadorCredito) {
+        this.indicadorCredito = indicadorCredito;
+    }
+
+    public String getMontoActivoFijo() {
+        return montoActivoFijo;
+    }
+
+    public String getMontoCapitalTrabajo() {
+        return montoCapitalTrabajo;
+    }
+
+    public void setMontoActivoFijo(String montoActivoFijo) {
+        this.montoActivoFijo = montoActivoFijo;
+    }
+
+    public void setMontoCapitalTrabajo(String montoCapitalTrabajo) {
+        this.montoCapitalTrabajo = montoCapitalTrabajo;
+    }
+
+    public String getTipoInteresFact() {
+        return tipoInteresFact;
+    }
+
+    public void setTipoInteresFact(String tipoInteresFact) {
+        this.tipoInteresFact = tipoInteresFact;
+    }
+
+    public Long getNumeroDocumentos() {
+        return numeroDocumentos;
+    }
+
+    public void setNumeroDocumentos(Long numeroDocumentos) {
+        this.numeroDocumentos = numeroDocumentos;
+    }
+
+    public String getCapacidadEndeudamiento() {
+        return capacidadEndeudamiento;
+    }
+
+    public void setCapacidadEndeudamiento(String capacidadEndeudamiento) {
+        this.capacidadEndeudamiento = capacidadEndeudamiento;
+    }
 
     public String getEstadoEvaluacion() {
-		return estadoEvaluacion;
-	}
-	public void setEstadoEvaluacion(String estadoEvaluacion) {
-		this.estadoEvaluacion = estadoEvaluacion;
-	}
-	public String getEstadoResolucion() {
-		return estadoResolucion;
-	}
-	public void setEstadoResolucion(String estadoResolucion) {
-		this.estadoResolucion = estadoResolucion;
-	}
-	public String getIndEnvioEvaluacionSC() {
-		return indEnvioEvaluacionSC;
-	}
-	public void setIndEnvioEvaluacionSC(String indEnvioEvaluacionSC) {
-		this.indEnvioEvaluacionSC = indEnvioEvaluacionSC;
-	}
-	public String getDescripcionConvenio() {
+        return estadoEvaluacion;
+    }
+
+    public void setEstadoEvaluacion(String estadoEvaluacion) {
+        this.estadoEvaluacion = estadoEvaluacion;
+    }
+
+    public String getEstadoResolucion() {
+        return estadoResolucion;
+    }
+
+    public void setEstadoResolucion(String estadoResolucion) {
+        this.estadoResolucion = estadoResolucion;
+    }
+
+    public String getIndEnvioEvaluacionSC() {
+        return indEnvioEvaluacionSC;
+    }
+
+    public void setIndEnvioEvaluacionSC(String indEnvioEvaluacionSC) {
+        this.indEnvioEvaluacionSC = indEnvioEvaluacionSC;
+    }
+
+    public String getDescripcionConvenio() {
         return this.descripcionConvenio;
     }
+
     public void setDescripcionConvenio(String descripcionConvenio) {
         this.descripcionConvenio = descripcionConvenio;
     }
+
     public String getAbreviaturaFuenteFinanciamiento() {
         return this.abreviaturaFuenteFinanciamiento;
     }
+
     public void setAbreviaturaFuenteFinanciamiento(String abreviaturaFuenteFinanciamiento) {
         this.abreviaturaFuenteFinanciamiento = abreviaturaFuenteFinanciamiento;
     }
+
     public String getAbreviaturaLineaFinanciamiento() {
         return this.abreviaturaLineaFinanciamiento;
     }
+
     public void setAbreviaturaLineaFinanciamiento(String abreviaturaLineaFinanciamiento) {
         this.abreviaturaLineaFinanciamiento = abreviaturaLineaFinanciamiento;
     }
+
     public String getCargoCuenta() {
         return this.cargoCuenta;
     }
+
     public void setCargoCuenta(String cargoCuenta) {
         this.cargoCuenta = cargoCuenta;
     }
+
     public String getCobranzaDiaria() {
         return this.cobranzaDiaria;
     }
+
     public void setCobranzaDiaria(String cobranzaDiaria) {
         this.cobranzaDiaria = cobranzaDiaria;
     }
+
     public String getCodigoSectorEconomico() {
         return this.codigoSectorEconomico;
     }
+
     public void setCodigoSectorEconomico(String codigoSectorEconomico) {
         this.codigoSectorEconomico = codigoSectorEconomico;
     }
+
     public String getCodigoAnalistaResponsable() {
         return this.codigoAnalistaResponsable;
     }
+
     public void setCodigoAnalistaResponsable(String codigoAnalistaResponsable) {
         this.codigoAnalistaResponsable = codigoAnalistaResponsable;
     }
+
     public String getCodigoCliente() {
         return this.codigoCliente;
     }
+
     public void setCodigoCliente(String codigoCliente) {
         this.codigoCliente = codigoCliente;
     }
+
     public String getCodigoCobradorItinerante() {
         return this.codigoCobradorItinerante;
     }
+
     public void setCodigoCobradorItinerante(String codigoCobradorItinerante) {
         this.codigoCobradorItinerante = codigoCobradorItinerante;
     }
+
     public String getCodigoDocumento() {
         return this.codigoDocumento;
     }
+
     public void setCodigoDocumento(String codigoDocumento) {
         this.codigoDocumento = codigoDocumento;
     }
+
     public String getCodigoEjecutivo() {
         return this.codigoEjecutivo;
     }
+
     public void setCodigoEjecutivo(String codigoEjecutivo) {
         this.codigoEjecutivo = codigoEjecutivo;
     }
+
     public String getCodigoEstadoSolicitud() {
         return this.codigoEstadoSolicitud;
     }
+
     public void setCodigoEstadoSolicitud(String codigoEstadoSolicitud) {
         this.codigoEstadoSolicitud = codigoEstadoSolicitud;
     }
+
     public String getCodigoFrecuenciaPago() {
         return this.codigoFrecuenciaPago;
     }
+
     public void setCodigoFrecuenciaPago(String codigoFrecuenciaPago) {
         this.codigoFrecuenciaPago = codigoFrecuenciaPago;
     }
+
     public String getCodigoFrecuenciaPagoAprobada() {
         return this.codigoFrecuenciaPagoAprobada;
     }
+
     public void setCodigoFrecuenciaPagoAprobada(String codigoFrecuenciaPagoAprobada) {
         this.codigoFrecuenciaPagoAprobada = codigoFrecuenciaPagoAprobada;
     }
+
     public String getCodigoFuenteFinanciamiento() {
         return this.codigoFuenteFinanciamiento;
     }
+
     public void setCodigoFuenteFinanciamiento(String codigoFuenteFinanciamiento) {
         this.codigoFuenteFinanciamiento = codigoFuenteFinanciamiento;
     }
+
     public String getCodigoLineaFinanciamiento() {
         return this.codigoLineaFinanciamiento;
     }
+
     public void setCodigoLineaFinanciamiento(String codigoLineaFinanciamiento) {
         this.codigoLineaFinanciamiento = codigoLineaFinanciamiento;
     }
+
     public String getCodigoMonedaAprobado() {
         return this.codigoMonedaAprobado;
     }
+
     public void setCodigoMonedaAprobado(String codigoMonedaAprobado) {
         this.codigoMonedaAprobado = codigoMonedaAprobado;
     }
+
     public String getCodigoMotivoRechazo() {
         return this.codigoMotivoRechazo;
     }
+
     public void setCodigoMotivoRechazo(String codigoMotivoRechazo) {
         this.codigoMotivoRechazo = codigoMotivoRechazo;
     }
+
     public String getCodigoProducto() {
         return this.codigoProducto;
     }
+
     public void setCodigoProducto(String codigoProducto) {
         this.codigoProducto = codigoProducto;
     }
+
     public String getCodigoProductoAprobado() {
         return this.codigoProductoAprobado;
     }
+
     public void setCodigoProductoAprobado(String codigoProductoAprobado) {
         this.codigoProductoAprobado = codigoProductoAprobado;
     }
+
     public String getCodigoPromotor() {
         return this.codigoPromotor;
     }
+
     public void setCodigoPromotor(String codigoPromotor) {
         this.codigoPromotor = codigoPromotor;
     }
+
     public String getCodigoSubTipoCreditoAprobado() {
         return this.codigoSubTipoCreditoAprobado;
     }
+
     public void setCodigoSubTipoCreditoAprobado(String codigoSubTipoCreditoAprobado) {
         this.codigoSubTipoCreditoAprobado = codigoSubTipoCreditoAprobado;
     }
+
     public String getCodigoTipoCalendarioAprobado() {
         return this.codigoTipoCalendarioAprobado;
     }
+
     public void setCodigoTipoCalendarioAprobado(String codigoTipoCalendarioAprobado) {
         this.codigoTipoCalendarioAprobado = codigoTipoCalendarioAprobado;
     }
+
     public String getCodigoTipoCalendarioSolicitado() {
         return this.codigoTipoCalendarioSolicitado;
     }
+
     public void setCodigoTipoCalendarioSolicitado(String codigoTipoCalendarioSolicitado) {
         this.codigoTipoCalendarioSolicitado = codigoTipoCalendarioSolicitado;
     }
+
     public String getCodigoTipoCreditoAprobado() {
         return this.codigoTipoCreditoAprobado;
     }
+
     public void setCodigoTipoCreditoAprobado(String codigoTipoCreditoAprobado) {
         this.codigoTipoCreditoAprobado = codigoTipoCreditoAprobado;
     }
+
     public String getCodigoTipoCuota() {
         return this.codigoTipoCuota;
     }
+
     public void setCodigoTipoCuota(String codigoTipoCuota) {
         this.codigoTipoCuota = codigoTipoCuota;
     }
+
     public String getCodigoTipoCuotaAprobado() {
         return this.codigoTipoCuotaAprobado;
     }
+
     public void setCodigoTipoCuotaAprobado(String codigoTipoCuotaAprobado) {
         this.codigoTipoCuotaAprobado = codigoTipoCuotaAprobado;
     }
+
     public String getCodigoUsuarioAprobacion() {
         return this.codigoUsuarioAprobacion;
     }
+
     public void setCodigoUsuarioAprobacion(String codigoUsuarioAprobacion) {
         this.codigoUsuarioAprobacion = codigoUsuarioAprobacion;
     }
+
     public String getCondicionSolicitud() {
         return this.condicionSolicitud;
     }
+
     public void setCondicionSolicitud(String condicionSolicitud) {
         this.condicionSolicitud = condicionSolicitud;
     }
+
     public String getConvenioPersonaJuridica() {
         return this.convenioPersonaJuridica;
     }
+
     public void setConvenioPersonaJuridica(String convenioPersonaJuridica) {
         this.convenioPersonaJuridica = convenioPersonaJuridica;
     }
+
     public String getDescripcionSectorEconomico() {
         return this.descripcionSectorEconomico;
     }
+
     public void setDescripcionSectorEconomico(String descripcionSectorEconomico) {
         this.descripcionSectorEconomico = descripcionSectorEconomico;
     }
+
     public String getDescripcionCondicionSolicitud() {
         return this.descripcionCondicionSolicitud;
     }
+
     public void setDescripcionCondicionSolicitud(String descripcionCondicionSolicitud) {
         this.descripcionCondicionSolicitud = descripcionCondicionSolicitud;
     }
+
     public String getDescripcionEstado() {
         return this.descripcionEstado;
     }
+
     public void setDescripcionEstado(String descripcionEstado) {
         this.descripcionEstado = descripcionEstado;
     }
+
     public String getDescripcionFrecuenciaPagoAprobada() {
         return this.descripcionFrecuenciaPagoAprobada;
     }
+
     public void setDescripcionFrecuenciaPagoAprobada(String descripcionFrecuenciaPagoAprobada) {
         this.descripcionFrecuenciaPagoAprobada = descripcionFrecuenciaPagoAprobada;
     }
+
     public String getDescripcionMonedaAprobado() {
         return this.descripcionMonedaAprobado;
     }
+
     public void setDescripcionMonedaAprobado(String descripcionMonedaAprobado) {
         this.descripcionMonedaAprobado = descripcionMonedaAprobado;
     }
+
     public String getDescripcionMotivoRechazo() {
         return this.descripcionMotivoRechazo;
     }
+
     public void setDescripcionMotivoRechazo(String descripcionMotivoRechazo) {
         this.descripcionMotivoRechazo = descripcionMotivoRechazo;
     }
+
     public String getDescripcionProductoAprobado() {
         return this.descripcionProductoAprobado;
     }
+
     public void setDescripcionProductoAprobado(String descripcionProductoAprobado) {
         this.descripcionProductoAprobado = descripcionProductoAprobado;
     }
+
     public String getDescripcionSubTipoCredito() {
         return this.descripcionSubTipoCredito;
     }
+
     public void setDescripcionSubTipoCredito(String descripcionSubTipoCredito) {
         this.descripcionSubTipoCredito = descripcionSubTipoCredito;
     }
+
     public String getDescripcionSubTipoCreditoAprobado() {
         return this.descripcionSubTipoCreditoAprobado;
     }
+
     public void setDescripcionSubTipoCreditoAprobado(String descripcionSubTipoCreditoAprobado) {
         this.descripcionSubTipoCreditoAprobado = descripcionSubTipoCreditoAprobado;
     }
+
     public String getDescripcionTipoCredito() {
         return this.descripcionTipoCredito;
     }
+
     public void setDescripcionTipoCredito(String descripcionTipoCredito) {
         this.descripcionTipoCredito = descripcionTipoCredito;
     }
+
     public String getDescripcionTipoCreditoAprobado() {
         return this.descripcionTipoCreditoAprobado;
     }
+
     public void setDescripcionTipoCreditoAprobado(String descripcionTipoCreditoAprobado) {
         this.descripcionTipoCreditoAprobado = descripcionTipoCreditoAprobado;
     }
+
     public String getDescripcionTipoCuotaAprobado() {
         return this.descripcionTipoCuotaAprobado;
     }
+
     public void setDescripcionTipoCuotaAprobado(String descripcionTipoCuotaAprobado) {
         this.descripcionTipoCuotaAprobado = descripcionTipoCuotaAprobado;
     }
+
     public String getDescripcionTipoSolicitud() {
         return this.descripcionTipoSolicitud;
     }
+
     public void setDescripcionTipoSolicitud(String descripcionTipoSolicitud) {
         this.descripcionTipoSolicitud = descripcionTipoSolicitud;
     }
+
     public Long getDiaPagoAprobado() {
         return this.diaPagoAprobado;
     }
+
     public void setDiaPagoAprobado(Long diaPagoAprobado) {
         this.diaPagoAprobado = diaPagoAprobado;
     }
+
     public Long getDiaPagoSolicitado() {
         return this.diaPagoSolicitado;
     }
+
     public void setDiaPagoSolicitado(Long diaPagoSolicitado) {
         this.diaPagoSolicitado = diaPagoSolicitado;
     }
+
     public String getDireccion() {
         return this.direccion;
     }
+
     public void setDireccion(String direccion) {
         this.direccion = direccion;
     }
+
     public String getDireccionCorrespondencia() {
         return this.direccionCorrespondencia;
     }
+
     public void setDireccionCorrespondencia(String direccionCorrespondencia) {
         this.direccionCorrespondencia = direccionCorrespondencia;
     }
+
     public String getEstado() {
         return this.estado;
     }
+
     public void setEstado(String estado) {
         this.estado = estado;
     }
+
     public String getEstadoSolicitud() {
         return this.estadoSolicitud;
     }
+
     public void setEstadoSolicitud(String estadoSolicitud) {
         this.estadoSolicitud = estadoSolicitud;
     }
+
     public String getEstadoSolicitudCambioCondiciones() {
         return this.estadoSolicitudCambioCondiciones;
     }
+
     public void setEstadoSolicitudCambioCondiciones(String estadoSolicitudCambioCondiciones) {
         this.estadoSolicitudCambioCondiciones = estadoSolicitudCambioCondiciones;
     }
+
     public Date getFechaAplicacion() {
         return this.fechaAplicacion;
     }
+
     public void setFechaAplicacion(Date fechaAplicacion) {
         this.fechaAplicacion = fechaAplicacion;
     }
+
     public Date getFechaCambioUltEstado() {
         return this.fechaCambioUltEstado;
     }
+
     public void setFechaCambioUltEstado(Date fechaCambioUltEstado) {
         this.fechaCambioUltEstado = fechaCambioUltEstado;
     }
+
     public Date getFechaNacimiento() {
         return this.fechaNacimiento;
     }
+
     public void setFechaNacimiento(Date fechaNacimiento) {
         this.fechaNacimiento = fechaNacimiento;
     }
+
     public Date getFechaPrimerAporte() {
         return this.fechaPrimerAporte;
     }
+
     public void setFechaPrimerAporte(Date fechaPrimerAporte) {
         this.fechaPrimerAporte = fechaPrimerAporte;
     }
+
     public Date getFechaPrimerPago() {
         return this.fechaPrimerPago;
     }
+
     public void setFechaPrimerPago(Date fechaPrimerPago) {
         this.fechaPrimerPago = fechaPrimerPago;
     }
+
     public Date getFechaPrimerPagoResolucion() {
         return this.fechaPrimerPagoResolucion;
     }
+
     public void setFechaPrimerPagoResolucion(Date fechaPrimerPagoResolucion) {
         this.fechaPrimerPagoResolucion = fechaPrimerPagoResolucion;
     }
+
     public Date getFechaSolicitud() {
         return this.fechaSolicitud;
     }
+
     public void setFechaSolicitud(Date fechaSolicitud) {
         this.fechaSolicitud = fechaSolicitud;
     }
+
     public Date getFechaVencimiento() {
         return this.fechaVencimiento;
     }
+
     public void setFechaVencimiento(Date fechaVencimiento) {
         this.fechaVencimiento = fechaVencimiento;
     }
+
     public Date getFechaVencimientoResolucion() {
         return this.fechaVencimientoResolucion;
     }
+
     public void setFechaVencimientoResolucion(Date fechaVencimientoResolucion) {
         this.fechaVencimientoResolucion = fechaVencimientoResolucion;
     }
+
     public String getFrecuenciaPagoDescripcion() {
         return this.frecuenciaPagoDescripcion;
     }
+
     public void setFrecuenciaPagoDescripcion(String frecuenciaPagoDescripcion) {
         this.frecuenciaPagoDescripcion = frecuenciaPagoDescripcion;
     }
+
     public String getFuenteFinanciamiento() {
         return this.fuenteFinanciamiento;
     }
+
     public void setFuenteFinanciamiento(String fuenteFinanciamiento) {
         this.fuenteFinanciamiento = fuenteFinanciamiento;
     }
+
     public String getIndicadorCargo() {
         return this.indicadorCargo;
     }
+
     public void setIndicadorCargo(String indicadorCargo) {
         this.indicadorCargo = indicadorCargo;
     }
+
     public String getIndicadorCobranzaDiaria() {
         return this.indicadorCobranzaDiaria;
     }
+
     public void setIndicadorCobranzaDiaria(String indicadorCobranzaDiaria) {
         this.indicadorCobranzaDiaria = indicadorCobranzaDiaria;
     }
+
     public String getIndicadorConvenio() {
         return this.indicadorConvenio;
     }
+
     public void setIndicadorConvenio(String indicadorConvenio) {
         this.indicadorConvenio = indicadorConvenio;
     }
+
     public String getIndicadorLineaCredito() {
         return this.indicadorLineaCredito;
     }
+
     public void setIndicadorLineaCredito(String indicadorLineaCredito) {
         this.indicadorLineaCredito = indicadorLineaCredito;
     }
+
     public String getIndicadorPeriodoGraciaAprobado() {
         return this.indicadorPeriodoGraciaAprobado;
     }
+
     public void setIndicadorPeriodoGraciaAprobado(String indicadorPeriodoGraciaAprobado) {
         this.indicadorPeriodoGraciaAprobado = indicadorPeriodoGraciaAprobado;
     }
+
     public String getIndicadorPeriodoGraciaSolicitado() {
         return this.indicadorPeriodoGraciaSolicitado;
     }
+
     public void setIndicadorPeriodoGraciaSolicitado(String indicadorPeriodoGraciaSolicitado) {
         this.indicadorPeriodoGraciaSolicitado = indicadorPeriodoGraciaSolicitado;
     }
+
     public String getLineaFinanciamiento() {
         return this.lineaFinanciamiento;
     }
+
     public void setLineaFinanciamiento(String lineaFinanciamiento) {
         this.lineaFinanciamiento = lineaFinanciamiento;
     }
+
     public String getMonedaCodigo() {
         return this.monedaCodigo;
     }
+
     public void setMonedaCodigo(String monedaCodigo) {
         this.monedaCodigo = monedaCodigo;
     }
+
     public String getMonedaDescripcion() {
         return this.monedaDescripcion;
     }
+
     public void setMonedaDescripcion(String monedaDescripcion) {
         this.monedaDescripcion = monedaDescripcion;
     }
+
     public Double getMontoAprobado() {
         return this.montoAprobado;
     }
+
     public void setMontoAprobado(Double montoAprobado) {
         this.montoAprobado = montoAprobado;
     }
+
     public Double getMontoSolicitado() {
         return this.montoSolicitado;
     }
+
     public void setMontoSolicitado(Double montoSolicitado) {
         this.montoSolicitado = montoSolicitado;
     }
+
     public String getMotivoRechazo() {
         return this.motivoRechazo;
     }
+
     public void setMotivoRechazo(String motivoRechazo) {
         this.motivoRechazo = motivoRechazo;
     }
+
     public String getNombreAnalistaResponsable() {
         return this.nombreAnalistaResponsable;
     }
+
     public void setNombreAnalistaResponsable(String nombreAnalistaResponsable) {
         this.nombreAnalistaResponsable = nombreAnalistaResponsable;
     }
+
     public String getNombreEjecutivo() {
         return this.nombreEjecutivo;
     }
+
     public void setNombreEjecutivo(String nombreEjecutivo) {
         this.nombreEjecutivo = nombreEjecutivo;
     }
+
     public String getNombrePromotor() {
         return this.nombrePromotor;
     }
+
     public void setNombrePromotor(String nombrePromotor) {
         this.nombrePromotor = nombrePromotor;
     }
+
     public String getNombreRazonSocial() {
         return this.nombreRazonSocial;
     }
+
     public void setNombreRazonSocial(String nombreRazonSocial) {
         this.nombreRazonSocial = nombreRazonSocial;
     }
+
     public String getNombreUsuarioAprobacion() {
         return this.nombreUsuarioAprobacion;
     }
+
     public void setNombreUsuarioAprobacion(String nombreUsuarioAprobacion) {
         this.nombreUsuarioAprobacion = nombreUsuarioAprobacion;
     }
+
     public String getNumeroConvenio() {
         return this.numeroConvenio;
     }
+
     public void setNumeroConvenio(String numeroConvenio) {
         this.numeroConvenio = numeroConvenio;
     }
+
     public String getNumeroCredito() {
         return this.numeroCredito;
     }
+
     public void setNumeroCredito(String numeroCredito) {
         this.numeroCredito = numeroCredito;
     }
+
     public Long getNumeroCuota() {
         return this.numeroCuota;
     }
+
     public void setNumeroCuota(Long numeroCuota) {
         this.numeroCuota = numeroCuota;
     }
+
     public Long getNumeroCuotaGracia() {
         return this.numeroCuotaGracia;
     }
+
     public void setNumeroCuotaGracia(Long numeroCuotaGracia) {
         this.numeroCuotaGracia = numeroCuotaGracia;
     }
+
     public Long getNumeroCuotaGraciaResolucion() {
         return this.numeroCuotaGraciaResolucion;
     }
+
     public void setNumeroCuotaGraciaResolucion(Long numeroCuotaGraciaResolucion) {
         this.numeroCuotaGraciaResolucion = numeroCuotaGraciaResolucion;
     }
+
     public Long getNumeroCuotaResolucion() {
         return this.numeroCuotaResolucion;
     }
+
     public void setNumeroCuotaResolucion(Long numeroCuotaResolucion) {
         this.numeroCuotaResolucion = numeroCuotaResolucion;
     }
+
     public String getNumeroDocumento() {
         return this.numeroDocumento;
     }
+
     public void setNumeroDocumento(String numeroDocumento) {
         this.numeroDocumento = numeroDocumento;
     }
+
     public String getNumeroPagare() {
         return this.numeroPagare;
     }
+
     public void setNumeroPagare(String numeroPagare) {
         this.numeroPagare = numeroPagare;
     }
+
     public String getNumeroSolicitud() {
         return this.numeroSolicitud;
     }
+
     public void setNumeroSolicitud(String numeroSolicitud) {
         this.numeroSolicitud = numeroSolicitud;
     }
+
     public String getObservaciones() {
         return this.observaciones;
     }
+
     public void setObservaciones(String observaciones) {
         this.observaciones = observaciones;
     }
+
     public String getObservacionesResolucion() {
         return this.observacionesResolucion;
     }
+
     public void setObservacionesResolucion(String observacionesResolucion) {
         this.observacionesResolucion = observacionesResolucion;
     }
+
     public Long getPlazoDiasAprobado() {
         return this.plazoDiasAprobado;
     }
+
     public void setPlazoDiasAprobado(Long plazoDiasAprobado) {
         this.plazoDiasAprobado = plazoDiasAprobado;
     }
+
     public Long getPlazoDiasSolicitado() {
         return this.plazoDiasSolicitado;
     }
+
     public void setPlazoDiasSolicitado(Long plazoDiasSolicitado) {
         this.plazoDiasSolicitado = plazoDiasSolicitado;
     }
+
     public String getProductoIndicadorLineaCredito() {
         return this.productoIndicadorLineaCredito;
     }
+
     public void setProductoIndicadorLineaCredito(String productoIndicadorLineaCredito) {
         this.productoIndicadorLineaCredito = productoIndicadorLineaCredito;
     }
+
     public String getProductoNombre() {
         return this.productoNombre;
     }
+
     public void setProductoNombre(String productoNombre) {
         this.productoNombre = productoNombre;
     }
-        public Double getTasaInteresCompensatorio() {
-            return this.tasaInteresCompensatorio;
-        }
-        public void setTasaInteresCompensatorio(Double tasaInteresCompensatorio) {
-            this.tasaInteresCompensatorio = tasaInteresCompensatorio;
-        }
+
+    public Double getTasaInteresCompensatorio() {
+        return this.tasaInteresCompensatorio;
+    }
+
+    public void setTasaInteresCompensatorio(Double tasaInteresCompensatorio) {
+        this.tasaInteresCompensatorio = tasaInteresCompensatorio;
+    }
+
     public Double getTasaInteresCompensatorioResolucion() {
         return this.tasaInteresCompensatorioResolucion;
     }
+
     public void setTasaInteresCompensatorioResolucion(Double tasaInteresCompensatorioResolucion) {
         this.tasaInteresCompensatorioResolucion = tasaInteresCompensatorioResolucion;
     }
+
     public Double getTasaInteresCuota() {
         return this.tasaInteresCuota;
     }
+
     public void setTasaInteresCuota(Double tasaInteresCuota) {
         this.tasaInteresCuota = tasaInteresCuota;
     }
+
     public Double getTasaInteresCuotaResolucion() {
         return this.tasaInteresCuotaResolucion;
     }
+
     public void setTasaInteresCuotaResolucion(Double tasaInteresCuotaResolucion) {
         this.tasaInteresCuotaResolucion = tasaInteresCuotaResolucion;
     }
-        public Double getTasaInteresMoratorio() {
-            return this.tasaInteresMoratorio;
-        }
-        public void setTasaInteresMoratorio(Double tasaInteresMoratorio) {
-            this.tasaInteresMoratorio = tasaInteresMoratorio;
-        }
+
+    public Double getTasaInteresMoratorio() {
+        return this.tasaInteresMoratorio;
+    }
+
+    public void setTasaInteresMoratorio(Double tasaInteresMoratorio) {
+        this.tasaInteresMoratorio = tasaInteresMoratorio;
+    }
+
     public Double getTasaInteresMoratorioResolucion() {
         return this.tasaInteresMoratorioResolucion;
     }
+
     public void setTasaInteresMoratorioResolucion(Double tasaInteresMoratorioResolucion) {
         this.tasaInteresMoratorioResolucion = tasaInteresMoratorioResolucion;
     }
+
     public String getTipoCuotaDescripcion() {
         return this.tipoCuotaDescripcion;
     }
+
     public void setTipoCuotaDescripcion(String tipoCuotaDescripcion) {
         this.tipoCuotaDescripcion = tipoCuotaDescripcion;
     }
+
     public String getTipoInteres() {
         return this.tipoInteres;
     }
+
     public void setTipoInteres(String tipoInteres) {
         this.tipoInteres = tipoInteres;
     }
+
     public String getTipoPlanilla() {
         return this.tipoPlanilla;
     }
+
     public void setTipoPlanilla(String tipoPlanilla) {
         this.tipoPlanilla = tipoPlanilla;
     }
+
     public String getTipoSolicitud() {
         return this.tipoSolicitud;
     }
+
     public void setTipoSolicitud(String tipoSolicitud) {
         this.tipoSolicitud = tipoSolicitud;
     }
+
     public String getTipoTasa() {
         return this.tipoTasa;
     }
+
     public void setTipoTasa(String tipoTasa) {
         this.tipoTasa = tipoTasa;
     }
+
     public String getUsuarioAplico() {
         return this.usuarioAplico;
     }
+
     public void setUsuarioAplico(String usuarioAplico) {
         this.usuarioAplico = usuarioAplico;
     }
+
     public String getUsuarioRegistro() {
         return this.usuarioRegistro;
     }
+
     public void setUsuarioRegistro(String usuarioRegistro) {
         this.usuarioRegistro = usuarioRegistro;
     }
+
     public String getUsuarioSolicito() {
         return this.usuarioSolicito;
     }
+
     public void setUsuarioSolicito(String usuarioSolicito) {
         this.usuarioSolicito = usuarioSolicito;
     }
+
     public Double getValorCuotaAprobado() {
         return this.valorCuotaAprobado;
     }
+
     public void setValorCuotaAprobado(Double valorCuotaAprobado) {
         this.valorCuotaAprobado = valorCuotaAprobado;
     }
+
     public Double getValorCuotaSolicitado() {
         return this.valorCuotaSolicitado;
     }
+
     public void setValorCuotaSolicitado(Double valorCuotaSolicitado) {
         this.valorCuotaSolicitado = valorCuotaSolicitado;
     }
+
     public String getZonaCobranza() {
         return this.zonaCobranza;
     }
+
     public void setZonaCobranza(String zonaCobranza) {
         this.zonaCobranza = zonaCobranza;
     }
-	public String getCodigoCIIU() {
-		return codigoCIIU;
-	}
-	public void setCodigoCIIU(String codigoCIIU) {
-		this.codigoCIIU = codigoCIIU;
-	}
-	public String getCodigoGiroNegocio() {
-		return codigoGiroNegocio;
-	}
-	public void setCodigoGiroNegocio(String codigoGiroNegocio) {
-		this.codigoGiroNegocio = codigoGiroNegocio;
-	}
-	public String getDescripcionCIIU() {
-		return descripcionCIIU;
-	}
-	public void setDescripcionCIIU(String descripcionCIIU) {
-		this.descripcionCIIU = descripcionCIIU;
-	}
-	public String getDescripcionGiroNegocio() {
-		return descripcionGiroNegocio;
-	}
-	public void setDescripcionGiroNegocio(String descripcionGiroNegocio) {
-		this.descripcionGiroNegocio = descripcionGiroNegocio;
-	}
-	public String getFormaDesembolso() {
-		return formaDesembolso;
-	}
-	public void setFormaDesembolso(String formaDesembolso) {
-		this.formaDesembolso = formaDesembolso;
-	}
-	public String getCorrelativoPlanPago() {
-		return correlativoPlanPago;
-	}
-	public void setCorrelativoPlanPago(String correlativoPlanPago) {
-		this.correlativoPlanPago = correlativoPlanPago;
-	}
-	
-	public String getFormaCredito() {
-		return formaCredito;
-	}
-	public void setFormaCredito(String formaCredito) {
-		this.formaCredito = formaCredito;
-	}
-	public String getModalidadCredito() {
-		return modalidadCredito;
-	}
-	public void setModalidadCredito(String modalidadCredito) {
-		this.modalidadCredito = modalidadCredito;
-	}
-	public Long getDiaCorte() {
-		return diaCorte;
-	}
-	public void setDiaCorte(Long diaCorte) {
-		this.diaCorte = diaCorte;
-	}
-	public Date getFechaRevalidacionAprobado() {
-		return fechaRevalidacionAprobado;
-	}
-	public void setFechaRevalidacionAprobado(Date fechaRevalidacionAprobado) {
-		this.fechaRevalidacionAprobado = fechaRevalidacionAprobado;
-	}
-	public Date getFechaRevalidacionSolicitado() {
-		return fechaRevalidacionSolicitado;
-	}
-	public void setFechaRevalidacionSolicitado(Date fechaRevalidacionSolicitado) {
-		this.fechaRevalidacionSolicitado = fechaRevalidacionSolicitado;
-	}
-	public Long getFrecMinimaPago() {
-		return frecMinimaPago;
-	}
-	public void setFrecMinimaPago(Long frecMinimaPago) {
-		this.frecMinimaPago = frecMinimaPago;
-	}
-	public String getIdDiaPagoAprobado() {
-		return idDiaPagoAprobado;
-	}
-	public void setIdDiaPagoAprobado(String idDiaPagoAprobado) {
-		this.idDiaPagoAprobado = idDiaPagoAprobado;
-	}
-	public String getIdDiaPagoSolicitado() {
-		return idDiaPagoSolicitado;
-	}
-	public void setIdDiaPagoSolicitado(String idDiaPagoSolicitado) {
-		this.idDiaPagoSolicitado = idDiaPagoSolicitado;
-	}
-	public Double getTasaInteresPeriodoSolicitado() {
-		return tasaInteresPeriodoSolicitado;
-	}
-	public void setTasaInteresPeriodoSolicitado(Double tasaInteresPeriodoSolicitado) {
-		this.tasaInteresPeriodoSolicitado = tasaInteresPeriodoSolicitado;
-	}
-	public Double getTasaInteresEfectivaAnualAprobado() {
-		return tasaInteresEfectivaAnualAprobado;
-	}
-	public void setTasaInteresEfectivaAnualAprobado(
-			Double tasaInteresEfectivaAnualAprobado) {
-		this.tasaInteresEfectivaAnualAprobado = tasaInteresEfectivaAnualAprobado;
-	}
-	public Double getTasaInteresEfectivaAnualSolicitado() {
-		return tasaInteresEfectivaAnualSolicitado;
-	}
-	public void setTasaInteresEfectivaAnualSolicitado(
-			Double tasaInteresEfectivaAnualSolicitado) {
-		this.tasaInteresEfectivaAnualSolicitado = tasaInteresEfectivaAnualSolicitado;
-	}
-	public Double getTasaInteresEfectivaPeriodoAprobado() {
-		return tasaInteresEfectivaPeriodoAprobado;
-	}
-	public void setTasaInteresEfectivaPeriodoAprobado(
-			Double tasaInteresEfectivaPeriodoAprobado) {
-		this.tasaInteresEfectivaPeriodoAprobado = tasaInteresEfectivaPeriodoAprobado;
-	}
-	public Double getTasaInteresEfectivaPeriodoSolicitado() {
-		return tasaInteresEfectivaPeriodoSolicitado;
-	}
-	public void setTasaInteresEfectivaPeriodoSolicitado(
-			Double tasaInteresEfectivaPeriodoSolicitado) {
-		this.tasaInteresEfectivaPeriodoSolicitado = tasaInteresEfectivaPeriodoSolicitado;
-	}
-	public Double getTasasInteresMoratorioAnualAprobado() {
-		return tasasInteresMoratorioAnualAprobado;
-	}
-	public void setTasasInteresMoratorioAnualAprobado(
-			Double tasasInteresMoratorioAnualAprobado) {
-		this.tasasInteresMoratorioAnualAprobado = tasasInteresMoratorioAnualAprobado;
-	}
-	public Double getTasasInteresMoratorioAnualSolicitado() {
-		return tasasInteresMoratorioAnualSolicitado;
-	}
-	public void setTasasInteresMoratorioAnualSolicitado(
-			Double tasasInteresMoratorioAnualSolicitado) {
-		this.tasasInteresMoratorioAnualSolicitado = tasasInteresMoratorioAnualSolicitado;
-	}
-	public String getCodigocanalVentas() {
-		return codigocanalVentas;
-	}
-	public void setCodigocanalVentas(String codigocanalVentas) {
-		this.codigocanalVentas = codigocanalVentas;
-	}
-	public String getCodigoVendedor() {
-		return codigoVendedor;
-	}
-	public void setCodigoVendedor(String codigoVendedor) {
-		this.codigoVendedor = codigoVendedor;
-	}
-	public String getDescCanalVentas() {
-		return descCanalVentas;
-	}
-	public void setDescCanalVentas(String descCanalVentas) {
-		this.descCanalVentas = descCanalVentas;
-	}
-	public String getDescVendedor() {
-		return descVendedor;
-	}
-	public void setDescVendedor(String descVendedor) {
-		this.descVendedor = descVendedor;
-	}
-	public String getCodigoPersonaAfianzada() {
-		return codigoPersonaAfianzada;
-	}
-	public void setCodigoPersonaAfianzada(String codigoPersonaAfianzada) {
-		this.codigoPersonaAfianzada = codigoPersonaAfianzada;
-	}
-	
-	public String getFechaTerminoAprobado() {
-		return fechaTerminoAprobado;
-	}
-	public void setFechaTerminoAprobado(String fechaTerminoAprobado) {
-		this.fechaTerminoAprobado = fechaTerminoAprobado;
-	}
-	public String getFechaTerminoSolicitado() {
-		return fechaTerminoSolicitado;
-	}
-	public void setFechaTerminoSolicitado(String fechaTerminoSolicitado) {
-		this.fechaTerminoSolicitado = fechaTerminoSolicitado;
-	}
-	public String getIndAdjudicacionDirecta() {
-		return indAdjudicacionDirecta;
-	}
-	public void setIndAdjudicacionDirecta(String indAdjudicacionDirecta) {
-		this.indAdjudicacionDirecta = indAdjudicacionDirecta;
-	}
-	public String getMotivoFianza() {
-		return motivoFianza;
-	}
-	public void setMotivoFianza(String motivoFianza) {
-		this.motivoFianza = motivoFianza;
-	}
-	public String getNombrePersonaAfianzada() {
-		return nombrePersonaAfianzada;
-	}
-	public void setNombrePersonaAfianzada(String nombrePersonaAfianzada) {
-		this.nombrePersonaAfianzada = nombrePersonaAfianzada;
-	}
-	public String getNumeroSolicitudCredito() {
-		return numeroSolicitudCredito;
-	}
-	public void setNumeroSolicitudCredito(String numeroSolicitudCredito) {
-		this.numeroSolicitudCredito = numeroSolicitudCredito;
-	}
-	public Long getPlazoDiasAprobadoCF() {
-		return plazoDiasAprobadoCF;
-	}
-	public void setPlazoDiasAprobadoCF(Long plazoDiasAprobadoCF) {
-		this.plazoDiasAprobadoCF = plazoDiasAprobadoCF;
-	}
-	public Long getPlazoDiasSolicitadoCF() {
-		return plazoDiasSolicitadoCF;
-	}
-	public void setPlazoDiasSolicitadoCF(Long plazoDiasSolicitadoCF) {
-		this.plazoDiasSolicitadoCF = plazoDiasSolicitadoCF;
-	}
-	public Double getPorcentajeComisionAprobado() {
-		return porcentajeComisionAprobado;
-	}
-	public void setPorcentajeComisionAprobado(Double porcentajeComisionAprobado) {
-		this.porcentajeComisionAprobado = porcentajeComisionAprobado;
-	}
-	public Double getPorcentajeComisionSolicitado() {
-		return porcentajeComisionSolicitado;
-	}
-	public void setPorcentajeComisionSolicitado(Double porcentajeComisionSolicitado) {
-		this.porcentajeComisionSolicitado = porcentajeComisionSolicitado;
-	}
-	public String getTipoCreditoIndirecto() {
-		return tipoCreditoIndirecto;
-	}
-	public void setTipoCreditoIndirecto(String tipoCreditoIndirecto) {
-		this.tipoCreditoIndirecto = tipoCreditoIndirecto;
-	}
-	
-	public String getCodigoSubTipoCreditoSolicitado() {
-		return codigoSubTipoCreditoSolicitado;
-	}
-	public void setCodigoSubTipoCreditoSolicitado(
-			String codigoSubTipoCreditoSolicitado) {
-		this.codigoSubTipoCreditoSolicitado = codigoSubTipoCreditoSolicitado;
-	}
-	public String getCodigoTipoCreditoSolicitado() {
-		return codigoTipoCreditoSolicitado;
-	}
-	public void setCodigoTipoCreditoSolicitado(String codigoTipoCreditoSolicitado) {
-		this.codigoTipoCreditoSolicitado = codigoTipoCreditoSolicitado;
-	}
-	public String getIndicadorModificaFrecPago() {
-		return indicadorModificaFrecPago;
-	}
-	public void setIndicadorModificaFrecPago(String indicadorModificaFrecPago) {
-		this.indicadorModificaFrecPago = indicadorModificaFrecPago;
-	}
-	public String getIndicadorPermiteGracia() {
-		return indicadorPermiteGracia;
-	}
-	public void setIndicadorPermiteGracia(String indicadorPermiteGracia) {
-		this.indicadorPermiteGracia = indicadorPermiteGracia;
-	}
-	public Double getMontoTotalFinanciado() {
-		return montoTotalFinanciado;
-	}
-	public void setMontoTotalFinanciado(Double montoTotalFinanciado) {
-		this.montoTotalFinanciado = montoTotalFinanciado;
-	}
-	public String getSimboloMoneda() {
-		return simboloMoneda;
-	}
-	public void setSimboloMoneda(String simboloMoneda) {
-		this.simboloMoneda = simboloMoneda;
-	}
-	public Double getTotalGastosComisiones() {
-		return totalGastosComisiones;
-	}
-	public void setTotalGastosComisiones(Double totalGastosComisiones) {
-		this.totalGastosComisiones = totalGastosComisiones;
-	}
-	public String getCodigoAgencia() {
-		return codigoAgencia;
-	}
-	public void setCodigoAgencia(String codigoAgencia) {
-		this.codigoAgencia = codigoAgencia;
-	}
-	public String getDescripcionAgencia() {
-		return descripcionAgencia;
-	}
-	public void setDescripcionAgencia(String descripcionAgencia) {
-		this.descripcionAgencia = descripcionAgencia;
-	}
-	public Double getFactorCuota() {
-		return factorCuota;
-	}
-	public void setFactorCuota(Double factorCuota) {
-		this.factorCuota = factorCuota;
-	}
-	public Double getMontoIngreso() {
-		return montoIngreso;
-	}
-	public void setMontoIngreso(Double montoIngreso) {
-		this.montoIngreso = montoIngreso;
-	}
-	public String getDescEstadoEvaluacion() {
-		return descEstadoEvaluacion;
-	}
-	public void setDescEstadoEvaluacion(String descEstadoEvaluacion) {
-		this.descEstadoEvaluacion = descEstadoEvaluacion;
-	}
-	public Double getCuotaEndeudamiento() {
-		return cuotaEndeudamiento;
-	}
-	public void setCuotaEndeudamiento(Double cuotaEndeudamiento) {
-		this.cuotaEndeudamiento = cuotaEndeudamiento;
-	}
-	public Double getCuotaMaxima() {
-		return cuotaMaxima;
-	}
-	public void setCuotaMaxima(Double cuotaMaxima) {
-		this.cuotaMaxima = cuotaMaxima;
-	}
-	public Double getDescuento() {
-		return descuento;
-	}
-	public void setDescuento(Double descuento) {
-		this.descuento = descuento;
-	}
-	public Double getMontoInicial() {
-		return montoInicial;
-	}
-	public void setMontoInicial(Double montoInicial) {
-		this.montoInicial = montoInicial;
-	}
-	public String getNroExperto() {
-		return nroExperto;
-	}
-	public void setNroExperto(String nroExperto) {
-		this.nroExperto = nroExperto;
-	}
-	public String getCodigoEntFin() {
-		return codigoEntFin;
-	}
-	public void setCodigoEntFin(String codigoEntFin) {
-		this.codigoEntFin = codigoEntFin;
-	}
-	public String getCodigoTipoTarjeta() {
-		return codigoTipoTarjeta;
-	}
-	public void setCodigoTipoTarjeta(String codigoTipoTarjeta) {
-		this.codigoTipoTarjeta = codigoTipoTarjeta;
-	}
-	public String getDescEntFin() {
-		return descEntFin;
-	}
-	public void setDescEntFin(String descEntFin) {
-		this.descEntFin = descEntFin;
-	}
-	public String getDescTipoTarjeta() {
-		return descTipoTarjeta;
-	}
-	public void setDescTipoTarjeta(String descTipoTarjeta) {
-		this.descTipoTarjeta = descTipoTarjeta;
-	}
-	public String getIndColocacion() {
-		return indColocacion;
-	}
-	public void setIndColocacion(String indColocacion) {
-		this.indColocacion = indColocacion;
-	}
-	public String getNroTarjeta() {
-		return nroTarjeta;
-	}
-	public void setNroTarjeta(String nroTarjeta) {
-		this.nroTarjeta = nroTarjeta;
-	}
-	public String getNombreCliente() {
-		return nombreCliente;
-	}
-	public void setNombreCliente(String nombreCliente) {
-		this.nombreCliente = nombreCliente;
-	}
-	public Double getFactorObtenido() {
-		return factorObtenido;
-	}
-	public void setFactorObtenido(Double factorObtenido) {
-		this.factorObtenido = factorObtenido;
-	}
-	public String getIdentificadorFactorendeudamiento() {
-		return identificadorFactorendeudamiento;
-	}
-	public void setIdentificadorFactorendeudamiento(
-			String identificadorFactorendeudamiento) {
-		this.identificadorFactorendeudamiento = identificadorFactorendeudamiento;
-	}
-	public Double getPrecioLista() {
-		return precioLista;
-	}
-	public void setPrecioLista(Double precioLista) {
-		this.precioLista = precioLista;
-	}
-	public Date getFechaDesembolso() {
-		return fechaDesembolso;
-	}
-	public void setFechaDesembolso(Date fechaDesembolso) {
-		this.fechaDesembolso = fechaDesembolso;
-	}
-	public Integer getAnioFabricacion() {
-		return anioFabricacion;
-	}
-	public void setAnioFabricacion(Integer anioFabricacion) {
-		this.anioFabricacion = anioFabricacion;
-	}
-	public String getDescClase() {
-		return descClase;
-	}
-	public void setDescClase(String descClase) {
-		this.descClase = descClase;
-	}
-	public String getDescColor() {
-		return descColor;
-	}
-	public void setDescColor(String descColor) {
-		this.descColor = descColor;
-	}
-	public String getIdClase() {
-		return idClase;
-	}
-	public void setIdClase(String idClase) {
-		this.idClase = idClase;
-	}
-	public String getIdColor() {
-		return idColor;
-	}
-	public void setIdColor(String idColor) {
-		this.idColor = idColor;
-	}
-	public String getIdConcesionario() {
-		return idConcesionario;
-	}
-	public void setIdConcesionario(String idConcesionario) {
-		this.idConcesionario = idConcesionario;
-	}
-	public Double getImporteInicial() {
-		return importeInicial;
-	}
-	public void setImporteInicial(Double importeInicial) {
-		this.importeInicial = importeInicial;
-	}
-	public Double getKmRecorridosDia() {
-		return kmRecorridosDia;
-	}
-	public void setKmRecorridosDia(Double kmRecorridosDia) {
-		this.kmRecorridosDia = kmRecorridosDia;
-	}
-	public String getModelo() {
-		return modelo;
-	}
-	public void setModelo(String modelo) {
-		this.modelo = modelo;
-	}
-	public String getNumeroChasis() {
-		return numeroChasis;
-	}
-	public void setNumeroChasis(String numeroChasis) {
-		this.numeroChasis = numeroChasis;
-	}
-	public String getNumeroMotor() {
-		return numeroMotor;
-	}
-	public void setNumeroMotor(String numeroMotor) {
-		this.numeroMotor = numeroMotor;
-	}
-	public String getNumeroPlaca() {
-		return numeroPlaca;
-	}
-	public void setNumeroPlaca(String numeroPlaca) {
-		this.numeroPlaca = numeroPlaca;
-	}
-	public String getNumeroSerie() {
-		return numeroSerie;
-	}
-	public void setNumeroSerie(String numeroSerie) {
-		this.numeroSerie = numeroSerie;
-	}
-	public Double getPrcRecaudo() {
-		return prcRecaudo;
-	}
-	public void setPrcRecaudo(Double prcRecaudo) {
-		this.prcRecaudo = prcRecaudo;
-	}
-	public Double getValorVehiculo() {
-		return valorVehiculo;
-	}
-	public void setValorVehiculo(Double valorVehiculo) {
-		this.valorVehiculo = valorVehiculo;
-	}
-	public String getDescMarca() {
-		return descMarca;
-	}
-	public void setDescMarca(String descMarca) {
-		this.descMarca = descMarca;
-	}
-	public String getIdMarca() {
-		return idMarca;
-	}
-	public void setIdMarca(String idMarca) {
-		this.idMarca = idMarca;
-	}
-	public Double getIngresoBrutoCalculado() {
-		return ingresoBrutoCalculado;
-	}
-	public void setIngresoBrutoCalculado(Double ingresoBrutoCalculado) {
-		this.ingresoBrutoCalculado = ingresoBrutoCalculado;
-	}
-	public Double getRelacionCuotaAhorro() {
-		return relacionCuotaAhorro;
-	}
-	public void setRelacionCuotaAhorro(Double relacionCuotaAhorro) {
-		this.relacionCuotaAhorro = relacionCuotaAhorro;
-	}
-	public String getDescConcesionario() {
-		return descConcesionario;
-	}
-	public void setDescConcesionario(String descConcesionario) {
-		this.descConcesionario = descConcesionario;
-	}
-	public Double getOtrosMontosSolicitados() {
-		return otrosMontosSolicitados;
-	}
-	public void setOtrosMontosSolicitados(Double otrosMontosSolicitados) {
-		this.otrosMontosSolicitados = otrosMontosSolicitados;
-	}
-	public String getCodigoTipoSeguroDesgravamen() {
-		return codigoTipoSeguroDesgravamen;
-	}
-	public void setCodigoTipoSeguroDesgravamen(String codigoTipoSeguroDesgravamen) {
-		this.codigoTipoSeguroDesgravamen = codigoTipoSeguroDesgravamen;
-	}
-	public Double getCuotaInicialAprobado() {
-		return cuotaInicialAprobado;
-	}
-	public void setCuotaInicialAprobado(Double cuotaInicialAprobado) {
-		this.cuotaInicialAprobado = cuotaInicialAprobado;
-	}
-	public Double getCuotaInicialSolicitado() {
-		return cuotaInicialSolicitado;
-	}
-	public void setCuotaInicialSolicitado(Double cuotaInicialSolicitado) {
-		this.cuotaInicialSolicitado = cuotaInicialSolicitado;
-	}
-	public Double getImporteAseguradoAprobado() {
-		return importeAseguradoAprobado;
-	}
-	public void setImporteAseguradoAprobado(Double importeAseguradoAprobado) {
-		this.importeAseguradoAprobado = importeAseguradoAprobado;
-	}
-	public Double getImporteAseguradoSolicitado() {
-		return importeAseguradoSolicitado;
-	}
-	public void setImporteAseguradoSolicitado(Double importeAseguradoSolicitado) {
-		this.importeAseguradoSolicitado = importeAseguradoSolicitado;
-	}
-	public Double getMontoAsegurado() {
-		return montoAsegurado;
-	}
-	public void setMontoAsegurado(Double montoAsegurado) {
-		this.montoAsegurado = montoAsegurado;
-	}
-	public Double getOtrosMontosAprobado() {
-		return otrosMontosAprobado;
-	}
-	public void setOtrosMontosAprobado(Double otrosMontosAprobado) {
-		this.otrosMontosAprobado = otrosMontosAprobado;
-	}
-	
-	public Double getOtrosSolicitado() {
-		return otrosSolicitado;
-	}
-	public void setOtrosSolicitado(Double otrosSolicitado) {
-		this.otrosSolicitado = otrosSolicitado;
-	}
-	public Double getTasaAnualSeguroBienAprobado() {
-		return tasaAnualSeguroBienAprobado;
-	}
-	public void setTasaAnualSeguroBienAprobado(Double tasaAnualSeguroBienAprobado) {
-		this.tasaAnualSeguroBienAprobado = tasaAnualSeguroBienAprobado;
-	}
-	public Double getTasaAnualSeguroBienSolicitado() {
-		return tasaAnualSeguroBienSolicitado;
-	}
-	public void setTasaAnualSeguroBienSolicitado(
-			Double tasaAnualSeguroBienSolicitado) {
-		this.tasaAnualSeguroBienSolicitado = tasaAnualSeguroBienSolicitado;
-	}
-	public Double getTasaAnualSeguroDesgravamenAprobado() {
-		return tasaAnualSeguroDesgravamenAprobado;
-	}
-	public void setTasaAnualSeguroDesgravamenAprobado(
-			Double tasaAnualSeguroDesgravamenAprobado) {
-		this.tasaAnualSeguroDesgravamenAprobado = tasaAnualSeguroDesgravamenAprobado;
-	}
-	public Double getTasaDesgravamen() {
-		return tasaDesgravamen;
-	}
-	public void setTasaDesgravamen(Double tasaDesgravamen) {
-		this.tasaDesgravamen = tasaDesgravamen;
-	}
-	public Double getTasaDesgravamenIndividualAnual() {
-		return tasaDesgravamenIndividualAnual;
-	}
-	public void setTasaDesgravamenIndividualAnual(
-			Double tasaDesgravamenIndividualAnual) {
-		this.tasaDesgravamenIndividualAnual = tasaDesgravamenIndividualAnual;
-	}
-	public Double getTasaDesgravamenMancomunadaAnual() {
-		return tasaDesgravamenMancomunadaAnual;
-	}
-	public void setTasaDesgravamenMancomunadaAnual(
-			Double tasaDesgravamenMancomunadaAnual) {
-		this.tasaDesgravamenMancomunadaAnual = tasaDesgravamenMancomunadaAnual;
-	}
-	public Double getTasaSegBien() {
-		return tasaSegBien;
-	}
-	public void setTasaSegBien(Double tasaSegBien) {
-		this.tasaSegBien = tasaSegBien;
-	}
-	public String getTipoSeguroDesgravamenAprobado() {
-		return tipoSeguroDesgravamenAprobado;
-	}
-	public void setTipoSeguroDesgravamenAprobado(
-			String tipoSeguroDesgravamenAprobado) {
-		this.tipoSeguroDesgravamenAprobado = tipoSeguroDesgravamenAprobado;
-	}
-	public String getTipoSeguroDesgravamenSolicitado() {
-		return tipoSeguroDesgravamenSolicitado;
-	}
-	public void setTipoSeguroDesgravamenSolicitado(
-			String tipoSeguroDesgravamenSolicitado) {
-		this.tipoSeguroDesgravamenSolicitado = tipoSeguroDesgravamenSolicitado;
-	}
-	public Double getValorBien() {
-		return valorBien;
-	}
-	public void setValorBien(Double valorBien) {
-		this.valorBien = valorBien;
-	}
-	public Double getValorBienAprobado() {
-		return valorBienAprobado;
-	}
-	public void setValorBienAprobado(Double valorBienAprobado) {
-		this.valorBienAprobado = valorBienAprobado;
-	}
-	public Double getValorBienSolicitado() {
-		return valorBienSolicitado;
-	}
-	public void setValorBienSolicitado(Double valorBienSolicitado) {
-		this.valorBienSolicitado = valorBienSolicitado;
-	}
-	public String getDescTipoSubTipoCredito() {
-		return descTipoSubTipoCredito;
-	}
-	public void setDescTipoSubTipoCredito(String descTipoSubTipoCredito) {
-		this.descTipoSubTipoCredito = descTipoSubTipoCredito;
-	}
-	public String getPermiteSeguroDesgravamen() {
-		return permiteSeguroDesgravamen;
-	}
-	public void setPermiteSeguroDesgravamen(String permiteSeguroDesgravamen) {
-		this.permiteSeguroDesgravamen = permiteSeguroDesgravamen;
-	}
-	public String getPermiteSeguroBien() {
-		return permiteSeguroBien;
-	}
-	public void setPermiteSeguroBien(String permiteSeguroBien) {
-		this.permiteSeguroBien = permiteSeguroBien;
-	}
-	public String getCodigoPromocion() {
-		return codigoPromocion;
-	}
-	public void setCodigoPromocion(String codigoPromocion) {
-		this.codigoPromocion = codigoPromocion;
-	}
-	public String getDescPromocion() {
-		return descPromocion;
-	}
-	public void setDescPromocion(String descPromocion) {
-		this.descPromocion = descPromocion;
-	}
-	public Date getFechaAprobacion() {
-		return fechaAprobacion;
-	}
-	public void setFechaAprobacion(Date fechaAprobacion) {
-		this.fechaAprobacion = fechaAprobacion;
-	}
-	public Long getCount() {
-		return count;
-	}
-	public void setCount(Long count) {
-		this.count = count;
-	}
-	public String getCodigoPersona() {
-		return codigoPersona;
-	}
-	public void setCodigoPersona(String codigoPersona) {
-		this.codigoPersona = codigoPersona;
-	}
-	public String getCodigoProyectoInmobiliaria() {
-		return codigoProyectoInmobiliaria;
-	}
-	public void setCodigoProyectoInmobiliaria(String codigoProyectoInmobiliaria) {
-		this.codigoProyectoInmobiliaria = codigoProyectoInmobiliaria;
-	}
-	public String getCodigoTipoBien() {
-		return codigoTipoBien;
-	}
-	public void setCodigoTipoBien(String codigoTipoBien) {
-		this.codigoTipoBien = codigoTipoBien;
-	}
-	public String getCodigoTipoInmueble() {
-		return codigoTipoInmueble;
-	}
-	public void setCodigoTipoInmueble(String codigoTipoInmueble) {
-		this.codigoTipoInmueble = codigoTipoInmueble;
-	}
-	public Double getImpBonoDamnificado() {
-		return impBonoDamnificado;
-	}
-	public void setImpBonoDamnificado(Double impBonoDamnificado) {
-		this.impBonoDamnificado = impBonoDamnificado;
-	}
-	public Double getImpBonoMiVivienda() {
-		return impBonoMiVivienda;
-	}
-	public void setImpBonoMiVivienda(Double impBonoMiVivienda) {
-		this.impBonoMiVivienda = impBonoMiVivienda;
-	}
-	public BeanCLDireccionPersonas getBeanCLDireccionPersonas() {
-		return beanCLDireccionPersonas;
-	}
-	public void setBeanCLDireccionPersonas(
-			BeanCLDireccionPersonas beanCLDireccionPersonas) {
-		this.beanCLDireccionPersonas = beanCLDireccionPersonas;
-	}
-	public String getDescPersonaInmo() {
-		return descPersonaInmo;
-	}
-	public void setDescPersonaInmo(String descPersonaInmo) {
-		this.descPersonaInmo = descPersonaInmo;
-	}
-	public String getIndEsPropietario() {
-		return indEsPropietario;
-	}
-	public void setIndEsPropietario(String indEsPropietario) {
-		this.indEsPropietario = indEsPropietario;
-	}
-	public Double getMontoADesembolsar() {
-		return montoADesembolsar;
-	}
-	public void setMontoADesembolsar(Double montoADesembolsar) {
-		this.montoADesembolsar = montoADesembolsar;
-	}
-	public String getIndEnListaNegra() {
-		return indEnListaNegra;
-	}
-	public void setIndEnListaNegra(String indEnListaNegra) {
-		this.indEnListaNegra = indEnListaNegra;
-	}
-	public String getIndTipoPersonaTitular() {
-		return indTipoPersonaTitular;
-	}
-	public void setIndTipoPersonaTitular(String indTipoPersonaTitular) {
-		this.indTipoPersonaTitular = indTipoPersonaTitular;
-	}
-	public Double getTasaCompensatoriaFinalTarif() {
-		return tasaCompensatoriaFinalTarif;
-	}
-	public void setTasaCompensatoriaFinalTarif(Double tasaCompensatoriaFinalTarif) {
-		this.tasaCompensatoriaFinalTarif = tasaCompensatoriaFinalTarif;
-	}
-	public Double getTasaCompensatoriaInicialTarif() {
-		return tasaCompensatoriaInicialTarif;
-	}
-	public void setTasaCompensatoriaInicialTarif(
-			Double tasaCompensatoriaInicialTarif) {
-		this.tasaCompensatoriaInicialTarif = tasaCompensatoriaInicialTarif;
-	}
-	public Double getTasaMoratFinalTarif() {
-		return tasaMoratFinalTarif;
-	}
-	public void setTasaMoratFinalTarif(Double tasaMoratFinalTarif) {
-		this.tasaMoratFinalTarif = tasaMoratFinalTarif;
-	}
-	public Double getTasaMoratInicialTarif() {
-		return tasaMoratInicialTarif;
-	}
-	public void setTasaMoratInicialTarif(Double tasaMoratInicialTarif) {
-		this.tasaMoratInicialTarif = tasaMoratInicialTarif;
-	}
-	public String getTasaErrorTarif() {
-		return tasaErrorTarif;
-	}
-	public void setTasaErrorTarif(String tasaErrorTarif) {
-		this.tasaErrorTarif = tasaErrorTarif;
-	}	
-	public String getIdTipoClienteCredito() {
-		return idTipoClienteCredito;
-	}
-	public void setIdTipoClienteCredito(String idTipoClienteCredito) {
-		this.idTipoClienteCredito = idTipoClienteCredito;
-	}
-	public String getVerCalculadoraRecaudo() {
-		return verCalculadoraRecaudo;
-	}
-	public void setVerCalculadoraRecaudo(String verCalculadoraRecaudo) {
-		this.verCalculadoraRecaudo = verCalculadoraRecaudo;
-	}
-	public String getCodigoTaller() {
-		return codigoTaller;
-	}
-	public void setCodigoTaller(String codigoTaller) {
-		this.codigoTaller = codigoTaller;
-	}
-	public String getDescTaller() {
-		return descTaller;
-	}
-	public void setDescTaller(String descTaller) {
-		this.descTaller = descTaller;
-	}
-	public String getCodigoPolitica() {
-		return codigoPolitica;
-	}
-	public void setCodigoPolitica(String codigoPolitica) {
-		this.codigoPolitica = codigoPolitica;
-	}
-	public String getDescPolitica() {
-		return descPolitica;
-	}
-	public void setDescPolitica(String descPolitica) {
-		this.descPolitica = descPolitica;
-	}
-	public Double getTasaInteresEfectivaAnualSolicitadoVenc() {
-		return tasaInteresEfectivaAnualSolicitadoVenc;
-	}
-	public void setTasaInteresEfectivaAnualSolicitadoVenc(
-			Double tasaInteresEfectivaAnualSolicitadoVenc) {
-		this.tasaInteresEfectivaAnualSolicitadoVenc = tasaInteresEfectivaAnualSolicitadoVenc;
-	}
-	public Double getTasaInteresEfectivaPeriodoSolicitadoVenc() {
-		return tasaInteresEfectivaPeriodoSolicitadoVenc;
-	}
-	public void setTasaInteresEfectivaPeriodoSolicitadoVenc(
-			Double tasaInteresEfectivaPeriodoSolicitadoVenc) {
-		this.tasaInteresEfectivaPeriodoSolicitadoVenc = tasaInteresEfectivaPeriodoSolicitadoVenc;
-	}
-	public String getEmiteFactura() {
-		return emiteFactura;
-	}
-	public void setEmiteFactura(String emiteFactura) {
-		this.emiteFactura = emiteFactura;
-	}
-	public Double getDeudaSistemaFinanciero() {
-		return deudaSistemaFinanciero;
-	}
-	public void setDeudaSistemaFinanciero(Double deudaSistemaFinanciero) {
-		this.deudaSistemaFinanciero = deudaSistemaFinanciero;
-	}
-	public Double getTotalActivosEmpresa() {
-		return totalActivosEmpresa;
-	}
-	public void setTotalActivosEmpresa(Double totalActivosEmpresa) {
-		this.totalActivosEmpresa = totalActivosEmpresa;
-	}
-	public Double getTotalVentaMes() {
-		return totalVentaMes;
-	}
-	public void setTotalVentaMes(Double totalVentaMes) {
-		this.totalVentaMes = totalVentaMes;
-	}
-	public String getCodigoZonaItinerante() {
-		return codigoZonaItinerante;
-	}
-	public void setCodigoZonaItinerante(String codigoZonaItinerante) {
-		this.codigoZonaItinerante = codigoZonaItinerante;
-	}
-	public String getDescripcionZonaItinerante() {
-		return descripcionZonaItinerante;
-	}
-	public void setDescripcionZonaItinerante(String descripcionZonaItinerante) {
-		this.descripcionZonaItinerante = descripcionZonaItinerante;
-	}
-	public String getIndicadorInspeccionProducto() {
-		return indicadorInspeccionProducto;
-	}
-	public void setIndicadorInspeccionProducto(String indicadorInspeccionProducto) {
-		this.indicadorInspeccionProducto = indicadorInspeccionProducto;
-	}
-		public String getDescripcionTipoCreditoSBS() {
-		return descripcionTipoCreditoSBS;
-	}
-	public void setDescripcionTipoCreditoSBS(String descripcionTipoCreditoSBS) {
-		this.descripcionTipoCreditoSBS = descripcionTipoCreditoSBS;
-	}
-	public String getCodigoTipoCreditoSBS() {
-		return codigoTipoCreditoSBS;
-	}
-	public void setCodigoTipoCreditoSBS(String codigoTipoCreditoSBS) {
-		this.codigoTipoCreditoSBS = codigoTipoCreditoSBS;
-	}
-	public String getTipoCredito() {
-		return tipoCredito;
-	}
-	public void setTipoCredito(String tipoCredito) {
-		this.tipoCredito = tipoCredito;
-	}
-	public String getCodigoCIIUaux() {
-		return codigoCIIUaux;
-	}
-	public void setCodigoCIIUaux(String codigoCIIUaux) {
-		this.codigoCIIUaux = codigoCIIUaux;
-	}
-	public String getCodigoAFavorDe() {
-		return codigoAFavorDe;
-	}
-	public void setCodigoAFavorDe(String codigoAFavorDe) {
-		this.codigoAFavorDe = codigoAFavorDe;
-	}
-	public String getCodigoAfianzado() {
-		return codigoAfianzado;
-	}
-	public void setCodigoAfianzado(String codigoAfianzado) {
-		this.codigoAfianzado = codigoAfianzado;
-	}
-	public String getNombreAFavorDe() {
-		return nombreAFavorDe;
-	}
-	public void setNombreAFavorDe(String nombreAFavorDe) {
-		this.nombreAFavorDe = nombreAFavorDe;
-	}
-	public String getNombreAfianzado() {
-		return nombreAfianzado;
-	}
-	public void setNombreAfianzado(String nombreAfianzado) {
-		this.nombreAfianzado = nombreAfianzado;
-	}
 
-	public String getCadObjIndRiesgo() {
-		return cadObjIndRiesgo;
-	}
-	public void setCadObjIndRiesgo(String cadObjIndRiesgo) {
-		this.cadObjIndRiesgo = cadObjIndRiesgo;
-		}
-	
-		/**Nuevo Campo Inspeccion por parte de la Agencia
-	 * 
-	 *@authorgfernandez
-	 *@since21.10.2010
-	 */
-	public String getInspeccionAgencia() {
-		return inspeccionAgencia;
-	}
-	public void setInspeccionAgencia(String inspeccionAgencia) {
-		this.inspeccionAgencia = inspeccionAgencia;
-	}
-	public String getNumeroPreSolicitud() {
-		return numeroPreSolicitud;
-	}
-	public void setNumeroPreSolicitud(String numeroPreSolicitud) {
-		this.numeroPreSolicitud = numeroPreSolicitud;
-	}
-	public String getNumeroDocumentoPersona() {
-		return numeroDocumentoPersona;
-	}
-	public void setNumeroDocumentoPersona(String numeroDocumentoPersona) {
-		this.numeroDocumentoPersona = numeroDocumentoPersona;
-	}
-	
-	//stacanga 29.03.2012
-	public String getCodigoPreAnalista() {
-		return codigoPreAnalista;
-	}
-	public void setCodigoPreAnalista(String codigoPreAnalista) {
-		this.codigoPreAnalista = codigoPreAnalista;
-	}
-	
-	public String getNombrePreAnalista() {
-		return nombrePreAnalista;
-	}
-	public void setNombrePreAnalista(String nombrePreAnalista) {
-		this.nombrePreAnalista = nombrePreAnalista;
-	}
-	// Inicio galmerco 20.05.2012 Indicador de InspeccionObligatoria
-	public String getIndicadorInspeccionObligatoria() {
-		return indicadorInspeccionObligatoria;
-	}
-	public void setIndicadorInspeccionObligatoria(
-			String indicadorInspeccionObligatoria) {
-		this.indicadorInspeccionObligatoria = indicadorInspeccionObligatoria;
-	}
-	// Fin galmerco 20.05.2012 Indicador de InspeccionObligatoria
-	
-	//Inicio [Req. 13-135] fvalle 09.04.2014
-	public String getIndModificacionEnvioEECC() {
-		return indModificacionEnvioEECC;
-	}
-	public void setIndModificacionEnvioEECC(String indModificacionEnvioEECC) {
-		this.indModificacionEnvioEECC = indModificacionEnvioEECC;
-	}
-	public String getIndComEECC() {
-		return indComEECC;
-	}
-	public void setIndComEECC(String indComEECC) {
-		this.indComEECC = indComEECC;
-	}
-	public String getIdentificadorEnvioEECC() {
-		return identificadorEnvioEECC;
-	}
-	public void setIdentificadorEnvioEECC(String identificadorEnvioEECC) {
-		this.identificadorEnvioEECC = identificadorEnvioEECC;
-	}
-	public String getMedioEnvioEECC() {
-		return medioEnvioEECC;
-	}
-	public void setMedioEnvioEECC(String medioEnvioEECC) {
-		this.medioEnvioEECC = medioEnvioEECC;
-	}
-	public String getIdDireccion() {
-		return idDireccion;
-	}
-	public void setIdDireccion(String idDireccion) {
-		this.idDireccion = idDireccion;
-	}
-	// Inicio [Req. 13-135] jchilon 23.04.2014: Envio estado cuenta por email.
-	public String getIdEmail() {
-		return idEmail;
-	}
-	public void setIdEmail(String idEmail) {
-		this.idEmail = idEmail;
-	}
-	//Fin [Req. 13-135] jchilon 23.04.2014.
+    public String getCodigoCIIU() {
+        return codigoCIIU;
+    }
 
-	//Fin [Req. S13-135]
-	
-	/* [Req. S14 - 067] jtomasto Inicio */
-   public Double getMontoRed() {
-      return montoRed;
-   }
-   
-   public void setMontoRed(Double montoRed) {
-      this.montoRed = montoRed;
-   }
-   
-   public Double getMontoDif() {
-      return montoDif;
-   }
-   
-   public void setMontoDif(Double montoDif) {
-      this.montoDif = montoDif;
-   }
-   /* [Req. S14 - 067] Fin  */
-   // Inicio [Req. 14-115] esalazar 26.08.2014
-   public String getIndicadorEvaluacionDPS() {
-      return indicadorEvaluacionDPS;
-   }
+    public void setCodigoCIIU(String codigoCIIU) {
+        this.codigoCIIU = codigoCIIU;
+    }
 
-   public void setIndicadorEvaluacionDPS(String indicadorEvaluacionDPS) {
-      this.indicadorEvaluacionDPS = indicadorEvaluacionDPS;
-   }
-   // Fin [Req. 14-115]
-   
-   // [+] Req.14-106 dfujimoto 15.09.2014
-   public String getCodigoDestinoCredito() {
-       return codigoDestinoCredito;
-   }
+    public String getCodigoGiroNegocio() {
+        return codigoGiroNegocio;
+    }
 
-   public void setCodigoDestinoCredito(String codigoDestinoCredito) {
-       this.codigoDestinoCredito = codigoDestinoCredito;
-   }
+    public void setCodigoGiroNegocio(String codigoGiroNegocio) {
+        this.codigoGiroNegocio = codigoGiroNegocio;
+    }
 
-   public String getDescripcionDestinoCredito() {
-       return descripcionDestinoCredito;
-   }
+    public String getDescripcionCIIU() {
+        return descripcionCIIU;
+    }
 
-   public void setDescripcionDestinoCredito(String descripcionDestinoCredito) {
-       this.descripcionDestinoCredito = descripcionDestinoCredito;
-   }
-   // [-] Req.14-106 dfujimoto 15.09.2014
-    
-   // Inicio [Req. S16-041] agarcia 05.12.2016
+    public void setDescripcionCIIU(String descripcionCIIU) {
+        this.descripcionCIIU = descripcionCIIU;
+    }
+
+    public String getDescripcionGiroNegocio() {
+        return descripcionGiroNegocio;
+    }
+
+    public void setDescripcionGiroNegocio(String descripcionGiroNegocio) {
+        this.descripcionGiroNegocio = descripcionGiroNegocio;
+    }
+
+    public String getFormaDesembolso() {
+        return formaDesembolso;
+    }
+
+    public void setFormaDesembolso(String formaDesembolso) {
+        this.formaDesembolso = formaDesembolso;
+    }
+
+    public String getCorrelativoPlanPago() {
+        return correlativoPlanPago;
+    }
+
+    public void setCorrelativoPlanPago(String correlativoPlanPago) {
+        this.correlativoPlanPago = correlativoPlanPago;
+    }
+
+    public String getFormaCredito() {
+        return formaCredito;
+    }
+
+    public void setFormaCredito(String formaCredito) {
+        this.formaCredito = formaCredito;
+    }
+
+    public String getModalidadCredito() {
+        return modalidadCredito;
+    }
+
+    public void setModalidadCredito(String modalidadCredito) {
+        this.modalidadCredito = modalidadCredito;
+    }
+
+    public Long getDiaCorte() {
+        return diaCorte;
+    }
+
+    public void setDiaCorte(Long diaCorte) {
+        this.diaCorte = diaCorte;
+    }
+
+    public Date getFechaRevalidacionAprobado() {
+        return fechaRevalidacionAprobado;
+    }
+
+    public void setFechaRevalidacionAprobado(Date fechaRevalidacionAprobado) {
+        this.fechaRevalidacionAprobado = fechaRevalidacionAprobado;
+    }
+
+    public Date getFechaRevalidacionSolicitado() {
+        return fechaRevalidacionSolicitado;
+    }
+
+    public void setFechaRevalidacionSolicitado(Date fechaRevalidacionSolicitado) {
+        this.fechaRevalidacionSolicitado = fechaRevalidacionSolicitado;
+    }
+
+    public Long getFrecMinimaPago() {
+        return frecMinimaPago;
+    }
+
+    public void setFrecMinimaPago(Long frecMinimaPago) {
+        this.frecMinimaPago = frecMinimaPago;
+    }
+
+    public String getIdDiaPagoAprobado() {
+        return idDiaPagoAprobado;
+    }
+
+    public void setIdDiaPagoAprobado(String idDiaPagoAprobado) {
+        this.idDiaPagoAprobado = idDiaPagoAprobado;
+    }
+
+    public String getIdDiaPagoSolicitado() {
+        return idDiaPagoSolicitado;
+    }
+
+    public void setIdDiaPagoSolicitado(String idDiaPagoSolicitado) {
+        this.idDiaPagoSolicitado = idDiaPagoSolicitado;
+    }
+
+    public Double getTasaInteresPeriodoSolicitado() {
+        return tasaInteresPeriodoSolicitado;
+    }
+
+    public void setTasaInteresPeriodoSolicitado(Double tasaInteresPeriodoSolicitado) {
+        this.tasaInteresPeriodoSolicitado = tasaInteresPeriodoSolicitado;
+    }
+
+    public Double getTasaInteresEfectivaAnualAprobado() {
+        return tasaInteresEfectivaAnualAprobado;
+    }
+
+    public void setTasaInteresEfectivaAnualAprobado(Double tasaInteresEfectivaAnualAprobado) {
+        this.tasaInteresEfectivaAnualAprobado = tasaInteresEfectivaAnualAprobado;
+    }
+
+    public Double getTasaInteresEfectivaAnualSolicitado() {
+        return tasaInteresEfectivaAnualSolicitado;
+    }
+
+    public void setTasaInteresEfectivaAnualSolicitado(Double tasaInteresEfectivaAnualSolicitado) {
+        this.tasaInteresEfectivaAnualSolicitado = tasaInteresEfectivaAnualSolicitado;
+    }
+
+    public Double getTasaInteresEfectivaPeriodoAprobado() {
+        return tasaInteresEfectivaPeriodoAprobado;
+    }
+
+    public void setTasaInteresEfectivaPeriodoAprobado(Double tasaInteresEfectivaPeriodoAprobado) {
+        this.tasaInteresEfectivaPeriodoAprobado = tasaInteresEfectivaPeriodoAprobado;
+    }
+
+    public Double getTasaInteresEfectivaPeriodoSolicitado() {
+        return tasaInteresEfectivaPeriodoSolicitado;
+    }
+
+    public void setTasaInteresEfectivaPeriodoSolicitado(Double tasaInteresEfectivaPeriodoSolicitado) {
+        this.tasaInteresEfectivaPeriodoSolicitado = tasaInteresEfectivaPeriodoSolicitado;
+    }
+
+    public Double getTasasInteresMoratorioAnualAprobado() {
+        return tasasInteresMoratorioAnualAprobado;
+    }
+
+    public void setTasasInteresMoratorioAnualAprobado(Double tasasInteresMoratorioAnualAprobado) {
+        this.tasasInteresMoratorioAnualAprobado = tasasInteresMoratorioAnualAprobado;
+    }
+
+    public Double getTasasInteresMoratorioAnualSolicitado() {
+        return tasasInteresMoratorioAnualSolicitado;
+    }
+
+    public void setTasasInteresMoratorioAnualSolicitado(Double tasasInteresMoratorioAnualSolicitado) {
+        this.tasasInteresMoratorioAnualSolicitado = tasasInteresMoratorioAnualSolicitado;
+    }
+
+    public String getCodigocanalVentas() {
+        return codigocanalVentas;
+    }
+
+    public void setCodigocanalVentas(String codigocanalVentas) {
+        this.codigocanalVentas = codigocanalVentas;
+    }
+
+    public String getCodigoVendedor() {
+        return codigoVendedor;
+    }
+
+    public void setCodigoVendedor(String codigoVendedor) {
+        this.codigoVendedor = codigoVendedor;
+    }
+
+    public String getDescCanalVentas() {
+        return descCanalVentas;
+    }
+
+    public void setDescCanalVentas(String descCanalVentas) {
+        this.descCanalVentas = descCanalVentas;
+    }
+
+    public String getDescVendedor() {
+        return descVendedor;
+    }
+
+    public void setDescVendedor(String descVendedor) {
+        this.descVendedor = descVendedor;
+    }
+
+    public String getCodigoPersonaAfianzada() {
+        return codigoPersonaAfianzada;
+    }
+
+    public void setCodigoPersonaAfianzada(String codigoPersonaAfianzada) {
+        this.codigoPersonaAfianzada = codigoPersonaAfianzada;
+    }
+
+    public String getFechaTerminoAprobado() {
+        return fechaTerminoAprobado;
+    }
+
+    public void setFechaTerminoAprobado(String fechaTerminoAprobado) {
+        this.fechaTerminoAprobado = fechaTerminoAprobado;
+    }
+
+    public String getFechaTerminoSolicitado() {
+        return fechaTerminoSolicitado;
+    }
+
+    public void setFechaTerminoSolicitado(String fechaTerminoSolicitado) {
+        this.fechaTerminoSolicitado = fechaTerminoSolicitado;
+    }
+
+    public String getIndAdjudicacionDirecta() {
+        return indAdjudicacionDirecta;
+    }
+
+    public void setIndAdjudicacionDirecta(String indAdjudicacionDirecta) {
+        this.indAdjudicacionDirecta = indAdjudicacionDirecta;
+    }
+
+    public String getMotivoFianza() {
+        return motivoFianza;
+    }
+
+    public void setMotivoFianza(String motivoFianza) {
+        this.motivoFianza = motivoFianza;
+    }
+
+    public String getNombrePersonaAfianzada() {
+        return nombrePersonaAfianzada;
+    }
+
+    public void setNombrePersonaAfianzada(String nombrePersonaAfianzada) {
+        this.nombrePersonaAfianzada = nombrePersonaAfianzada;
+    }
+
+    public String getNumeroSolicitudCredito() {
+        return numeroSolicitudCredito;
+    }
+
+    public void setNumeroSolicitudCredito(String numeroSolicitudCredito) {
+        this.numeroSolicitudCredito = numeroSolicitudCredito;
+    }
+
+    public Long getPlazoDiasAprobadoCF() {
+        return plazoDiasAprobadoCF;
+    }
+
+    public void setPlazoDiasAprobadoCF(Long plazoDiasAprobadoCF) {
+        this.plazoDiasAprobadoCF = plazoDiasAprobadoCF;
+    }
+
+    public Long getPlazoDiasSolicitadoCF() {
+        return plazoDiasSolicitadoCF;
+    }
+
+    public void setPlazoDiasSolicitadoCF(Long plazoDiasSolicitadoCF) {
+        this.plazoDiasSolicitadoCF = plazoDiasSolicitadoCF;
+    }
+
+    public Double getPorcentajeComisionAprobado() {
+        return porcentajeComisionAprobado;
+    }
+
+    public void setPorcentajeComisionAprobado(Double porcentajeComisionAprobado) {
+        this.porcentajeComisionAprobado = porcentajeComisionAprobado;
+    }
+
+    public Double getPorcentajeComisionSolicitado() {
+        return porcentajeComisionSolicitado;
+    }
+
+    public void setPorcentajeComisionSolicitado(Double porcentajeComisionSolicitado) {
+        this.porcentajeComisionSolicitado = porcentajeComisionSolicitado;
+    }
+
+    public String getTipoCreditoIndirecto() {
+        return tipoCreditoIndirecto;
+    }
+
+    public void setTipoCreditoIndirecto(String tipoCreditoIndirecto) {
+        this.tipoCreditoIndirecto = tipoCreditoIndirecto;
+    }
+
+    public String getCodigoSubTipoCreditoSolicitado() {
+        return codigoSubTipoCreditoSolicitado;
+    }
+
+    public void setCodigoSubTipoCreditoSolicitado(String codigoSubTipoCreditoSolicitado) {
+        this.codigoSubTipoCreditoSolicitado = codigoSubTipoCreditoSolicitado;
+    }
+
+    public String getCodigoTipoCreditoSolicitado() {
+        return codigoTipoCreditoSolicitado;
+    }
+
+    public void setCodigoTipoCreditoSolicitado(String codigoTipoCreditoSolicitado) {
+        this.codigoTipoCreditoSolicitado = codigoTipoCreditoSolicitado;
+    }
+
+    public String getIndicadorModificaFrecPago() {
+        return indicadorModificaFrecPago;
+    }
+
+    public void setIndicadorModificaFrecPago(String indicadorModificaFrecPago) {
+        this.indicadorModificaFrecPago = indicadorModificaFrecPago;
+    }
+
+    public String getIndicadorPermiteGracia() {
+        return indicadorPermiteGracia;
+    }
+
+    public void setIndicadorPermiteGracia(String indicadorPermiteGracia) {
+        this.indicadorPermiteGracia = indicadorPermiteGracia;
+    }
+
+    public Double getMontoTotalFinanciado() {
+        return montoTotalFinanciado;
+    }
+
+    public void setMontoTotalFinanciado(Double montoTotalFinanciado) {
+        this.montoTotalFinanciado = montoTotalFinanciado;
+    }
+
+    public String getSimboloMoneda() {
+        return simboloMoneda;
+    }
+
+    public void setSimboloMoneda(String simboloMoneda) {
+        this.simboloMoneda = simboloMoneda;
+    }
+
+    public Double getTotalGastosComisiones() {
+        return totalGastosComisiones;
+    }
+
+    public void setTotalGastosComisiones(Double totalGastosComisiones) {
+        this.totalGastosComisiones = totalGastosComisiones;
+    }
+
+    public String getCodigoAgencia() {
+        return codigoAgencia;
+    }
+
+    public void setCodigoAgencia(String codigoAgencia) {
+        this.codigoAgencia = codigoAgencia;
+    }
+
+    public String getDescripcionAgencia() {
+        return descripcionAgencia;
+    }
+
+    public void setDescripcionAgencia(String descripcionAgencia) {
+        this.descripcionAgencia = descripcionAgencia;
+    }
+
+    public Double getFactorCuota() {
+        return factorCuota;
+    }
+
+    public void setFactorCuota(Double factorCuota) {
+        this.factorCuota = factorCuota;
+    }
+
+    public Double getMontoIngreso() {
+        return montoIngreso;
+    }
+
+    public void setMontoIngreso(Double montoIngreso) {
+        this.montoIngreso = montoIngreso;
+    }
+
+    public String getDescEstadoEvaluacion() {
+        return descEstadoEvaluacion;
+    }
+
+    public void setDescEstadoEvaluacion(String descEstadoEvaluacion) {
+        this.descEstadoEvaluacion = descEstadoEvaluacion;
+    }
+
+    public Double getCuotaEndeudamiento() {
+        return cuotaEndeudamiento;
+    }
+
+    public void setCuotaEndeudamiento(Double cuotaEndeudamiento) {
+        this.cuotaEndeudamiento = cuotaEndeudamiento;
+    }
+
+    public Double getCuotaMaxima() {
+        return cuotaMaxima;
+    }
+
+    public void setCuotaMaxima(Double cuotaMaxima) {
+        this.cuotaMaxima = cuotaMaxima;
+    }
+
+    public Double getDescuento() {
+        return descuento;
+    }
+
+    public void setDescuento(Double descuento) {
+        this.descuento = descuento;
+    }
+
+    public Double getMontoInicial() {
+        return montoInicial;
+    }
+
+    public void setMontoInicial(Double montoInicial) {
+        this.montoInicial = montoInicial;
+    }
+
+    public String getNroExperto() {
+        return nroExperto;
+    }
+
+    public void setNroExperto(String nroExperto) {
+        this.nroExperto = nroExperto;
+    }
+
+    public String getCodigoEntFin() {
+        return codigoEntFin;
+    }
+
+    public void setCodigoEntFin(String codigoEntFin) {
+        this.codigoEntFin = codigoEntFin;
+    }
+
+    public String getCodigoTipoTarjeta() {
+        return codigoTipoTarjeta;
+    }
+
+    public void setCodigoTipoTarjeta(String codigoTipoTarjeta) {
+        this.codigoTipoTarjeta = codigoTipoTarjeta;
+    }
+
+    public String getDescEntFin() {
+        return descEntFin;
+    }
+
+    public void setDescEntFin(String descEntFin) {
+        this.descEntFin = descEntFin;
+    }
+
+    public String getDescTipoTarjeta() {
+        return descTipoTarjeta;
+    }
+
+    public void setDescTipoTarjeta(String descTipoTarjeta) {
+        this.descTipoTarjeta = descTipoTarjeta;
+    }
+
+    public String getIndColocacion() {
+        return indColocacion;
+    }
+
+    public void setIndColocacion(String indColocacion) {
+        this.indColocacion = indColocacion;
+    }
+
+    public String getNroTarjeta() {
+        return nroTarjeta;
+    }
+
+    public void setNroTarjeta(String nroTarjeta) {
+        this.nroTarjeta = nroTarjeta;
+    }
+
+    public String getNombreCliente() {
+        return nombreCliente;
+    }
+
+    public void setNombreCliente(String nombreCliente) {
+        this.nombreCliente = nombreCliente;
+    }
+
+    public Double getFactorObtenido() {
+        return factorObtenido;
+    }
+
+    public void setFactorObtenido(Double factorObtenido) {
+        this.factorObtenido = factorObtenido;
+    }
+
+    public String getIdentificadorFactorendeudamiento() {
+        return identificadorFactorendeudamiento;
+    }
+
+    public void setIdentificadorFactorendeudamiento(String identificadorFactorendeudamiento) {
+        this.identificadorFactorendeudamiento = identificadorFactorendeudamiento;
+    }
+
+    public Double getPrecioLista() {
+        return precioLista;
+    }
+
+    public void setPrecioLista(Double precioLista) {
+        this.precioLista = precioLista;
+    }
+
+    public Date getFechaDesembolso() {
+        return fechaDesembolso;
+    }
+
+    public void setFechaDesembolso(Date fechaDesembolso) {
+        this.fechaDesembolso = fechaDesembolso;
+    }
+
+    public Integer getAnioFabricacion() {
+        return anioFabricacion;
+    }
+
+    public void setAnioFabricacion(Integer anioFabricacion) {
+        this.anioFabricacion = anioFabricacion;
+    }
+
+    public String getDescClase() {
+        return descClase;
+    }
+
+    public void setDescClase(String descClase) {
+        this.descClase = descClase;
+    }
+
+    public String getDescColor() {
+        return descColor;
+    }
+
+    public void setDescColor(String descColor) {
+        this.descColor = descColor;
+    }
+
+    public String getIdClase() {
+        return idClase;
+    }
+
+    public void setIdClase(String idClase) {
+        this.idClase = idClase;
+    }
+
+    public String getIdColor() {
+        return idColor;
+    }
+
+    public void setIdColor(String idColor) {
+        this.idColor = idColor;
+    }
+
+    public String getIdConcesionario() {
+        return idConcesionario;
+    }
+
+    public void setIdConcesionario(String idConcesionario) {
+        this.idConcesionario = idConcesionario;
+    }
+
+    public Double getImporteInicial() {
+        return importeInicial;
+    }
+
+    public void setImporteInicial(Double importeInicial) {
+        this.importeInicial = importeInicial;
+    }
+
+    public Double getKmRecorridosDia() {
+        return kmRecorridosDia;
+    }
+
+    public void setKmRecorridosDia(Double kmRecorridosDia) {
+        this.kmRecorridosDia = kmRecorridosDia;
+    }
+
+    public String getModelo() {
+        return modelo;
+    }
+
+    public void setModelo(String modelo) {
+        this.modelo = modelo;
+    }
+
+    public String getNumeroChasis() {
+        return numeroChasis;
+    }
+
+    public void setNumeroChasis(String numeroChasis) {
+        this.numeroChasis = numeroChasis;
+    }
+
+    public String getNumeroMotor() {
+        return numeroMotor;
+    }
+
+    public void setNumeroMotor(String numeroMotor) {
+        this.numeroMotor = numeroMotor;
+    }
+
+    public String getNumeroPlaca() {
+        return numeroPlaca;
+    }
+
+    public void setNumeroPlaca(String numeroPlaca) {
+        this.numeroPlaca = numeroPlaca;
+    }
+
+    public String getNumeroSerie() {
+        return numeroSerie;
+    }
+
+    public void setNumeroSerie(String numeroSerie) {
+        this.numeroSerie = numeroSerie;
+    }
+
+    public Double getPrcRecaudo() {
+        return prcRecaudo;
+    }
+
+    public void setPrcRecaudo(Double prcRecaudo) {
+        this.prcRecaudo = prcRecaudo;
+    }
+
+    public Double getValorVehiculo() {
+        return valorVehiculo;
+    }
+
+    public void setValorVehiculo(Double valorVehiculo) {
+        this.valorVehiculo = valorVehiculo;
+    }
+
+    public String getDescMarca() {
+        return descMarca;
+    }
+
+    public void setDescMarca(String descMarca) {
+        this.descMarca = descMarca;
+    }
+
+    public String getIdMarca() {
+        return idMarca;
+    }
+
+    public void setIdMarca(String idMarca) {
+        this.idMarca = idMarca;
+    }
+
+    public Double getIngresoBrutoCalculado() {
+        return ingresoBrutoCalculado;
+    }
+
+    public void setIngresoBrutoCalculado(Double ingresoBrutoCalculado) {
+        this.ingresoBrutoCalculado = ingresoBrutoCalculado;
+    }
+
+    public Double getRelacionCuotaAhorro() {
+        return relacionCuotaAhorro;
+    }
+
+    public void setRelacionCuotaAhorro(Double relacionCuotaAhorro) {
+        this.relacionCuotaAhorro = relacionCuotaAhorro;
+    }
+
+    public String getDescConcesionario() {
+        return descConcesionario;
+    }
+
+    public void setDescConcesionario(String descConcesionario) {
+        this.descConcesionario = descConcesionario;
+    }
+
+    public Double getOtrosMontosSolicitados() {
+        return otrosMontosSolicitados;
+    }
+
+    public void setOtrosMontosSolicitados(Double otrosMontosSolicitados) {
+        this.otrosMontosSolicitados = otrosMontosSolicitados;
+    }
+
+    public String getCodigoTipoSeguroDesgravamen() {
+        return codigoTipoSeguroDesgravamen;
+    }
+
+    public void setCodigoTipoSeguroDesgravamen(String codigoTipoSeguroDesgravamen) {
+        this.codigoTipoSeguroDesgravamen = codigoTipoSeguroDesgravamen;
+    }
+
+    public Double getCuotaInicialAprobado() {
+        return cuotaInicialAprobado;
+    }
+
+    public void setCuotaInicialAprobado(Double cuotaInicialAprobado) {
+        this.cuotaInicialAprobado = cuotaInicialAprobado;
+    }
+
+    public Double getCuotaInicialSolicitado() {
+        return cuotaInicialSolicitado;
+    }
+
+    public void setCuotaInicialSolicitado(Double cuotaInicialSolicitado) {
+        this.cuotaInicialSolicitado = cuotaInicialSolicitado;
+    }
+
+    public Double getImporteAseguradoAprobado() {
+        return importeAseguradoAprobado;
+    }
+
+    public void setImporteAseguradoAprobado(Double importeAseguradoAprobado) {
+        this.importeAseguradoAprobado = importeAseguradoAprobado;
+    }
+
+    public Double getImporteAseguradoSolicitado() {
+        return importeAseguradoSolicitado;
+    }
+
+    public void setImporteAseguradoSolicitado(Double importeAseguradoSolicitado) {
+        this.importeAseguradoSolicitado = importeAseguradoSolicitado;
+    }
+
+    public Double getMontoAsegurado() {
+        return montoAsegurado;
+    }
+
+    public void setMontoAsegurado(Double montoAsegurado) {
+        this.montoAsegurado = montoAsegurado;
+    }
+
+    public Double getOtrosMontosAprobado() {
+        return otrosMontosAprobado;
+    }
+
+    public void setOtrosMontosAprobado(Double otrosMontosAprobado) {
+        this.otrosMontosAprobado = otrosMontosAprobado;
+    }
+
+    public Double getOtrosSolicitado() {
+        return otrosSolicitado;
+    }
+
+    public void setOtrosSolicitado(Double otrosSolicitado) {
+        this.otrosSolicitado = otrosSolicitado;
+    }
+
+    public Double getTasaAnualSeguroBienAprobado() {
+        return tasaAnualSeguroBienAprobado;
+    }
+
+    public void setTasaAnualSeguroBienAprobado(Double tasaAnualSeguroBienAprobado) {
+        this.tasaAnualSeguroBienAprobado = tasaAnualSeguroBienAprobado;
+    }
+
+    public Double getTasaAnualSeguroBienSolicitado() {
+        return tasaAnualSeguroBienSolicitado;
+    }
+
+    public void setTasaAnualSeguroBienSolicitado(Double tasaAnualSeguroBienSolicitado) {
+        this.tasaAnualSeguroBienSolicitado = tasaAnualSeguroBienSolicitado;
+    }
+
+    public Double getTasaAnualSeguroDesgravamenAprobado() {
+        return tasaAnualSeguroDesgravamenAprobado;
+    }
+
+    public void setTasaAnualSeguroDesgravamenAprobado(Double tasaAnualSeguroDesgravamenAprobado) {
+        this.tasaAnualSeguroDesgravamenAprobado = tasaAnualSeguroDesgravamenAprobado;
+    }
+
+    public Double getTasaDesgravamen() {
+        return tasaDesgravamen;
+    }
+
+    public void setTasaDesgravamen(Double tasaDesgravamen) {
+        this.tasaDesgravamen = tasaDesgravamen;
+    }
+
+    public Double getTasaDesgravamenIndividualAnual() {
+        return tasaDesgravamenIndividualAnual;
+    }
+
+    public void setTasaDesgravamenIndividualAnual(Double tasaDesgravamenIndividualAnual) {
+        this.tasaDesgravamenIndividualAnual = tasaDesgravamenIndividualAnual;
+    }
+
+    public Double getTasaDesgravamenMancomunadaAnual() {
+        return tasaDesgravamenMancomunadaAnual;
+    }
+
+    public void setTasaDesgravamenMancomunadaAnual(Double tasaDesgravamenMancomunadaAnual) {
+        this.tasaDesgravamenMancomunadaAnual = tasaDesgravamenMancomunadaAnual;
+    }
+
+    public Double getTasaSegBien() {
+        return tasaSegBien;
+    }
+
+    public void setTasaSegBien(Double tasaSegBien) {
+        this.tasaSegBien = tasaSegBien;
+    }
+
+    public String getTipoSeguroDesgravamenAprobado() {
+        return tipoSeguroDesgravamenAprobado;
+    }
+
+    public void setTipoSeguroDesgravamenAprobado(String tipoSeguroDesgravamenAprobado) {
+        this.tipoSeguroDesgravamenAprobado = tipoSeguroDesgravamenAprobado;
+    }
+
+    public String getTipoSeguroDesgravamenSolicitado() {
+        return tipoSeguroDesgravamenSolicitado;
+    }
+
+    public void setTipoSeguroDesgravamenSolicitado(String tipoSeguroDesgravamenSolicitado) {
+        this.tipoSeguroDesgravamenSolicitado = tipoSeguroDesgravamenSolicitado;
+    }
+
+    public Double getValorBien() {
+        return valorBien;
+    }
+
+    public void setValorBien(Double valorBien) {
+        this.valorBien = valorBien;
+    }
+
+    public Double getValorBienAprobado() {
+        return valorBienAprobado;
+    }
+
+    public void setValorBienAprobado(Double valorBienAprobado) {
+        this.valorBienAprobado = valorBienAprobado;
+    }
+
+    public Double getValorBienSolicitado() {
+        return valorBienSolicitado;
+    }
+
+    public void setValorBienSolicitado(Double valorBienSolicitado) {
+        this.valorBienSolicitado = valorBienSolicitado;
+    }
+
+    public String getDescTipoSubTipoCredito() {
+        return descTipoSubTipoCredito;
+    }
+
+    public void setDescTipoSubTipoCredito(String descTipoSubTipoCredito) {
+        this.descTipoSubTipoCredito = descTipoSubTipoCredito;
+    }
+
+    public String getPermiteSeguroDesgravamen() {
+        return permiteSeguroDesgravamen;
+    }
+
+    public void setPermiteSeguroDesgravamen(String permiteSeguroDesgravamen) {
+        this.permiteSeguroDesgravamen = permiteSeguroDesgravamen;
+    }
+
+    public String getPermiteSeguroBien() {
+        return permiteSeguroBien;
+    }
+
+    public void setPermiteSeguroBien(String permiteSeguroBien) {
+        this.permiteSeguroBien = permiteSeguroBien;
+    }
+
+    public String getCodigoPromocion() {
+        return codigoPromocion;
+    }
+
+    public void setCodigoPromocion(String codigoPromocion) {
+        this.codigoPromocion = codigoPromocion;
+    }
+
+    public String getDescPromocion() {
+        return descPromocion;
+    }
+
+    public void setDescPromocion(String descPromocion) {
+        this.descPromocion = descPromocion;
+    }
+
+    public Date getFechaAprobacion() {
+        return fechaAprobacion;
+    }
+
+    public void setFechaAprobacion(Date fechaAprobacion) {
+        this.fechaAprobacion = fechaAprobacion;
+    }
+
+    public Long getCount() {
+        return count;
+    }
+
+    public void setCount(Long count) {
+        this.count = count;
+    }
+
+    public String getCodigoPersona() {
+        return codigoPersona;
+    }
+
+    public void setCodigoPersona(String codigoPersona) {
+        this.codigoPersona = codigoPersona;
+    }
+
+    public String getCodigoProyectoInmobiliaria() {
+        return codigoProyectoInmobiliaria;
+    }
+
+    public void setCodigoProyectoInmobiliaria(String codigoProyectoInmobiliaria) {
+        this.codigoProyectoInmobiliaria = codigoProyectoInmobiliaria;
+    }
+
+    public String getCodigoTipoBien() {
+        return codigoTipoBien;
+    }
+
+    public void setCodigoTipoBien(String codigoTipoBien) {
+        this.codigoTipoBien = codigoTipoBien;
+    }
+
+    public String getCodigoTipoInmueble() {
+        return codigoTipoInmueble;
+    }
+
+    public void setCodigoTipoInmueble(String codigoTipoInmueble) {
+        this.codigoTipoInmueble = codigoTipoInmueble;
+    }
+
+    public Double getImpBonoDamnificado() {
+        return impBonoDamnificado;
+    }
+
+    public void setImpBonoDamnificado(Double impBonoDamnificado) {
+        this.impBonoDamnificado = impBonoDamnificado;
+    }
+
+    public Double getImpBonoMiVivienda() {
+        return impBonoMiVivienda;
+    }
+
+    public void setImpBonoMiVivienda(Double impBonoMiVivienda) {
+        this.impBonoMiVivienda = impBonoMiVivienda;
+    }
+
+    public BeanCLDireccionPersonas getBeanCLDireccionPersonas() {
+        return beanCLDireccionPersonas;
+    }
+
+    public void setBeanCLDireccionPersonas(BeanCLDireccionPersonas beanCLDireccionPersonas) {
+        this.beanCLDireccionPersonas = beanCLDireccionPersonas;
+    }
+
+    public String getDescPersonaInmo() {
+        return descPersonaInmo;
+    }
+
+    public void setDescPersonaInmo(String descPersonaInmo) {
+        this.descPersonaInmo = descPersonaInmo;
+    }
+
+    public String getIndEsPropietario() {
+        return indEsPropietario;
+    }
+
+    public void setIndEsPropietario(String indEsPropietario) {
+        this.indEsPropietario = indEsPropietario;
+    }
+
+    public Double getMontoADesembolsar() {
+        return montoADesembolsar;
+    }
+
+    public void setMontoADesembolsar(Double montoADesembolsar) {
+        this.montoADesembolsar = montoADesembolsar;
+    }
+
+    public String getIndEnListaNegra() {
+        return indEnListaNegra;
+    }
+
+    public void setIndEnListaNegra(String indEnListaNegra) {
+        this.indEnListaNegra = indEnListaNegra;
+    }
+
+    public String getIndTipoPersonaTitular() {
+        return indTipoPersonaTitular;
+    }
+
+    public void setIndTipoPersonaTitular(String indTipoPersonaTitular) {
+        this.indTipoPersonaTitular = indTipoPersonaTitular;
+    }
+
+    public Double getTasaCompensatoriaFinalTarif() {
+        return tasaCompensatoriaFinalTarif;
+    }
+
+    public void setTasaCompensatoriaFinalTarif(Double tasaCompensatoriaFinalTarif) {
+        this.tasaCompensatoriaFinalTarif = tasaCompensatoriaFinalTarif;
+    }
+
+    public Double getTasaCompensatoriaInicialTarif() {
+        return tasaCompensatoriaInicialTarif;
+    }
+
+    public void setTasaCompensatoriaInicialTarif(Double tasaCompensatoriaInicialTarif) {
+        this.tasaCompensatoriaInicialTarif = tasaCompensatoriaInicialTarif;
+    }
+
+    public Double getTasaMoratFinalTarif() {
+        return tasaMoratFinalTarif;
+    }
+
+    public void setTasaMoratFinalTarif(Double tasaMoratFinalTarif) {
+        this.tasaMoratFinalTarif = tasaMoratFinalTarif;
+    }
+
+    public Double getTasaMoratInicialTarif() {
+        return tasaMoratInicialTarif;
+    }
+
+    public void setTasaMoratInicialTarif(Double tasaMoratInicialTarif) {
+        this.tasaMoratInicialTarif = tasaMoratInicialTarif;
+    }
+
+    public String getTasaErrorTarif() {
+        return tasaErrorTarif;
+    }
+
+    public void setTasaErrorTarif(String tasaErrorTarif) {
+        this.tasaErrorTarif = tasaErrorTarif;
+    }
+
+    public String getIdTipoClienteCredito() {
+        return idTipoClienteCredito;
+    }
+
+    public void setIdTipoClienteCredito(String idTipoClienteCredito) {
+        this.idTipoClienteCredito = idTipoClienteCredito;
+    }
+
+    public String getVerCalculadoraRecaudo() {
+        return verCalculadoraRecaudo;
+    }
+
+    public void setVerCalculadoraRecaudo(String verCalculadoraRecaudo) {
+        this.verCalculadoraRecaudo = verCalculadoraRecaudo;
+    }
+
+    public String getCodigoTaller() {
+        return codigoTaller;
+    }
+
+    public void setCodigoTaller(String codigoTaller) {
+        this.codigoTaller = codigoTaller;
+    }
+
+    public String getDescTaller() {
+        return descTaller;
+    }
+
+    public void setDescTaller(String descTaller) {
+        this.descTaller = descTaller;
+    }
+
+    public String getCodigoPolitica() {
+        return codigoPolitica;
+    }
+
+    public void setCodigoPolitica(String codigoPolitica) {
+        this.codigoPolitica = codigoPolitica;
+    }
+
+    public String getDescPolitica() {
+        return descPolitica;
+    }
+
+    public void setDescPolitica(String descPolitica) {
+        this.descPolitica = descPolitica;
+    }
+
+    public Double getTasaInteresEfectivaAnualSolicitadoVenc() {
+        return tasaInteresEfectivaAnualSolicitadoVenc;
+    }
+
+    public void setTasaInteresEfectivaAnualSolicitadoVenc(Double tasaInteresEfectivaAnualSolicitadoVenc) {
+        this.tasaInteresEfectivaAnualSolicitadoVenc = tasaInteresEfectivaAnualSolicitadoVenc;
+    }
+
+    public Double getTasaInteresEfectivaPeriodoSolicitadoVenc() {
+        return tasaInteresEfectivaPeriodoSolicitadoVenc;
+    }
+
+    public void setTasaInteresEfectivaPeriodoSolicitadoVenc(Double tasaInteresEfectivaPeriodoSolicitadoVenc) {
+        this.tasaInteresEfectivaPeriodoSolicitadoVenc = tasaInteresEfectivaPeriodoSolicitadoVenc;
+    }
+
+    public String getEmiteFactura() {
+        return emiteFactura;
+    }
+
+    public void setEmiteFactura(String emiteFactura) {
+        this.emiteFactura = emiteFactura;
+    }
+
+    public Double getDeudaSistemaFinanciero() {
+        return deudaSistemaFinanciero;
+    }
+
+    public void setDeudaSistemaFinanciero(Double deudaSistemaFinanciero) {
+        this.deudaSistemaFinanciero = deudaSistemaFinanciero;
+    }
+
+    public Double getTotalActivosEmpresa() {
+        return totalActivosEmpresa;
+    }
+
+    public void setTotalActivosEmpresa(Double totalActivosEmpresa) {
+        this.totalActivosEmpresa = totalActivosEmpresa;
+    }
+
+    public Double getTotalVentaMes() {
+        return totalVentaMes;
+    }
+
+    public void setTotalVentaMes(Double totalVentaMes) {
+        this.totalVentaMes = totalVentaMes;
+    }
+
+    public String getCodigoZonaItinerante() {
+        return codigoZonaItinerante;
+    }
+
+    public void setCodigoZonaItinerante(String codigoZonaItinerante) {
+        this.codigoZonaItinerante = codigoZonaItinerante;
+    }
+
+    public String getDescripcionZonaItinerante() {
+        return descripcionZonaItinerante;
+    }
+
+    public void setDescripcionZonaItinerante(String descripcionZonaItinerante) {
+        this.descripcionZonaItinerante = descripcionZonaItinerante;
+    }
+
+    public String getIndicadorInspeccionProducto() {
+        return indicadorInspeccionProducto;
+    }
+
+    public void setIndicadorInspeccionProducto(String indicadorInspeccionProducto) {
+        this.indicadorInspeccionProducto = indicadorInspeccionProducto;
+    }
+
+    public String getDescripcionTipoCreditoSBS() {
+        return descripcionTipoCreditoSBS;
+    }
+
+    public void setDescripcionTipoCreditoSBS(String descripcionTipoCreditoSBS) {
+        this.descripcionTipoCreditoSBS = descripcionTipoCreditoSBS;
+    }
+
+    public String getCodigoTipoCreditoSBS() {
+        return codigoTipoCreditoSBS;
+    }
+
+    public void setCodigoTipoCreditoSBS(String codigoTipoCreditoSBS) {
+        this.codigoTipoCreditoSBS = codigoTipoCreditoSBS;
+    }
+
+    public String getTipoCredito() {
+        return tipoCredito;
+    }
+
+    public void setTipoCredito(String tipoCredito) {
+        this.tipoCredito = tipoCredito;
+    }
+
+    public String getCodigoCIIUaux() {
+        return codigoCIIUaux;
+    }
+
+    public void setCodigoCIIUaux(String codigoCIIUaux) {
+        this.codigoCIIUaux = codigoCIIUaux;
+    }
+
+    public String getCodigoAFavorDe() {
+        return codigoAFavorDe;
+    }
+
+    public void setCodigoAFavorDe(String codigoAFavorDe) {
+        this.codigoAFavorDe = codigoAFavorDe;
+    }
+
+    public String getCodigoAfianzado() {
+        return codigoAfianzado;
+    }
+
+    public void setCodigoAfianzado(String codigoAfianzado) {
+        this.codigoAfianzado = codigoAfianzado;
+    }
+
+    public String getNombreAFavorDe() {
+        return nombreAFavorDe;
+    }
+
+    public void setNombreAFavorDe(String nombreAFavorDe) {
+        this.nombreAFavorDe = nombreAFavorDe;
+    }
+
+    public String getNombreAfianzado() {
+        return nombreAfianzado;
+    }
+
+    public void setNombreAfianzado(String nombreAfianzado) {
+        this.nombreAfianzado = nombreAfianzado;
+    }
+
+    public String getCadObjIndRiesgo() {
+        return cadObjIndRiesgo;
+    }
+
+    public void setCadObjIndRiesgo(String cadObjIndRiesgo) {
+        this.cadObjIndRiesgo = cadObjIndRiesgo;
+    }
+
+    /**
+     * Nuevo Campo Inspeccion por parte de la Agencia
+     * 
+     * @authorgfernandez
+     * @since21.10.2010
+     */
+    public String getInspeccionAgencia() {
+        return inspeccionAgencia;
+    }
+
+    public void setInspeccionAgencia(String inspeccionAgencia) {
+        this.inspeccionAgencia = inspeccionAgencia;
+    }
+
+    public String getNumeroPreSolicitud() {
+        return numeroPreSolicitud;
+    }
+
+    public void setNumeroPreSolicitud(String numeroPreSolicitud) {
+        this.numeroPreSolicitud = numeroPreSolicitud;
+    }
+
+    public String getNumeroDocumentoPersona() {
+        return numeroDocumentoPersona;
+    }
+
+    public void setNumeroDocumentoPersona(String numeroDocumentoPersona) {
+        this.numeroDocumentoPersona = numeroDocumentoPersona;
+    }
+
+    //stacanga 29.03.2012
+    public String getCodigoPreAnalista() {
+        return codigoPreAnalista;
+    }
+
+    public void setCodigoPreAnalista(String codigoPreAnalista) {
+        this.codigoPreAnalista = codigoPreAnalista;
+    }
+
+    public String getNombrePreAnalista() {
+        return nombrePreAnalista;
+    }
+
+    public void setNombrePreAnalista(String nombrePreAnalista) {
+        this.nombrePreAnalista = nombrePreAnalista;
+    }
+
+    // Inicio galmerco 20.05.2012 Indicador de InspeccionObligatoria
+    public String getIndicadorInspeccionObligatoria() {
+        return indicadorInspeccionObligatoria;
+    }
+
+    public void setIndicadorInspeccionObligatoria(String indicadorInspeccionObligatoria) {
+        this.indicadorInspeccionObligatoria = indicadorInspeccionObligatoria;
+    }
+
+    // Fin galmerco 20.05.2012 Indicador de InspeccionObligatoria
+
+    //Inicio [Req. 13-135] fvalle 09.04.2014
+    public String getIndModificacionEnvioEECC() {
+        return indModificacionEnvioEECC;
+    }
+
+    public void setIndModificacionEnvioEECC(String indModificacionEnvioEECC) {
+        this.indModificacionEnvioEECC = indModificacionEnvioEECC;
+    }
+
+    public String getIndComEECC() {
+        return indComEECC;
+    }
+
+    public void setIndComEECC(String indComEECC) {
+        this.indComEECC = indComEECC;
+    }
+
+    public String getIdentificadorEnvioEECC() {
+        return identificadorEnvioEECC;
+    }
+
+    public void setIdentificadorEnvioEECC(String identificadorEnvioEECC) {
+        this.identificadorEnvioEECC = identificadorEnvioEECC;
+    }
+
+    public String getMedioEnvioEECC() {
+        return medioEnvioEECC;
+    }
+
+    public void setMedioEnvioEECC(String medioEnvioEECC) {
+        this.medioEnvioEECC = medioEnvioEECC;
+    }
+
+    public String getIdDireccion() {
+        return idDireccion;
+    }
+
+    public void setIdDireccion(String idDireccion) {
+        this.idDireccion = idDireccion;
+    }
+
+    // Inicio [Req. 13-135] jchilon 23.04.2014: Envio estado cuenta por email.
+    public String getIdEmail() {
+        return idEmail;
+    }
+
+    public void setIdEmail(String idEmail) {
+        this.idEmail = idEmail;
+    }
+
+    //Fin [Req. 13-135] jchilon 23.04.2014.
+
+    //Fin [Req. S13-135]
+
+    /* [Req. S14 - 067] jtomasto Inicio */
+    public Double getMontoRed() {
+        return montoRed;
+    }
+
+    public void setMontoRed(Double montoRed) {
+        this.montoRed = montoRed;
+    }
+
+    public Double getMontoDif() {
+        return montoDif;
+    }
+
+    public void setMontoDif(Double montoDif) {
+        this.montoDif = montoDif;
+    }
+
+    /* [Req. S14 - 067] Fin */
+    // Inicio [Req. 14-115] esalazar 26.08.2014
+    public String getIndicadorEvaluacionDPS() {
+        return indicadorEvaluacionDPS;
+    }
+
+    public void setIndicadorEvaluacionDPS(String indicadorEvaluacionDPS) {
+        this.indicadorEvaluacionDPS = indicadorEvaluacionDPS;
+    }
+
+    // Fin [Req. 14-115]
+
+    // [+] Req.14-106 dfujimoto 15.09.2014
+    public String getCodigoDestinoCredito() {
+        return codigoDestinoCredito;
+    }
+
+    public void setCodigoDestinoCredito(String codigoDestinoCredito) {
+        this.codigoDestinoCredito = codigoDestinoCredito;
+    }
+
+    public String getDescripcionDestinoCredito() {
+        return descripcionDestinoCredito;
+    }
+
+    public void setDescripcionDestinoCredito(String descripcionDestinoCredito) {
+        this.descripcionDestinoCredito = descripcionDestinoCredito;
+    }
+
+    // [-] Req.14-106 dfujimoto 15.09.2014
+
+    // Inicio [Req. S16-041] agarcia 05.12.2016
     public String getCodigoNivelAprobacion() {
         return codigoNivelAprobacion;
     }
@@ -2346,6 +2917,17 @@
     public void setCodigoNivelAprobacion(String codigoNivelAprobacion) {
         this.codigoNivelAprobacion = codigoNivelAprobacion;
     }
+
     // Fin [Req. S16-041]  
-   
+
+    // Inicio [Req.S17-007] kdelacruz 27.03.2017
+    public String getTipoOperacion() {
+        return tipoOperacion;
+    }
+
+    public void setTipoOperacion(String tipoOperacion) {
+        this.tipoOperacion = tipoOperacion;
+    }
+    // Fin [Req.S17-007]
+
 }
diff --git a/FINANCIERONEW/src/financ/creditos/facade/CRCuentaCreditoExternoFacade.java b/FINANCIERONEW/src/financ/creditos/facade/CRCuentaCreditoExternoFacade.java
index f13c51d..1843b5d 100644
--- a/FINANCIERONEW/src/financ/creditos/facade/CRCuentaCreditoExternoFacade.java
+++ b/FINANCIERONEW/src/financ/creditos/facade/CRCuentaCreditoExternoFacade.java
@@ -109,8 +109,10 @@
                 propertyParams.addProperty("codigoProductoBantiq", crCuentaCreditoExterno.getCodigoProductoExterno());
                 listCRProductoBantiq = crProductoBantiqInterfaceLocal.findByProperties(propertyParams);
                 if (!_isEmpty(listCRProductoBantiq)) {
+                    beanObtenerSolicitud.setCodigoProducto(listCRProductoBantiq.get(0).getCodigoProducto());
                     beanObtenerSolicitud.setProductoNombre(listCRProductoBantiq.get(0).getNombreProducto());
                 }
+                beanObtenerSolicitud.setCodigoMonedaAprobado(crCuentaCreditoExterno.getCodigoMoneda());
                 cbMoneda = cbMonedaInterfaceLocal.findById(crCuentaCreditoExterno.getCodigoMoneda());
                 if (!_isEmpty(cbMoneda)) {
                     beanObtenerSolicitud.setMonedaDescripcion(cbMoneda.getAbreviatura());
@@ -118,6 +120,7 @@
                 beanObtenerSolicitud.setMontoSolicitado(crCuentaCreditoExterno.getMontoSolicitado());
                 beanObtenerSolicitud.setFechaSolicitud(crCuentaCreditoExterno.getFechaSolicitud());
 
+                beanObtenerSolicitud.setCodigoEstadoSolicitud(crCuentaCreditoExterno.getEstadoSolicitud());
                 crEstadoSolicitud = crEstadoSolicitudInterfaceLocal.findById(crCuentaCreditoExterno.getEstadoSolicitud());
                 if (!_isEmpty(crEstadoSolicitud)) {
                     beanObtenerSolicitud.setEstadoSolicitud(crEstadoSolicitud.getDescripcion());
@@ -140,11 +143,14 @@
                     }
                 }
 
+                beanObtenerSolicitud.setCodigoAnalistaResponsable(crCuentaCreditoExterno.getCodigoFuncionario());
                 cbUsuario = cbUsuarioInterfaceLocal.findById(crCuentaCreditoExterno.getCodigoFuncionario());
                 if (!_isEmpty(cbUsuario)) {
                     beanObtenerSolicitud.setNombreAnalistaResponsable(cbUsuario.getNombreCompleto());
                 }
 
+                //[Req.S17-007] kdelacruz 27.03.2017
+                beanObtenerSolicitud.setTipoOperacion(Constante.WF_TIPO_OPERACION_BANTIQ);
                 listBeanObtenerSolicitud.add(beanObtenerSolicitud);
             }
 
diff --git a/FINANCIERONEW/src/financ/creditos/facade/CRSolicitudCreditosFacade.java b/FINANCIERONEW/src/financ/creditos/facade/CRSolicitudCreditosFacade.java
index c449f21..e754c9a 100644
--- a/FINANCIERONEW/src/financ/creditos/facade/CRSolicitudCreditosFacade.java
+++ b/FINANCIERONEW/src/financ/creditos/facade/CRSolicitudCreditosFacade.java
@@ -24,11 +24,6 @@
 import javax.ejb.Stateless;
 import javax.ejb.TransactionAttribute;
 import javax.ejb.TransactionAttributeType;
-
-import pe.com.tfc.utils.PropertyParams;
-import financ.creditos.entity.CRCuentaCreditoExterno;
-import financ.creditos.local.CRCuentaCreditoExternoInterfaceLocal;
-
 import javax.naming.Context;
 import javax.naming.InitialContext;
 import javax.persistence.EntityManager;
@@ -39,6 +34,7 @@
 import pe.com.tfc.utils.Auditable;
 import pe.com.tfc.utils.ErrorControladoException;
 import pe.com.tfc.utils.GenericBean;
+import pe.com.tfc.utils.PropertyParams;
 import admin.bancos.entity.BNEntidadFinanciera;
 import admin.bancos.local.BNEntidadFinancieraInterfaceLocal;
 import admin.contab.beans.BeanControlErrores;
@@ -56,6 +52,7 @@
 import admin.contab.entity.CBMoneda;
 import admin.contab.entity.CBRegionesAgencia;
 import admin.contab.entity.CBSubConceptoOperacionId;
+import admin.contab.entity.CBUbigeo;
 import admin.contab.entity.CBUsuario;
 import admin.contab.entity.CBZonasItinerantes;
 import admin.contab.local.CBAgenciaInterfaceLocal;
@@ -122,6 +119,7 @@
 import financ.creditos.entity.CRBases;
 import financ.creditos.entity.CRComisionesGastosXProducto;
 import financ.creditos.entity.CRCuentaCredito;
+import financ.creditos.entity.CRCuentaCreditoExterno;
 import financ.creditos.entity.CRCuentaCreditoGarantia;
 import financ.creditos.entity.CRDestinoCredito;
 import financ.creditos.entity.CRDestinosPrestamo;
@@ -167,6 +165,7 @@
 import financ.creditos.local.CRBasesInterfaceLocal;
 import financ.creditos.local.CRComisionesGastosXProductoInterfaceLocal;
 import financ.creditos.local.CRCreditoConsumoFacadeInterfaceLocal;
+import financ.creditos.local.CRCuentaCreditoExternoInterfaceLocal;
 import financ.creditos.local.CRCuentaCreditoGarantiaInterfaceLocal;
 import financ.creditos.local.CRCuentaCreditoInterfaceLocal;
 import financ.creditos.local.CRDestinoCreditoInterfaceLocal;
@@ -251,235 +250,234 @@
 
 /**
  * CRSolicitudCreditosFacade
- *   
+ * 
  * @since 02.03.2016 gmeza [S14-020]
  * @since 30.06.2016 gmeza [S16-022]
  * @since 20.09.2016 gmeza [S16-028] Se elimino el metodo evaluarBloqueoGarantia()
  * @since [Req.16-043] gmeza 23.11.2016
  * @since [CC16-081] gmeza 05.12.2016
+ * @since [Req.S17-007] kdelacruz 27.03.2017
  */
 @Stateless
-public class CRSolicitudCreditosFacade extends AbstractFacade<Auditable> implements CRSolicitudCreditosFacadeInterfaceLocal,
-        CRSolicitudCreditosFacadeInterfaceRemote {
+public class CRSolicitudCreditosFacade extends AbstractFacade<Auditable> implements CRSolicitudCreditosFacadeInterfaceLocal, CRSolicitudCreditosFacadeInterfaceRemote {
 
-    
-     public static final String RemoteJNDIName =  CRSolicitudCreditosFacade.class.getSimpleName() + "/remote";
-     
-     public static final String LocalJNDIName =   CRSolicitudCreditosFacade.class.getSimpleName() + "/local";
-     
-     private static String      NO_ERROR      = "000";
-     
-     @EJB
-     private CBControlErroresFacadeInterfaceLocal cbControlErroresFacadeInterfaceLocal;
-     
-     @EJB
-     private CRSolicitudCreditoInterfaceLocal crSolicitudCreditoInterfaceLocal;
+    public static final String RemoteJNDIName = CRSolicitudCreditosFacade.class.getSimpleName() + "/remote";
 
-     @EJB
-     private OPBNGeneralesFacadeInterfaceLocal opBNGeneralesFacadeInterfaceLocal;
+    public static final String LocalJNDIName = CRSolicitudCreditosFacade.class.getSimpleName() + "/local";
 
-     @EJB
-     private CLPersonasInterfaceLocal clPersonasInterfaceLocal;
+    private static String NO_ERROR = "000";
 
-     @EJB
-     private CBUsuarioInterfaceLocal cbUsuarioInterfaceLocal;
+    @EJB
+    private CBControlErroresFacadeInterfaceLocal cbControlErroresFacadeInterfaceLocal;
 
-     @EJB
-     private CBMonedaInterfaceLocal cbMonedaInterfaceLocal;
-     
-     @EJB
-     private CRSubTipoCreditoInterfaceLocal crSubTipoCreditoInterfaceLocal;
-     
-     @EJB
-     private CLActividadEconomicaInterfaceLocal clActividadEconomicaInterfaceLocal;
-     
-     @EJB
-     private CREstadoSolicitudInterfaceLocal crEstadoSolicitudInterfaceLocal;
+    @EJB
+    private CRSolicitudCreditoInterfaceLocal crSolicitudCreditoInterfaceLocal;
 
-     @EJB
-     private CBCatalogoCheckConstraintInterfaceLocal cbCatalogoCheckConstraintInterfaceLocal;
+    @EJB
+    private OPBNGeneralesFacadeInterfaceLocal opBNGeneralesFacadeInterfaceLocal;
 
-     @EJB
-     private CRTipoCreditoInterfaceLocal crTipoCreditoInterfaceLocal;
+    @EJB
+    private CLPersonasInterfaceLocal clPersonasInterfaceLocal;
 
-     @EJB
-     private CRSolicitudTitularesInterfaceLocal crSolicitudTitularesInterfaceLocal;
+    @EJB
+    private CBUsuarioInterfaceLocal cbUsuarioInterfaceLocal;
 
-     @EJB
-     private CRProductoInterfaceLocal crProductoInterfaceLocal;
+    @EJB
+    private CBMonedaInterfaceLocal cbMonedaInterfaceLocal;
 
-     @EJB
-     private CLSectorEconomicoInterfaceLocal clSectorEconomicoInterfaceLocal;
+    @EJB
+    private CRSubTipoCreditoInterfaceLocal crSubTipoCreditoInterfaceLocal;
 
-     @EJB
-     private CLGiroNegocioInterfaceLocal clGiroNegocioInterfaceLocal;
+    @EJB
+    private CLActividadEconomicaInterfaceLocal clActividadEconomicaInterfaceLocal;
 
-     @EJB
-     private CRSolCrePrestamoCuotasInterfaceLocal crSolCrePrestamoCuotasInterfaceLocal;
+    @EJB
+    private CREstadoSolicitudInterfaceLocal crEstadoSolicitudInterfaceLocal;
 
-     @EJB
-     private CRTipoCuotaXProductoInterfaceLocal crTipoCuotaXProductoInterfaceLocal;
-     
-     @EJB
-     private CRSolCreDeducibleDesembolsoInterfaceLocal crSolCreDeducibleDesembolsoInterfaceLocal;
-     
-     @EJB
-     private CRSolCreCargosCronogramaInterfaceLocal crSolCreCargosCronogramaInterfaceLocal;
-     
-     @EJB
-     private CBSubConceptoOperacionInterfaceLocal cbSubConceptoOperacionInterfaceLocal;
-     
-     @EJB
-     private CRDestinosPrestamoXSolicitudInterfaceLocal crDestinosPrestamoXSolicitudInterfaceLocal;
-     
-     @EJB
-     private CRDestinosPrestamoInterfaceLocal crDestinosPrestamoInterfaceLocal;
-     
-     @EJB
-     private CRRequisitoSolicitudInterfaceLocal crRequisitoSolicitudInterfaceLocal;
-     
-     @EJB
-     private CRRequisitoInterfaceLocal crRequisitoInterfaceLocal;
-     
-     @EJB
-     private CRSolicitudCambioCondicionesInterfaceLocal crSolicitudCambioCondicionesInterfaceLocal;
-     
-     @EJB
-     private CBConstanteInterfaceLocal cbConstanteInterfaceLocal;
-     
-     @EJB
-     private CRSolicitudCreditoGarantiaInterfaceLocal crSolicitudCreditoGarantiaInterfaceLocal;
-     
-     @EJB
-     private CRCuentaCreditoGarantiaInterfaceLocal crCuentaCreditoGarantiaInterfaceLocal;
-     
-     @EJB
-     private GATitularGarantiaInterfaceLocal gaTitularGarantiaInterfaceLocal;
-     
-     @EJB
-     private GAGarantiaInterfaceLocal gaGarantiaInterfaceLocal;
-     
-     @EJB
-     private CBCorrelativoInterfaceLocal cbCorrelativoInterfaceLocal;
-     
-     @EJB
-     private GAGarantiaFacadeLocal gaGarantiaFacadeLocal;
-     
-     @EJB
-     private GASubTipoGarantiaInterfaceLocal gaSubTipoGarantiaInterfaceLocal;
-     
-     @EJB
-     private GATipoGarantiaInterfaceLocal gaTipoGarantiaInterfaceLocal;
-     
-     @EJB
-     private CRSolicitudResolucionInterfaceLocal crSolicitudResolucionInterfaceLocal;
-     
-     @EJB
-     private CRSolicitudResolucionInterfaceRemote crSolicitudResolucionInterfaceRemote;
-     
-     @EJB
-     private CLCentroLaboralPersonasInterfaceLocal clCentroLaboralPersonasInterfaceLocal;
-     
-     @EJB
-     private CRSolCrePrestamoLineaCreditoInterfaceLocal crSolCrePrestamoLineaCreditoInterfaceLocal;
-     
-     @EJB
-     private CRDiasPagoPrestamosInterfaceLocal crDiasPagoPrestamosInterfaceLocal;
-     
-     @EJB
-     private CRBNSolicitudCreditoFacadeInterfaceLocal crbnSolicitudCreditoFacadeInterfaceLocal;
-     
-     @EJB
-     private CRBNSolicitudCreditoFacadeInterfaceRemote crbnSolicitudCreditoFacadeInterfaceRemote;
-     
-     @EJB
-     private CRSolCrePrestamoCartaFianzaInterfaceLocal crSolCrePrestamoCartaFianzaInterfaceLocal;
-     
-     @EJB
-     private CRSolCredInformacionComercialInterfaceLocal crSolCredInformacionComercialInterfaceLocal;
+    @EJB
+    private CBCatalogoCheckConstraintInterfaceLocal cbCatalogoCheckConstraintInterfaceLocal;
 
-     @EJB
-     private CRPersonasRelacionadasSolCredInterfaceLocal crPersonasRelacionadasSolCredInterfaceLocal;
-          
-     @EJB
-     private CRInspeccionesXPersonasRelacionadaSolCredInterfaceLocal crInspeccionesXPersonasRelacionadaSolCredInterfaceLocal;
-     
-     @EJB
-     private CRProductoPrestamosCuotasInterfaceLocal crProductoPrestamosCuotasInterfaceLocal;
+    @EJB
+    private CRTipoCreditoInterfaceLocal crTipoCreditoInterfaceLocal;
 
-     @EJB
-     private GEGeneralesFacadeInterfaceLocal    crGEGeneralesFacadeInterfaceLocal;
-     
-     @EJB
-     private CRTipoRelacionFamiliarSCInterfaceLocal crTipoRelacionFamiliarSCInterfaceLocal;
-     
-     @EJB
-     private CRSolicitudInpeccionesCabInterfaceLocal crSolicitudInpeccionesCabInterfaceLocal;
-     
-     @EJB
-     private CRVisitasInspeccionInterfaceLocal crVisitasInspeccionInterfaceLocal;
-     
-     @EJB
-     private CRBasesInterfaceLocal crBasesInterfaceLocal;
-     
-     @EJB
-     private CLDireccionPersonasInterfaceLocal clDireccionPersonasInterfaceLocal;
-     
-     @EJB
-     private CRDistritoBaseInterfaceLocal crDistritoBaseInterfaceLocal;
-         
-     @EJB
-     private CRSolCredComisionesGastosInterfaceLocal crSolCredComisionesGastosInterfaceLocal;
-     
-     @EJB
-     private CBAgenciaInterfaceLocal cbAgenciaInterfaceLocal;
-     
-     @EJB
-     private CREstadoResolucionCreditoInterfaceLocal crEstadoResolucionCreditoInterfaceLocal;
-     
-     @EJB
-     private CREvaluacionPersonaInterfaceLocal crEvaluacionPersonaInterfaceLocal;
-     
-     @EJB
-     private BNEntidadFinancieraInterfaceLocal bnEntidadFinancieraInterfaceLocal;
-    
-     @EJB
-     private CBRegionesAgenciaInterfaceLocal cbRegionesAgenciaInterfaceLocal;
-     
-     @EJB
-     private CROperacionesFacadeLocal        crOperacionesFacadeLocal;
-     
-     @EJB
-     private CRPromocionesCreditoInterfaceLocal crPromocionesCreditoInterfaceLocal;
-     
-     @EJB
-     private CRComisionesGastosXProductoInterfaceLocal crComisionesGastosXProductoInterfaceLocal;
-     
-     @EJB
-     private CLListaNegraFacadeInterfaceLocal clListaNegraFacadeInterfaceLocal;
-     
-     @EJB
-     private CLTelefonosPersonasInterfaceLocal clTelefonosPersonasInterfaceLocal;
-     
-     @EJB
-     private CLCentroLaboralInformalInterfaceLocal clCentroLaboralInformalInterfaceLocal;
-     
-     @EJB
-     private CRAsignacionEvaluacionInterfaceLocal crAsignacionEvaluacionInterfaceLocal;
-     //[Req.16-043] gmeza 23.11.2016
-     @EJB
-     private CRPropuestaCreditoInterfaceLocal crPropuestaCreditoInterfaceLocal;
-     
-     /**
-      * @author erios
-      * @since 12.07.2010
-      */
-     @EJB
-     private CRCuentaCreditoInterfaceLocal crCuentaCreditoInterfaceLocal;
-     
-     @EJB
-     private GEGeneralesFacadeInterfaceLocal geGeneralesFacadeInterfaceLocal;
-    
+    @EJB
+    private CRSolicitudTitularesInterfaceLocal crSolicitudTitularesInterfaceLocal;
+
+    @EJB
+    private CRProductoInterfaceLocal crProductoInterfaceLocal;
+
+    @EJB
+    private CLSectorEconomicoInterfaceLocal clSectorEconomicoInterfaceLocal;
+
+    @EJB
+    private CLGiroNegocioInterfaceLocal clGiroNegocioInterfaceLocal;
+
+    @EJB
+    private CRSolCrePrestamoCuotasInterfaceLocal crSolCrePrestamoCuotasInterfaceLocal;
+
+    @EJB
+    private CRTipoCuotaXProductoInterfaceLocal crTipoCuotaXProductoInterfaceLocal;
+
+    @EJB
+    private CRSolCreDeducibleDesembolsoInterfaceLocal crSolCreDeducibleDesembolsoInterfaceLocal;
+
+    @EJB
+    private CRSolCreCargosCronogramaInterfaceLocal crSolCreCargosCronogramaInterfaceLocal;
+
+    @EJB
+    private CBSubConceptoOperacionInterfaceLocal cbSubConceptoOperacionInterfaceLocal;
+
+    @EJB
+    private CRDestinosPrestamoXSolicitudInterfaceLocal crDestinosPrestamoXSolicitudInterfaceLocal;
+
+    @EJB
+    private CRDestinosPrestamoInterfaceLocal crDestinosPrestamoInterfaceLocal;
+
+    @EJB
+    private CRRequisitoSolicitudInterfaceLocal crRequisitoSolicitudInterfaceLocal;
+
+    @EJB
+    private CRRequisitoInterfaceLocal crRequisitoInterfaceLocal;
+
+    @EJB
+    private CRSolicitudCambioCondicionesInterfaceLocal crSolicitudCambioCondicionesInterfaceLocal;
+
+    @EJB
+    private CBConstanteInterfaceLocal cbConstanteInterfaceLocal;
+
+    @EJB
+    private CRSolicitudCreditoGarantiaInterfaceLocal crSolicitudCreditoGarantiaInterfaceLocal;
+
+    @EJB
+    private CRCuentaCreditoGarantiaInterfaceLocal crCuentaCreditoGarantiaInterfaceLocal;
+
+    @EJB
+    private GATitularGarantiaInterfaceLocal gaTitularGarantiaInterfaceLocal;
+
+    @EJB
+    private GAGarantiaInterfaceLocal gaGarantiaInterfaceLocal;
+
+    @EJB
+    private CBCorrelativoInterfaceLocal cbCorrelativoInterfaceLocal;
+
+    @EJB
+    private GAGarantiaFacadeLocal gaGarantiaFacadeLocal;
+
+    @EJB
+    private GASubTipoGarantiaInterfaceLocal gaSubTipoGarantiaInterfaceLocal;
+
+    @EJB
+    private GATipoGarantiaInterfaceLocal gaTipoGarantiaInterfaceLocal;
+
+    @EJB
+    private CRSolicitudResolucionInterfaceLocal crSolicitudResolucionInterfaceLocal;
+
+    @EJB
+    private CRSolicitudResolucionInterfaceRemote crSolicitudResolucionInterfaceRemote;
+
+    @EJB
+    private CLCentroLaboralPersonasInterfaceLocal clCentroLaboralPersonasInterfaceLocal;
+
+    @EJB
+    private CRSolCrePrestamoLineaCreditoInterfaceLocal crSolCrePrestamoLineaCreditoInterfaceLocal;
+
+    @EJB
+    private CRDiasPagoPrestamosInterfaceLocal crDiasPagoPrestamosInterfaceLocal;
+
+    @EJB
+    private CRBNSolicitudCreditoFacadeInterfaceLocal crbnSolicitudCreditoFacadeInterfaceLocal;
+
+    @EJB
+    private CRBNSolicitudCreditoFacadeInterfaceRemote crbnSolicitudCreditoFacadeInterfaceRemote;
+
+    @EJB
+    private CRSolCrePrestamoCartaFianzaInterfaceLocal crSolCrePrestamoCartaFianzaInterfaceLocal;
+
+    @EJB
+    private CRSolCredInformacionComercialInterfaceLocal crSolCredInformacionComercialInterfaceLocal;
+
+    @EJB
+    private CRPersonasRelacionadasSolCredInterfaceLocal crPersonasRelacionadasSolCredInterfaceLocal;
+
+    @EJB
+    private CRInspeccionesXPersonasRelacionadaSolCredInterfaceLocal crInspeccionesXPersonasRelacionadaSolCredInterfaceLocal;
+
+    @EJB
+    private CRProductoPrestamosCuotasInterfaceLocal crProductoPrestamosCuotasInterfaceLocal;
+
+    @EJB
+    private GEGeneralesFacadeInterfaceLocal crGEGeneralesFacadeInterfaceLocal;
+
+    @EJB
+    private CRTipoRelacionFamiliarSCInterfaceLocal crTipoRelacionFamiliarSCInterfaceLocal;
+
+    @EJB
+    private CRSolicitudInpeccionesCabInterfaceLocal crSolicitudInpeccionesCabInterfaceLocal;
+
+    @EJB
+    private CRVisitasInspeccionInterfaceLocal crVisitasInspeccionInterfaceLocal;
+
+    @EJB
+    private CRBasesInterfaceLocal crBasesInterfaceLocal;
+
+    @EJB
+    private CLDireccionPersonasInterfaceLocal clDireccionPersonasInterfaceLocal;
+
+    @EJB
+    private CRDistritoBaseInterfaceLocal crDistritoBaseInterfaceLocal;
+
+    @EJB
+    private CRSolCredComisionesGastosInterfaceLocal crSolCredComisionesGastosInterfaceLocal;
+
+    @EJB
+    private CBAgenciaInterfaceLocal cbAgenciaInterfaceLocal;
+
+    @EJB
+    private CREstadoResolucionCreditoInterfaceLocal crEstadoResolucionCreditoInterfaceLocal;
+
+    @EJB
+    private CREvaluacionPersonaInterfaceLocal crEvaluacionPersonaInterfaceLocal;
+
+    @EJB
+    private BNEntidadFinancieraInterfaceLocal bnEntidadFinancieraInterfaceLocal;
+
+    @EJB
+    private CBRegionesAgenciaInterfaceLocal cbRegionesAgenciaInterfaceLocal;
+
+    @EJB
+    private CROperacionesFacadeLocal crOperacionesFacadeLocal;
+
+    @EJB
+    private CRPromocionesCreditoInterfaceLocal crPromocionesCreditoInterfaceLocal;
+
+    @EJB
+    private CRComisionesGastosXProductoInterfaceLocal crComisionesGastosXProductoInterfaceLocal;
+
+    @EJB
+    private CLListaNegraFacadeInterfaceLocal clListaNegraFacadeInterfaceLocal;
+
+    @EJB
+    private CLTelefonosPersonasInterfaceLocal clTelefonosPersonasInterfaceLocal;
+
+    @EJB
+    private CLCentroLaboralInformalInterfaceLocal clCentroLaboralInformalInterfaceLocal;
+
+    @EJB
+    private CRAsignacionEvaluacionInterfaceLocal crAsignacionEvaluacionInterfaceLocal;
+    //[Req.16-043] gmeza 23.11.2016
+    @EJB
+    private CRPropuestaCreditoInterfaceLocal crPropuestaCreditoInterfaceLocal;
+
+    /**
+     * @author erios
+     * @since 12.07.2010
+     */
+    @EJB
+    private CRCuentaCreditoInterfaceLocal crCuentaCreditoInterfaceLocal;
+
+    @EJB
+    private GEGeneralesFacadeInterfaceLocal geGeneralesFacadeInterfaceLocal;
+
     //Inicio [Req.14-115 Fase IV] galmerco 11.06.2015
     @EJB
     private CRSolCredInformacionHipotecarioInterfaceLocal crSolCredInformacionHipotecarioInterfaceLocal;
@@ -487,94 +485,92 @@
     @EJB
     private CRSolicitudMedioEnvioEstadoCuentaInterfaceLocal crSolicitudMedioEnvioEstadoCuentaInterfaceLocal;
     // Fin [Req.14-115 Fase IV] galmerco
-    
-     private Context context;
-     
-     @PersistenceContext
-     private EntityManager entityManager;
-     
-     @Resource
-     private SessionContext ctx;
-     
-     
-     @EJB
-     private CRSolicitudCreditoInterfaceRemote crSolicitudCreditoInterfaceRemote;
 
-     @EJB
-     private CRSolicitudCambioCondicionesInterfaceRemote crSolicitudCambioCondicionesInterfaceRemote;
-          
-     @EJB
-     private CBCorrelativoInterfaceRemote cbCorrelativoInterfaceRemote;
-     
-     @EJB
-     private CBCalendarioInterfaceRemote cbCalendarioFacadeRemote;
-     
-     @EJB
-     private GELimitesOperativosFacadeInterfaceRemote geLimitesOperativosFacadeInterfaceRemote;
-     
-     @EJB
-     private CRBNGeneralesFacadeInterfaceLocal crBNGeneralesFacadeInterfaceLocal;
-     
-     @EJB
-     private CRSolCreDescLetrasFactoringInterfaceLocal crSolCreDescLetrasFactoringInterfaceLocal;
-     
-     @EJB
-     private CRSolCredVehicularInterfaceLocal crSolCredVehicularInterfaceLocal;
-     
-     @EJB
-     private CBColorInterfaceLocal cbColorInterfaceLocal;
-     
-     @EJB
-     private CRProductosCreditosFacadeInterfaceLocal crProductosCreditosFacadeInterfaceLocal;
-     
-     @EJB
-     private CRValidacionDocumentosFacadeLocal crValidacionDocumentosFacadeLocal;
-     
-     @EJB
-     private CBZonasItinerantesInterfaceLocal cbZonasItinerantesInterfaceLocal;
-     
-     @EJB
-     private CRSolicitudCreditoGeneralFacadeInterfaceLocal crSolicitudCreditoGeneralFacadeInterfaceLocal;
-     
-     @EJB
-     private CRTipoCreditoSBSInterfaceLocal crTipoCreditoSBSInterfaceLocal;
-     
-     @EJB
-     private CRRccEvaluacionFinancieraFacadeLocal crRccEvaluacionFinancieraFacadeLocal;
-     
-     //mnieves 29.03.2011
-     @EJB
-     private CRDetalleObsEncontradoFacadeInterfaceLocal crDetalleObsEncontradoFacadeInterfaceLocal;
-     
-     @EJB
-     private CRLevantamientoObservacionFacadeInterfaceLocal crLevantamientoObservacionFacadeInterfaceLocal;
-     
-     
-     //prios 19.09.11
-     @EJB
-     private CLPersonasNaturalesInterfaceLocal clPersonasNaturalesInterfaceLocal;
-     
-     @EJB
-     private CLProfesionInterfaceLocal clProfesionInterfaceLocal;
-     
-     @EJB
-     private CLNivelEstudioInterfaceLocal clNivelEstudioInterfaceLocal;
-     
-     //[Req.13-059] stacanga 26.06.2013
-     @EJB
-     private CLPersonaFacadeInterfaceLocal clPersonaFacadeInterfaceLocal;
+    private Context context;
 
-     // [Ticket 6522] esalazar 15.08.2013: Validación en la asociación de aval a operación de crédito
-     @EJB
-     private CBCatalogoErroresInterfaceLocal cbCatalogoErroresInterfaceLocal;
-     
-     @EJB
-     private CRIndBloqueosLimiteOperadoresFacadeInterfaceLocal crIndBloqueosLimiteOperadoresFacadeInterfaceLocal;
-     
+    @PersistenceContext
+    private EntityManager entityManager;
+
+    @Resource
+    private SessionContext ctx;
+
+    @EJB
+    private CRSolicitudCreditoInterfaceRemote crSolicitudCreditoInterfaceRemote;
+
+    @EJB
+    private CRSolicitudCambioCondicionesInterfaceRemote crSolicitudCambioCondicionesInterfaceRemote;
+
+    @EJB
+    private CBCorrelativoInterfaceRemote cbCorrelativoInterfaceRemote;
+
+    @EJB
+    private CBCalendarioInterfaceRemote cbCalendarioFacadeRemote;
+
+    @EJB
+    private GELimitesOperativosFacadeInterfaceRemote geLimitesOperativosFacadeInterfaceRemote;
+
+    @EJB
+    private CRBNGeneralesFacadeInterfaceLocal crBNGeneralesFacadeInterfaceLocal;
+
+    @EJB
+    private CRSolCreDescLetrasFactoringInterfaceLocal crSolCreDescLetrasFactoringInterfaceLocal;
+
+    @EJB
+    private CRSolCredVehicularInterfaceLocal crSolCredVehicularInterfaceLocal;
+
+    @EJB
+    private CBColorInterfaceLocal cbColorInterfaceLocal;
+
+    @EJB
+    private CRProductosCreditosFacadeInterfaceLocal crProductosCreditosFacadeInterfaceLocal;
+
+    @EJB
+    private CRValidacionDocumentosFacadeLocal crValidacionDocumentosFacadeLocal;
+
+    @EJB
+    private CBZonasItinerantesInterfaceLocal cbZonasItinerantesInterfaceLocal;
+
+    @EJB
+    private CRSolicitudCreditoGeneralFacadeInterfaceLocal crSolicitudCreditoGeneralFacadeInterfaceLocal;
+
+    @EJB
+    private CRTipoCreditoSBSInterfaceLocal crTipoCreditoSBSInterfaceLocal;
+
+    @EJB
+    private CRRccEvaluacionFinancieraFacadeLocal crRccEvaluacionFinancieraFacadeLocal;
+
+    //mnieves 29.03.2011
+    @EJB
+    private CRDetalleObsEncontradoFacadeInterfaceLocal crDetalleObsEncontradoFacadeInterfaceLocal;
+
+    @EJB
+    private CRLevantamientoObservacionFacadeInterfaceLocal crLevantamientoObservacionFacadeInterfaceLocal;
+
+    //prios 19.09.11
+    @EJB
+    private CLPersonasNaturalesInterfaceLocal clPersonasNaturalesInterfaceLocal;
+
+    @EJB
+    private CLProfesionInterfaceLocal clProfesionInterfaceLocal;
+
+    @EJB
+    private CLNivelEstudioInterfaceLocal clNivelEstudioInterfaceLocal;
+
+    //[Req.13-059] stacanga 26.06.2013
+    @EJB
+    private CLPersonaFacadeInterfaceLocal clPersonaFacadeInterfaceLocal;
+
+    // [Ticket 6522] esalazar 15.08.2013: Validación en la asociación de aval a operación de crédito
+    @EJB
+    private CBCatalogoErroresInterfaceLocal cbCatalogoErroresInterfaceLocal;
+
+    @EJB
+    private CRIndBloqueosLimiteOperadoresFacadeInterfaceLocal crIndBloqueosLimiteOperadoresFacadeInterfaceLocal;
+
     @EJB
     private CRDestinoCreditoInterfaceLocal crDestinoCreditoInterfaceLocal;
 
- // [Req. S16-016] jventura 07.03.2016
+    // [Req. S16-016] jventura 07.03.2016
     @EJB
     private CRCuentaCreditoExternoInterfaceLocal crCuentaCreditoExternoInterfaceLocal;
     //Inicio [Req.16-022] gmeza 30.06.2016
@@ -594,658 +590,658 @@
     @EJB
     private UtilFacadeIntrefaceLocal utilFacadeIntrefaceLocal;
 
-     /******************* METODO QUE SIRVE PARA LA CONSULTA DE PRODUCTOS DE CREDITO ***************************/
-  //Inicio [S14-020] 02.03.2016 gmeza
-     
-     public int countObtenerProductosCredito(Object codigoEmpresa, 
-             Object codigoProducto, 
-             String strCriterio,
-             Object modalidadCredito,
-             Object tipoCredito,
-             Object subTipoCredito,
-             Object fechaProceso,
-             Object codigoMoneda
-             ) throws Exception{
-        
+    /******************* METODO QUE SIRVE PARA LA CONSULTA DE PRODUCTOS DE CREDITO ***************************/
+    //Inicio [S14-020] 02.03.2016 gmeza
+
+    public int countObtenerProductosCredito(Object codigoEmpresa,
+                                            Object codigoProducto,
+                                            String strCriterio,
+                                            Object modalidadCredito,
+                                            Object tipoCredito,
+                                            Object subTipoCredito,
+                                            Object fechaProceso,
+                                            Object codigoMoneda) throws Exception {
+
         int datos = 0;
         try {
-           datos = ((List)(obtenerProductosCredito(codigoEmpresa, codigoProducto, strCriterio, "", "", modalidadCredito, tipoCredito, subTipoCredito,fechaProceso, codigoMoneda))).size();
+            datos = ((List) (obtenerProductosCredito(codigoEmpresa,
+                                                     codigoProducto,
+                                                     strCriterio,
+                                                     "",
+                                                     "",
+                                                     modalidadCredito,
+                                                     tipoCredito,
+                                                     subTipoCredito,
+                                                     fechaProceso,
+                                                     codigoMoneda))).size();
         } catch (Exception e) {
             e.printStackTrace();
         }
         return datos;
-     }
-   //Fin [S14-020]
-     
-     public int countObtenerProductosCreditoxEmpresa(Object codigoEmpresa, 
-             Object codigoProducto, 
-             String strCriterio
-             ) throws Exception{
-        
+    }
+
+    //Fin [S14-020]
+
+    public int countObtenerProductosCreditoxEmpresa(Object codigoEmpresa, Object codigoProducto, String strCriterio) throws Exception {
+
         int datos = 0;
         try {
-            datos = ((List)(obtenerProductosCreditoxEmpresa(codigoEmpresa, codigoProducto, strCriterio, "", ""))).size();
+            datos = ((List) (obtenerProductosCreditoxEmpresa(codigoEmpresa, codigoProducto, strCriterio, "", ""))).size();
         } catch (Exception e) {
             e.printStackTrace();
         }
         return datos;
-     }
-     
-     public List<Map> obtenerProductosCreditoxEmpresa(
-             Object codigoEmpresa, 
-             Object codigoProducto, 
-             String strCriterio, 
-             Object posicion, 
-             Object nroRegistros
-             ) throws Exception{
-        
+    }
+
+    public List<Map> obtenerProductosCreditoxEmpresa(Object codigoEmpresa,
+                                                     Object codigoProducto,
+                                                     String strCriterio,
+                                                     Object posicion,
+                                                     Object nroRegistros) throws Exception {
+
         List<Map> lObtenerDatos = new ArrayList<Map>();
         String codigoAgencia = null;
-        
+
         try {
             int posIni = 0;
-            boolean complete=true;
-            
-            
-            if (!posicion.toString().equals(""))
-                posIni = (Integer.parseInt(posicion.toString())-1)*(Integer.parseInt(nroRegistros.toString()));
+            boolean complete = true;
 
-            String queryString = "select" +
-            "       a.c_codpro codigoProducto, " +
-            "       a.c_descri descripcionProducto, " +
-            "       a.c_ticale tipoCalendario, " +
-            "       d.c_descri descripcionTipoCredito, " +
-            "       c.c_descri descripcionSubTipoCredito, " +
-            "       a.c_codfuf codigoFuenteFinanciamiento, " +
-            "       a.c_codlfi codigoLineaFinanciamiento, " +
-            "       b.c_descri abreviaturaMoneda, " +
-            "       a.c_modcre modalidadCredito, " +
-            "       e.C_TIPINT tipoInteres, " +
-            "       e.C_CODFRE codFrecuencia, " +
-            "       b.c_simbmn simboloMoneda, " +
-            "       d.C_TIPCRE codigoTipoCredito, " +
-            "       c.C_STICRE codigoSubTipoCredito " +
-            " from " +
-            "       CRTPROD a, CBTTMON b, CRTSTCR c, CRTTICR d, CRTPRCU e " +
-            " WHERE " +
-            "     a.c_modcre = 'VEH' " +
-            " and a.c_codpro = e.c_codpro " +
-            " and b.c_codmon = a.c_codmon " +
-            " and c.c_tipcre = a.c_tipcre " +
-            " and c.c_sticre = a.c_sticre " +
-            " and d.c_tipcre = a.c_tipcre " +
-            " and a.c_codemp = " + codigoEmpresa + 
-            " and a.c_estreg = 'S' ";
-            if(!complete){
-                queryString=queryString+" and (SELECT count(f.c_idprof) FROM CRDPROF f WHERE f.c_codpro = a.c_codpro and f.c_estreg='S' and f.c_codemp = a.c_codemp and f.c_codage = '"+codigoAgencia+"') >0 ";
+            if (!posicion.toString().equals(""))
+                posIni = (Integer.parseInt(posicion.toString()) - 1) * (Integer.parseInt(nroRegistros.toString()));
+
+            String queryString = "select" + "       a.c_codpro codigoProducto, " + "       a.c_descri descripcionProducto, " + "       a.c_ticale tipoCalendario, " + "       d.c_descri descripcionTipoCredito, " + "       c.c_descri descripcionSubTipoCredito, " + "       a.c_codfuf codigoFuenteFinanciamiento, " + "       a.c_codlfi codigoLineaFinanciamiento, " + "       b.c_descri abreviaturaMoneda, " + "       a.c_modcre modalidadCredito, " + "       e.C_TIPINT tipoInteres, " + "       e.C_CODFRE codFrecuencia, " + "       b.c_simbmn simboloMoneda, " + "       d.C_TIPCRE codigoTipoCredito, " + "       c.C_STICRE codigoSubTipoCredito " + " from " + "       CRTPROD a, CBTTMON b, CRTSTCR c, CRTTICR d, CRTPRCU e " + " WHERE " + "     a.c_modcre = 'VEH' " + " and a.c_codpro = e.c_codpro " + " and b.c_codmon = a.c_codmon " + " and c.c_tipcre = a.c_tipcre " + " and c.c_sticre = a.c_sticre " + " and d.c_tipcre = a.c_tipcre " + " and a.c_codemp = " + codigoEmpresa + " and a.c_estreg = 'S' ";
+            if (!complete) {
+                queryString = queryString + " and (SELECT count(f.c_idprof) FROM CRDPROF f WHERE f.c_codpro = a.c_codpro and f.c_estreg='S' and f.c_codemp = a.c_codemp and f.c_codage = '" + codigoAgencia + "') >0 ";
             }
-            
-            
-            if("Codigo".equals(strCriterio)){
-                queryString+=" and a.c_codpro like '" + codigoProducto + "' ";
-            }else if("Descripcion".equals(strCriterio)){
+
+            if ("Codigo".equals(strCriterio)) {
+                queryString += " and a.c_codpro like '" + codigoProducto + "' ";
+            } else if ("Descripcion".equals(strCriterio)) {
                 codigoProducto = "%" + codigoProducto + "%";
-                queryString+=" and a.c_descri like '" + codigoProducto + "' ";
+                queryString += " and a.c_descri like '" + codigoProducto + "' ";
             }
-            queryString=queryString+" order by a.c_descri";
+            queryString = queryString + " order by a.c_descri";
             System.out.println("La query es " + queryString);
             Query query = entityManager.createNativeQuery(queryString);
-            
+
             if (!posicion.toString().equals(""))
                 query.setFirstResult(posIni).setMaxResults((Integer.parseInt(nroRegistros.toString())));
-            
+
             List lst = query.getResultList();
 
             Iterator iter = lst.iterator();
 
             while (iter.hasNext()) {
-                Object[] fila = (Object[])iter.next();
+                Object[] fila = (Object[]) iter.next();
 
                 Map<String, String> ahorro = new HashMap<String, String>();
-                ahorro.put("codigoProducto", (String)fila[0]);
-                ahorro.put("descripcionProducto", (String)fila[1]);
-                ahorro.put("tipoCalendario", (String)fila[2]);
-                ahorro.put("descripcionTipoCredito", (String)fila[3]);
-                ahorro.put("descripcionSubTipoCredito", (String)fila[4]);
-                ahorro.put("codigoFuenteFinanciamiento", (String)fila[5]);
-                ahorro.put("codigoLineaFinanciamiento", (String)fila[6]);
-                ahorro.put("abreviaturaMoneda", (String)fila[7]);
-                ahorro.put("modalidadCredito", (String)fila[8]);
-                ahorro.put("tipoInteres", (String)fila[9]);
-                ahorro.put("codigoTipoFrecuencia", (String)fila[10]);
+                ahorro.put("codigoProducto", (String) fila[0]);
+                ahorro.put("descripcionProducto", (String) fila[1]);
+                ahorro.put("tipoCalendario", (String) fila[2]);
+                ahorro.put("descripcionTipoCredito", (String) fila[3]);
+                ahorro.put("descripcionSubTipoCredito", (String) fila[4]);
+                ahorro.put("codigoFuenteFinanciamiento", (String) fila[5]);
+                ahorro.put("codigoLineaFinanciamiento", (String) fila[6]);
+                ahorro.put("abreviaturaMoneda", (String) fila[7]);
+                ahorro.put("modalidadCredito", (String) fila[8]);
+                ahorro.put("tipoInteres", (String) fila[9]);
+                ahorro.put("codigoTipoFrecuencia", (String) fila[10]);
                 ahorro.put("codigoTipoCuota", "");
                 ahorro.put("tipoTasa", "");
-//              ahorro.put("esCreditoPreAprobado", (String)fila[13]);   
-                ahorro.put("simboloMoneda", (String)fila[11]);
-                ahorro.put("codigoTipoCredito", (String)fila[12]);
-                ahorro.put("codigoSubTipoCredito", (String)fila[13]);
+                //              ahorro.put("esCreditoPreAprobado", (String)fila[13]);   
+                ahorro.put("simboloMoneda", (String) fila[11]);
+                ahorro.put("codigoTipoCredito", (String) fila[12]);
+                ahorro.put("codigoSubTipoCredito", (String) fila[13]);
                 lObtenerDatos.add(ahorro);
-            }   
+            }
 
         } catch (Exception e) {
             e.printStackTrace();
         }
-        
+
         return lObtenerDatos;
-     }
-     
-     
-     public List<Map> obtenerProductosCredito(Object codigoEmpresa, 
-             Object codigoProducto, 
-             String strCriterio, 
-             Object posicion, 
-             Object nroRegistros,
-             Object modalidadCredito,
-             Object tipoCredito,
-             Object subTipoCredito,
-             Object fechaProceso,
-             Object codigoMoneda
-             ) throws Exception{
-        
+    }
+
+    public List<Map> obtenerProductosCredito(Object codigoEmpresa,
+                                             Object codigoProducto,
+                                             String strCriterio,
+                                             Object posicion,
+                                             Object nroRegistros,
+                                             Object modalidadCredito,
+                                             Object tipoCredito,
+                                             Object subTipoCredito,
+                                             Object fechaProceso,
+                                             Object codigoMoneda) throws Exception {
+
         List<Map> lObtenerDatos = new ArrayList<Map>();
         String codigoAgencia = null;
-        
+
         try {
 
             int posIni = 0;
-            boolean complete=true;
-            String [] tmp = tipoCredito.toString().split("-");
-            if (tmp.length>1) {
+            boolean complete = true;
+            String[] tmp = tipoCredito.toString().split("-");
+            if (tmp.length > 1) {
                 complete = false;
-                tipoCredito = ""+tmp[0];
-                codigoAgencia = ""+tmp[2];
+                tipoCredito = "" + tmp[0];
+                codigoAgencia = "" + tmp[2];
             }
-            
-            if (!posicion.toString().equals(""))
-                posIni = (Integer.parseInt(posicion.toString())-1)*(Integer.parseInt(nroRegistros.toString()));
 
-            String queryString = "select" +
-            "       a.c_codpro codigoProducto, " +
-            "       a.c_descri descripcionProducto, " +
-            "       a.c_ticale tipoCalendario, " +
-            "       d.c_descri descripcionTipoCredito, " +
-            "       c.c_descri descripcionSubTipoCredito, " +
-            "       a.c_codfuf codigoFuenteFinanciamiento, " +
-            "       a.c_codlfi codigoLineaFinanciamiento, " +
-            "       b.c_descri abreviaturaMoneda, " +
-            "       a.c_modcre modalidadCredito, " +
-            "       e.C_TIPINT tipoInteres, " +
-            "       e.C_CODFRE codFrecuencia," +
-            "       e.C_INDDGR indicadorDesgravamen," +
-            "       e.C_INDSBI indicadorSeguroBien, " +
-            "       e.C_CALCAL verCalculadoraRecaudo, " +
-            "       e.C_INCREM creditoEmprendedor " +
+            if (!posicion.toString().equals(""))
+                posIni = (Integer.parseInt(posicion.toString()) - 1) * (Integer.parseInt(nroRegistros.toString()));
+
+            String queryString = "select" + "       a.c_codpro codigoProducto, " + "       a.c_descri descripcionProducto, " + "       a.c_ticale tipoCalendario, " + "       d.c_descri descripcionTipoCredito, " + "       c.c_descri descripcionSubTipoCredito, " + "       a.c_codfuf codigoFuenteFinanciamiento, " + "       a.c_codlfi codigoLineaFinanciamiento, " + "       b.c_descri abreviaturaMoneda, " + "       a.c_modcre modalidadCredito, " + "       e.C_TIPINT tipoInteres, " + "       e.C_CODFRE codFrecuencia," + "       e.C_INDDGR indicadorDesgravamen," + "       e.C_INDSBI indicadorSeguroBien, " + "       e.C_CALCAL verCalculadoraRecaudo, " + "       e.C_INCREM creditoEmprendedor " +
             //agregando campo para inspecciones de viviendas
             "       , a.C_INDINS indicadorInspeccion" +
             //gfernandez 21.10.2010 nuevo Campo, Inspeccion por Agencia
-            "       , a.C_INSAGE inspeccionAgencia" + 
+            "       , a.C_INSAGE inspeccionAgencia" +
             //jpantoja 31.08.2011 nuevo Campo, Indicador Arbol Decisional
-            "       , e.C_INDAAD indicadorArbolDecisional" + 
+            "       , e.C_INDAAD indicadorArbolDecisional" +
             //gliceta 26.01.2012: Req. 11-206: Solicitudes Gestionadas
             "       , e.N_MTOMIN montoMinimoProducto, e.N_MTOMAX montoMaximoProducto " +
             //gfernandez 06.06.2013 nuevo Campo, Indicador de Inspeccion obligatoria  
-            "       , a.C_ININOB indicadorInspeccionObligatorio"+           
-            " from " +
-            "       CRTPROD a, CBTTMON b, CRTSTCR c, CRTTICR d, CRTPRCU e " +
-               " WHERE a.c_codpro = e.c_codpro "; 
-               if(!_isEmpty(modalidadCredito)){
-               queryString += " and a.c_modcre = '"+modalidadCredito+"' ";
-               }
-               if(!_isEmpty(tipoCredito)){
-                   queryString += " and a.c_tipcre = '"+tipoCredito+"' ";
-               }
-               if(!_isEmpty(subTipoCredito)){
-                   queryString += " and a.c_sticre = '"+subTipoCredito+"' ";
-               }
-               if(!_isEmpty(codigoMoneda)){
-                  queryString += " and a.c_codmon = '"+codigoMoneda+"' ";
-              }
-               queryString+=" and b.c_codmon = a.c_codmon " +
-            " and c.c_tipcre = a.c_tipcre " +
-            " and c.c_sticre = a.c_sticre " +
-            " and d.c_tipcre = a.c_tipcre " +
-            " and a.d_inivig <=to_date('"+fechaProceso+"','dd/mm/yyyy')" +
-            " and ((a.d_finvig is null) or (a.d_finvig is not null and a.d_finvig>=to_date('"+fechaProceso+"','dd/mm/yyyy')) ) " +
-            " and a.c_codemp = " + codigoEmpresa + 
-            " and a.c_estreg = 'S' ";
-            if(!complete){
-                queryString=queryString+" and (SELECT count(f.c_idprof) FROM CRDPROF f WHERE f.c_codpro = a.c_codpro and f.c_estreg='S' and f.c_codemp = a.c_codemp and f.c_codage = '"+codigoAgencia+"') >0 ";
+            "       , a.C_ININOB indicadorInspeccionObligatorio" + " from " + "       CRTPROD a, CBTTMON b, CRTSTCR c, CRTTICR d, CRTPRCU e " + " WHERE a.c_codpro = e.c_codpro ";
+            if (!_isEmpty(modalidadCredito)) {
+                queryString += " and a.c_modcre = '" + modalidadCredito + "' ";
             }
-            
-            
-            if("Codigo".equals(strCriterio)){
-                queryString+=" and a.c_codpro like '" + codigoProducto + "' ";
-            }else if("Descripcion".equals(strCriterio)){
+            if (!_isEmpty(tipoCredito)) {
+                queryString += " and a.c_tipcre = '" + tipoCredito + "' ";
+            }
+            if (!_isEmpty(subTipoCredito)) {
+                queryString += " and a.c_sticre = '" + subTipoCredito + "' ";
+            }
+            if (!_isEmpty(codigoMoneda)) {
+                queryString += " and a.c_codmon = '" + codigoMoneda + "' ";
+            }
+            queryString += " and b.c_codmon = a.c_codmon " + " and c.c_tipcre = a.c_tipcre " + " and c.c_sticre = a.c_sticre " + " and d.c_tipcre = a.c_tipcre " + " and a.d_inivig <=to_date('" + fechaProceso + "','dd/mm/yyyy')" + " and ((a.d_finvig is null) or (a.d_finvig is not null and a.d_finvig>=to_date('" + fechaProceso + "','dd/mm/yyyy')) ) " + " and a.c_codemp = " + codigoEmpresa + " and a.c_estreg = 'S' ";
+            if (!complete) {
+                queryString = queryString + " and (SELECT count(f.c_idprof) FROM CRDPROF f WHERE f.c_codpro = a.c_codpro and f.c_estreg='S' and f.c_codemp = a.c_codemp and f.c_codage = '" + codigoAgencia + "') >0 ";
+            }
+
+            if ("Codigo".equals(strCriterio)) {
+                queryString += " and a.c_codpro like '" + codigoProducto + "' ";
+            } else if ("Descripcion".equals(strCriterio)) {
                 codigoProducto = "%" + codigoProducto + "%";
-                queryString+=" and a.c_descri like '" + codigoProducto + "' ";
+                queryString += " and a.c_descri like '" + codigoProducto + "' ";
             }
-            queryString=queryString+" order by a.c_descri";         
+            queryString = queryString + " order by a.c_descri";
             Query query = entityManager.createNativeQuery(queryString);
-            
+
             if (!posicion.toString().equals(""))
                 query.setFirstResult(posIni).setMaxResults((Integer.parseInt(nroRegistros.toString())));
-            
+
             List lst = query.getResultList();
 
             Iterator iter = lst.iterator();
 
             while (iter.hasNext()) {
-                Object[] fila = (Object[])iter.next();
+                Object[] fila = (Object[]) iter.next();
 
                 Map<Object, Object> ahorro = new HashMap<Object, Object>();//gliceta 26.01.2012: Req. 11-206: Solicitudes Gestionadas
-                ahorro.put("codigoProducto", (String)fila[0]);
-                ahorro.put("descripcionProducto", (String)fila[1]);
-                ahorro.put("tipoCalendario", (String)fila[2]);
-                ahorro.put("descripcionTipoCredito", (String)fila[3]);
-                ahorro.put("descripcionSubTipoCredito", (String)fila[4]);
-                ahorro.put("codigoFuenteFinanciamiento", (String)fila[5]);
-                ahorro.put("codigoLineaFinanciamiento", (String)fila[6]);
-                ahorro.put("abreviaturaMoneda", (String)fila[7]);
-                ahorro.put("modalidadCredito", (String)fila[8]);
-                ahorro.put("tipoInteres", (String)fila[9]);
-                ahorro.put("codigoTipoFrecuencia", (String)fila[10]);
+                ahorro.put("codigoProducto", (String) fila[0]);
+                ahorro.put("descripcionProducto", (String) fila[1]);
+                ahorro.put("tipoCalendario", (String) fila[2]);
+                ahorro.put("descripcionTipoCredito", (String) fila[3]);
+                ahorro.put("descripcionSubTipoCredito", (String) fila[4]);
+                ahorro.put("codigoFuenteFinanciamiento", (String) fila[5]);
+                ahorro.put("codigoLineaFinanciamiento", (String) fila[6]);
+                ahorro.put("abreviaturaMoneda", (String) fila[7]);
+                ahorro.put("modalidadCredito", (String) fila[8]);
+                ahorro.put("tipoInteres", (String) fila[9]);
+                ahorro.put("codigoTipoFrecuencia", (String) fila[10]);
                 ahorro.put("codigoTipoCuota", "");
                 ahorro.put("tipoTasa", "");
-                ahorro.put("indicadorDesgravamen", (String)fila[11]);
-                ahorro.put("indicadorSeguroBien", (String)fila[12]);
-                ahorro.put("verCalculadoraRecaudo", (String)fila[13]);  
-                ahorro.put("creditoEmprendedor", (String)fila[14]);
+                ahorro.put("indicadorDesgravamen", (String) fila[11]);
+                ahorro.put("indicadorSeguroBien", (String) fila[12]);
+                ahorro.put("verCalculadoraRecaudo", (String) fila[13]);
+                ahorro.put("creditoEmprendedor", (String) fila[14]);
                 //agregando campo para inspecciones de viviendas
-                ahorro.put("indicadorInspeccion", (String)fila[15]);
+                ahorro.put("indicadorInspeccion", (String) fila[15]);
                 //gfernandez 21.10.2010 nuevo Campo, Inspeccion por Agencia
-                ahorro.put("inspeccionAgencia", (String)fila[16]);
+                ahorro.put("inspeccionAgencia", (String) fila[16]);
                 //jpantoja  31.08.2011 indicador de Arbol Decisional
-                ahorro.put("indicadorArbolDecisional", (String)fila[17]);
+                ahorro.put("indicadorArbolDecisional", (String) fila[17]);
                 //gliceta 26.01.2012: Req. 11-206: Solicitudes Gestionadas
-                ahorro.put("montoMinimoProducto", (BigDecimal)fila[18]);
-                ahorro.put("montoMaximoProducto", (BigDecimal)fila[19]);
+                ahorro.put("montoMinimoProducto", (BigDecimal) fila[18]);
+                ahorro.put("montoMaximoProducto", (BigDecimal) fila[19]);
                 //gfernandez 06.06.2013 nuevo Campo, Indicador de Inspeccion obligatoria 
-                ahorro.put("indicadorInspeccionObligatorio", (String)fila[20]);
-                
+                ahorro.put("indicadorInspeccionObligatorio", (String) fila[20]);
+
                 lObtenerDatos.add(ahorro);
-            }   
+            }
 
         } catch (Exception e) {
             e.printStackTrace();
-       }
-        
+        }
+
         return lObtenerDatos;
-     }
-     
-     public int countObtenerProductosCreditoIndirecto(Object codigoEmpresa, Object codigoProducto, String strCriterio) throws Exception{
-        
+    }
+
+    public int countObtenerProductosCreditoIndirecto(Object codigoEmpresa, Object codigoProducto, String strCriterio) throws Exception {
+
         int datos = 0;
         try {
-            datos = ((List)(obtenerProductosCreditoIndirecto(codigoEmpresa, codigoProducto, strCriterio, "", ""))).size();
+            datos = ((List) (obtenerProductosCreditoIndirecto(codigoEmpresa, codigoProducto, strCriterio, "", ""))).size();
         } catch (Exception e) {
             e.printStackTrace();
-         }
+        }
         return datos;
-      }
-      
-      public List<Map> obtenerProductosCreditoIndirecto(Object codigoEmpresa, Object codigoProducto, String strCriterio, Object posicion, Object nroRegistros) throws Exception{
+    }
+
+    public List<Map> obtenerProductosCreditoIndirecto(Object codigoEmpresa,
+                                                      Object codigoProducto,
+                                                      String strCriterio,
+                                                      Object posicion,
+                                                      Object nroRegistros) throws Exception {
         String moduleName = "CRSolicitudFacade.obtenerProductosCreditoIndirecto";
         List<Map> lObtenerDatos = new ArrayList<Map>();
-        
+
         try {
 
             int posIni = 0;
             if (!posicion.toString().equals(""))
-                posIni = (Integer.parseInt(posicion.toString())-1)*(Integer.parseInt(nroRegistros.toString()));
+                posIni = (Integer.parseInt(posicion.toString()) - 1) * (Integer.parseInt(nroRegistros.toString()));
 
-            String queryString = "select" +
-            "       a.c_codpro codigoProducto, " +
-            "       a.c_descri descripcionProducto, " +
-            "       a.c_ticale tipoCalendario, " +
-            "       d.c_descri descripcionTipoCredito, " +
-            "       c.c_descri descripcionSubTipoCredito, " +
-            "       a.c_codfuf codigoFuenteFinanciamiento, " +
-            "       a.c_codlfi codigoLineaFinanciamiento, " +
-            "       b.c_descri abreviaturaMoneda, " +
-            "       a.c_modcre modalidadCredito, " +
-            "       e.C_CODPRO tipoInteres, " +
-            "       e.C_CODPRO codFrecuencia," +
-            "       e.C_CODPRO indicadorDesgravamen," +
-            "       e.C_CODPRO indicadorSeguroBien" +
+            String queryString = "select" + "       a.c_codpro codigoProducto, " + "       a.c_descri descripcionProducto, " + "       a.c_ticale tipoCalendario, " + "       d.c_descri descripcionTipoCredito, " + "       c.c_descri descripcionSubTipoCredito, " + "       a.c_codfuf codigoFuenteFinanciamiento, " + "       a.c_codlfi codigoLineaFinanciamiento, " + "       b.c_descri abreviaturaMoneda, " + "       a.c_modcre modalidadCredito, " + "       e.C_CODPRO tipoInteres, " + "       e.C_CODPRO codFrecuencia," + "       e.C_CODPRO indicadorDesgravamen," + "       e.C_CODPRO indicadorSeguroBien" +
             //agregando campo para inspecciones de viviendas
             "       , a.C_INDINS indicadorInspeccion" +
             //gfernandez 21.10.2010 nuevo Campo, Inspeccion por Agencia
             "       , a.C_INSAGE inspeccionAgencia" +
             //gfernandez 06.06.2013 nuevo Campo, Indicador de Inspeccion obligatoria  
-            "       , a.C_ININOB indicadorInspeccionObligatorio" +          
-            " from " +
-            "       CRTPROD a, CBTTMON b, CRTSTCR c, CRTTICR d, crtprcf e " +
-            " WHERE " +
-            "     a.c_modcre = 'PRF' " +
-            " and a.c_codpro = e.c_codpro " +
-            " and b.c_codmon = a.c_codmon " +
-            " and c.c_tipcre = a.c_tipcre " +
-            " and c.c_sticre = a.c_sticre " +
-            " and d.c_tipcre = a.c_tipcre " +
-            " and a.c_codemp = " + codigoEmpresa + 
-            " and a.c_estreg = 'S' " ;
-            if("Codigo".equals(strCriterio)){
-                queryString+=" and a.c_codpro like '" + codigoProducto + "' ";
-            }else if("Descripcion".equals(strCriterio)){
+            "       , a.C_ININOB indicadorInspeccionObligatorio" + " from " + "       CRTPROD a, CBTTMON b, CRTSTCR c, CRTTICR d, crtprcf e " + " WHERE " + "     a.c_modcre = 'PRF' " + " and a.c_codpro = e.c_codpro " + " and b.c_codmon = a.c_codmon " + " and c.c_tipcre = a.c_tipcre " + " and c.c_sticre = a.c_sticre " + " and d.c_tipcre = a.c_tipcre " + " and a.c_codemp = " + codigoEmpresa + " and a.c_estreg = 'S' ";
+            if ("Codigo".equals(strCriterio)) {
+                queryString += " and a.c_codpro like '" + codigoProducto + "' ";
+            } else if ("Descripcion".equals(strCriterio)) {
                 codigoProducto = "%" + codigoProducto + "%";
-                queryString+=" and a.c_descri like '" + codigoProducto + "' ";
+                queryString += " and a.c_descri like '" + codigoProducto + "' ";
             }
 
             System.out.println("La query es " + queryString);
             Query query = entityManager.createNativeQuery(queryString);
-            
+
             if (!posicion.toString().equals(""))
                 query.setFirstResult(posIni).setMaxResults((Integer.parseInt(nroRegistros.toString())));
-            
+
             List lst = query.getResultList();
 
             Iterator iter = lst.iterator();
 
             while (iter.hasNext()) {
-                Object[] fila = (Object[])iter.next();
+                Object[] fila = (Object[]) iter.next();
 
                 Map<String, String> ahorro = new HashMap<String, String>();
-                ahorro.put("codigoProducto", (String)fila[0]);
-                ahorro.put("descripcionProducto", (String)fila[1]);
-                ahorro.put("tipoCalendario", (String)fila[2]);
-                ahorro.put("descripcionTipoCredito", (String)fila[3]);
-                ahorro.put("descripcionSubTipoCredito", (String)fila[4]);
-                ahorro.put("codigoFuenteFinanciamiento", (String)fila[5]);
-                ahorro.put("codigoLineaFinanciamiento", (String)fila[6]);
-                ahorro.put("abreviaturaMoneda", (String)fila[7]);
-                ahorro.put("modalidadCredito", (String)fila[8]);
+                ahorro.put("codigoProducto", (String) fila[0]);
+                ahorro.put("descripcionProducto", (String) fila[1]);
+                ahorro.put("tipoCalendario", (String) fila[2]);
+                ahorro.put("descripcionTipoCredito", (String) fila[3]);
+                ahorro.put("descripcionSubTipoCredito", (String) fila[4]);
+                ahorro.put("codigoFuenteFinanciamiento", (String) fila[5]);
+                ahorro.put("codigoLineaFinanciamiento", (String) fila[6]);
+                ahorro.put("abreviaturaMoneda", (String) fila[7]);
+                ahorro.put("modalidadCredito", (String) fila[8]);
                 ahorro.put("tipoInteres", "");
                 ahorro.put("codigoTipoFrecuencia", "");
                 ahorro.put("codigoTipoCuota", "");
                 ahorro.put("tipoTasa", "");
                 ahorro.put("indicadorDesgravamen", "");
-                ahorro.put("indicadorSeguroBien", "");          
-                ahorro.put("indicadorInspeccion", (String)fila[13]);    
+                ahorro.put("indicadorSeguroBien", "");
+                ahorro.put("indicadorInspeccion", (String) fila[13]);
                 //gfernandez 21.10.2010 nuevo Campo, Inspeccion por Agencia
-                ahorro.put("inspeccionAgencia", (String)fila[14]);
+                ahorro.put("inspeccionAgencia", (String) fila[14]);
                 //gfernandez 06.06.2013 nuevo Campo, Indicador de Inspeccion obligatoria 
-                ahorro.put("indicadorInspeccionObligatorio", (String)fila[15]);                                 
+                ahorro.put("indicadorInspeccionObligatorio", (String) fila[15]);
                 lObtenerDatos.add(ahorro);
-            }   
+            }
 
         } catch (Exception e) {
-            String strDescripcionError = e.toString().length() > 2000 ?e.toString().substring(0, 2000) : e.toString();
-            cbControlErroresFacadeInterfaceLocal.crearLogErrores("", moduleName, strDescripcionError );
+            String strDescripcionError = e.toString().length() > 2000 ? e.toString().substring(0, 2000) : e.toString();
+            cbControlErroresFacadeInterfaceLocal.crearLogErrores("", moduleName, strDescripcionError);
         }
-        
+
         return lObtenerDatos;
-      }
+    }
 
-     /*Metodo que cuenta los registros */
-     public int countFindByNumeroSolicitudEstado(String valorBusqueda,String codigoEmpresa) throws Exception{
+    /* Metodo que cuenta los registros */
+    public int countFindByNumeroSolicitudEstado(String valorBusqueda, String codigoEmpresa) throws Exception {
         int cantidadRegistros = 0;
         try {
-            cantidadRegistros = crSolicitudCreditoInterfaceLocal.countFindByNumeroSolicitudEstado(valorBusqueda, codigoEmpresa);
+            cantidadRegistros = crSolicitudCreditoInterfaceLocal.countFindByNumeroSolicitudEstado(valorBusqueda,
+                                                                                                  codigoEmpresa);
         } catch (Exception e) {
             e.printStackTrace();
-        } 
+        }
         return cantidadRegistros;
-     }
+    }
 
-     public int countFindByNumeroSolicitud(String valorBusqueda, String codigoEmpresa) throws Exception{
+    public int countFindByNumeroSolicitud(String valorBusqueda, String codigoEmpresa) throws Exception {
         int cantidadRegistros = 0;
         try {
-            cantidadRegistros = crSolicitudCreditoInterfaceLocal.countFindByNumeroSolicitud(valorBusqueda,codigoEmpresa);
+            cantidadRegistros = crSolicitudCreditoInterfaceLocal.countFindByNumeroSolicitud(valorBusqueda,
+                                                                                            codigoEmpresa);
         } catch (Exception e) {
             e.printStackTrace();
-        } 
+        }
         return cantidadRegistros;
-     }
+    }
 
-     public int countFindByNombreEstado(String valorBusqueda, String codigoEmpresa) throws Exception{
+    public int countFindByNombreEstado(String valorBusqueda, String codigoEmpresa) throws Exception {
         int cantidadRegistros = 0;
         try {
-            cantidadRegistros = crSolicitudCreditoInterfaceLocal.countFindByNombreEstado(valorBusqueda+"%",codigoEmpresa);
+            cantidadRegistros = crSolicitudCreditoInterfaceLocal.countFindByNombreEstado(valorBusqueda + "%",
+                                                                                         codigoEmpresa);
         } catch (Exception e) {
             e.printStackTrace();
-        } 
+        }
         return cantidadRegistros;
-     }
+    }
 
-     public int countFindByNombre(String valorBusqueda, String codigoEmpresa) throws Exception{
-            int cantidadRegistros = 0;
-        try {
-            cantidadRegistros = crSolicitudCreditoInterfaceLocal.countFindByNombre(valorBusqueda+"%",codigoEmpresa);
-        } catch (Exception e) {
-            e.printStackTrace();
-        } 
-        return cantidadRegistros;
-     }
-
-     public int countFindByDocumentoEstado(String valorBusqueda, String codigoEmpresa, String tipoSolicitud) throws Exception {
+    public int countFindByNombre(String valorBusqueda, String codigoEmpresa) throws Exception {
         int cantidadRegistros = 0;
         try {
-            cantidadRegistros = crSolicitudCreditoInterfaceLocal.countFindByDocumentoEstado(valorBusqueda,codigoEmpresa,tipoSolicitud);
+            cantidadRegistros = crSolicitudCreditoInterfaceLocal.countFindByNombre(valorBusqueda + "%", codigoEmpresa);
         } catch (Exception e) {
             e.printStackTrace();
-        } 
+        }
         return cantidadRegistros;
-     }
+    }
 
-     public int countFindByDocumento(String valorBusqueda, String codigoEmpresa, String tipoSolicitud) throws Exception{
+    public int countFindByDocumentoEstado(String valorBusqueda, String codigoEmpresa, String tipoSolicitud) throws Exception {
         int cantidadRegistros = 0;
         try {
-            cantidadRegistros = crSolicitudCreditoInterfaceLocal.countFindByDocumento(valorBusqueda,codigoEmpresa,tipoSolicitud);
+            cantidadRegistros = crSolicitudCreditoInterfaceLocal.countFindByDocumentoEstado(valorBusqueda,
+                                                                                            codigoEmpresa,
+                                                                                            tipoSolicitud);
         } catch (Exception e) {
             e.printStackTrace();
-        } 
+        }
         return cantidadRegistros;
-     }
-     
-     public int countFindByDocumentoEstadoModalidad(String valorBusqueda, String codigoEmpresa, String tipoSolicitud, String tipoModalidadCredito) throws Exception {
+    }
+
+    public int countFindByDocumento(String valorBusqueda, String codigoEmpresa, String tipoSolicitud) throws Exception {
         int cantidadRegistros = 0;
         try {
-            cantidadRegistros = crSolicitudCreditoInterfaceLocal.countFindByDocumentoEstadoModalidad(valorBusqueda,codigoEmpresa,tipoSolicitud, tipoModalidadCredito);
+            cantidadRegistros = crSolicitudCreditoInterfaceLocal.countFindByDocumento(valorBusqueda,
+                                                                                      codigoEmpresa,
+                                                                                      tipoSolicitud);
         } catch (Exception e) {
             e.printStackTrace();
-        } 
+        }
         return cantidadRegistros;
-      }
+    }
 
-      public int countFindByDocumentoModalidad(String valorBusqueda, String codigoEmpresa, String tipoSolicitud, String tipoModalidadCredito) throws Exception{
+    public int countFindByDocumentoEstadoModalidad(String valorBusqueda,
+                                                   String codigoEmpresa,
+                                                   String tipoSolicitud,
+                                                   String tipoModalidadCredito) throws Exception {
         int cantidadRegistros = 0;
         try {
-            cantidadRegistros = crSolicitudCreditoInterfaceLocal.countFindByDocumentoModalidad(valorBusqueda,codigoEmpresa,tipoSolicitud, tipoModalidadCredito);
+            cantidadRegistros = crSolicitudCreditoInterfaceLocal.countFindByDocumentoEstadoModalidad(valorBusqueda,
+                                                                                                     codigoEmpresa,
+                                                                                                     tipoSolicitud,
+                                                                                                     tipoModalidadCredito);
         } catch (Exception e) {
             e.printStackTrace();
-        } 
+        }
         return cantidadRegistros;
-      }
+    }
 
-    public List<BeanObtenerSolicitud> obtenerSolicitudes(String tipoBusqueda,String valorBusqueda,String vigencia,
-            String usuario,String codigoEmpresa, String tipoSolicitud, String posicion, String nroRegistros)
-            throws Exception{
+    public int countFindByDocumentoModalidad(String valorBusqueda,
+                                             String codigoEmpresa,
+                                             String tipoSolicitud,
+                                             String tipoModalidadCredito) throws Exception {
+        int cantidadRegistros = 0;
+        try {
+            cantidadRegistros = crSolicitudCreditoInterfaceLocal.countFindByDocumentoModalidad(valorBusqueda,
+                                                                                               codigoEmpresa,
+                                                                                               tipoSolicitud,
+                                                                                               tipoModalidadCredito);
+        } catch (Exception e) {
+            e.printStackTrace();
+        }
+        return cantidadRegistros;
+    }
+
+    public List<BeanObtenerSolicitud> obtenerSolicitudes(String tipoBusqueda,
+                                                         String valorBusqueda,
+                                                         String vigencia,
+                                                         String usuario,
+                                                         String codigoEmpresa,
+                                                         String tipoSolicitud,
+                                                         String posicion,
+                                                         String nroRegistros) throws Exception {
         List<BeanObtenerSolicitud> lObtenerDatos = new ArrayList<BeanObtenerSolicitud>();
         Iterator it = null;
 
         try {
 
-            if ("NS".equals(tipoBusqueda)){
-                if("S".equals(vigencia))
-                    it = crSolicitudCreditoInterfaceLocal.findByNumeroSolicitudEstado(valorBusqueda,codigoEmpresa, posicion, nroRegistros).iterator();
+            if ("NS".equals(tipoBusqueda)) {
+                if ("S".equals(vigencia))
+                    it = crSolicitudCreditoInterfaceLocal.findByNumeroSolicitudEstado(valorBusqueda,
+                                                                                      codigoEmpresa,
+                                                                                      posicion,
+                                                                                      nroRegistros).iterator();
                 else if ("N".equals(vigencia))
-                    it = crSolicitudCreditoInterfaceLocal.findByNumeroSolicitud(valorBusqueda,codigoEmpresa, posicion, nroRegistros).iterator();
-            }else if ("NC".equals(tipoBusqueda)){
-                if("S".equals(vigencia))
-                    it = crSolicitudCreditoInterfaceLocal.findByNombreEstado(valorBusqueda+"%",codigoEmpresa, posicion, nroRegistros).iterator();
+                    it = crSolicitudCreditoInterfaceLocal.findByNumeroSolicitud(valorBusqueda,
+                                                                                codigoEmpresa,
+                                                                                posicion,
+                                                                                nroRegistros).iterator();
+            } else if ("NC".equals(tipoBusqueda)) {
+                if ("S".equals(vigencia))
+                    it = crSolicitudCreditoInterfaceLocal.findByNombreEstado(valorBusqueda + "%",
+                                                                             codigoEmpresa,
+                                                                             posicion,
+                                                                             nroRegistros).iterator();
                 else if ("N".equals(vigencia))
-                    it = crSolicitudCreditoInterfaceLocal.findByNombre(valorBusqueda+"%",codigoEmpresa, posicion, nroRegistros).iterator();
-            }else if ("DC".equals(tipoBusqueda)){
-                if("S".equals(vigencia))
-                    it = crSolicitudCreditoInterfaceLocal.findByDocumentoEstado(valorBusqueda,codigoEmpresa,tipoSolicitud, posicion, nroRegistros).iterator();
+                    it = crSolicitudCreditoInterfaceLocal.findByNombre(valorBusqueda + "%",
+                                                                       codigoEmpresa,
+                                                                       posicion,
+                                                                       nroRegistros).iterator();
+            } else if ("DC".equals(tipoBusqueda)) {
+                if ("S".equals(vigencia))
+                    it = crSolicitudCreditoInterfaceLocal.findByDocumentoEstado(valorBusqueda,
+                                                                                codigoEmpresa,
+                                                                                tipoSolicitud,
+                                                                                posicion,
+                                                                                nroRegistros).iterator();
                 else if ("N".equals(vigencia))
-                    it = crSolicitudCreditoInterfaceLocal.findByDocumento(valorBusqueda,codigoEmpresa,tipoSolicitud, posicion, nroRegistros).iterator();
-            }else if("NSO".equals(tipoBusqueda)){
-                List solList=new ArrayList(0);
-                CRSolicitudCredito  crSolicitudCredito=crSolicitudCreditoInterfaceLocal.findById(valorBusqueda);
-                if(crSolicitudCredito!=null){
+                    it = crSolicitudCreditoInterfaceLocal.findByDocumento(valorBusqueda,
+                                                                          codigoEmpresa,
+                                                                          tipoSolicitud,
+                                                                          posicion,
+                                                                          nroRegistros).iterator();
+            } else if ("NSO".equals(tipoBusqueda)) {
+                List solList = new ArrayList(0);
+                CRSolicitudCredito crSolicitudCredito = crSolicitudCreditoInterfaceLocal.findById(valorBusqueda);
+                if (crSolicitudCredito != null) {
                     solList.add(crSolicitudCredito);
-                    it= solList.iterator();
+                    it = solList.iterator();
                 }
             }
-            
-            while(it!=null && it.hasNext()){
+
+            while (it != null && it.hasNext()) {
                 CRSolicitudCredito crSolicitudCredito;
                 crSolicitudCredito = (CRSolicitudCredito) it.next();
                 lObtenerDatos.add(setearBeanSolicitud(crSolicitudCredito));
             }
         } catch (Exception e) {
             e.printStackTrace();
-        } 
+        }
         return lObtenerDatos;
     }
-    
-    public List<BeanObtenerSolicitud> obtenerSolicitudesModalidad(String tipoBusqueda,String valorBusqueda,String vigencia,
-            String usuario,String codigoEmpresa, String tipoSolicitud, String posicion, String nroRegistros, String tipoModalidadCredito)
-            throws Exception{
+
+    public List<BeanObtenerSolicitud> obtenerSolicitudesModalidad(String tipoBusqueda,
+                                                                  String valorBusqueda,
+                                                                  String vigencia,
+                                                                  String usuario,
+                                                                  String codigoEmpresa,
+                                                                  String tipoSolicitud,
+                                                                  String posicion,
+                                                                  String nroRegistros,
+                                                                  String tipoModalidadCredito) throws Exception {
         List<BeanObtenerSolicitud> lObtenerDatos = new ArrayList<BeanObtenerSolicitud>();
         Iterator it = null;
 
         try {
-            if ("DC".equals(tipoBusqueda)){
-                if("S".equals(vigencia))
-                    it = crSolicitudCreditoInterfaceLocal.findByDocumentoEstadoModalidad(valorBusqueda,codigoEmpresa,tipoSolicitud, posicion, nroRegistros,tipoModalidadCredito).iterator();
+            if ("DC".equals(tipoBusqueda)) {
+                if ("S".equals(vigencia))
+                    it = crSolicitudCreditoInterfaceLocal.findByDocumentoEstadoModalidad(valorBusqueda,
+                                                                                         codigoEmpresa,
+                                                                                         tipoSolicitud,
+                                                                                         posicion,
+                                                                                         nroRegistros,
+                                                                                         tipoModalidadCredito).iterator();
                 else if ("N".equals(vigencia))
-                    it = crSolicitudCreditoInterfaceLocal.findByDocumentoModalidad(valorBusqueda,codigoEmpresa,tipoSolicitud, posicion, nroRegistros,tipoModalidadCredito).iterator();
+                    it = crSolicitudCreditoInterfaceLocal.findByDocumentoModalidad(valorBusqueda,
+                                                                                   codigoEmpresa,
+                                                                                   tipoSolicitud,
+                                                                                   posicion,
+                                                                                   nroRegistros,
+                                                                                   tipoModalidadCredito).iterator();
             }
-            
-            while(it.hasNext()){
+
+            while (it.hasNext()) {
                 CRSolicitudCredito crSolicitudCredito;
                 crSolicitudCredito = (CRSolicitudCredito) it.next();
                 lObtenerDatos.add(setearBeanSolicitud(crSolicitudCredito));
             }
         } catch (Exception e) {
             e.printStackTrace();
-        } 
+        }
         return lObtenerDatos;
     }
+
     //evargas 02.07.2012 se agrega el parametro para filtrar solo los de la opcion Cambio Fecha Vencimiento
-    public List<BeanCRSolicitudCambioCondiciones> obtenerSolicitudesCambioCondicion(
-                                                                                    String strPersona,
+    public List<BeanCRSolicitudCambioCondiciones> obtenerSolicitudesCambioCondicion(String strPersona,
                                                                                     String vigencia,
                                                                                     String usuario,
                                                                                     String codigoEmpresa,
-                                                                                    String filtroOrigen,                                                                                    
-                                                                                    String posicion, 
-                                                                                    String nroRegistros
-                                                                                    )
-                                                                                    throws Exception{
+                                                                                    String filtroOrigen,
+                                                                                    String posicion,
+                                                                                    String nroRegistros) throws Exception {
         List<BeanCRSolicitudCambioCondiciones> lObtenerDatos = new ArrayList<BeanCRSolicitudCambioCondiciones>();
         Iterator it = null;
 
         try {
 
-            if("S".equals(vigencia))
-                it=crSolicitudCambioCondicionesInterfaceLocal.findByPersonaVigentes(strPersona,filtroOrigen, posicion, nroRegistros).iterator();
+            if ("S".equals(vigencia))
+                it = crSolicitudCambioCondicionesInterfaceLocal.findByPersonaVigentes(strPersona,
+                                                                                      filtroOrigen,
+                                                                                      posicion,
+                                                                                      nroRegistros).iterator();
             else
-                it=crSolicitudCambioCondicionesInterfaceLocal.findByPersonaNoVigentes(strPersona,filtroOrigen, posicion, nroRegistros).iterator();
-            while(it.hasNext()){
+                it = crSolicitudCambioCondicionesInterfaceLocal.findByPersonaNoVigentes(strPersona,
+                                                                                        filtroOrigen,
+                                                                                        posicion,
+                                                                                        nroRegistros).iterator();
+            while (it.hasNext()) {
                 CRSolicitudCambioCondiciones crSolicitudCambioCondiciones;
                 crSolicitudCambioCondiciones = (CRSolicitudCambioCondiciones) it.next();
                 lObtenerDatos.add(setearBeanSolicitud(crSolicitudCambioCondiciones));
             }
         } catch (Exception e) {
             e.printStackTrace();
-        } 
+        }
         return lObtenerDatos;
     }
-    
-    public BeanCRSolicitudCambioCondiciones setearBeanSolicitud(CRSolicitudCambioCondiciones crSolicitudCambioCondiciones){
+
+    public BeanCRSolicitudCambioCondiciones setearBeanSolicitud(CRSolicitudCambioCondiciones crSolicitudCambioCondiciones) {
         BeanCRSolicitudCambioCondiciones bean = new BeanCRSolicitudCambioCondiciones();
-        
+
         try {
-            CBCatalogoCheckConstraint cbCatalogoCheckConstraint=(CBCatalogoCheckConstraint)cbCatalogoCheckConstraintInterfaceLocal.findByTablaCampoConstraint("CRMSOCR", "C_TIPSOL", crSolicitudCambioCondiciones.getTipoSolicitudCambioCondiciones()).get(0);
+            CBCatalogoCheckConstraint cbCatalogoCheckConstraint = (CBCatalogoCheckConstraint) cbCatalogoCheckConstraintInterfaceLocal.findByTablaCampoConstraint("CRMSOCR",
+                                                                                                                                                                 "C_TIPSOL",
+                                                                                                                                                                 crSolicitudCambioCondiciones.getTipoSolicitudCambioCondiciones()).get(0);
             bean.setTipoSolicitudCambioCondiciones(cbCatalogoCheckConstraint.getAbreviatura());
-            
+
             bean.setNumeroSolicitudCambioCondiciones(crSolicitudCambioCondiciones.getNumeroSolicitudCambioCondiciones());
             bean.setEstadoSolicitudCambioCondiciones(crSolicitudCambioCondiciones.getEstadoSolicitudCambioCondiciones());
-            cbCatalogoCheckConstraint=cbCatalogoCheckConstraintInterfaceLocal.findById(new CBCatalogoCheckConstraintId("CRMSOCC","C_ESTSCC",bean.getEstadoSolicitudCambioCondiciones()));
+            cbCatalogoCheckConstraint = cbCatalogoCheckConstraintInterfaceLocal.findById(new CBCatalogoCheckConstraintId("CRMSOCC", "C_ESTSCC", bean.getEstadoSolicitudCambioCondiciones()));
             bean.setDescripcionEstadoSolicitudCambioCondiciones(cbCatalogoCheckConstraint.getDescripcion());
             bean.setNumeroCredito(crSolicitudCambioCondiciones.getCrCuentaCredito().getNumeroCredito());
             bean.setUsuarioSolicita(crSolicitudCambioCondiciones.getUsuarioSolicita());
             bean.setFechaLiquidacion(crSolicitudCambioCondiciones.getFechaLiquidacion());
-            
+
             //evargas 03.07.2012
-            cbCatalogoCheckConstraint=cbCatalogoCheckConstraintInterfaceLocal.findById(new CBCatalogoCheckConstraintId("CRMSOCC","C_INDORI",crSolicitudCambioCondiciones.getIndicadorOrigen()));
+            cbCatalogoCheckConstraint = cbCatalogoCheckConstraintInterfaceLocal.findById(new CBCatalogoCheckConstraintId("CRMSOCC", "C_INDORI", crSolicitudCambioCondiciones.getIndicadorOrigen()));
             bean.setDescIndicadorOrigen(cbCatalogoCheckConstraint.getDescripcion());
-            
+
             /**************************** Relacion con la Tabla Solicitud Credito ****************************************/
-            if ((crSolicitudCambioCondiciones.getCrSolicitudCredito()!=null) ){
+            if ((crSolicitudCambioCondiciones.getCrSolicitudCredito() != null)) {
                 CRSolicitudCredito crSolicitudCredito = crSolicitudCreditoInterfaceLocal.findById(crSolicitudCambioCondiciones.getCrSolicitudCredito().getNumeroSolicitud());
                 CREstadoSolicitud crEstadoSolicitud = crEstadoSolicitudInterfaceLocal.findById(crSolicitudCredito.getCrEstadoSolicitud().getCodigoEstado());
-                    bean.setEstadoSolicitudCredito(crSolicitudCredito.getCrEstadoSolicitud().getCodigoEstado());
+                bean.setEstadoSolicitudCredito(crSolicitudCredito.getCrEstadoSolicitud().getCodigoEstado());
                 bean.setFechaSolicitud(crSolicitudCredito.getFechaSolicitud());
-                if ((crEstadoSolicitud.getCodigoEstado().equals("AR")) ){
-                bean.setFechaAprobacion(crSolicitudCredito.getFechaResolucion());
-                bean.setUsuarioAprobacion(crSolicitudCredito.getUsuarioResponsableResolucion());
+                if ((crEstadoSolicitud.getCodigoEstado().equals("AR"))) {
+                    bean.setFechaAprobacion(crSolicitudCredito.getFechaResolucion());
+                    bean.setUsuarioAprobacion(crSolicitudCredito.getUsuarioResponsableResolucion());
                 }
-                
-                if(crSolicitudCredito.getCrUltimoEstadoResolucion()!=null)
+
+                if (crSolicitudCredito.getCrUltimoEstadoResolucion() != null)
                     bean.setEstadoResolucion(crSolicitudCredito.getCrUltimoEstadoResolucion().getEstadoResolucion());
-                
+
             }
-            
+
         } catch (Exception e) {
             e.printStackTrace();
         }
-        
+
         return bean;
     }
 
-    
-    
     /******************* METODO QUE SIRVE PARA LA CONSULTA DE SOLICITUDES ***************************/
-    
+
     /**
-     * @ejb.interface-method
-     * view-type="remote"
+     * @ejb.interface-method view-type="remote"
      **/
 
-    public BeanObtenerSolicitud obtenerSolicitudes(String codigoSolicitud, String codigoEmpresa, String modalidadCredito) throws Exception{
-        
+    public BeanObtenerSolicitud obtenerSolicitudes(String codigoSolicitud, String codigoEmpresa, String modalidadCredito) throws Exception {
+
         CRSolicitudCredito obtenerDatos = new CRSolicitudCredito();
         BeanObtenerSolicitud datos = new BeanObtenerSolicitud();
-        
+
         try {
             if (modalidadCredito == "")
-                obtenerDatos = crSolicitudCreditoInterfaceLocal.findByNumeroSolicitud(codigoSolicitud,codigoEmpresa);
+                obtenerDatos = crSolicitudCreditoInterfaceLocal.findByNumeroSolicitud(codigoSolicitud, codigoEmpresa);
             else
-                obtenerDatos = crSolicitudCreditoInterfaceLocal.findByNumeroSolicitud(codigoSolicitud,codigoEmpresa,modalidadCredito);
-            datos = setearBeanSolicitud(obtenerDatos,"");               
+                obtenerDatos = crSolicitudCreditoInterfaceLocal.findByNumeroSolicitud(codigoSolicitud,
+                                                                                      codigoEmpresa,
+                                                                                      modalidadCredito);
+            datos = setearBeanSolicitud(obtenerDatos, "");
             //jpantoja 31.08.2011 Arbol Decisional
             CRProductoPrestamosCuotas crProductoPrestamosCuotas = crProductoPrestamosCuotasInterfaceLocal.findById(obtenerDatos.getCrProductoByProductoSolicitado().getCodigoProducto());
             //stacanga 23.03.2012
             //datos.setIndArbolDecisional(crProductoPrestamosCuotas.getIndApliArbolDecisional());//gliceta 27.01.2012: Req. 11-206 - Solicitudes Gestionadas
-            
+
             //stacanga 09.02.2012
-            if(crProductoPrestamosCuotas!=null){
+            if (crProductoPrestamosCuotas != null) {
                 datos.setIndArbolDecisional(crProductoPrestamosCuotas.getIndApliArbolDecisional());
             }
-            
+
         } catch (Exception e) {
             e.printStackTrace();
         }
-        
+
         return datos;
     }
 
-    
     //verificar
-    public List<BeanObtenerSolicitud> obtenerSolicitudes(String codigoSolicitud,String usuario,String codigoEmpresa, String posicion, String nroRegistros) throws Exception{
-        
+    public List<BeanObtenerSolicitud> obtenerSolicitudes(String codigoSolicitud,
+                                                         String usuario,
+                                                         String codigoEmpresa,
+                                                         String posicion,
+                                                         String nroRegistros) throws Exception {
+
         List<CRSolicitudCredito> lObtenerDatos = new ArrayList<CRSolicitudCredito>();
         List<BeanObtenerSolicitud> lstDatos = new ArrayList<BeanObtenerSolicitud>();
-        
+
         try {
-            lObtenerDatos = crSolicitudCreditoInterfaceLocal.findByNumeroSolicitud(codigoSolicitud,codigoEmpresa, posicion, nroRegistros);
+            lObtenerDatos = crSolicitudCreditoInterfaceLocal.findByNumeroSolicitud(codigoSolicitud,
+                                                                                   codigoEmpresa,
+                                                                                   posicion,
+                                                                                   nroRegistros);
             Iterator iter = lObtenerDatos.iterator();
-            
-            while(iter.hasNext()){
+
+            while (iter.hasNext()) {
                 CRSolicitudCredito crSolicitudCredito;
                 crSolicitudCredito = (CRSolicitudCredito) iter.next();
                 lstDatos.add(setearBeanSolicitud(crSolicitudCredito));
@@ -1254,83 +1250,81 @@
         } catch (Exception e) {
             e.printStackTrace();
         }
-        
+
         return lstDatos;
     }
-    
+
     /**
-     * @ejb.interface-method
-     * view-type="remote"
+     * @ejb.interface-method view-type="remote"
      **/
-    public List<CRSolicitudTitulares> obtenerPersonasRelacionadasSolicitud(String numeroSolicitudCredito, String usuario) throws Exception{
-        
+    public List<CRSolicitudTitulares> obtenerPersonasRelacionadasSolicitud(String numeroSolicitudCredito, String usuario) throws Exception {
+
         List<CRSolicitudTitulares> lObtenerDatos = new ArrayList<CRSolicitudTitulares>();
-        
+
         try {
-            
+
             lObtenerDatos = crSolicitudTitularesInterfaceLocal.findByNumeroSolicitud(numeroSolicitudCredito);
-                
+
         } catch (Exception e) {
             e.printStackTrace();
-        } 
+        }
         return lObtenerDatos;
     }
-    
+
     /**
-     * Metodo que setea un bean de tipo Solicitud y como parametro de entrada es un objeto CRSolicitudCreditoLocal  
+     * Metodo que setea un bean de tipo Solicitud y como parametro de entrada es un objeto CRSolicitudCreditoLocal
+     * 
      * @param Solicitudlocal
      */
-    public BeanObtenerSolicitud setearBeanSolicitud(CRSolicitudCredito solicitudCredito){
+    public BeanObtenerSolicitud setearBeanSolicitud(CRSolicitudCredito solicitudCredito) {
         BeanObtenerSolicitud bean = new BeanObtenerSolicitud();
-        
+
         try {
             bean.setNumeroSolicitud(solicitudCredito.getNumeroSolicitud());
             bean.setCodigoProducto(solicitudCredito.getCrProductoByProductoSolicitado().getCodigoProducto());
             bean.setCodigoAgencia(solicitudCredito.getCodigoAgencia());
-            CBAgencia cbAgencia=cbAgenciaInterfaceLocal.findById(new CBAgenciaId(solicitudCredito.getCodigoEmpresa(),solicitudCredito.getCodigoAgencia()));
+            CBAgencia cbAgencia = cbAgenciaInterfaceLocal.findById(new CBAgenciaId(solicitudCredito.getCodigoEmpresa(), solicitudCredito.getCodigoAgencia()));
             bean.setDescripcionAgencia(cbAgencia.getDescripcion());
 
-            
-//          Insertando el valor de la sbs 
-            if(solicitudCredito.getCrTipoCreditoSBS()!=null && solicitudCredito.getCrTipoCreditoSBS().getCodigoTipoCreditoSBS()!=null){
+            //          Insertando el valor de la sbs 
+            if (solicitudCredito.getCrTipoCreditoSBS() != null && solicitudCredito.getCrTipoCreditoSBS().getCodigoTipoCreditoSBS() != null) {
                 bean.setCodigoTipoCreditoSBS(solicitudCredito.getCrTipoCreditoSBS().getCodigoTipoCreditoSBS());
-                    CRTipoCreditoSBS crTipoCreditoSBS = crTipoCreditoSBSInterfaceLocal.findById(solicitudCredito.getCrTipoCreditoSBS().getCodigoTipoCreditoSBS());              
-                    bean.setDescripcionTipoCreditoSBS(crTipoCreditoSBS.getDescripcion());               
+                CRTipoCreditoSBS crTipoCreditoSBS = crTipoCreditoSBSInterfaceLocal.findById(solicitudCredito.getCrTipoCreditoSBS().getCodigoTipoCreditoSBS());
+                bean.setDescripcionTipoCreditoSBS(crTipoCreditoSBS.getDescripcion());
             }
-            
-            
+
             /**************************** Relacion con la Tabla Producto ****************************************/
-            if ((solicitudCredito.getCrProductoByProductoSolicitado()!=null) && (solicitudCredito.getCrProductoByProductoSolicitado().getCodigoProducto()!=null)){
+            if ((solicitudCredito.getCrProductoByProductoSolicitado() != null) && (solicitudCredito.getCrProductoByProductoSolicitado().getCodigoProducto() != null)) {
                 CRProducto objProductoSolicitado = crProductoInterfaceLocal.findById(solicitudCredito.getCrProductoByProductoSolicitado().getCodigoProducto());
                 bean.setProductoNombre(objProductoSolicitado.getDescripcion());
                 bean.setCodigoTipoCreditoSolicitado(objProductoSolicitado.getCrSubTipoCredito().getId().getCodigoTipoCredito());
                 // galmerco 21.05.2013 Nuevo campo
                 bean.setIndicadorInspeccionObligatoria(objProductoSolicitado.getInspeccionObligatoria());
                 bean.setIndicadorInspeccion(objProductoSolicitado.getIndicadorInspeccion() == null ? "N" : objProductoSolicitado.getIndicadorInspeccion());
-                
+
             } else {
                 bean.setProductoNombre("");
             }
-            
-            if("PRF".equals(solicitudCredito.getTipoModalidadCredito())){
+
+            if ("PRF".equals(solicitudCredito.getTipoModalidadCredito())) {
                 CRSolCrePrestamoCartaFianza crSolCrePrestamoCartaFianza = crSolCrePrestamoCartaFianzaInterfaceLocal.findById(solicitudCredito.getNumeroSolicitud());
                 bean.setCodigoAfianzado(crSolCrePrestamoCartaFianza.getClPersonas().getCodigoPersona());
                 bean.setNombreAfianzado(crSolCrePrestamoCartaFianza.getClPersonas().getNombreoRazonSocial());
-                if(crSolCrePrestamoCartaFianza.getClPersonasOtro()!=null){
+                if (crSolCrePrestamoCartaFianza.getClPersonasOtro() != null) {
                     bean.setCodigoAFavorDe(crSolCrePrestamoCartaFianza.getClPersonasOtro().getCodigoPersona());
                     bean.setNombreAFavorDe(crSolCrePrestamoCartaFianza.getClPersonasOtro().getNombreoRazonSocial());
                 }
             }
-            
+
             bean.setCodigoTipoCreditoAprobado(solicitudCredito.getCrSubTipoCreditoByReCRSolicitudCredito07().getId().getCodigoTipoCredito());
             bean.setCodigoSubTipoCreditoAprobado(solicitudCredito.getCrSubTipoCreditoByReCRSolicitudCredito07().getId().getCodigoSubTipoCredito());
-            
-            if(solicitudCredito.getCrProductoByProductoSolicitado().getCrSubTipoCredito()!=null){
-            bean.setDescripcionTipoCredito      (solicitudCredito.getCrProductoByProductoSolicitado().getCrSubTipoCredito().getCrTipoCredito().getDescripcion());
-            bean.setDescripcionSubTipoCredito   (solicitudCredito.getCrProductoByProductoSolicitado().getCrSubTipoCredito().getDescripcion());
+
+            if (solicitudCredito.getCrProductoByProductoSolicitado().getCrSubTipoCredito() != null) {
+                bean.setDescripcionTipoCredito(solicitudCredito.getCrProductoByProductoSolicitado().getCrSubTipoCredito().getCrTipoCredito().getDescripcion());
+                bean.setDescripcionSubTipoCredito(solicitudCredito.getCrProductoByProductoSolicitado().getCrSubTipoCredito().getDescripcion());
             }
-            
-            if ((solicitudCredito.getCrProductoByProductoAprobado()!=null) && (solicitudCredito.getCrProductoByProductoAprobado().getCodigoProducto() != null)){
+
+            if ((solicitudCredito.getCrProductoByProductoAprobado() != null) && (solicitudCredito.getCrProductoByProductoAprobado().getCodigoProducto() != null)) {
                 CRProducto objProductoAprobado = crProductoInterfaceLocal.findById(solicitudCredito.getCrProductoByProductoAprobado().getCodigoProducto());
                 bean.setCodigoProductoAprobado(objProductoAprobado.getCodigoProducto());
                 bean.setDescripcionProductoAprobado(objProductoAprobado.getDescripcion());
@@ -1338,14 +1332,14 @@
                 bean.setCodigoProductoAprobado("");
                 bean.setDescripcionProductoAprobado("");
             }
-        
+
             /***** Relacion con la tabla Moneda ************************/
-            if (solicitudCredito.getCodigoMonedaSolicitado()!=null){
-                CBMoneda objMonedaSolicitado = cbMonedaInterfaceLocal.findById(solicitudCredito.getCodigoMonedaSolicitado()); 
+            if (solicitudCredito.getCodigoMonedaSolicitado() != null) {
+                CBMoneda objMonedaSolicitado = cbMonedaInterfaceLocal.findById(solicitudCredito.getCodigoMonedaSolicitado());
                 bean.setMonedaDescripcion(objMonedaSolicitado.getAbreviatura());
             }
-            if (solicitudCredito.getCodigoMonedaAprobado() != null){
-                CBMoneda objMonedaAprobado = cbMonedaInterfaceLocal.findById(solicitudCredito.getCodigoMonedaAprobado()); 
+            if (solicitudCredito.getCodigoMonedaAprobado() != null) {
+                CBMoneda objMonedaAprobado = cbMonedaInterfaceLocal.findById(solicitudCredito.getCodigoMonedaAprobado());
                 bean.setCodigoMonedaAprobado(objMonedaAprobado.getCodigoMoneda());
                 bean.setDescripcionMonedaAprobado(objMonedaAprobado.getDescripcion());
             }
@@ -1355,24 +1349,22 @@
             bean.setFechaSolicitud(solicitudCredito.getFechaSolicitud());
             bean.setModalidadCredito(solicitudCredito.getTipoModalidadCredito());
             bean.setCodigoCliente(solicitudCredito.getClPersonasByCodigoPersona().getCodigoPersona());
-            CLPersonas clPersonas=clPersonasInterfaceLocal.findById(solicitudCredito.getClPersonasByCodigoPersona().getCodigoPersona());
-            if(clPersonas!=null){
+            CLPersonas clPersonas = clPersonasInterfaceLocal.findById(solicitudCredito.getClPersonasByCodigoPersona().getCodigoPersona());
+            if (clPersonas != null) {
                 bean.setNombreCliente(clPersonas.getNombreoRazonSocial());
             }
-            
 
             //Descripciï¿½n Condiciï¿½n Solicitud
-            CBCatalogoCheckConstraintId pkCatalogoCheckConstraint = 
-                new CBCatalogoCheckConstraintId("CRTPROD", "C_MODCRE", solicitudCredito.getTipoModalidadCredito());
-            try{
+            CBCatalogoCheckConstraintId pkCatalogoCheckConstraint = new CBCatalogoCheckConstraintId("CRTPROD", "C_MODCRE", solicitudCredito.getTipoModalidadCredito());
+            try {
                 CBCatalogoCheckConstraint dCatalogoCheckConstraint = cbCatalogoCheckConstraintInterfaceLocal.findById(pkCatalogoCheckConstraint);
                 bean.setDescripcionCondicionSolicitud(dCatalogoCheckConstraint.getDescripcion());
                 bean.setCondicionSolicitud(dCatalogoCheckConstraint.getAbreviatura());
-            }catch(Exception e){
+            } catch (Exception e) {
                 e.printStackTrace();
             }
 
-            if ((solicitudCredito.getCrEstadoSolicitud()!=null) && (solicitudCredito.getCrEstadoSolicitud().getCodigoEstado() != null)){
+            if ((solicitudCredito.getCrEstadoSolicitud() != null) && (solicitudCredito.getCrEstadoSolicitud().getCodigoEstado() != null)) {
                 CREstadoSolicitud objEstadoSolicitud = crEstadoSolicitudInterfaceLocal.findById(solicitudCredito.getCrEstadoSolicitud().getCodigoEstado());
                 bean.setEstadoSolicitud(objEstadoSolicitud.getDescripcion());
                 bean.setCodigoEstadoSolicitud(objEstadoSolicitud.getCodigoEstado());
@@ -1381,121 +1373,119 @@
                 bean.setCodigoEstadoSolicitud("");
             }
 
-            if (solicitudCredito.getAnalistaResponsable()!=null){
+            if (solicitudCredito.getAnalistaResponsable() != null) {
                 CBUsuario objUsuario = cbUsuarioInterfaceLocal.findById(solicitudCredito.getAnalistaResponsable());
                 bean.setNombreAnalistaResponsable(objUsuario.getNombreCompleto());
                 bean.setCodigoAnalistaResponsable(objUsuario.getCodigoUsuario());
-            }
-            else{
+            } else {
                 bean.setNombreAnalistaResponsable("");
-                bean.setCodigoAnalistaResponsable("");          
+                bean.setCodigoAnalistaResponsable("");
             }
-            
+
             bean.setEstadoEvaluacion(solicitudCredito.getEstadoEvaluacionSolCred());
-            if(solicitudCredito.getEstadoEvaluacionSolCred()!=null && !solicitudCredito.getEstadoEvaluacionSolCred().equals("")){
-                List lstcatalogo=cbCatalogoCheckConstraintInterfaceLocal.findByTablaCampoConstraint("CRMSOCR", "C_ESTEVA", solicitudCredito.getEstadoEvaluacionSolCred());
-                if(lstcatalogo.size()>0){
-                    CBCatalogoCheckConstraint cbCatalogoCheckConstraint=(CBCatalogoCheckConstraint)lstcatalogo.get(0);
+            if (solicitudCredito.getEstadoEvaluacionSolCred() != null && !solicitudCredito.getEstadoEvaluacionSolCred().equals("")) {
+                List lstcatalogo = cbCatalogoCheckConstraintInterfaceLocal.findByTablaCampoConstraint("CRMSOCR",
+                                                                                                      "C_ESTEVA",
+                                                                                                      solicitudCredito.getEstadoEvaluacionSolCred());
+                if (lstcatalogo.size() > 0) {
+                    CBCatalogoCheckConstraint cbCatalogoCheckConstraint = (CBCatalogoCheckConstraint) lstcatalogo.get(0);
                     bean.setDescEstadoEvaluacion(cbCatalogoCheckConstraint.getDescripcion());
-                }else{
+                } else {
                     bean.setDescEstadoEvaluacion("");
                 }
-            }else{
+            } else {
                 bean.setDescEstadoEvaluacion("");
             }
             bean.setIndEnvioEvaluacionSC(solicitudCredito.getIndEnvioEvaluacionSC());
-            
-            List lstEvaluacion=crEvaluacionPersonaInterfaceLocal.findByNumeroSolicitudAndEstado(solicitudCredito.getNumeroSolicitud(),"S");
-            CREvaluacionPersona crEvaluacionPersona=null;
-            if(lstEvaluacion.size()>0){
-                crEvaluacionPersona=(CREvaluacionPersona)lstEvaluacion.get(0);
+
+            List lstEvaluacion = crEvaluacionPersonaInterfaceLocal.findByNumeroSolicitudAndEstado(solicitudCredito.getNumeroSolicitud(),
+                                                                                                  "S");
+            CREvaluacionPersona crEvaluacionPersona = null;
+            if (lstEvaluacion.size() > 0) {
+                crEvaluacionPersona = (CREvaluacionPersona) lstEvaluacion.get(0);
 
                 bean.setCuotaEndeudamiento(crEvaluacionPersona.getCuotaEndeudamientoMaximo());
                 bean.setDescuento(crEvaluacionPersona.getDescuentoCuotaEndeudamiento());
                 bean.setCuotaMaxima(crEvaluacionPersona.getCuotaMaximaDisponibilidad());
                 bean.setFactorCuota(crEvaluacionPersona.getRelacionCuotaIngreso());
                 bean.setMontoIngreso(crEvaluacionPersona.getIngresoNeto());
-                
-            }else{
+
+            } else {
                 bean.setCuotaEndeudamiento(new Double(0));
                 bean.setDescuento(new Double(0));
                 bean.setCuotaMaxima(new Double(0));
                 bean.setMontoIngreso(new Double(0));
                 bean.setFactorCuota(new Double(0));
             }
-            
-            bean.setCodigoZonaItinerante(solicitudCredito.getCodigoZonaItinerante()!=null?solicitudCredito.getCodigoZonaItinerante().toString():null);
-            if(solicitudCredito.getCodigoZonaItinerante()!=null){
-                CBZonasItinerantes cbZonasItinerantes=cbZonasItinerantesInterfaceLocal.findById(solicitudCredito.getCodigoZonaItinerante());
-                if(cbZonasItinerantes!=null)
-                bean.setDescripcionZonaItinerante(cbZonasItinerantes.getNombre());
+
+            bean.setCodigoZonaItinerante(solicitudCredito.getCodigoZonaItinerante() != null ? solicitudCredito.getCodigoZonaItinerante().toString() : null);
+            if (solicitudCredito.getCodigoZonaItinerante() != null) {
+                CBZonasItinerantes cbZonasItinerantes = cbZonasItinerantesInterfaceLocal.findById(solicitudCredito.getCodigoZonaItinerante());
+                if (cbZonasItinerantes != null)
+                    bean.setDescripcionZonaItinerante(cbZonasItinerantes.getNombre());
             }
-            if(solicitudCredito.getCrUltimoEstadoResolucion()!=null){
+            if (solicitudCredito.getCrUltimoEstadoResolucion() != null) {
                 CREstadoResolucionCredito estadoReso = crEstadoResolucionCreditoInterfaceLocal.findById(solicitudCredito.getCrUltimoEstadoResolucion().getEstadoResolucion());
                 bean.setEstadoResolucion(estadoReso.getAbreviatura());
             }
         } catch (Exception e) {
             e.printStackTrace();
         }
-        
+
         return bean;
     }
 
     /**
-     *  
-     *  
+     * 
+     * 
      * @author
      * @since 27.08.2010 gliceta: Seguimiento de Riesgos: Se modifico la parte de Politica de Credito
      * @since 26.10.2010 gfernandez: Inspeccion Interna: Se agrego un Nuevo campo para capturar un dato.
      * @since 31.07.2015 galmerco: Clean Code.
      * @since 31.05.2016 gmeza: Parche al buscar CRVendedorComercio
      * @param Solicitudlocal
-     * @return 
+     * @return
      * @throws Exception
      */
-    public BeanObtenerSolicitud setearBeanSolicitud(CRSolicitudCredito solicitudCredito, String param){
+    public BeanObtenerSolicitud setearBeanSolicitud(CRSolicitudCredito solicitudCredito, String param) {
         BeanObtenerSolicitud bean = new BeanObtenerSolicitud();
 
         try {
-            CRSolCrePrestamoCuotas crSolCrePrestamoCuotas = 
-                crSolCrePrestamoCuotasInterfaceLocal.findById(solicitudCredito.getNumeroSolicitud());
-            CRTipoCuotaXProducto crTipoCuotaXProducto = 
-                crTipoCuotaXProductoInterfaceLocal.findById(solicitudCredito.getCrProductoByProductoSolicitado().getCodigoProducto().trim());
-            
-            CRSolCrePrestamoLineaCredito crSolCrePrestamoLineaCredito = 
-                crSolCrePrestamoLineaCreditoInterfaceLocal.findById(solicitudCredito.getNumeroSolicitud());
-                
-            
+            CRSolCrePrestamoCuotas crSolCrePrestamoCuotas = crSolCrePrestamoCuotasInterfaceLocal.findById(solicitudCredito.getNumeroSolicitud());
+            CRTipoCuotaXProducto crTipoCuotaXProducto = crTipoCuotaXProductoInterfaceLocal.findById(solicitudCredito.getCrProductoByProductoSolicitado().getCodigoProducto().trim());
+
+            CRSolCrePrestamoLineaCredito crSolCrePrestamoLineaCredito = crSolCrePrestamoLineaCreditoInterfaceLocal.findById(solicitudCredito.getNumeroSolicitud());
+
             bean.setNumeroSolicitud(solicitudCredito.getNumeroSolicitud());
-            
-            if(crSolCrePrestamoCuotas!=null && crSolCrePrestamoCuotas.getImporteCapitalTrabajo()!=null){
+
+            if (crSolCrePrestamoCuotas != null && crSolCrePrestamoCuotas.getImporteCapitalTrabajo() != null) {
                 bean.setMontoCapitalTrabajo(crSolCrePrestamoCuotas.getImporteCapitalTrabajo().toString());
                 bean.setMontoActivoFijo(crSolCrePrestamoCuotas.getImporteActivoFijo().toString());
-                bean.setIndicadorCredito(crSolCrePrestamoCuotas.getIndicadorCredido()); 
+                bean.setIndicadorCredito(crSolCrePrestamoCuotas.getIndicadorCredido());
                 bean.setIndicadorModalidadEmprendedor(crSolCrePrestamoCuotas.getIndicadorModalidadCredido());
                 bean.setIndicadorPrimerDesembolso(crSolCrePrestamoCuotas.getIndicadorPrimerDesem());
                 bean.setIndicadorActivaCredito(crSolCrePrestamoCuotas.getReglaActivacion());
                 bean.setEstadoDesembolsoAF(crSolCrePrestamoCuotas.getEstadoDesembolsoActivoFijo());
                 bean.setEstadoDesembolsoCT(crSolCrePrestamoCuotas.getEstadoDesembolsoCapitalTrabajo());
-                
+
             }
-            
+
             //Insertando el valor de la sbs 
-            if(solicitudCredito.getCrTipoCreditoSBS()!=null && solicitudCredito.getCrTipoCreditoSBS().getCodigoTipoCreditoSBS()!=null){
+            if (solicitudCredito.getCrTipoCreditoSBS() != null && solicitudCredito.getCrTipoCreditoSBS().getCodigoTipoCreditoSBS() != null) {
                 bean.setCodigoTipoCreditoSBS(solicitudCredito.getCrTipoCreditoSBS().getCodigoTipoCreditoSBS());
-                    CRTipoCreditoSBS crTipoCreditoSBS = crTipoCreditoSBSInterfaceLocal.findById(solicitudCredito.getCrTipoCreditoSBS().getCodigoTipoCreditoSBS());              
-                    bean.setDescripcionTipoCreditoSBS(crTipoCreditoSBS.getDescripcion());               
+                CRTipoCreditoSBS crTipoCreditoSBS = crTipoCreditoSBSInterfaceLocal.findById(solicitudCredito.getCrTipoCreditoSBS().getCodigoTipoCreditoSBS());
+                bean.setDescripcionTipoCreditoSBS(crTipoCreditoSBS.getDescripcion());
             }
-            
+
             /**************************** Relacion con la Tabla Producto ****************************************/
             bean.setCodigoProducto(solicitudCredito.getCrProductoByProductoSolicitado().getCodigoProducto().trim());
-            if ((solicitudCredito.getCrProductoByProductoSolicitado()!=null) && (solicitudCredito.getCrProductoByProductoSolicitado().getCodigoProducto()!=null)){
+            if ((solicitudCredito.getCrProductoByProductoSolicitado() != null) && (solicitudCredito.getCrProductoByProductoSolicitado().getCodigoProducto() != null)) {
                 CRProducto objProductoSolicitado = crProductoInterfaceLocal.findById(solicitudCredito.getCrProductoByProductoSolicitado().getCodigoProducto());
                 bean.setProductoNombre(objProductoSolicitado.getDescripcion());
                 bean.setCodigoTipoCreditoSolicitado(objProductoSolicitado.getCrSubTipoCredito().getId().getCodigoTipoCredito());
                 bean.setCodigoSubTipoCreditoSolicitado(objProductoSolicitado.getCrSubTipoCredito().getId().getCodigoSubTipoCredito());
                 // Inicio galmerco 21.05.2013 Indicador de Inspeccion 
-                if(objProductoSolicitado.getIndicadorInspeccion() != null) {
+                if (objProductoSolicitado.getIndicadorInspeccion() != null) {
                     bean.setIndicadorInspeccionProducto(objProductoSolicitado.getIndicadorInspeccion());
                 } else {
                     bean.setIndicadorInspeccionProducto("N");
@@ -1508,25 +1498,25 @@
             }
 
             // Inicio galmerco 21.05.2013 Indicador de Inspeccion
-            if(bean.getIndicadorInspeccionProducto() != null && solicitudCredito.getIndicadorInspeccion() != null) {
+            if (bean.getIndicadorInspeccionProducto() != null && solicitudCredito.getIndicadorInspeccion() != null) {
                 bean.setIndicadorInspeccion(solicitudCredito.getIndicadorInspeccion());
                 //gfernandez 09.06.2013
-            } else if(bean.getIndicadorInspeccionProducto().equals("S") && solicitudCredito.getIndicadorInspeccion()== null){
+            } else if (bean.getIndicadorInspeccionProducto().equals("S") && solicitudCredito.getIndicadorInspeccion() == null) {
                 bean.setIndicadorInspeccion("N");
-            }else {
+            } else {
                 bean.setIndicadorInspeccion(bean.getIndicadorInspeccionProducto());
             }
             // Fin
-            
-            int countLN =0;
-            if(solicitudCredito.getFechaResolucion()==null){
-                countLN=crSolicitudCreditoInterfaceLocal.countByListaNegraActual(solicitudCredito.getNumeroSolicitud());
-            }else{
-                countLN=crSolicitudCreditoInterfaceLocal.countByListaNegra(solicitudCredito.getNumeroSolicitud());
+
+            int countLN = 0;
+            if (solicitudCredito.getFechaResolucion() == null) {
+                countLN = crSolicitudCreditoInterfaceLocal.countByListaNegraActual(solicitudCredito.getNumeroSolicitud());
+            } else {
+                countLN = crSolicitudCreditoInterfaceLocal.countByListaNegra(solicitudCredito.getNumeroSolicitud());
             }
-            bean.setIndEnListaNegra(countLN>0?"S":"N");
-            
-            if ((solicitudCredito.getCrProductoByProductoAprobado()!=null) && (solicitudCredito.getCrProductoByProductoAprobado().getCodigoProducto() != null)){
+            bean.setIndEnListaNegra(countLN > 0 ? "S" : "N");
+
+            if ((solicitudCredito.getCrProductoByProductoAprobado() != null) && (solicitudCredito.getCrProductoByProductoAprobado().getCodigoProducto() != null)) {
                 CRProducto objProductoAprobado = crProductoInterfaceLocal.findById(solicitudCredito.getCrProductoByProductoAprobado().getCodigoProducto());
                 bean.setCodigoProductoAprobado(objProductoAprobado.getCodigoProducto());
                 bean.setDescripcionProductoAprobado(objProductoAprobado.getDescripcion());
@@ -1534,30 +1524,30 @@
                 bean.setCodigoProductoAprobado("");
                 bean.setDescripcionProductoAprobado("");
             }
-        
+
             /***** Relacion con la tabla Moneda ************************/
-            if (solicitudCredito.getCodigoMonedaSolicitado()!=null){
+            if (solicitudCredito.getCodigoMonedaSolicitado() != null) {
                 CBMoneda objMonedaSolicitado = cbMonedaInterfaceLocal.findById(solicitudCredito.getCodigoMonedaSolicitado());
                 bean.setMonedaCodigo(objMonedaSolicitado.getCodigoMoneda());
                 bean.setMonedaDescripcion(objMonedaSolicitado.getAbreviatura());
             }
-            if (solicitudCredito.getCodigoMonedaAprobado() != null){
-                CBMoneda objMonedaAprobado = cbMonedaInterfaceLocal.findById(solicitudCredito.getCodigoMonedaAprobado()); 
+            if (solicitudCredito.getCodigoMonedaAprobado() != null) {
+                CBMoneda objMonedaAprobado = cbMonedaInterfaceLocal.findById(solicitudCredito.getCodigoMonedaAprobado());
                 bean.setCodigoMonedaAprobado(objMonedaAprobado.getCodigoMoneda());
                 bean.setDescripcionMonedaAprobado(objMonedaAprobado.getDescripcion());
             }
 
-            if ((solicitudCredito.getCrSubTipoCreditoByReCRSolicitudCredito06()!=null) && (solicitudCredito.getCrSubTipoCreditoByReCRSolicitudCredito06().getId() != null)){
-                CRSubTipoCredito objSubTipoCreditoSolData = crSubTipoCreditoInterfaceLocal.findById(solicitudCredito.getCrSubTipoCreditoByReCRSolicitudCredito06().getId()); 
-                if ((objSubTipoCreditoSolData.getCrTipoCredito()!=null) && (objSubTipoCreditoSolData.getCrTipoCredito().getCodigoTipoCredito() != null)){
+            if ((solicitudCredito.getCrSubTipoCreditoByReCRSolicitudCredito06() != null) && (solicitudCredito.getCrSubTipoCreditoByReCRSolicitudCredito06().getId() != null)) {
+                CRSubTipoCredito objSubTipoCreditoSolData = crSubTipoCreditoInterfaceLocal.findById(solicitudCredito.getCrSubTipoCreditoByReCRSolicitudCredito06().getId());
+                if ((objSubTipoCreditoSolData.getCrTipoCredito() != null) && (objSubTipoCreditoSolData.getCrTipoCredito().getCodigoTipoCredito() != null)) {
                     CRTipoCredito objTipoCredito = crTipoCreditoInterfaceLocal.findById(objSubTipoCreditoSolData.getCrTipoCredito().getCodigoTipoCredito());
-                    bean.setDescripcionTipoCredito(objTipoCredito.getDescripcion());    
+                    bean.setDescripcionTipoCredito(objTipoCredito.getDescripcion());
                 }
                 bean.setDescripcionSubTipoCredito(objSubTipoCreditoSolData.getDescripcion());
             }
-            if ((solicitudCredito.getCrSubTipoCreditoByReCRSolicitudCredito07()!=null) && (solicitudCredito.getCrSubTipoCreditoByReCRSolicitudCredito07().getId() != null)){
-                CRSubTipoCredito objSubTipoCreditoAprobData = crSubTipoCreditoInterfaceLocal.findById(solicitudCredito.getCrSubTipoCreditoByReCRSolicitudCredito07().getId()); 
-                if ((objSubTipoCreditoAprobData.getCrTipoCredito()!=null) && (objSubTipoCreditoAprobData.getCrTipoCredito().getCodigoTipoCredito() != null)){
+            if ((solicitudCredito.getCrSubTipoCreditoByReCRSolicitudCredito07() != null) && (solicitudCredito.getCrSubTipoCreditoByReCRSolicitudCredito07().getId() != null)) {
+                CRSubTipoCredito objSubTipoCreditoAprobData = crSubTipoCreditoInterfaceLocal.findById(solicitudCredito.getCrSubTipoCreditoByReCRSolicitudCredito07().getId());
+                if ((objSubTipoCreditoAprobData.getCrTipoCredito() != null) && (objSubTipoCreditoAprobData.getCrTipoCredito().getCodigoTipoCredito() != null)) {
                     CRTipoCredito objTipoCredito = crTipoCreditoInterfaceLocal.findById(objSubTipoCreditoAprobData.getCrTipoCredito().getCodigoTipoCredito());
                     bean.setCodigoTipoCreditoAprobado(objTipoCredito.getCodigoTipoCredito());
                     bean.setDescripcionTipoCreditoAprobado(objTipoCredito.getDescripcion());
@@ -1565,11 +1555,12 @@
                 bean.setCodigoSubTipoCreditoAprobado(objSubTipoCreditoAprobData.getCrTipoCredito().getCodigoTipoCredito());
                 bean.setDescripcionSubTipoCreditoAprobado(objSubTipoCreditoAprobData.getDescripcion());
             }
-            
-            List lstEvaluacion=crEvaluacionPersonaInterfaceLocal.findByNumeroSolicitudAndEstado(solicitudCredito.getNumeroSolicitud(),"S");
-            CREvaluacionPersona crEvaluacionPersona=null;
-            if(lstEvaluacion.size()>0){
-                crEvaluacionPersona=(CREvaluacionPersona)lstEvaluacion.get(0);
+
+            List lstEvaluacion = crEvaluacionPersonaInterfaceLocal.findByNumeroSolicitudAndEstado(solicitudCredito.getNumeroSolicitud(),
+                                                                                                  "S");
+            CREvaluacionPersona crEvaluacionPersona = null;
+            if (lstEvaluacion.size() > 0) {
+                crEvaluacionPersona = (CREvaluacionPersona) lstEvaluacion.get(0);
 
                 bean.setCuotaEndeudamiento(crEvaluacionPersona.getCuotaEndeudamientoMaximo());
                 bean.setDescuento(crEvaluacionPersona.getDescuentoCuotaEndeudamiento());
@@ -1578,7 +1569,7 @@
                 bean.setMontoIngreso(crEvaluacionPersona.getIngresoNeto());
                 bean.setRelacionCuotaAhorro(crEvaluacionPersona.getRelacionCuotaAhorroNeto());
                 bean.setIngresoBrutoCalculado(crEvaluacionPersona.getIngresoBrutoCalculado());
-            }else{
+            } else {
                 bean.setCuotaEndeudamiento(new Double(0));
                 bean.setDescuento(new Double(0));
                 bean.setCuotaMaxima(new Double(0));
@@ -1587,16 +1578,18 @@
             }
             bean.setNroExperto(solicitudCredito.getNumeroExpertoTitular());
             bean.setEstadoEvaluacion(solicitudCredito.getEstadoEvaluacionSolCred());
-            
-            if(solicitudCredito.getEstadoEvaluacionSolCred()!=null && !solicitudCredito.getEstadoEvaluacionSolCred().equals("")){
-                List lstcatalogo=cbCatalogoCheckConstraintInterfaceLocal.findByTablaCampoConstraint("CRMSOCR", "C_ESTEVA", solicitudCredito.getEstadoEvaluacionSolCred());
-                if(lstcatalogo.size()>0){
-                    CBCatalogoCheckConstraint cbCatalogoCheckConstraint=(CBCatalogoCheckConstraint)lstcatalogo.get(0);
+
+            if (solicitudCredito.getEstadoEvaluacionSolCred() != null && !solicitudCredito.getEstadoEvaluacionSolCred().equals("")) {
+                List lstcatalogo = cbCatalogoCheckConstraintInterfaceLocal.findByTablaCampoConstraint("CRMSOCR",
+                                                                                                      "C_ESTEVA",
+                                                                                                      solicitudCredito.getEstadoEvaluacionSolCred());
+                if (lstcatalogo.size() > 0) {
+                    CBCatalogoCheckConstraint cbCatalogoCheckConstraint = (CBCatalogoCheckConstraint) lstcatalogo.get(0);
                     bean.setDescEstadoEvaluacion(cbCatalogoCheckConstraint.getDescripcion());
-                }else{
+                } else {
                     bean.setDescEstadoEvaluacion("");
                 }
-            }else{
+            } else {
                 bean.setDescEstadoEvaluacion("");
             }
             bean.setIndEnvioEvaluacionSC(solicitudCredito.getIndEnvioEvaluacionSC());
@@ -1606,16 +1599,15 @@
             bean.setModalidadCredito(solicitudCredito.getTipoModalidadCredito());
             bean.setTotalGastosComisiones(solicitudCredito.getMontoComisionesGastos());
             bean.setMontoTotalFinanciado(solicitudCredito.getMontoSolicitado());
-            
+
             //gfernandez 26.10.2010 Nuevo campo
             bean.setInspeccionAgencia(solicitudCredito.getCrProductoByProductoSolicitado().getInspeccionAgencia());
-            
+
             if (bean.getModalidadCredito().equals("PRC")) {
-                CRProductoPrestamosCuotas crProductoPrestamosCuotas = 
-                    crProductoPrestamosCuotasInterfaceLocal.findById(bean.getCodigoProducto());
+                CRProductoPrestamosCuotas crProductoPrestamosCuotas = crProductoPrestamosCuotasInterfaceLocal.findById(bean.getCodigoProducto());
                 bean.setIndicadorModificaFrecPago(crProductoPrestamosCuotas.getModificarFrecuenciaPagoSC());
-                bean.setIndicadorPermiteGracia(crProductoPrestamosCuotas.getIndicadorGracia());             
-                
+                bean.setIndicadorPermiteGracia(crProductoPrestamosCuotas.getIndicadorGracia());
+
                 bean.setCodigoTipoCuota(crSolCrePrestamoCuotas.getCrTipoCuotaByTipoCuotaSolicitado().getCodigoTipoCuota());
                 bean.setCodigoTipoCuotaAprobado(crSolCrePrestamoCuotas.getCrTipoCuotaByTipoCuotaAprobado().getCodigoTipoCuota());
                 bean.setCodigoFrecuenciaPago(crSolCrePrestamoCuotas.getCrFrecuenciaPagoByFrecuenciaPagoSolicitado().getCodigoFrecuencia());
@@ -1647,74 +1639,73 @@
                 bean.setTasaDesgravamen(crSolCrePrestamoCuotas.getTasaAnualSeguroDesgravamenSolicitado());
                 bean.setTasaSegBien(crSolCrePrestamoCuotas.getTasaAnualSeguroBienSolicitado());
                 bean.setVerCalculadoraRecaudo(crProductoPrestamosCuotas.getVerCalculoEnCalculadoraCuota());
-                
-                BeanCRProductoPrestamosCuotas beanCRProductoPrestamosCuotas=crProductosCreditosFacadeInterfaceLocal.obtieneProductoPrestamoCuota(solicitudCredito.getCrProductoByProductoSolicitado().getCodigoProducto().trim());
-                if(beanCRProductoPrestamosCuotas!=null){
+
+                BeanCRProductoPrestamosCuotas beanCRProductoPrestamosCuotas = crProductosCreditosFacadeInterfaceLocal.obtieneProductoPrestamoCuota(solicitudCredito.getCrProductoByProductoSolicitado().getCodigoProducto().trim());
+                if (beanCRProductoPrestamosCuotas != null) {
                     bean.setTasaDesgravamenIndividualAnual(beanCRProductoPrestamosCuotas.getTasaDesgravamenIndividualAnual());
                     bean.setTasaDesgravamenMancomunadaAnual(beanCRProductoPrestamosCuotas.getTasadesgravamenMancomunadoAnual());
-                    
-                }else{
+
+                } else {
                     bean.setTasaDesgravamenIndividualAnual(new Double(0));
                     bean.setTasaDesgravamenMancomunadaAnual(new Double(0));
                 }
-                
+
                 //Obtenemos rango de tasas segun tarifario vigente
-                BeanCRObtenerTasaInteres beanCRObtenerTasaInteres = new BeanCRObtenerTasaInteres(); 
-                List lstTasaInteres = crBNGeneralesFacadeInterfaceLocal.obtenerTasaInteres(
-                        solicitudCredito.getCodigoEmpresa(),
-                        solicitudCredito.getCodigoAgencia(),
-                        solicitudCredito.getCrProductoByProductoSolicitado().getCodigoProducto(),
-                        solicitudCredito.getMontoAprobado(),
-                        crSolCrePrestamoCuotas.getPlazoDiasSolicitado().intValue(),
-                        solicitudCredito.getFechaSolicitud(),
-                        solicitudCredito.getUsuarioInsercion());
+                BeanCRObtenerTasaInteres beanCRObtenerTasaInteres = new BeanCRObtenerTasaInteres();
+                List lstTasaInteres = crBNGeneralesFacadeInterfaceLocal.obtenerTasaInteres(solicitudCredito.getCodigoEmpresa(),
+                                                                                           solicitudCredito.getCodigoAgencia(),
+                                                                                           solicitudCredito.getCrProductoByProductoSolicitado().getCodigoProducto(),
+                                                                                           solicitudCredito.getMontoAprobado(),
+                                                                                           crSolCrePrestamoCuotas.getPlazoDiasSolicitado().intValue(),
+                                                                                           solicitudCredito.getFechaSolicitud(),
+                                                                                           solicitudCredito.getUsuarioInsercion());
 
                 beanCRObtenerTasaInteres = (BeanCRObtenerTasaInteres) lstTasaInteres.get(0);
                 if (!beanCRObtenerTasaInteres.getCodigoError().equals("000")) {
                     bean.setTasaErrorTarif(beanCRObtenerTasaInteres.getCodigoError());
-                }else{
+                } else {
                     bean.setTasaCompensatoriaFinalTarif(beanCRObtenerTasaInteres.getTasaCuota());
                     bean.setTasaMoratFinalTarif(beanCRObtenerTasaInteres.getTasaMoratoria());
                     bean.setTasaCompensatoriaInicialTarif(beanCRObtenerTasaInteres.getTasaCuotaInicial());
                     bean.setTasaMoratInicialTarif(beanCRObtenerTasaInteres.getTasaMoratoriaInicial());
                 }
-                
-                bean.setCodigoZonaItinerante(solicitudCredito.getCodigoZonaItinerante()!=null?solicitudCredito.getCodigoZonaItinerante().toString():null);
-                if(solicitudCredito.getCodigoZonaItinerante()!=null){
-                    CBZonasItinerantes cbZonasItinerantes=cbZonasItinerantesInterfaceLocal.findById(solicitudCredito.getCodigoZonaItinerante());
-                    if(cbZonasItinerantes!=null)
-                    bean.setDescripcionZonaItinerante(cbZonasItinerantes.getNombre());
+
+                bean.setCodigoZonaItinerante(solicitudCredito.getCodigoZonaItinerante() != null ? solicitudCredito.getCodigoZonaItinerante().toString() : null);
+                if (solicitudCredito.getCodigoZonaItinerante() != null) {
+                    CBZonasItinerantes cbZonasItinerantes = cbZonasItinerantesInterfaceLocal.findById(solicitudCredito.getCodigoZonaItinerante());
+                    if (cbZonasItinerantes != null)
+                        bean.setDescripcionZonaItinerante(cbZonasItinerantes.getNombre());
                 }
                 //**************************************************
-                
+
                 // Inicio [Req. 14-115 Fase IV] galmerco 24.07.2015
                 bean.setValorBienAprobado(crSolCrePrestamoCuotas.getValorBienAprobado());
-            bean.setCuotaInicialAprobado(crSolCrePrestamoCuotas.getCuotaInicialAprobado());
-            bean.setNumeroCuotaResolucion(crSolCrePrestamoCuotas.getNumeroCuotasAprobado());
-            bean.setNumeroCuotaGraciaResolucion(crSolCrePrestamoCuotas.getNumeroCuotasGraciaAprobado());
-            bean.setPlazoDiasAprobado(crSolCrePrestamoCuotas.getPlazoDiasAprobado());
-            bean.setTasaInteresEfectivaAnualAprobado(crSolCrePrestamoCuotas.getTasaInteresEfectivaAnualAprobado());
-            bean.setTasasInteresMoratorioAnualAprobado(crSolCrePrestamoCuotas.getTasasInteresMoratorioAnualAprobado());
-            bean.setValorCuotaAprobado(crSolCrePrestamoCuotas.getValorCuotaAprobado());
+                bean.setCuotaInicialAprobado(crSolCrePrestamoCuotas.getCuotaInicialAprobado());
+                bean.setNumeroCuotaResolucion(crSolCrePrestamoCuotas.getNumeroCuotasAprobado());
+                bean.setNumeroCuotaGraciaResolucion(crSolCrePrestamoCuotas.getNumeroCuotasGraciaAprobado());
+                bean.setPlazoDiasAprobado(crSolCrePrestamoCuotas.getPlazoDiasAprobado());
+                bean.setTasaInteresEfectivaAnualAprobado(crSolCrePrestamoCuotas.getTasaInteresEfectivaAnualAprobado());
+                bean.setTasasInteresMoratorioAnualAprobado(crSolCrePrestamoCuotas.getTasasInteresMoratorioAnualAprobado());
+                bean.setValorCuotaAprobado(crSolCrePrestamoCuotas.getValorCuotaAprobado());
                 // Fin [Req. 14-115 Fase IV] galmerco
-            
-            }else if(bean.getModalidadCredito().equals("PRR")){
+
+            } else if (bean.getModalidadCredito().equals("PRR")) {
                 bean.setIdDiaPagoAprobado(crSolCrePrestamoLineaCredito.getCrDiasPagoPrestamosByIdDiaPagoAprobado().getIdDiaPago());
                 bean.setIdDiaPagoSolicitado(crSolCrePrestamoLineaCredito.getCrDiasPagoPrestamosByIdDiaPagoSolicitado().getIdDiaPago());
                 bean.setFechaRevalidacionSolicitado(crSolCrePrestamoLineaCredito.getFechaRevalidacionSolicitado());
                 bean.setFechaRevalidacionAprobado(crSolCrePrestamoLineaCredito.getFechaRevalidacionAprobado());
                 bean.setIndColocacion(crSolCrePrestamoLineaCredito.getIndColocacionTxt());
-                if (crSolCrePrestamoLineaCredito.getCrTipoTarjetaCredito()!=null) {
+                if (crSolCrePrestamoLineaCredito.getCrTipoTarjetaCredito() != null) {
                     bean.setCodigoTipoTarjeta(crSolCrePrestamoLineaCredito.getCrTipoTarjetaCredito().getTipoTarjetaCredito());
                     bean.setNroTarjeta(crSolCrePrestamoLineaCredito.getNumeroTarjetaCredito());
                     bean.setCodigoEntFin(crSolCrePrestamoLineaCredito.getCodigoEntidadFinancieraTarjeta());
-                    BNEntidadFinanciera bnEntidadFinanciera=bnEntidadFinancieraInterfaceLocal.findById(crSolCrePrestamoLineaCredito.getCodigoEntidadFinancieraTarjeta());
-                    if(bnEntidadFinanciera!=null){
+                    BNEntidadFinanciera bnEntidadFinanciera = bnEntidadFinancieraInterfaceLocal.findById(crSolCrePrestamoLineaCredito.getCodigoEntidadFinancieraTarjeta());
+                    if (bnEntidadFinanciera != null) {
                         bean.setDescEntFin(bnEntidadFinanciera.getDescripcion());
-                    }else{
+                    } else {
                         bean.setDescEntFin("");
                     }
-                }else {
+                } else {
                     bean.setCodigoTipoTarjeta("");
                     bean.setNroTarjeta("");
                     bean.setCodigoEntFin("");
@@ -1730,110 +1721,107 @@
                 bean.setTasaInteresEfectivaPeriodoSolicitado(crSolCrePrestamoLineaCredito.getTasaInteresEfectivaPeriodoSolicitado());
                 bean.setTasasInteresMoratorioAnualAprobado(crSolCrePrestamoLineaCredito.getTasasInteresMoratorioAnualAprobado());
                 bean.setTasasInteresMoratorioAnualSolicitado(crSolCrePrestamoLineaCredito.getTasasInteresMoratorioAnualSolicitado());
-                
-                if (crSolCrePrestamoLineaCredito.getCrFactorEndeudamientoEntidades()!=null) {
+
+                if (crSolCrePrestamoLineaCredito.getCrFactorEndeudamientoEntidades() != null) {
                     bean.setIdentificadorFactorendeudamiento(crSolCrePrestamoLineaCredito.getCrFactorEndeudamientoEntidades().getIdFactorEndeudamientoEntidades());
                     bean.setPrecioLista(crSolCrePrestamoLineaCredito.getPrecioLista());
                     bean.setFactorObtenido(crSolCrePrestamoLineaCredito.getFactorObtenido());
-                }else{
+                } else {
                     bean.setIdentificadorFactorendeudamiento("");
                     bean.setPrecioLista(new Double(0.0));
                     bean.setFactorObtenido(new Double(0.0));
-                }               
+                }
             }
-            if ((solicitudCredito.getClActividadEconomica()!=null) && (solicitudCredito.getClActividadEconomica().getCodigoActividadEconomica() != null)){
+            if ((solicitudCredito.getClActividadEconomica() != null) && (solicitudCredito.getClActividadEconomica().getCodigoActividadEconomica() != null)) {
                 CLActividadEconomica objActividadEconomica = clActividadEconomicaInterfaceLocal.findById(solicitudCredito.getClActividadEconomica().getCodigoActividadEconomica());
                 bean.setDescripcionCIIU(objActividadEconomica.getDescripcion());
                 bean.setCodigoCIIU(solicitudCredito.getClActividadEconomica().getCodigoActividadEconomica());
-            }else{
+            } else {
                 bean.setDescripcionCIIU("");
                 bean.setCodigoCIIU("");
             }
-            
-            if ((solicitudCredito.getCrPromocionesCredito()!=null) && (solicitudCredito.getCrPromocionesCredito().getIdPromocionCredito() != null)){
+
+            if ((solicitudCredito.getCrPromocionesCredito() != null) && (solicitudCredito.getCrPromocionesCredito().getIdPromocionCredito() != null)) {
                 CRPromocionesCredito crPromocionesCredito = crPromocionesCreditoInterfaceLocal.findById(solicitudCredito.getCrPromocionesCredito().getIdPromocionCredito());
                 bean.setDescPromocion(crPromocionesCredito.getDescripcion());
                 bean.setCodigoPromocion(crPromocionesCredito.getIdPromocionCredito());
-            }else{
+            } else {
                 bean.setDescPromocion("");
                 bean.setCodigoPromocion("");
             }
 
-            if ((solicitudCredito.getClSectorEconomico()!=null) && (solicitudCredito.getClSectorEconomico().getCodigoSector() != null)){
+            if ((solicitudCredito.getClSectorEconomico() != null) && (solicitudCredito.getClSectorEconomico().getCodigoSector() != null)) {
                 CLSectorEconomico objSectorEconomico = clSectorEconomicoInterfaceLocal.findById(solicitudCredito.getClSectorEconomico().getCodigoSector());
                 bean.setDescripcionSectorEconomico(objSectorEconomico.getDescripcion());
                 bean.setCodigoSectorEconomico(solicitudCredito.getClSectorEconomico().getCodigoSector());
-            }
-            else{
+            } else {
                 bean.setDescripcionSectorEconomico("");
                 bean.setCodigoSectorEconomico("");
             }
 
-            if ((solicitudCredito.getClGiroNegocio()!=null) && (solicitudCredito.getClGiroNegocio().getCodigoGiroNegocio()!= null)){
+            if ((solicitudCredito.getClGiroNegocio() != null) && (solicitudCredito.getClGiroNegocio().getCodigoGiroNegocio() != null)) {
                 CLGiroNegocio objGiroNegocio = clGiroNegocioInterfaceLocal.findById(solicitudCredito.getClGiroNegocio().getCodigoGiroNegocio());
                 bean.setDescripcionGiroNegocio(objGiroNegocio.getDescripcion());
                 bean.setCodigoGiroNegocio(solicitudCredito.getClGiroNegocio().getCodigoGiroNegocio());
-            }
-            else{
+            } else {
                 bean.setDescripcionGiroNegocio("");
                 bean.setCodigoGiroNegocio("");
             }
 
-            if (solicitudCredito.getPromotor()!=null){
+            if (solicitudCredito.getPromotor() != null) {
                 CBUsuario objUsuarioPromotor = cbUsuarioInterfaceLocal.findById(solicitudCredito.getPromotor());
                 bean.setCodigoPromotor(objUsuarioPromotor.getCodigoUsuario());
                 bean.setNombrePromotor(objUsuarioPromotor.getNombreCompleto());
             }
-            
-            if (solicitudCredito.getAnalistaResponsable()!=null){
+
+            if (solicitudCredito.getAnalistaResponsable() != null) {
                 CBUsuario objUsuario = cbUsuarioInterfaceLocal.findById(solicitudCredito.getAnalistaResponsable());
                 bean.setNombreAnalistaResponsable(objUsuario.getNombreCompleto());
                 bean.setCodigoAnalistaResponsable(objUsuario.getCodigoUsuario());
-            }
-            else{
+            } else {
                 bean.setNombreAnalistaResponsable("");
-                bean.setCodigoAnalistaResponsable("");          
+                bean.setCodigoAnalistaResponsable("");
             }
-            
-            if (solicitudCredito.getEjecutivo()!=null){
-                CBUsuario objUsuarioEjecutivoData = cbUsuarioInterfaceLocal.findById(solicitudCredito.getEjecutivo()); 
+
+            if (solicitudCredito.getEjecutivo() != null) {
+                CBUsuario objUsuarioEjecutivoData = cbUsuarioInterfaceLocal.findById(solicitudCredito.getEjecutivo());
                 bean.setNombreEjecutivo(objUsuarioEjecutivoData.getNombreCompleto());
                 bean.setCodigoEjecutivo(objUsuarioEjecutivoData.getCodigoUsuario());
-            }
-            else{
+            } else {
                 bean.setNombreEjecutivo("");
-                bean.setCodigoEjecutivo("");            
+                bean.setCodigoEjecutivo("");
             }
 
             bean.setNumeroPagare(solicitudCredito.getNumeroPagare());
             //gliceta 27.01.2012: Req. 11-206 - Solicitudes Gestionadas
-            bean.setObservaciones(solicitudCredito.getObservacionSolicitud()!=null?solicitudCredito.getObservacionSolicitud().toUpperCase().trim():"");
+            bean.setObservaciones(solicitudCredito.getObservacionSolicitud() != null ? solicitudCredito.getObservacionSolicitud().toUpperCase().trim() : "");
 
-            if ((solicitudCredito.getCrEstadoSolicitud()!=null) && (solicitudCredito.getCrEstadoSolicitud().getCodigoEstado()!=null)){
-                CREstadoSolicitud objEstadoSolicitudData = crEstadoSolicitudInterfaceLocal.findById(solicitudCredito.getCrEstadoSolicitud().getCodigoEstado()); 
+            if ((solicitudCredito.getCrEstadoSolicitud() != null) && (solicitudCredito.getCrEstadoSolicitud().getCodigoEstado() != null)) {
+                CREstadoSolicitud objEstadoSolicitudData = crEstadoSolicitudInterfaceLocal.findById(solicitudCredito.getCrEstadoSolicitud().getCodigoEstado());
                 bean.setDescripcionEstado(objEstadoSolicitudData.getDescripcion());
             }
 
             bean.setFechaSolicitud(solicitudCredito.getFechaSolicitud());
 
             //Descripciï¿½n Condiciï¿½n Solicitud
-            CBCatalogoCheckConstraintId pkCatalogoCheckConstraint =
-                new CBCatalogoCheckConstraintId("CRMSOCR", "C_CONSOL", solicitudCredito.getCondicionSolicitud());
-            try{
+            CBCatalogoCheckConstraintId pkCatalogoCheckConstraint = new CBCatalogoCheckConstraintId("CRMSOCR", "C_CONSOL", solicitudCredito.getCondicionSolicitud());
+            try {
                 CBCatalogoCheckConstraint dCatalogoCheckConstraint = cbCatalogoCheckConstraintInterfaceLocal.findById(pkCatalogoCheckConstraint);
                 bean.setDescripcionCondicionSolicitud(dCatalogoCheckConstraint.getDescripcion());
                 bean.setCondicionSolicitud(solicitudCredito.getCondicionSolicitud());
-            }catch(Exception e){
+            } catch (Exception e) {
                 e.printStackTrace();
             }
-            try{
-                CBCatalogoCheckConstraint dCatalogoCheckConstraint =(CBCatalogoCheckConstraint)cbCatalogoCheckConstraintInterfaceLocal.findByTablaCampoConstraint("CRTPROD","C_MODCRE",solicitudCredito.getTipoModalidadCredito()).get(0);
+            try {
+                CBCatalogoCheckConstraint dCatalogoCheckConstraint = (CBCatalogoCheckConstraint) cbCatalogoCheckConstraintInterfaceLocal.findByTablaCampoConstraint("CRTPROD",
+                                                                                                                                                                    "C_MODCRE",
+                                                                                                                                                                    solicitudCredito.getTipoModalidadCredito()).get(0);
                 bean.setFormaCredito(dCatalogoCheckConstraint.getAbreviatura());
-            }catch(Exception e){
+            } catch (Exception e) {
                 bean.setFormaCredito("");
                 e.printStackTrace();
             }
-            if ((solicitudCredito.getCrEstadoSolicitud()!=null) && (solicitudCredito.getCrEstadoSolicitud().getCodigoEstado() != null)){
+            if ((solicitudCredito.getCrEstadoSolicitud() != null) && (solicitudCredito.getCrEstadoSolicitud().getCodigoEstado() != null)) {
                 CREstadoSolicitud objEstadoSolicitud = crEstadoSolicitudInterfaceLocal.findById(solicitudCredito.getCrEstadoSolicitud().getCodigoEstado());
                 bean.setEstadoSolicitud(objEstadoSolicitud.getDescripcion());
                 bean.setCodigoEstadoSolicitud(objEstadoSolicitud.getCodigoEstado());
@@ -1842,15 +1830,14 @@
                 bean.setCodigoEstadoSolicitud("");
             }
 
-
-            if ((solicitudCredito.getClPersonasByCodigoPersona()!=null) && (solicitudCredito.getClPersonasByCodigoPersona().getCodigoPersona() != null)){
+            if ((solicitudCredito.getClPersonasByCodigoPersona() != null) && (solicitudCredito.getClPersonasByCodigoPersona().getCodigoPersona() != null)) {
                 CLPersonas objPersona = clPersonasInterfaceLocal.findById(solicitudCredito.getClPersonasByCodigoPersona().getCodigoPersona());
                 bean.setNombreRazonSocial(objPersona.getNombreoRazonSocial());
                 bean.setCodigoPersona(objPersona.getCodigoPersona());
             }
-            
+
             CRSolCredInformacionComercial crSolCredInformacionComercial = crSolCredInformacionComercialInterfaceLocal.findById(solicitudCredito.getNumeroSolicitud());
-            if (crSolCredInformacionComercial!=null) {
+            if (crSolCredInformacionComercial != null) {
                 //Inicio [CC16-081] gmeza 05.12.2016
                 if (!isEmpty(crSolCredInformacionComercial.getCrCanalVenta())) {
                     bean.setCodigocanalVentas(crSolCredInformacionComercial.getCrCanalVenta().getIdCanalVenta());
@@ -1864,9 +1851,9 @@
                 bean.setMontoInicial(crSolCredInformacionComercial.getImporteInicial());
             }
             CRSolCredVehicular crSolCredVehicular = crSolCredVehicularInterfaceLocal.findById(solicitudCredito.getNumeroSolicitud());
-            if (crSolCredVehicular!=null) {
+            if (crSolCredVehicular != null) {
                 bean.setIdConcesionario(crSolCredVehicular.getClPersonas().getCodigoPersona());
-                if(crSolCredVehicular.getCrTipoClienteCredito()!=null){
+                if (crSolCredVehicular.getCrTipoClienteCredito() != null) {
                     bean.setIdTipoClienteCredito(crSolCredVehicular.getCrTipoClienteCredito().getIdTipoClienteCredito());
                 }
                 bean.setIdClase(crSolCredVehicular.getCrClaseVehiculo().getIdClaseVehiculo());
@@ -1875,30 +1862,26 @@
                 bean.setModelo(crSolCredVehicular.getModeloVehiculo());
                 bean.setIdColor(crSolCredVehicular.getIdColor());
                 CBColor cbColor = null;
-                if (crSolCredVehicular.getIdColor()!=null) {
+                if (crSolCredVehicular.getIdColor() != null) {
                     cbColor = cbColorInterfaceLocal.findById(crSolCredVehicular.getIdColor());
                 }
-                bean.setDescColor(cbColor==null?"":cbColor.getDescripcion());                               
-                bean.setNumeroSerie(crSolCredVehicular.getNumeroSerieVehiculo()==null?"":crSolCredVehicular.getNumeroSerieVehiculo());
-                bean.setNumeroMotor(crSolCredVehicular.getNumeroMotorVehiculo()==null?"":crSolCredVehicular.getNumeroMotorVehiculo());
-                bean.setDescConcesionario(crSolCredVehicular.getClPersonas().getNombreoRazonSocial());              
-                bean.setAnioFabricacion(crSolCredVehicular.getAnioFabricacion()==null?null:crSolCredVehicular.getAnioFabricacion().intValue());
-                bean.setNumeroChasis(crSolCredVehicular.getNumeroChasisVehiculo()==null?"":crSolCredVehicular.getNumeroChasisVehiculo());
+                bean.setDescColor(cbColor == null ? "" : cbColor.getDescripcion());
+                bean.setNumeroSerie(crSolCredVehicular.getNumeroSerieVehiculo() == null ? "" : crSolCredVehicular.getNumeroSerieVehiculo());
+                bean.setNumeroMotor(crSolCredVehicular.getNumeroMotorVehiculo() == null ? "" : crSolCredVehicular.getNumeroMotorVehiculo());
+                bean.setDescConcesionario(crSolCredVehicular.getClPersonas().getNombreoRazonSocial());
+                bean.setAnioFabricacion(crSolCredVehicular.getAnioFabricacion() == null ? null : crSolCredVehicular.getAnioFabricacion().intValue());
+                bean.setNumeroChasis(crSolCredVehicular.getNumeroChasisVehiculo() == null ? "" : crSolCredVehicular.getNumeroChasisVehiculo());
                 bean.setNumeroPlaca(crSolCredVehicular.getNumeroPlaca());
                 bean.setKmRecorridosDia(crSolCredVehicular.getKlmRecorridosXDia());
                 bean.setPrcRecaudo(crSolCredVehicular.getPorcentajeRecaudo());
                 bean.setCodigoTaller(crSolCredVehicular.getIdConcesionarioTaller());
-                bean.setDescTaller(
-                        crSolCredVehicular.getIdConcesionarioTaller()==null?
-                                "":
-                                    entityManager.createNativeQuery("select c_descri from cldtalv where c_idtalv=:idCons")
-                                    .setParameter("idCons", crSolCredVehicular.getIdConcesionarioTaller()).getSingleResult().toString()
-                        );
-                
+                bean.setDescTaller(crSolCredVehicular.getIdConcesionarioTaller() == null ? "" : entityManager.createNativeQuery("select c_descri from cldtalv where c_idtalv=:idCons").setParameter("idCons",
+                                                                                                                                                                                                    crSolCredVehicular.getIdConcesionarioTaller()).getSingleResult().toString());
+
             }
-            
+
             CRSolCreDescLetrasFactoring crSolCreDescLetrasFactoring = crSolCreDescLetrasFactoringInterfaceLocal.findById(solicitudCredito.getNumeroSolicitud());
-            if(crSolCreDescLetrasFactoring!=null){
+            if (crSolCreDescLetrasFactoring != null) {
                 bean.setNumeroDocumentos(crSolCreDescLetrasFactoring.getNumeroDocumentos());
                 bean.setTasaInteresEfectivaAnualSolicitado(crSolCreDescLetrasFactoring.getTasaEfectivaAnualSolicitada());
                 bean.setTasasInteresMoratorioAnualSolicitado(crSolCreDescLetrasFactoring.getTasaEfectivaMoratoriaSolicitada());
@@ -1908,166 +1891,148 @@
                 bean.setNombreRazonSocial(solicitudCredito.getClPersonasByCodigoPersona().getNombreoRazonSocial());
                 bean.setNumeroDocumento(solicitudCredito.getClPersonasByCodigoPersona().getNumeroDocumentoIdentidad());
             }
-            
-         // Inicio [Ticket #9219] lnarvaez 31.08.2015 Optimización código
-         if (!_isEmpty(solicitudCredito.getCodigoDestinoCredito())) {
-            
-            // [+]Req.14-106 dfujimoto 22.09.2014
-            CRDestinoCredito crDestinoCredito = crDestinoCreditoInterfaceLocal.findById(solicitudCredito.getCodigoDestinoCredito());
-            if (crDestinoCredito != null) {
-               bean.setCodigoDestinoCredito(crDestinoCredito.getCodigoDestinoCredito());
-               bean.setDescripcionDestinoCredito(crDestinoCredito.getDescripcionDestinoCredito());
+
+            // Inicio [Ticket #9219] lnarvaez 31.08.2015 Optimización código
+            if (!_isEmpty(solicitudCredito.getCodigoDestinoCredito())) {
+
+                // [+]Req.14-106 dfujimoto 22.09.2014
+                CRDestinoCredito crDestinoCredito = crDestinoCreditoInterfaceLocal.findById(solicitudCredito.getCodigoDestinoCredito());
+                if (crDestinoCredito != null) {
+                    bean.setCodigoDestinoCredito(crDestinoCredito.getCodigoDestinoCredito());
+                    bean.setDescripcionDestinoCredito(crDestinoCredito.getDescripcionDestinoCredito());
+                }
+                // [-]Req.14-106 dfujimoto 22.09.2014
+
             }
-            // [-]Req.14-106 dfujimoto 22.09.2014
-            
-         }
-         // Fin [Ticket #9219] lnarvaez 31.08.2015
-            
+            // Fin [Ticket #9219] lnarvaez 31.08.2015
 
-         // Inicio [Req.14-115 Fase IV] galmerco 11.06.2015
-         CRSolCredInformacionHipotecario crSolCredInformacionHipotecario = crSolCredInformacionHipotecarioInterfaceLocal.findById(solicitudCredito.getNumeroSolicitud());
+            // Inicio [Req.14-115 Fase IV] galmerco 11.06.2015
+            CRSolCredInformacionHipotecario crSolCredInformacionHipotecario = crSolCredInformacionHipotecarioInterfaceLocal.findById(solicitudCredito.getNumeroSolicitud());
 
-         if (!_isEmpty(crSolCredInformacionHipotecario)) {
-            bean.setImpBonoDamnificado(crSolCredInformacionHipotecario.getImpBonoDamnificado());
-            bean.setImpBonoMiVivienda(crSolCredInformacionHipotecario.getImpBonoMiVivienda());
+            if (!_isEmpty(crSolCredInformacionHipotecario)) {
+                bean.setImpBonoDamnificado(crSolCredInformacionHipotecario.getImpBonoDamnificado());
+                bean.setImpBonoMiVivienda(crSolCredInformacionHipotecario.getImpBonoMiVivienda());
 
-            List<CRSolicitudMedioEnvioEstadoCuenta> listCRSolicitudMedioEnvioEC = crSolicitudMedioEnvioEstadoCuentaInterfaceLocal.findMedioEnvioByNumeroSolicitud(solicitudCredito.getNumeroSolicitud(),
-                                                                                                                                                                  Constante.INDICADOR_ESTADO_ACTIVO);
+                List<CRSolicitudMedioEnvioEstadoCuenta> listCRSolicitudMedioEnvioEC = crSolicitudMedioEnvioEstadoCuentaInterfaceLocal.findMedioEnvioByNumeroSolicitud(solicitudCredito.getNumeroSolicitud(),
+                                                                                                                                                                      Constante.INDICADOR_ESTADO_ACTIVO);
 
-            if (!_isEmpty(listCRSolicitudMedioEnvioEC)) {
-               
-               if(_equiv(Constante.MODO_DIRECCION_FISICA, listCRSolicitudMedioEnvioEC.get(0).getMedioEnvioEECC())){
-                  bean.setIndComEECC("1");
-               }else{
-                  bean.setIndComEECC("0");
-               }
+                if (!_isEmpty(listCRSolicitudMedioEnvioEC)) {
+
+                    if (_equiv(Constante.MODO_DIRECCION_FISICA, listCRSolicitudMedioEnvioEC.get(0).getMedioEnvioEECC())) {
+                        bean.setIndComEECC("1");
+                    } else {
+                        bean.setIndComEECC("0");
+                    }
+                }
             }
-         }
-         // Fin [Req.14-115 Fase IV] galmerco
-         
-         // [Ticket #9219] lnarvaez 31.08.2015
-         bean.setTipoSolicitud(solicitudCredito.getTipoSolicitud());
+            // Fin [Req.14-115 Fase IV] galmerco
 
-      } catch (Exception e) {
-         e.printStackTrace();
-      }
+            // [Ticket #9219] lnarvaez 31.08.2015
+            bean.setTipoSolicitud(solicitudCredito.getTipoSolicitud());
+
+        } catch (Exception e) {
+            e.printStackTrace();
+        }
         return bean;
     }
-    
-    
-    public List<BeanCRSolCreDeducibleDesembolso> getLstDeducibleDesembolso(String numeroSolicitud, String estadoRegistro){
-        
-        ArrayList lstDeduciblesDesembolso = (ArrayList<CRSolCreDeducibleDesembolso>)crSolCreDeducibleDesembolsoInterfaceLocal.findByNumeroSolicitudEstado(numeroSolicitud, estadoRegistro);
+
+    public List<BeanCRSolCreDeducibleDesembolso> getLstDeducibleDesembolso(String numeroSolicitud, String estadoRegistro) {
+
+        ArrayList lstDeduciblesDesembolso = (ArrayList<CRSolCreDeducibleDesembolso>) crSolCreDeducibleDesembolsoInterfaceLocal.findByNumeroSolicitudEstado(numeroSolicitud,
+                                                                                                                                                           estadoRegistro);
         ArrayList<BeanCRSolCreDeducibleDesembolso> lstRet = new ArrayList<BeanCRSolCreDeducibleDesembolso>(0);
         try {
             for (Iterator iter = lstDeduciblesDesembolso.iterator(); iter.hasNext();) {
                 CRSolCreDeducibleDesembolso element = (CRSolCreDeducibleDesembolso) iter.next();
                 BeanCRSolCreDeducibleDesembolso beanCRSolCreDeducibleDesembolso = new BeanCRSolCreDeducibleDesembolso();
-                beanCRSolCreDeducibleDesembolso.setDescConceptoOperacion(
-                        (cbSubConceptoOperacionInterfaceLocal.findById(new CBSubConceptoOperacionId(
-                                element.getCodigoOperacionDeducible(),
-                                element.getCodigoSubConceptoOperacionDeducible()
-                                ))).getDescripcion()
-                                
+                beanCRSolCreDeducibleDesembolso.setDescConceptoOperacion((cbSubConceptoOperacionInterfaceLocal.findById(new CBSubConceptoOperacionId(element.getCodigoOperacionDeducible(), element.getCodigoSubConceptoOperacionDeducible()))).getDescripcion()
+
                 );
-                
-                if (element.getTipoImporteAplicar()!=null) {
-                    beanCRSolCreDeducibleDesembolso.setTipoImporteAplicar(
-                            ((CBCatalogoCheckConstraint)(cbCatalogoCheckConstraintInterfaceLocal.findByTablaCampoConstraint(
-                                    "CRTPROB", "C_TIMPAP", element.getTipoImporteAplicar())).get(0)).getDescripcion()
-                             );
-                }else{
+
+                if (element.getTipoImporteAplicar() != null) {
+                    beanCRSolCreDeducibleDesembolso.setTipoImporteAplicar(((CBCatalogoCheckConstraint) (cbCatalogoCheckConstraintInterfaceLocal.findByTablaCampoConstraint("CRTPROB",
+                                                                                                                                                                           "C_TIMPAP",
+                                                                                                                                                                           element.getTipoImporteAplicar())).get(0)).getDescripcion());
+                } else {
                     beanCRSolCreDeducibleDesembolso.setTipoImporteAplicar("");
                 }
 
                 beanCRSolCreDeducibleDesembolso.setMontoAplicarCredito(element.getMontoAplicarCredito());
                 beanCRSolCreDeducibleDesembolso.setPorcentajeAplicarCredito(element.getPorcentajeAplicarCredito());
-                if (element.getAplicarPorcentajeCreditoA()!=null) {
-                    beanCRSolCreDeducibleDesembolso.setAplicarPorcentajeCreditoA(
-                            ((CBCatalogoCheckConstraint)cbCatalogoCheckConstraintInterfaceLocal.findByTablaCampoConstraint(
-                                    "CRTPROB", "C_APLPRC", element.getAplicarPorcentajeCreditoA()).get(0)).getDescripcion() );
+                if (element.getAplicarPorcentajeCreditoA() != null) {
+                    beanCRSolCreDeducibleDesembolso.setAplicarPorcentajeCreditoA(((CBCatalogoCheckConstraint) cbCatalogoCheckConstraintInterfaceLocal.findByTablaCampoConstraint("CRTPROB",
+                                                                                                                                                                                 "C_APLPRC",
+                                                                                                                                                                                 element.getAplicarPorcentajeCreditoA()).get(0)).getDescripcion());
                 } else {
                     beanCRSolCreDeducibleDesembolso.setAplicarPorcentajeCreditoA("");
                 }
-                
+
                 beanCRSolCreDeducibleDesembolso.setImporteDeducible(element.getImporteDeducible());
                 lstRet.add(beanCRSolCreDeducibleDesembolso);
-                
-            }           
+
+            }
         } catch (Exception e) {
             e.printStackTrace();
         }
-        
-        
-        
+
         return lstRet;
     }
-    
-    
-    public List<BeanCRSolCreCargosCronograma> getLstCargosCronogram(String numeroSolicitud, String estadoRegistro){
-        ArrayList lstCargosCronograma = (ArrayList<CRSolCreCargosCronograma>)crSolCreCargosCronogramaInterfaceLocal.findByNumeroSolicitudEstado(numeroSolicitud, estadoRegistro);
+
+    public List<BeanCRSolCreCargosCronograma> getLstCargosCronogram(String numeroSolicitud, String estadoRegistro) {
+        ArrayList lstCargosCronograma = (ArrayList<CRSolCreCargosCronograma>) crSolCreCargosCronogramaInterfaceLocal.findByNumeroSolicitudEstado(numeroSolicitud,
+                                                                                                                                                 estadoRegistro);
         ArrayList<BeanCRSolCreCargosCronograma> lstRet = new ArrayList<BeanCRSolCreCargosCronograma>(0);
-        
+
         for (Iterator iter = lstCargosCronograma.iterator(); iter.hasNext();) {
             CRSolCreCargosCronograma element = (CRSolCreCargosCronograma) iter.next();
             BeanCRSolCreCargosCronograma beanCreCargosCronograma = new BeanCRSolCreCargosCronograma();
-            beanCreCargosCronograma.setDescConceptoOperacion(
-                    (cbSubConceptoOperacionInterfaceLocal.findById(new CBSubConceptoOperacionId(
-                            element.getCodigoOperacionCargo(),
-                            element.getCodigoSubConceptoOperacionCargo()
-                            ))).getDescripcion()        
-            );
-            beanCreCargosCronograma.setTipoImporteAplicar(
-                    ((CBCatalogoCheckConstraint)cbCatalogoCheckConstraintInterfaceLocal.findByTablaCampoConstraint(
-                            "CRTPROB", "C_TIMPAP", element.getTipoImporteAplicar()).get(0)).getDescripcion()                    
-            );
+            beanCreCargosCronograma.setDescConceptoOperacion((cbSubConceptoOperacionInterfaceLocal.findById(new CBSubConceptoOperacionId(element.getCodigoOperacionCargo(), element.getCodigoSubConceptoOperacionCargo()))).getDescripcion());
+            beanCreCargosCronograma.setTipoImporteAplicar(((CBCatalogoCheckConstraint) cbCatalogoCheckConstraintInterfaceLocal.findByTablaCampoConstraint("CRTPROB",
+                                                                                                                                                          "C_TIMPAP",
+                                                                                                                                                          element.getTipoImporteAplicar()).get(0)).getDescripcion());
             beanCreCargosCronograma.setMontoAplicarCredito(element.getMontoAplicarCredito());
             beanCreCargosCronograma.setPorcentajeAplicarCredito(element.getPorcentajeAplicarCredito());
-            
-            
-            
+
             beanCreCargosCronograma.setImporteCargo(element.getImporteCargo());
-            
-            
-            if (element.getAplicarPorcentajeCreditoA()!=null) {
-                beanCreCargosCronograma.setAplicarPorcentajeCreditoA(
-                        ((CBCatalogoCheckConstraint)cbCatalogoCheckConstraintInterfaceLocal.findByTablaCampoConstraint(
-                                "CRTPROB", "C_APLPRC", element.getAplicarPorcentajeCreditoA()).get(0)).getDescripcion()
-                );              
-            }else {
+
+            if (element.getAplicarPorcentajeCreditoA() != null) {
+                beanCreCargosCronograma.setAplicarPorcentajeCreditoA(((CBCatalogoCheckConstraint) cbCatalogoCheckConstraintInterfaceLocal.findByTablaCampoConstraint("CRTPROB",
+                                                                                                                                                                     "C_APLPRC",
+                                                                                                                                                                     element.getAplicarPorcentajeCreditoA()).get(0)).getDescripcion());
+            } else {
                 beanCreCargosCronograma.setAplicarPorcentajeCreditoA("");
             }
-            if (element.getTipoDistribucionCargo()!=null ) {
-                beanCreCargosCronograma.setTipoDistribucionCargo(
-                        ((CBCatalogoCheckConstraint)cbCatalogoCheckConstraintInterfaceLocal.findByTablaCampoConstraint(
-                                "CRTPROB", "C_TIPDIS", element.getTipoDistribucionCargo()).get(0)).getDescripcion()  
-                );
-            }else {
+            if (element.getTipoDistribucionCargo() != null) {
+                beanCreCargosCronograma.setTipoDistribucionCargo(((CBCatalogoCheckConstraint) cbCatalogoCheckConstraintInterfaceLocal.findByTablaCampoConstraint("CRTPROB",
+                                                                                                                                                                 "C_TIPDIS",
+                                                                                                                                                                 element.getTipoDistribucionCargo()).get(0)).getDescripcion());
+            } else {
                 beanCreCargosCronograma.setTipoDistribucionCargo("");
             }
-            
+
             beanCreCargosCronograma.setEstadoRegistro(element.getEstadoRegistro());
             beanCreCargosCronograma.setNumeroCuotasDistribuirCargo(element.getNumeroCuotasDistribuirCargo());
             beanCreCargosCronograma.setMontoCargoPorCuota(element.getMontoCargoPorCuota());
             lstRet.add(beanCreCargosCronograma);
-            
+
         }
         return lstRet;
     }
-    
-    public List<BeanCRDestinoPrestamoXSolicitud> getLstDestinoPrestamoSolicitud(String numeroSolicitud, String estadoRegistro){
-        
-        ArrayList lstDestinoPrestamoSolicitud = (ArrayList<CRDestinosPrestamoXSolicitud>)crDestinosPrestamoXSolicitudInterfaceLocal.findByNumeroSolicitudEstado(numeroSolicitud, estadoRegistro);
+
+    public List<BeanCRDestinoPrestamoXSolicitud> getLstDestinoPrestamoSolicitud(String numeroSolicitud,
+                                                                                String estadoRegistro) {
+
+        ArrayList lstDestinoPrestamoSolicitud = (ArrayList<CRDestinosPrestamoXSolicitud>) crDestinosPrestamoXSolicitudInterfaceLocal.findByNumeroSolicitudEstado(numeroSolicitud,
+                                                                                                                                                                 estadoRegistro);
         ArrayList<BeanCRDestinoPrestamoXSolicitud> lstRet = new ArrayList<BeanCRDestinoPrestamoXSolicitud>(0);
-        
+
         for (Iterator iter = lstDestinoPrestamoSolicitud.iterator(); iter.hasNext();) {
             CRDestinosPrestamoXSolicitud element = (CRDestinosPrestamoXSolicitud) iter.next();
             BeanCRDestinoPrestamoXSolicitud beanCRDestinoPrestamoXSolicitud = new BeanCRDestinoPrestamoXSolicitud();
-            
-            beanCRDestinoPrestamoXSolicitud.setDescDestinosPrestamo(
-                    crDestinosPrestamoInterfaceLocal.findById(element.getCrDestinosPrestamo().getCodigoTipoCuota()).getDescripcion()
-                    //element.getCrDestinosPrestamo().getDescripcion()
-                    );
+
+            beanCRDestinoPrestamoXSolicitud.setDescDestinosPrestamo(crDestinosPrestamoInterfaceLocal.findById(element.getCrDestinosPrestamo().getCodigoTipoCuota()).getDescripcion()
+            //element.getCrDestinosPrestamo().getDescripcion()
+            );
             beanCRDestinoPrestamoXSolicitud.setObservaciones(element.getObservaciones());
             beanCRDestinoPrestamoXSolicitud.setMontoUsado(element.getMontoUsado());
             beanCRDestinoPrestamoXSolicitud.setIdDestinoPrestamoXSolitud(element.getIdDestinoPrestamoXSolitud());
@@ -2075,61 +2040,57 @@
         }
         return lstRet;
     }
-    
-    public BeanCRDestinoPrestamoXSolicitud getDestinoPrestamoXSolicitud(String idDestinoPrestamoXSolitud){
-        
+
+    public BeanCRDestinoPrestamoXSolicitud getDestinoPrestamoXSolicitud(String idDestinoPrestamoXSolitud) {
+
         CRDestinosPrestamoXSolicitud element = crDestinosPrestamoXSolicitudInterfaceLocal.findById(idDestinoPrestamoXSolitud);
         BeanCRDestinoPrestamoXSolicitud beanCRDestinoPrestamoXSolicitud = new BeanCRDestinoPrestamoXSolicitud();
-        
+
         beanCRDestinoPrestamoXSolicitud.setNumeroSolicitud(element.getCrSolicitudCredito().getNumeroSolicitud());
         beanCRDestinoPrestamoXSolicitud.setDestinoPrestamo(element.getCrDestinosPrestamo().getCodigoTipoCuota());
         beanCRDestinoPrestamoXSolicitud.setObservaciones(element.getObservaciones());
         beanCRDestinoPrestamoXSolicitud.setMontoUsado(element.getMontoUsado());
         beanCRDestinoPrestamoXSolicitud.setIdDestinoPrestamoXSolitud(element.getIdDestinoPrestamoXSolitud());
-        
+
         return beanCRDestinoPrestamoXSolicitud;
     }
-    
-    public ArrayList<BeanCombo> lstDestinosPrestamo (String strEstado, String strCodigoEmpresa ){       
-        ArrayList<BeanCombo> lstBeanCombo = new ArrayList<BeanCombo>(0); 
-        List<CRDestinosPrestamo> lstDataTmp = (ArrayList<CRDestinosPrestamo>)crDestinosPrestamoInterfaceLocal.findByEmpresaEstado(strEstado, strCodigoEmpresa);
+
+    public ArrayList<BeanCombo> lstDestinosPrestamo(String strEstado, String strCodigoEmpresa) {
+        ArrayList<BeanCombo> lstBeanCombo = new ArrayList<BeanCombo>(0);
+        List<CRDestinosPrestamo> lstDataTmp = (ArrayList<CRDestinosPrestamo>) crDestinosPrestamoInterfaceLocal.findByEmpresaEstado(strEstado,
+                                                                                                                                   strCodigoEmpresa);
         for (Iterator iter = lstDataTmp.iterator(); iter.hasNext();) {
             CRDestinosPrestamo element = (CRDestinosPrestamo) iter.next();
             lstBeanCombo.add(new BeanCombo(element.getCodigoTipoCuota(), element.getDescripcion(), element.getAbreviatura()));
         }
         return lstBeanCombo;
     }
-    
-    public String registrarDestinoPrestamoxSolicitud(
-            BeanCRDestinoPrestamoXSolicitud beanCRDestinoPrestamoXSolicitud,
-            String idicadorModificacion, String codigoEmpresa,
-            String usuarioInsercion, String terminalInsercion,
-            String ipInsercion) {
+
+    public String registrarDestinoPrestamoxSolicitud(BeanCRDestinoPrestamoXSolicitud beanCRDestinoPrestamoXSolicitud,
+                                                     String idicadorModificacion,
+                                                     String codigoEmpresa,
+                                                     String usuarioInsercion,
+                                                     String terminalInsercion,
+                                                     String ipInsercion) {
 
         // Obtener la Solicitud de Crédito
-        CRSolicitudCredito crSolicitudCredito = crSolicitudCreditoInterfaceLocal
-                .findById(beanCRDestinoPrestamoXSolicitud.getNumeroSolicitud());
+        CRSolicitudCredito crSolicitudCredito = crSolicitudCreditoInterfaceLocal.findById(beanCRDestinoPrestamoXSolicitud.getNumeroSolicitud());
         if (crSolicitudCredito == null) {
             return "204";
         }
 
         // Obtener el Detalle a Actualizar si existe
-        CRDestinosPrestamoXSolicitud remoteInstance = crDestinosPrestamoXSolicitudInterfaceLocal
-                .findById(beanCRDestinoPrestamoXSolicitud
-                        .getIdDestinoPrestamoXSolitud());
+        CRDestinosPrestamoXSolicitud remoteInstance = crDestinosPrestamoXSolicitudInterfaceLocal.findById(beanCRDestinoPrestamoXSolicitud.getIdDestinoPrestamoXSolitud());
 
         // List<CRDestinosPrestamoXSolicitud> lstDestinosPrestamoXSolicitud =
         // (ArrayList<CRDestinosPrestamoXSolicitud>)crSolicitudCredito.getLstCRDestinosPrestamoXSolicitud();
         // Obtener Monto usado
 
         double dblTotalRegistrado = 0;
-        List<CRDestinosPrestamoXSolicitud> lstDestinosPrestamoXSolicitud = crDestinosPrestamoXSolicitudInterfaceLocal
-                .findByNumeroSolicitudEstado(beanCRDestinoPrestamoXSolicitud
-                        .getNumeroSolicitud(), "S");
-        for (Iterator iter = lstDestinosPrestamoXSolicitud.iterator(); iter
-                .hasNext();) {
-            CRDestinosPrestamoXSolicitud element = (CRDestinosPrestamoXSolicitud) iter
-                    .next();
+        List<CRDestinosPrestamoXSolicitud> lstDestinosPrestamoXSolicitud = crDestinosPrestamoXSolicitudInterfaceLocal.findByNumeroSolicitudEstado(beanCRDestinoPrestamoXSolicitud.getNumeroSolicitud(),
+                                                                                                                                                  "S");
+        for (Iterator iter = lstDestinosPrestamoXSolicitud.iterator(); iter.hasNext();) {
+            CRDestinosPrestamoXSolicitud element = (CRDestinosPrestamoXSolicitud) iter.next();
             dblTotalRegistrado = dblTotalRegistrado + element.getMontoUsado();
         }
         // Entidad a Insertar/Actualizar
@@ -2144,12 +2105,9 @@
 
         // Si es Nuevo, verificar q no se haya registrado el DP
         boolean blnExiste = false;
-        for (Iterator iter = lstDestinosPrestamoXSolicitud.iterator(); iter
-                .hasNext();) {
-            CRDestinosPrestamoXSolicitud element = (CRDestinosPrestamoXSolicitud) iter
-                    .next();
-            if (element.getCrDestinosPrestamo().getCodigoTipoCuota().equals(
-                    beanCRDestinoPrestamoXSolicitud.getDestinoPrestamo())) {
+        for (Iterator iter = lstDestinosPrestamoXSolicitud.iterator(); iter.hasNext();) {
+            CRDestinosPrestamoXSolicitud element = (CRDestinosPrestamoXSolicitud) iter.next();
+            if (element.getCrDestinosPrestamo().getCodigoTipoCuota().equals(beanCRDestinoPrestamoXSolicitud.getDestinoPrestamo())) {
                 // Ya existe un registro con el destino de prestamo seleccionado
                 blnExiste = true;
                 return "769";
@@ -2160,21 +2118,13 @@
 
             // Verificar que el destino de prestamo nuevo sea el mismo o q el
             // nuevo elegido no exista
-            if ((beanCRDestinoPrestamoXSolicitud.getDestinoPrestamo()
-                    .equals(remoteInstance.getCrDestinosPrestamo()
-                            .getCodigoTipoCuota()))
-                    || !blnExiste) {
+            if ((beanCRDestinoPrestamoXSolicitud.getDestinoPrestamo().equals(remoteInstance.getCrDestinosPrestamo().getCodigoTipoCuota())) || !blnExiste) {
                 // Verifica Monto
-                if ((dblTotalRegistrado - remoteInstance.getMontoUsado() + beanCRDestinoPrestamoXSolicitud
-                        .getMontoUsado()) > crSolicitudCredito
-                        .getMontoSolicitado()) {
+                if ((dblTotalRegistrado - remoteInstance.getMontoUsado() + beanCRDestinoPrestamoXSolicitud.getMontoUsado()) > crSolicitudCredito.getMontoSolicitado()) {
                     return "770";
                 } else {
-                    transientInstance
-                            .setIdDestinoPrestamoXSolitud(beanCRDestinoPrestamoXSolicitud
-                                    .getIdDestinoPrestamoXSolitud());
-                    crDestinosPrestamoXSolicitudInterfaceLocal
-                            .update(transientInstance);
+                    transientInstance.setIdDestinoPrestamoXSolitud(beanCRDestinoPrestamoXSolicitud.getIdDestinoPrestamoXSolitud());
+                    crDestinosPrestamoXSolicitudInterfaceLocal.update(transientInstance);
                 }
             } else {
                 // El dsetino a actualizar ya existe.
@@ -2183,526 +2133,512 @@
         } else {
             if (!blnExiste) {
                 // Verificar Monto
-                if ((dblTotalRegistrado + beanCRDestinoPrestamoXSolicitud
-                        .getMontoUsado()) > crSolicitudCredito
-                        .getMontoSolicitado()) {
+                if ((dblTotalRegistrado + beanCRDestinoPrestamoXSolicitud.getMontoUsado()) > crSolicitudCredito.getMontoSolicitado()) {
                     // Monto total supera el monto solicitado
                     return "770";
                 } else {
                     // grabar nuevo
 
-                    transientInstance
-                            .setIdDestinoPrestamoXSolitud(cbCorrelativoInterfaceLocal
-                                    .GenerarCorrelativo(codigoEmpresa,
-                                            "CRDDPSC", 15, usuarioInsercion,
-                                            terminalInsercion, ipInsercion));
-                    crDestinosPrestamoXSolicitudInterfaceLocal
-                            .save(transientInstance);
+                    transientInstance.setIdDestinoPrestamoXSolitud(cbCorrelativoInterfaceLocal.GenerarCorrelativo(codigoEmpresa,
+                                                                                                                  "CRDDPSC",
+                                                                                                                  15,
+                                                                                                                  usuarioInsercion,
+                                                                                                                  terminalInsercion,
+                                                                                                                  ipInsercion));
+                    crDestinosPrestamoXSolicitudInterfaceLocal.save(transientInstance);
                 }
             }
 
         }
         return NO_ERROR;
     }
-    
+
     // ////
     // EDWIN
     // ///
     //REQUISITOS DE SOLICITUDES
     //////
-    
-    public boolean permiteModificarSolicitud(String numeroSolicitud) throws RemoteException{
+
+    public boolean permiteModificarSolicitud(String numeroSolicitud) throws RemoteException {
         String moduleName = "CRBNSolicitudCreditoFacade.permiteModificarSolicitud()";
-        boolean permiso = true;     
-        try{
-            CRSolicitudCredito crSolicitudCredito = crSolicitudCreditoInterfaceLocal.findById(numeroSolicitud); 
-            if("SC".equals(crSolicitudCredito.getTipoSolicitud())){         
+        boolean permiso = true;
+        try {
+            CRSolicitudCredito crSolicitudCredito = crSolicitudCreditoInterfaceLocal.findById(numeroSolicitud);
+            if ("SC".equals(crSolicitudCredito.getTipoSolicitud())) {
                 //Validamos el estado de la Solictud: Solo seran permitido modiificar aquellos cuyos estado sean ï¿½APï¿½ y ï¿½RCï¿½
-                if (!("AP".equals(crSolicitudCredito.getCrEstadoSolicitud().getCodigoEstado())||"RC".equals(crSolicitudCredito.getCrEstadoSolicitud().getCodigoEstado()) )){
-                    permiso=false;
+                if (!("AP".equals(crSolicitudCredito.getCrEstadoSolicitud().getCodigoEstado()) || "RC".equals(crSolicitudCredito.getCrEstadoSolicitud().getCodigoEstado()))) {
+                    permiso = false;
                 }
-                if (crSolicitudCredito.getCrSubTipoCreditoByReCRSolicitudCredito07().getId().getCodigoTipoCredito().equals("04")
-                        && "AR".equals(crSolicitudCredito.getCrEstadoSolicitud().getCodigoEstado())) {
-                    permiso=true;
-                }               
-            }else{
+                if (crSolicitudCredito.getCrSubTipoCreditoByReCRSolicitudCredito07().getId().getCodigoTipoCredito().equals("04") && "AR".equals(crSolicitudCredito.getCrEstadoSolicitud().getCodigoEstado())) {
+                    permiso = true;
+                }
+            } else {
                 //Validamos el estado de la solicitud cambio de condiciones: Solo serï¿½ permitido modificar aquellas solicitudes cuyos estados sean: ï¿½INï¿½ y ï¿½PPï¿½
                 CRSolicitudCambioCondiciones crSolicitudCambioCondiciones = crSolicitudCambioCondicionesInterfaceLocal.findById(numeroSolicitud);
-                if(!("IN".equals(crSolicitudCambioCondiciones.getEstadoSolicitudCambioCondiciones()) || "PP".equals(crSolicitudCambioCondiciones.getEstadoSolicitudCambioCondiciones())))
-                    permiso=false;              
+                if (!("IN".equals(crSolicitudCambioCondiciones.getEstadoSolicitudCambioCondiciones()) || "PP".equals(crSolicitudCambioCondiciones.getEstadoSolicitudCambioCondiciones())))
+                    permiso = false;
             }
-        }catch (Exception e){
+        } catch (Exception e) {
             e.printStackTrace();
             throw new RemoteException(e.getMessage());
-        }       
+        }
         return permiso;
     }
-     public List obtenerRequisitosSolicitud(String numeroSolicitud,String usuario) throws RemoteException{
-            List lObtenerDatos = new ArrayList();
-            Iterator itcrRequisitoSolicitud = null;
 
-            try {
-                CRRequisitoSolicitud     crRequisitoSolicitud;
-                itcrRequisitoSolicitud = crRequisitoSolicitudInterfaceLocal.findByNumeroSolicitudEstado(numeroSolicitud,"S").iterator();
-                
-                while (itcrRequisitoSolicitud.hasNext()) {
-                    crRequisitoSolicitud = (CRRequisitoSolicitud) itcrRequisitoSolicitud.next();
-                    lObtenerDatos.add(setearBean(crRequisitoSolicitud));
-                }
-                
-            } 
-            catch (Exception e) {
-                e.printStackTrace();
-            }
-            return lObtenerDatos;
-        }
-     private BeanCRRequisitoSolicitud setearBean(CRRequisitoSolicitud     crRequisitoSolicitud){
-            BeanCRRequisitoSolicitud bean = new BeanCRRequisitoSolicitud();
-            
-            bean.setCodigoRequisito(crRequisitoSolicitud.getCrRequisito().getCodigoRequisito());
-            if (crRequisitoSolicitud.getCrRequisito().getCodigoRequisito() != null){
-                
-                    CRRequisito crRequisito = crRequisitoInterfaceLocal.findById(crRequisitoSolicitud.getCrRequisito().getCodigoRequisito());
-                    bean.setDescripcionRequisito(crRequisito.getDescripcion());             
-                
-            }
-            
-            bean.setIndPresentoRequisito(crRequisitoSolicitud.getIndPresentoRequisito());
-            bean.setIdRequisitoSolicitud(crRequisitoSolicitud.getIdRequisitosPorSolicitud());
-            
-            return bean;
-        }
-     
-     public String requisitoModificar(Vector<BeanCRRequisitoSolicitud> vRequisitos,String numeroSolicitud)  throws RemoteException{     
-            String moduleName = "CRBNSolicitudCreditoFacade.requisitoModificar()";
-            BeanCRRequisitoSolicitud bean;
+    public List obtenerRequisitosSolicitud(String numeroSolicitud, String usuario) throws RemoteException {
+        List lObtenerDatos = new ArrayList();
+        Iterator itcrRequisitoSolicitud = null;
+
+        try {
             CRRequisitoSolicitud crRequisitoSolicitud;
-            try{
-                //Valida que se pueda modificar la Solicitud
-                if (!permiteModificarSolicitud(numeroSolicitud)){
-                    return "204";
-                }
-                            
-                for (int i = 0; i < vRequisitos.size(); i++){               
-                    bean = (BeanCRRequisitoSolicitud)vRequisitos.elementAt(i);
-                    //Actualizar registro de Requisitos por Solicitud de Credito en CRRequisitoSolicitud, donde:
-                    try {
-                        crRequisitoSolicitud = crRequisitoSolicitudInterfaceLocal.findById(bean.getIdRequisitoSolicitud());
-                        crRequisitoSolicitud.setIndPresentoRequisito(bean.getIndPresentoRequisito());
-                        crRequisitoSolicitudInterfaceLocal.update(crRequisitoSolicitud);
-                        if(crRequisitoSolicitud==null){
-                            return "211";
-                        }
-                    } catch (Exception e) {
+            itcrRequisitoSolicitud = crRequisitoSolicitudInterfaceLocal.findByNumeroSolicitudEstado(numeroSolicitud,
+                                                                                                    "S").iterator();
+
+            while (itcrRequisitoSolicitud.hasNext()) {
+                crRequisitoSolicitud = (CRRequisitoSolicitud) itcrRequisitoSolicitud.next();
+                lObtenerDatos.add(setearBean(crRequisitoSolicitud));
+            }
+
+        } catch (Exception e) {
+            e.printStackTrace();
+        }
+        return lObtenerDatos;
+    }
+
+    private BeanCRRequisitoSolicitud setearBean(CRRequisitoSolicitud crRequisitoSolicitud) {
+        BeanCRRequisitoSolicitud bean = new BeanCRRequisitoSolicitud();
+
+        bean.setCodigoRequisito(crRequisitoSolicitud.getCrRequisito().getCodigoRequisito());
+        if (crRequisitoSolicitud.getCrRequisito().getCodigoRequisito() != null) {
+
+            CRRequisito crRequisito = crRequisitoInterfaceLocal.findById(crRequisitoSolicitud.getCrRequisito().getCodigoRequisito());
+            bean.setDescripcionRequisito(crRequisito.getDescripcion());
+
+        }
+
+        bean.setIndPresentoRequisito(crRequisitoSolicitud.getIndPresentoRequisito());
+        bean.setIdRequisitoSolicitud(crRequisitoSolicitud.getIdRequisitosPorSolicitud());
+
+        return bean;
+    }
+
+    public String requisitoModificar(Vector<BeanCRRequisitoSolicitud> vRequisitos, String numeroSolicitud) throws RemoteException {
+        String moduleName = "CRBNSolicitudCreditoFacade.requisitoModificar()";
+        BeanCRRequisitoSolicitud bean;
+        CRRequisitoSolicitud crRequisitoSolicitud;
+        try {
+            //Valida que se pueda modificar la Solicitud
+            if (!permiteModificarSolicitud(numeroSolicitud)) {
+                return "204";
+            }
+
+            for (int i = 0; i < vRequisitos.size(); i++) {
+                bean = (BeanCRRequisitoSolicitud) vRequisitos.elementAt(i);
+                //Actualizar registro de Requisitos por Solicitud de Credito en CRRequisitoSolicitud, donde:
+                try {
+                    crRequisitoSolicitud = crRequisitoSolicitudInterfaceLocal.findById(bean.getIdRequisitoSolicitud());
+                    crRequisitoSolicitud.setIndPresentoRequisito(bean.getIndPresentoRequisito());
+                    crRequisitoSolicitudInterfaceLocal.update(crRequisitoSolicitud);
+                    if (crRequisitoSolicitud == null) {
                         return "211";
                     }
+                } catch (Exception e) {
+                    return "211";
                 }
-            }catch (Exception e){
-                e.printStackTrace();
-                throw new RemoteException(e.getMessage());
             }
-            
-            return NO_ERROR;
+        } catch (Exception e) {
+            e.printStackTrace();
+            throw new RemoteException(e.getMessage());
         }
-        
-     
-     public String valorMonedaNacional(String codigoEmpresa,String codigoUsuario)  throws RemoteException{
-            String strMonedaNacional;
-            if(codigoEmpresa==null){
-                return "515";
-            }
-            Map moneda=valorConstante(codigoEmpresa, "EMP_MONEDA_NACIONAL", codigoUsuario);
-            strMonedaNacional=moneda.get("strConstante").toString();
-            return strMonedaNacional;
+
+        return NO_ERROR;
+    }
+
+    public String valorMonedaNacional(String codigoEmpresa, String codigoUsuario) throws RemoteException {
+        String strMonedaNacional;
+        if (codigoEmpresa == null) {
+            return "515";
         }
-        public Map valorConstante(String codigoEmpresa,String codigoConstante,String usuario)
-        throws RemoteException{
-        
+        Map moneda = valorConstante(codigoEmpresa, "EMP_MONEDA_NACIONAL", codigoUsuario);
+        strMonedaNacional = moneda.get("strConstante").toString();
+        return strMonedaNacional;
+    }
+
+    public Map valorConstante(String codigoEmpresa, String codigoConstante, String usuario) throws RemoteException {
+
         String moduleName = "GEBNGenerales.valorConstante()";
         Map output = new HashMap();
         String valorConstante = "";
-        try{
-        /////////////////////////////////////////////////////////////////////
-        // VALIDACION DE PARAMETROS
-        /////////////////////////////////////////////////////////////////////
-        //Validamos Codigo de Empresa
-        if(codigoEmpresa == null){
-        //log.CrearLogErrores(usuario, "", moduleName, "525", "");
-        output.put("strError","525");
-        return output;
-        }
-        
-        //Validamos Codigo Constante
-        if(codigoConstante == null){
-        //log.CrearLogErrores(usuario, "", moduleName, "526", "");
-        output.put("strError","526");
-        return output;
-        }
-        
-        try{
-        
-        CBConstante dConstante = cbConstanteInterfaceLocal.findById(new CBConstanteId(codigoEmpresa, codigoConstante));
-        valorConstante = dConstante.getValor();             
-        }catch(Exception fe){
-        fe.printStackTrace();
-        if("CR_DOCUMENTOS_OBLIGATORIOS_APROBACION_SOLCRE".equals(codigoConstante)){
-        output.put("strError","524");
-        return output;
-        }
-        else if("CR_MORA_AL_ULTIMO_CALCULO".equals(codigoConstante)){
-        output.put("strError","408");
-        return output;
-        }
-        else if("CR_MORA_AL_SALDO".equals(codigoConstante)){
-        output.put("strError","464");
-        return output;
-        }
-        else if("CONCEPTO_OP_ABONO_PRESTAMO".equals(codigoConstante)){
-        output.put("strError","413");
-        return output;
-        }
-        else if("CR_DIAS_ATRASO_BASE_TIPO_CALENDARIO".equals(codigoConstante)){
-        output.put("strError","483");
-        return output;
-        }
-        else if("TIPO_CALCULO_INTERES".equals(codigoConstante)){
-        output.put("strError","420");
-        return output;
-        }
-        else if("CR_PORCENTAJE_ATRASO_PROVISION".equals(codigoConstante)){
-        valorConstante="0";
-        }
-        else if("CR_REFIN_DIAS_MEJORA_CALIFICACION".equals(codigoConstante)){
-        output.put("strError","486");
-        return output;
-        }
-        else if("CR_REFIN_DIAS_EMPEORA_CALIFICACION".equals(codigoConstante)){
-        output.put("strError","487");
-        return output;
-        }
-        else if("CR_CUOTAS_ATRASO_AVALES".equals(codigoConstante)){
-        output.put("strError","627");
-        return output;
-        }
-        else if("MODO_OBTENER_NUMERO_PAGARE".equals(codigoConstante)){
-        output.put("strError","631");
-        return output;
-        }
-        else if("EMP_MONEDA_NACIONAL".equals(codigoConstante)){
-        output.put("strError","763");
-        return output;
-        }
-        else if("EMP_COD_PERSONA".equals(codigoConstante)){
-        output.put("strError","764");
-        return output;
-        }
-        else{ 
-        output.put("strError","581");
-        return output;
-        }
-        }
-        }catch(Exception e){
-        e.printStackTrace();
-        throw new RemoteException(e.getMessage());
+        try {
+            /////////////////////////////////////////////////////////////////////
+            // VALIDACION DE PARAMETROS
+            /////////////////////////////////////////////////////////////////////
+            //Validamos Codigo de Empresa
+            if (codigoEmpresa == null) {
+                //log.CrearLogErrores(usuario, "", moduleName, "525", "");
+                output.put("strError", "525");
+                return output;
+            }
+
+            //Validamos Codigo Constante
+            if (codigoConstante == null) {
+                //log.CrearLogErrores(usuario, "", moduleName, "526", "");
+                output.put("strError", "526");
+                return output;
+            }
+
+            try {
+
+                CBConstante dConstante = cbConstanteInterfaceLocal.findById(new CBConstanteId(codigoEmpresa, codigoConstante));
+                valorConstante = dConstante.getValor();
+            } catch (Exception fe) {
+                fe.printStackTrace();
+                if ("CR_DOCUMENTOS_OBLIGATORIOS_APROBACION_SOLCRE".equals(codigoConstante)) {
+                    output.put("strError", "524");
+                    return output;
+                } else if ("CR_MORA_AL_ULTIMO_CALCULO".equals(codigoConstante)) {
+                    output.put("strError", "408");
+                    return output;
+                } else if ("CR_MORA_AL_SALDO".equals(codigoConstante)) {
+                    output.put("strError", "464");
+                    return output;
+                } else if ("CONCEPTO_OP_ABONO_PRESTAMO".equals(codigoConstante)) {
+                    output.put("strError", "413");
+                    return output;
+                } else if ("CR_DIAS_ATRASO_BASE_TIPO_CALENDARIO".equals(codigoConstante)) {
+                    output.put("strError", "483");
+                    return output;
+                } else if ("TIPO_CALCULO_INTERES".equals(codigoConstante)) {
+                    output.put("strError", "420");
+                    return output;
+                } else if ("CR_PORCENTAJE_ATRASO_PROVISION".equals(codigoConstante)) {
+                    valorConstante = "0";
+                } else if ("CR_REFIN_DIAS_MEJORA_CALIFICACION".equals(codigoConstante)) {
+                    output.put("strError", "486");
+                    return output;
+                } else if ("CR_REFIN_DIAS_EMPEORA_CALIFICACION".equals(codigoConstante)) {
+                    output.put("strError", "487");
+                    return output;
+                } else if ("CR_CUOTAS_ATRASO_AVALES".equals(codigoConstante)) {
+                    output.put("strError", "627");
+                    return output;
+                } else if ("MODO_OBTENER_NUMERO_PAGARE".equals(codigoConstante)) {
+                    output.put("strError", "631");
+                    return output;
+                } else if ("EMP_MONEDA_NACIONAL".equals(codigoConstante)) {
+                    output.put("strError", "763");
+                    return output;
+                } else if ("EMP_COD_PERSONA".equals(codigoConstante)) {
+                    output.put("strError", "764");
+                    return output;
+                } else {
+                    output.put("strError", "581");
+                    return output;
+                }
+            }
+        } catch (Exception e) {
+            e.printStackTrace();
+            throw new RemoteException(e.getMessage());
         }
         output.put("strError", NO_ERROR);
         output.put("strConstante", valorConstante);
-        
+
         return output;
-        }   
+    }
+
     ////EDWIN GARATIAS
-        
-        public List obtenerSolicitudCreditoGarantias(String tipoConsulta, String codigoBuscar, String usuario)
-        throws Exception{
-            
-            List lObtenerDatos = new ArrayList();
-            Iterator it = null;
-            
-            try {
-                if("SC".equals(tipoConsulta)){
-                    //CRSolicitudCreditoGarantiaLocalHome SolicitudCreditoGarantia = CRSolicitudCreditoGarantiaUtil.getLocalHome();
-                    CRSolicitudCreditoGarantia objSolicitudCreditoGarantiaL;
-                
-                    it = crSolicitudCreditoGarantiaInterfaceLocal.findByNumeroSolicitud(codigoBuscar).iterator();
-                
-                    while(it.hasNext()){
-                        objSolicitudCreditoGarantiaL = (CRSolicitudCreditoGarantia) it.next();
-                        lObtenerDatos.add(setearBean(objSolicitudCreditoGarantiaL));
-                    }
+
+    public List obtenerSolicitudCreditoGarantias(String tipoConsulta, String codigoBuscar, String usuario) throws Exception {
+
+        List lObtenerDatos = new ArrayList();
+        Iterator it = null;
+
+        try {
+            if ("SC".equals(tipoConsulta)) {
+                //CRSolicitudCreditoGarantiaLocalHome SolicitudCreditoGarantia = CRSolicitudCreditoGarantiaUtil.getLocalHome();
+                CRSolicitudCreditoGarantia objSolicitudCreditoGarantiaL;
+
+                it = crSolicitudCreditoGarantiaInterfaceLocal.findByNumeroSolicitud(codigoBuscar).iterator();
+
+                while (it.hasNext()) {
+                    objSolicitudCreditoGarantiaL = (CRSolicitudCreditoGarantia) it.next();
+                    lObtenerDatos.add(setearBean(objSolicitudCreditoGarantiaL));
                 }
-                
-
-                else if("CR".equals(tipoConsulta)){
-
-                    CRCuentaCreditoGarantia lCuentaCreditoGarantia;
-                    
-                    it = crCuentaCreditoGarantiaInterfaceLocal.findByNumeroCredito(codigoBuscar).iterator();
-                    
-                    while(it.hasNext()){
-                        lCuentaCreditoGarantia = (CRCuentaCreditoGarantia)it.next();
-                        lObtenerDatos.add(setearBean(lCuentaCreditoGarantia));
-                    }
-                }
-
-            }catch (Exception e) {
-                e.printStackTrace();
             }
-            
-            return lObtenerDatos;
+
+            else if ("CR".equals(tipoConsulta)) {
+
+                CRCuentaCreditoGarantia lCuentaCreditoGarantia;
+
+                it = crCuentaCreditoGarantiaInterfaceLocal.findByNumeroCredito(codigoBuscar).iterator();
+
+                while (it.hasNext()) {
+                    lCuentaCreditoGarantia = (CRCuentaCreditoGarantia) it.next();
+                    lObtenerDatos.add(setearBean(lCuentaCreditoGarantia));
+                }
+            }
+
+        } catch (Exception e) {
+            e.printStackTrace();
         }
-        private BeanCRSolicitudCreditoGarantia setearBean(CRCuentaCreditoGarantia crCuentaCreditoGarantia)
-        throws Exception{
-            BeanCRSolicitudCreditoGarantia bean = new BeanCRSolicitudCreditoGarantia();
 
-            //Titular
-            GATitularGarantia gaTitularGarantia;
-            
-            Iterator it = gaTitularGarantiaInterfaceLocal.findByCodigoGarantiaOrderByPorcentajeDesc(crCuentaCreditoGarantia.getGaGarantia().getCodigoGarantia(),"S").iterator();
+        return lObtenerDatos;
+    }
 
-            /** aqui la lista trae en orden descendente  al porcentaje escojemos el mayor de ellos es decir el primero**/
-            while (it.hasNext()) {
-                gaTitularGarantia = (GATitularGarantia) it.next();
-                bean.setNombreTitular(gaTitularGarantia.getClPersonas().getNombreoRazonSocial());
-                break;
-            }
+    private BeanCRSolicitudCreditoGarantia setearBean(CRCuentaCreditoGarantia crCuentaCreditoGarantia) throws Exception {
+        BeanCRSolicitudCreditoGarantia bean = new BeanCRSolicitudCreditoGarantia();
 
-            bean.setCodigoGaGarantia(crCuentaCreditoGarantia.getGaGarantia().getCodigoGarantia());
-                     
-            //Relaciï¿½n con CRGarantia
-            if (crCuentaCreditoGarantia.getGaGarantia() != null){
-                           
-                GAGarantia gaGarantia = crCuentaCreditoGarantia.getGaGarantia();
-                
-                //Tipo/SubTipo
-                GASubTipoGarantia  gaSubTipoGarantia = crCuentaCreditoGarantia.getGaGarantia().getGaSubTipoGarantia();
-                GATipoGarantia gaTipoGarantia = gaSubTipoGarantia.getGaTipoGarantia();
-                bean.setTipoSubTipo(new StringBuffer(gaTipoGarantia.getDescripcion()).append("/").append(gaSubTipoGarantia.getDescripcion()).toString());
-                
-                //Valor Referencial
-                bean.setValorMercado(gaGarantia.getValorMercado());
-                
-                //Valor Comercial
-                bean.setValorComercial(gaGarantia.getValorComercial());
-                
-                //Mto Realizaciï¿½n/Valorizaciï¿½n
-                //bean.setMontoValorizacion(objGarantiaData.getValorGarantia());
-                
-                //Utilizado Real
-                bean.setMontoUtilizadoReal(gaGarantia.getMontoUtilizadoReal());
-                
-                //Disponible Real
-                bean.setMontoDisponibleReal(gaGarantia.getSaldoGarantiaReal());
-                
-                //Mto. Comprmetido
-                bean.setMontoComprometido(gaGarantia.getMontoComprometido());
-                
-                //Mto. Bloqueado
-                bean.setMontoBloqueado(gaGarantia.getMontoBloqueado());
-                
-                //Total Disponible
-                bean.setSaldoDisponibleTotal(gaGarantia.getSaldoDisponibleTotal());
-                
-                //DisponibleMonCre
-                bean.setMontoDisponibleMonedaSolicitudCredito(crCuentaCreditoGarantia.getMontoDisponibleMonedaCredito());
-                //DisponibleMonGar
-                bean.setMontoDisponibleMonedaGarantia(crCuentaCreditoGarantia.getMontoDisponibleMonedaGarantia());
-                
-                bean.setMontoUtilizadoMonedaGarantia(crCuentaCreditoGarantia.getMontoUtilizadoMonedaGarantia());
-                
-                //Fecha Vencimiento
-                //bean.setFechaVencimiento(objGarantiaData.getFechaVencimiento());
+        //Titular
+        GATitularGarantia gaTitularGarantia;
 
-                //Identificador
-                bean.setIdSolicitudCreditoGarantia(crCuentaCreditoGarantia.getIdCreditoGarantia());
-                
-                //Valor Realizacion
-                bean.setMontoRealizacion(gaGarantia.getMontoRealizacion());
-                
-                //Monto Utilizar SC
-                bean.setMontoUtilizadoMonedaSolicitudCredito(crCuentaCreditoGarantia.getMontoUtilizadoMonedaCredito());
-                
-                //Monto Utilizar GA
-                bean.setMontoUtilizadoMonedaGarantia(crCuentaCreditoGarantia.getMontoUtilizadoMonedaGarantia());
-                
-                //Fecha Tasacion
-                bean.setFechaTasacion(gaGarantia.getFechaTasacion());
-                CBMoneda cbMoneda;           
-                
-                //Valores Moneda
-                if (gaGarantia.getCodigoMoneda()!=null){
-                    cbMoneda = cbMonedaInterfaceLocal.findById(gaGarantia.getCodigoMoneda()); 
-                    //bean.setDescripcionMoneda(objMonedaData.getDescripcion());
-                    bean.setAbreviaturaMonedaGarantia(cbMoneda.getSimbolo());
-                }
-                
-                // Inicio [Req. 16-016] jventura 29.02.2016
-                if (_equiv(crCuentaCreditoGarantia.getCodigoAplicacionOrigen(), Constante.CODIGO_APLICATIVO_DELFIN)) {
-                   CRSolicitudCredito crSolicitudCredito = crSolicitudCreditoInterfaceLocal.findById(crCuentaCreditoGarantia.getCrCuentaCredito().getCrSolicitudCredito().getNumeroSolicitud());
-                   if (crSolicitudCredito.getCodigoMonedaAprobado() != null) {
-                      cbMoneda = cbMonedaInterfaceLocal.findById(crSolicitudCredito.getCodigoMonedaAprobado());
-                      bean.setAbreviaturaMonedaSolicitudCredito(cbMoneda.getSimbolo());
-                   }
-                } else if (_equiv(crCuentaCreditoGarantia.getCodigoAplicacionOrigen(), Constante.CODIGO_APLICATIVO_BANTIQ)) {
-                   if (!_isEmpty(crCuentaCreditoGarantia.getCrCuentaCreditoExterno().getCodigoMoneda())) {
-                      cbMoneda = cbMonedaInterfaceLocal.findById(crCuentaCreditoGarantia.getCrCuentaCreditoExterno().getCodigoMoneda());
-                      bean.setAbreviaturaMonedaSolicitudCredito(cbMoneda.getSimbolo());
-                   }
-                }
-                List lstCatalogo = cbCatalogoCheckConstraintInterfaceLocal.findByTablaCampoConstraint("CRDCTGA",
-                                                                                                      "C_APPORI",
-                                                                                                      crCuentaCreditoGarantia.getCodigoAplicacionOrigen());
-                bean.setAplicativoOrigen(crCuentaCreditoGarantia.getCodigoAplicacionOrigen());
-                if (!_isEmpty(lstCatalogo)) {
-                    bean.setDescripcionAplicativoOrigen(((CBCatalogoCheckConstraint) lstCatalogo.get(0)).getDescripcion());
-                }
-                // Fin [Req. 16-016]
-             }
-             return bean;
-          }
-        
-        private BeanCRSolicitudCreditoGarantia setearBean(CRSolicitudCreditoGarantia crSolicitudCreditoGarantia)
-        throws Exception{
-            BeanCRSolicitudCreditoGarantia bean = new BeanCRSolicitudCreditoGarantia();
+        Iterator it = gaTitularGarantiaInterfaceLocal.findByCodigoGarantiaOrderByPorcentajeDesc(crCuentaCreditoGarantia.getGaGarantia().getCodigoGarantia(),
+                                                                                                "S").iterator();
 
-            //Titular
-            
-            GATitularGarantia objTitularGarantiaL;
-            
-            Iterator it = gaTitularGarantiaInterfaceLocal.findByCodigoGarantiaOrderByPorcentajeDesc(crSolicitudCreditoGarantia.getGaGarantia().getCodigoGarantia(),"S").iterator();
-
-            /** aqui la lista trae en orden descendente  al porcentaje escojemos el mayor de ellos es decir el primero**/
-            while (it.hasNext()) {
-                objTitularGarantiaL = (GATitularGarantia) it.next();
-                CLPersonas clPersonas = clPersonasInterfaceLocal.findById(objTitularGarantiaL.getClPersonas().getCodigoPersona());
-                bean.setNombreTitular(clPersonas.getNombreoRazonSocial());
-                
-                break;
-            }
-            //-------------------------------------------------------------------------
-                    
-            //Cï¿½digo Garantï¿½a
-            bean.setCodigoGaGarantia(crSolicitudCreditoGarantia.getGaGarantia().getCodigoGarantia());
-                     
-            //Relaciï¿½n con CRGarantia
-            if (crSolicitudCreditoGarantia.getGaGarantia() != null){
-                            
-                GAGarantia gaGarantia = gaGarantiaInterfaceLocal.findById(crSolicitudCreditoGarantia.getGaGarantia().getCodigoGarantia());
-                
-                //Tipo/SubTipo
-                GASubTipoGarantia  gaSubTipoGarantia = gaSubTipoGarantiaInterfaceLocal.findById(gaGarantia.getGaSubTipoGarantia().getId()) ;
-
-                GATipoGarantia gaTipoGarantia = gaTipoGarantiaInterfaceLocal.findById(gaSubTipoGarantia.getGaTipoGarantia().getCodigoTipoGarantia());
-                bean.setTipoSubTipo(new StringBuffer(gaTipoGarantia.getDescripcion()).append("/").append(gaSubTipoGarantia.getDescripcion()).toString());
-                            
-                //Valor Referencial
-                bean.setValorMercado(gaGarantia.getValorMercado());
-                
-                //Valor Comercial
-                bean.setValorComercial(gaGarantia.getValorComercial());
-                
-                //Utilizado Real
-                bean.setMontoUtilizadoReal(gaGarantia.getMontoUtilizadoReal());
-                
-                //Disponible Real
-                bean.setMontoDisponibleReal(gaGarantia.getSaldoGarantiaReal());
-
-                // Inicio [Req. 16-016] jventura 29.02.2016
-                bean.setSaldoGarantiaReal(gaGarantia.getSaldoGarantiaReal());
-
-                //Mto. Comprmetido
-                bean.setMontoComprometido(gaGarantia.getMontoComprometido());
-                
-                //Mto. Bloqueado
-                bean.setMontoBloqueado(gaGarantia.getMontoBloqueado());
-                
-                //Total Disponible
-                bean.setSaldoDisponibleTotal(gaGarantia.getSaldoDisponibleTotal());
-                
-                //DisponibleMonCre
-                bean.setMontoDisponibleMonedaSolicitudCredito(crSolicitudCreditoGarantia.getMontoDisponibleMonedaSolicitudCredito());
-                //DisponibleMonGar
-                bean.setMontoDisponibleMonedaGarantia(crSolicitudCreditoGarantia.getMontoDisponibleMonedaGarantia());
-                
-                //Monto Utilizar
-                    bean.setMontoUtilizadoMonedaGarantia(crSolicitudCreditoGarantia.getMontoUtilizadoMonedaGarantia());
-
-//            Identificador
-                bean.setIdSolicitudCreditoGarantia(crSolicitudCreditoGarantia.getIdSolicitudCreditoGarantia());
-                
-                //Valor Realizacion
-                bean.setMontoRealizacion(gaGarantia.getMontoRealizacion());
-                
-                //Monto Utilizar SC
-                bean.setMontoUtilizadoMonedaSolicitudCredito(crSolicitudCreditoGarantia.getMontoUtilizadoMonedaSolicitudCredito());
-                
-                //Monto Utilizar GA
-                bean.setMontoUtilizadoMonedaGarantia(crSolicitudCreditoGarantia.getMontoUtilizadoMonedaGarantia());
-                
-                //Fecha Tasacion
-                bean.setFechaTasacion(gaGarantia.getFechaTasacion());
-                CBMoneda cbMoneda;           
-                //Valores Moneda
-                if (gaGarantia.getCodigoMoneda()!=null){
-                    cbMoneda = cbMonedaInterfaceLocal.findById(gaGarantia.getCodigoMoneda()); 
-                    bean.setAbreviaturaMonedaGarantia(cbMoneda.getSimbolo());
-                }
-                // Inicio [Req. 16-016] jventura 29.02.2016 
-                if (_equiv(crSolicitudCreditoGarantia.getCodigoAplicacionOrigen(), Constante.CODIGO_APLICATIVO_DELFIN)) {
-                   CRSolicitudCredito crSolicitudCredito = crSolicitudCreditoInterfaceLocal.findById(crSolicitudCreditoGarantia.getCrSolicitudCredito().getNumeroSolicitud());
-                   if (crSolicitudCredito.getCodigoMonedaAprobado() != null) {
-                      cbMoneda = cbMonedaInterfaceLocal.findById(crSolicitudCredito.getCodigoMonedaAprobado());
-                      bean.setAbreviaturaMonedaSolicitudCredito(cbMoneda.getSimbolo());
-                   }
-                } else if(_equiv(crSolicitudCreditoGarantia.getCodigoAplicacionOrigen(), Constante.CODIGO_APLICATIVO_BANTIQ)){
-                   if (!_isEmpty(crSolicitudCreditoGarantia.getCrCuentaCreditoExterno().getCodigoMoneda())) {
-                      cbMoneda = cbMonedaInterfaceLocal.findById(crSolicitudCreditoGarantia.getCrCuentaCreditoExterno().getCodigoMoneda());
-                      bean.setAbreviaturaMonedaSolicitudCredito(cbMoneda.getSimbolo());
-                   }
-                }
-                List lstCatalogo=cbCatalogoCheckConstraintInterfaceLocal.findByTablaCampoConstraint("CRDSCGA", "C_APPORI",crSolicitudCreditoGarantia.getCodigoAplicacionOrigen());
-                bean.setAplicativoOrigen(crSolicitudCreditoGarantia.getCodigoAplicacionOrigen());
-                if (!_isEmpty(lstCatalogo)) {
-                    bean.setDescripcionAplicativoOrigen(((CBCatalogoCheckConstraint) lstCatalogo.get(0)).getDescripcion());
-                }
-                // Fin [Req. 16-016]
-            }
-
-            return bean;
+        /** aqui la lista trae en orden descendente al porcentaje escojemos el mayor de ellos es decir el primero **/
+        while (it.hasNext()) {
+            gaTitularGarantia = (GATitularGarantia) it.next();
+            bean.setNombreTitular(gaTitularGarantia.getClPersonas().getNombreoRazonSocial());
+            break;
         }
-        
-     // Inicio [Req. S16-016] jventura 03.03.2016
-        public String garantiaAgregarModificar(String indicadorModificacion,
-                                               Date fechaAplicacion,
-                                               String identificadorGarantiaSolicitud,
-                                               String numeroSolicitud,
-                                               String codigoGarantia,
-                                               Double montoUtilizado,
-                                               String codigoAplicativoOrigen,
-                                               BeanParametrosAuditoria beanParametrosAuditoria) throws RemoteException {
-            String moduleName = "CRBNSolicitudCreditoFacade.garantiaAgregarModificar()";
-            double dblSaldoAnterior = 0;
-            double dblMontoAnterior = 0;
-            double dblMontoUtilizadoNac = 0;
-            double dblMontoUtilizadoExt = 0;
-            double dblMontoDisponibleGarantiaNac = 0;
-            double dblMontoDisponibleGarantiaExt = 0;
-            Date fechaUltimaValorizacion = null;
-            String strIdSolCreGarantia;
-            String strGestionaInspecciones = "";
-            String strError = "";
-            CRSolicitudCreditoGarantia crSolicitudCreditoGarantia;
 
-            String codigoMonedaSolicitud = null;
-            String codigoClienteSolicitud = null;
+        bean.setCodigoGaGarantia(crCuentaCreditoGarantia.getGaGarantia().getCodigoGarantia());
 
-            String codigoAgencia;
-            String codigoEmpresa;
-            String codigoUsuario;
-            String strRemoteHost;
-            String strRemoteAddr;
+        //Relaciï¿½n con CRGarantia
+        if (crCuentaCreditoGarantia.getGaGarantia() != null) {
 
-            
-            
+            GAGarantia gaGarantia = crCuentaCreditoGarantia.getGaGarantia();
+
+            //Tipo/SubTipo
+            GASubTipoGarantia gaSubTipoGarantia = crCuentaCreditoGarantia.getGaGarantia().getGaSubTipoGarantia();
+            GATipoGarantia gaTipoGarantia = gaSubTipoGarantia.getGaTipoGarantia();
+            bean.setTipoSubTipo(new StringBuffer(gaTipoGarantia.getDescripcion()).append("/").append(gaSubTipoGarantia.getDescripcion()).toString());
+
+            //Valor Referencial
+            bean.setValorMercado(gaGarantia.getValorMercado());
+
+            //Valor Comercial
+            bean.setValorComercial(gaGarantia.getValorComercial());
+
+            //Mto Realizaciï¿½n/Valorizaciï¿½n
+            //bean.setMontoValorizacion(objGarantiaData.getValorGarantia());
+
+            //Utilizado Real
+            bean.setMontoUtilizadoReal(gaGarantia.getMontoUtilizadoReal());
+
+            //Disponible Real
+            bean.setMontoDisponibleReal(gaGarantia.getSaldoGarantiaReal());
+
+            //Mto. Comprmetido
+            bean.setMontoComprometido(gaGarantia.getMontoComprometido());
+
+            //Mto. Bloqueado
+            bean.setMontoBloqueado(gaGarantia.getMontoBloqueado());
+
+            //Total Disponible
+            bean.setSaldoDisponibleTotal(gaGarantia.getSaldoDisponibleTotal());
+
+            //DisponibleMonCre
+            bean.setMontoDisponibleMonedaSolicitudCredito(crCuentaCreditoGarantia.getMontoDisponibleMonedaCredito());
+            //DisponibleMonGar
+            bean.setMontoDisponibleMonedaGarantia(crCuentaCreditoGarantia.getMontoDisponibleMonedaGarantia());
+
+            bean.setMontoUtilizadoMonedaGarantia(crCuentaCreditoGarantia.getMontoUtilizadoMonedaGarantia());
+
+            //Fecha Vencimiento
+            //bean.setFechaVencimiento(objGarantiaData.getFechaVencimiento());
+
+            //Identificador
+            bean.setIdSolicitudCreditoGarantia(crCuentaCreditoGarantia.getIdCreditoGarantia());
+
+            //Valor Realizacion
+            bean.setMontoRealizacion(gaGarantia.getMontoRealizacion());
+
+            //Monto Utilizar SC
+            bean.setMontoUtilizadoMonedaSolicitudCredito(crCuentaCreditoGarantia.getMontoUtilizadoMonedaCredito());
+
+            //Monto Utilizar GA
+            bean.setMontoUtilizadoMonedaGarantia(crCuentaCreditoGarantia.getMontoUtilizadoMonedaGarantia());
+
+            //Fecha Tasacion
+            bean.setFechaTasacion(gaGarantia.getFechaTasacion());
+            CBMoneda cbMoneda;
+
+            //Valores Moneda
+            if (gaGarantia.getCodigoMoneda() != null) {
+                cbMoneda = cbMonedaInterfaceLocal.findById(gaGarantia.getCodigoMoneda());
+                //bean.setDescripcionMoneda(objMonedaData.getDescripcion());
+                bean.setAbreviaturaMonedaGarantia(cbMoneda.getSimbolo());
+            }
+
+            // Inicio [Req. 16-016] jventura 29.02.2016
+            if (_equiv(crCuentaCreditoGarantia.getCodigoAplicacionOrigen(), Constante.CODIGO_APLICATIVO_DELFIN)) {
+                CRSolicitudCredito crSolicitudCredito = crSolicitudCreditoInterfaceLocal.findById(crCuentaCreditoGarantia.getCrCuentaCredito().getCrSolicitudCredito().getNumeroSolicitud());
+                if (crSolicitudCredito.getCodigoMonedaAprobado() != null) {
+                    cbMoneda = cbMonedaInterfaceLocal.findById(crSolicitudCredito.getCodigoMonedaAprobado());
+                    bean.setAbreviaturaMonedaSolicitudCredito(cbMoneda.getSimbolo());
+                }
+            } else if (_equiv(crCuentaCreditoGarantia.getCodigoAplicacionOrigen(), Constante.CODIGO_APLICATIVO_BANTIQ)) {
+                if (!_isEmpty(crCuentaCreditoGarantia.getCrCuentaCreditoExterno().getCodigoMoneda())) {
+                    cbMoneda = cbMonedaInterfaceLocal.findById(crCuentaCreditoGarantia.getCrCuentaCreditoExterno().getCodigoMoneda());
+                    bean.setAbreviaturaMonedaSolicitudCredito(cbMoneda.getSimbolo());
+                }
+            }
+            List lstCatalogo = cbCatalogoCheckConstraintInterfaceLocal.findByTablaCampoConstraint("CRDCTGA",
+                                                                                                  "C_APPORI",
+                                                                                                  crCuentaCreditoGarantia.getCodigoAplicacionOrigen());
+            bean.setAplicativoOrigen(crCuentaCreditoGarantia.getCodigoAplicacionOrigen());
+            if (!_isEmpty(lstCatalogo)) {
+                bean.setDescripcionAplicativoOrigen(((CBCatalogoCheckConstraint) lstCatalogo.get(0)).getDescripcion());
+            }
+            // Fin [Req. 16-016]
+        }
+        return bean;
+    }
+
+    private BeanCRSolicitudCreditoGarantia setearBean(CRSolicitudCreditoGarantia crSolicitudCreditoGarantia) throws Exception {
+        BeanCRSolicitudCreditoGarantia bean = new BeanCRSolicitudCreditoGarantia();
+
+        //Titular
+
+        GATitularGarantia objTitularGarantiaL;
+
+        Iterator it = gaTitularGarantiaInterfaceLocal.findByCodigoGarantiaOrderByPorcentajeDesc(crSolicitudCreditoGarantia.getGaGarantia().getCodigoGarantia(),
+                                                                                                "S").iterator();
+
+        /** aqui la lista trae en orden descendente al porcentaje escojemos el mayor de ellos es decir el primero **/
+        while (it.hasNext()) {
+            objTitularGarantiaL = (GATitularGarantia) it.next();
+            CLPersonas clPersonas = clPersonasInterfaceLocal.findById(objTitularGarantiaL.getClPersonas().getCodigoPersona());
+            bean.setNombreTitular(clPersonas.getNombreoRazonSocial());
+
+            break;
+        }
+        //-------------------------------------------------------------------------
+
+        //Cï¿½digo Garantï¿½a
+        bean.setCodigoGaGarantia(crSolicitudCreditoGarantia.getGaGarantia().getCodigoGarantia());
+
+        //Relaciï¿½n con CRGarantia
+        if (crSolicitudCreditoGarantia.getGaGarantia() != null) {
+
+            GAGarantia gaGarantia = gaGarantiaInterfaceLocal.findById(crSolicitudCreditoGarantia.getGaGarantia().getCodigoGarantia());
+
+            //Tipo/SubTipo
+            GASubTipoGarantia gaSubTipoGarantia = gaSubTipoGarantiaInterfaceLocal.findById(gaGarantia.getGaSubTipoGarantia().getId());
+
+            GATipoGarantia gaTipoGarantia = gaTipoGarantiaInterfaceLocal.findById(gaSubTipoGarantia.getGaTipoGarantia().getCodigoTipoGarantia());
+            bean.setTipoSubTipo(new StringBuffer(gaTipoGarantia.getDescripcion()).append("/").append(gaSubTipoGarantia.getDescripcion()).toString());
+
+            //Valor Referencial
+            bean.setValorMercado(gaGarantia.getValorMercado());
+
+            //Valor Comercial
+            bean.setValorComercial(gaGarantia.getValorComercial());
+
+            //Utilizado Real
+            bean.setMontoUtilizadoReal(gaGarantia.getMontoUtilizadoReal());
+
+            //Disponible Real
+            bean.setMontoDisponibleReal(gaGarantia.getSaldoGarantiaReal());
+
+            // Inicio [Req. 16-016] jventura 29.02.2016
+            bean.setSaldoGarantiaReal(gaGarantia.getSaldoGarantiaReal());
+
+            //Mto. Comprmetido
+            bean.setMontoComprometido(gaGarantia.getMontoComprometido());
+
+            //Mto. Bloqueado
+            bean.setMontoBloqueado(gaGarantia.getMontoBloqueado());
+
+            //Total Disponible
+            bean.setSaldoDisponibleTotal(gaGarantia.getSaldoDisponibleTotal());
+
+            //DisponibleMonCre
+            bean.setMontoDisponibleMonedaSolicitudCredito(crSolicitudCreditoGarantia.getMontoDisponibleMonedaSolicitudCredito());
+            //DisponibleMonGar
+            bean.setMontoDisponibleMonedaGarantia(crSolicitudCreditoGarantia.getMontoDisponibleMonedaGarantia());
+
+            //Monto Utilizar
+            bean.setMontoUtilizadoMonedaGarantia(crSolicitudCreditoGarantia.getMontoUtilizadoMonedaGarantia());
+
+            //            Identificador
+            bean.setIdSolicitudCreditoGarantia(crSolicitudCreditoGarantia.getIdSolicitudCreditoGarantia());
+
+            //Valor Realizacion
+            bean.setMontoRealizacion(gaGarantia.getMontoRealizacion());
+
+            //Monto Utilizar SC
+            bean.setMontoUtilizadoMonedaSolicitudCredito(crSolicitudCreditoGarantia.getMontoUtilizadoMonedaSolicitudCredito());
+
+            //Monto Utilizar GA
+            bean.setMontoUtilizadoMonedaGarantia(crSolicitudCreditoGarantia.getMontoUtilizadoMonedaGarantia());
+
+            //Fecha Tasacion
+            bean.setFechaTasacion(gaGarantia.getFechaTasacion());
+            CBMoneda cbMoneda;
+            //Valores Moneda
+            if (gaGarantia.getCodigoMoneda() != null) {
+                cbMoneda = cbMonedaInterfaceLocal.findById(gaGarantia.getCodigoMoneda());
+                bean.setAbreviaturaMonedaGarantia(cbMoneda.getSimbolo());
+            }
+            // Inicio [Req. 16-016] jventura 29.02.2016 
+            if (_equiv(crSolicitudCreditoGarantia.getCodigoAplicacionOrigen(), Constante.CODIGO_APLICATIVO_DELFIN)) {
+                CRSolicitudCredito crSolicitudCredito = crSolicitudCreditoInterfaceLocal.findById(crSolicitudCreditoGarantia.getCrSolicitudCredito().getNumeroSolicitud());
+                if (crSolicitudCredito.getCodigoMonedaAprobado() != null) {
+                    cbMoneda = cbMonedaInterfaceLocal.findById(crSolicitudCredito.getCodigoMonedaAprobado());
+                    bean.setAbreviaturaMonedaSolicitudCredito(cbMoneda.getSimbolo());
+                }
+            } else if (_equiv(crSolicitudCreditoGarantia.getCodigoAplicacionOrigen(),
+                              Constante.CODIGO_APLICATIVO_BANTIQ)) {
+                if (!_isEmpty(crSolicitudCreditoGarantia.getCrCuentaCreditoExterno().getCodigoMoneda())) {
+                    cbMoneda = cbMonedaInterfaceLocal.findById(crSolicitudCreditoGarantia.getCrCuentaCreditoExterno().getCodigoMoneda());
+                    bean.setAbreviaturaMonedaSolicitudCredito(cbMoneda.getSimbolo());
+                }
+            }
+            List lstCatalogo = cbCatalogoCheckConstraintInterfaceLocal.findByTablaCampoConstraint("CRDSCGA",
+                                                                                                  "C_APPORI",
+                                                                                                  crSolicitudCreditoGarantia.getCodigoAplicacionOrigen());
+            bean.setAplicativoOrigen(crSolicitudCreditoGarantia.getCodigoAplicacionOrigen());
+            if (!_isEmpty(lstCatalogo)) {
+                bean.setDescripcionAplicativoOrigen(((CBCatalogoCheckConstraint) lstCatalogo.get(0)).getDescripcion());
+            }
+            // Fin [Req. 16-016]
+        }
+
+        return bean;
+    }
+
+    // Inicio [Req. S16-016] jventura 03.03.2016
+    public String garantiaAgregarModificar(String indicadorModificacion,
+                                           Date fechaAplicacion,
+                                           String identificadorGarantiaSolicitud,
+                                           String numeroSolicitud,
+                                           String codigoGarantia,
+                                           Double montoUtilizado,
+                                           String codigoAplicativoOrigen,
+                                           BeanParametrosAuditoria beanParametrosAuditoria) throws RemoteException {
+        String moduleName = "CRBNSolicitudCreditoFacade.garantiaAgregarModificar()";
+        double dblSaldoAnterior = 0;
+        double dblMontoAnterior = 0;
+        double dblMontoUtilizadoNac = 0;
+        double dblMontoUtilizadoExt = 0;
+        double dblMontoDisponibleGarantiaNac = 0;
+        double dblMontoDisponibleGarantiaExt = 0;
+        Date fechaUltimaValorizacion = null;
+        String strIdSolCreGarantia;
+        String strGestionaInspecciones = "";
+        String strError = "";
+        CRSolicitudCreditoGarantia crSolicitudCreditoGarantia;
+
+        String codigoMonedaSolicitud = null;
+        String codigoClienteSolicitud = null;
+
+        String codigoAgencia;
+        String codigoEmpresa;
+        String codigoUsuario;
+        String strRemoteHost;
+        String strRemoteAddr;
+
         try {
             codigoEmpresa = beanParametrosAuditoria.getCodigoEmpresa();
             codigoAgencia = beanParametrosAuditoria.getCodigoAgencia();
@@ -2727,283 +2663,283 @@
                         ctx.setRollbackOnly();
                         return "421";
                     }
-                    
-                   } catch (Exception e) {
-                       e.printStackTrace();
-                   }
-                   //Validar si la Garantia es Vigente
-                   if (!"VG".equals(gaGarantia.getGaEstadoGarantia().getCodigoEstado())) {
-                       ctx.setRollbackOnly();
-                       return "227";
-                   }
-                   if (gaGarantia.getFechaBloqueo() != null) {
-                       ctx.setRollbackOnly();
-                       return "1011";
-                   }
-               }
-               if (montoUtilizado.doubleValue() <= 0) {
-                   ctx.setRollbackOnly();
-                   return "471";
-               }
-               // Inicio [Req. S16-016] jventura 03.03.2016
-               if (_equiv(codigoAplicativoOrigen, Constante.CODIGO_APLICATIVO_DELFIN)) {
-                   CRSolicitudCredito crSolicitudCredito = crSolicitudCreditoInterfaceLocal.findById(numeroSolicitud);
-                   if (crSolicitudCredito == null) {
-                       ctx.setRollbackOnly();
-                       return "415";
-                   }
-                   codigoMonedaSolicitud = crSolicitudCredito.getCodigoMonedaAprobado();
-               } else if (_equiv(codigoAplicativoOrigen, Constante.CODIGO_APLICATIVO_BANTIQ)) {
-                   final PropertyParams propertyParams = new PropertyParams();
-                   propertyParams.addProperty("numeroExterno", numeroSolicitud);
-                   propertyParams.addProperty("tipoRegistro", "SOL");
-                   final List<CRCuentaCreditoExterno> listCRCuentaCreditoExterno = crCuentaCreditoExternoInterfaceLocal.findByProperties(propertyParams);
-                   if (_isEmpty(listCRCuentaCreditoExterno)) {
-                       ctx.setRollbackOnly();
-                       return "415";
-                   }
-                   for (final CRCuentaCreditoExterno crCuentaCreditoExterno : listCRCuentaCreditoExterno) {
-                       if (!_inList(crCuentaCreditoExterno.getEstadoSolicitud(),
-                                    Constante.SOLICITUD_ESTADO_APERTURA,
-                                    Constante.SOLICITUD_ESTADO_APROBADO)) {
-                           return "1324";
-                       }
-                       codigoClienteSolicitud = crCuentaCreditoExterno.getClPersonas().getCodigoPersona();
-                       codigoMonedaSolicitud = crCuentaCreditoExterno.getCodigoMoneda();
-                       break;
-                   }
-               }
-               // Fin [Req. S16-016]
-               String strMonedaNacional = valorMonedaNacional(codigoEmpresa, codigoUsuario);
-               Double dblImporte;
-               Double nTCMonGarantiaAMonSolicitud = 1.00;
-               Double nTCMonGarantiaAMonNacional = 1.00;
-               Double nTCMonSolicitudAMonGarantia = 1.00;
-               if (!gaGarantia.getCodigoMoneda().equals(codigoMonedaSolicitud)) {
-                   Map TipoCambioGarantia = opBNGeneralesFacadeInterfaceLocal.obtenerTipoCambio(codigoEmpresa,
-                                                                                                codigoAgencia,
-                                                                                                new java.sql.Date(fechaAplicacion.getTime()),
-                                                                                                codigoMonedaSolicitud,// [Req. S16-016] jventura 03.03.2016
-                                                                                                gaGarantia.getCodigoMoneda(),
-                                                                                                codigoEmpresa + "0000002",
-                                                                                                "003",
-                                                                                                0.00,
-                                                                                                codigoClienteSolicitud,// [Req. S16-016] jventura 03.03.2016
-                                                                                                codigoUsuario);
-                   strError = TipoCambioGarantia.get("strError").toString();
-                   if (!"000".equals(strError)) {
-                       ctx.setRollbackOnly();
-                       return strError;
-                   }
-                   nTCMonGarantiaAMonSolicitud = (Double) TipoCambioGarantia.get("factorConversion");
-                   dblImporte = (Double) TipoCambioGarantia.get("importeCambio");
-                   Map TipoCambioSolicitud = opBNGeneralesFacadeInterfaceLocal.obtenerTipoCambio(codigoEmpresa,
-                                                                                                 codigoAgencia,
-                                                                                                 new java.sql.Date(fechaAplicacion.getTime()),
-                                                                                                 gaGarantia.getCodigoMoneda(),
-                                                                                                 codigoMonedaSolicitud,// [Req. S16-016] jventura 03.03.2016
-                                                                                                 codigoEmpresa + "0000002",
-                                                                                                 "003",
-                                                                                                 0.00,
-                                                                                                 codigoClienteSolicitud,// [Req. S16-016] jventura 03.03.2016
-                                                                                                 codigoUsuario);
-                   strError = TipoCambioSolicitud.get("strError").toString();
-                   if (!"000".equals(strError)) {
-                       ctx.setRollbackOnly();
-                       return strError;
-                   }
-                   nTCMonSolicitudAMonGarantia = (Double) TipoCambioSolicitud.get("factorConversion");
-                   dblImporte = (Double) TipoCambioSolicitud.get("importeCambio");
-               }
-               Double nMontoAnterior;
-               if (indicadorModificacion.equals("N")) {
-                   nMontoAnterior = 0.00;
-                   strIdSolCreGarantia = cbCorrelativoInterfaceLocal.GenerarCorrelativo(codigoEmpresa,
-                                                                                        "CRDSCGA",
-                                                                                        15,
-                                                                                        codigoUsuario,
-                                                                                        strRemoteHost,
-                                                                                        strRemoteAddr);
-               } else {
-                   crSolicitudCreditoGarantia = crSolicitudCreditoGarantiaInterfaceLocal.findById(identificadorGarantiaSolicitud);
-                   nMontoAnterior = crSolicitudCreditoGarantia.getMontoUtilizadoMonedaGarantia();
-                   strIdSolCreGarantia = crSolicitudCreditoGarantia.getIdSolicitudCreditoGarantia();
-               }
-               Double dblUtilizadoMonGarantia = montoUtilizado;
-               Double dblUtilizadoMonSolictud = montoUtilizado;
-               Double nTCMontoUtilizadoMonedaNacional = montoUtilizado;
-               if (!gaGarantia.getCodigoMoneda().equals(codigoMonedaSolicitud)) {// [Req. S16-016] jventura 03.03.2016
-                   if (!gaGarantia.getCodigoMoneda().equals("1")) {
-                       dblUtilizadoMonSolictud = dblUtilizadoMonGarantia * nTCMonSolicitudAMonGarantia;
-                   } else {
-                       dblUtilizadoMonSolictud = dblUtilizadoMonGarantia / nTCMonSolicitudAMonGarantia;
-                   }
-               }
-               if (!gaGarantia.getCodigoMoneda().equals(strMonedaNacional)) {
-                   Map TipoCambioNacional = opBNGeneralesFacadeInterfaceLocal.obtenerTipoCambio(codigoEmpresa,
-                                                                                                codigoAgencia,
-                                                                                                new java.sql.Date(fechaAplicacion.getTime()),
-                                                                                                strMonedaNacional,
-                                                                                                gaGarantia.getCodigoMoneda(),
-                                                                                                codigoEmpresa + "0000002",
-                                                                                                "003",
-                                                                                                dblUtilizadoMonGarantia,
-                                                                                                codigoClienteSolicitud,// [Req. S16-016] jventura 03.03.2016
-                                                                                                codigoUsuario);
-                   strError = TipoCambioNacional.get("strError").toString();
-                   if (!"000".equals(strError)) {
-                       ctx.setRollbackOnly();
-                       return strError;
-                   }
-                   nTCMonGarantiaAMonNacional = (Double) TipoCambioNacional.get("factorConversion");
-                   nTCMontoUtilizadoMonedaNacional = (Double) TipoCambioNacional.get("importeCambio");
-               }
-               Double nTCMontoDisponibleMonedaNacional = gaGarantia.getSaldoDisponibleTotal();
-               if (!gaGarantia.getCodigoMoneda().equals(strMonedaNacional)) {
-                   Map TipoCambioNacional = opBNGeneralesFacadeInterfaceLocal.obtenerTipoCambio(codigoEmpresa,
-                                                                                                codigoAgencia,
-                                                                                                new java.sql.Date(fechaAplicacion.getTime()),
-                                                                                                strMonedaNacional,
-                                                                                                gaGarantia.getCodigoMoneda(),
-                                                                                                codigoEmpresa + "0000002",
-                                                                                                "003",
-                                                                                                gaGarantia.getSaldoDisponibleTotal(),
-                                                                                                codigoClienteSolicitud,// [Req. S16-016] jventura 03.03.2016
-                                                                                                codigoUsuario);
-                   strError = TipoCambioNacional.get("strError").toString();
-                   if (!"000".equals(strError)) {
-                       ctx.setRollbackOnly();
-                       return strError;
-                   }
-                   nTCMonGarantiaAMonNacional = (Double) TipoCambioNacional.get("factorConversion");
-                   nTCMontoDisponibleMonedaNacional = (Double) TipoCambioNacional.get("importeCambio");
-               }
-               if ("S".equals(indicadorModificacion)) {
-                   crSolicitudCreditoGarantia = crSolicitudCreditoGarantiaInterfaceLocal.findById(identificadorGarantiaSolicitud);
-                   dblMontoAnterior = crSolicitudCreditoGarantia.getMontoUtilizadoMonedaGarantia();
-                   crSolicitudCreditoGarantia.setGaGarantia(gaGarantia);
-                   // [Req. S16-016] jventura 03.03.2016
-                   crSolicitudCreditoGarantia.setNumeroSolicitudCredito(numeroSolicitud);
-                   crSolicitudCreditoGarantia.setFechaAsignacionCredito(fechaAplicacion);
-                   crSolicitudCreditoGarantia.setFechaTasacion(gaGarantia.getFechaTasacion());
-                   crSolicitudCreditoGarantia.setValorComercial(gaGarantia.getValorComercial());
-                   crSolicitudCreditoGarantia.setValorMercado(gaGarantia.getValorMercado());
-                   crSolicitudCreditoGarantia.setMontoRealizacion(gaGarantia.getMontoRealizacion());
-                   crSolicitudCreditoGarantia.setTipoCambioMonedaGarantiaMonedaSolicitudCredito(nTCMonGarantiaAMonSolicitud);
-                   crSolicitudCreditoGarantia.setTipoCambioMonedaGarantiaMonedaNacional(nTCMonGarantiaAMonNacional);
-                   crSolicitudCreditoGarantia.setMontoUtilizadoMonedaGarantia(dblUtilizadoMonGarantia);
-                   crSolicitudCreditoGarantia.setMontoUtilizadoMonedaSolicitudCredito(dblUtilizadoMonSolictud);
-                   crSolicitudCreditoGarantia.setMontoUtilizadoMonedaNacional(nTCMontoUtilizadoMonedaNacional);
-                   crSolicitudCreditoGarantia.setMontoDisponibleMonedaGarantia(gaGarantia.getSaldoDisponibleTotal());
-                   // [Req. S16-016] jventura 03.03.2016
-                   if (gaGarantia.getCodigoMoneda().equals("1") && codigoMonedaSolicitud.equals("2")) {
-                       crSolicitudCreditoGarantia.setMontoDisponibleMonedaSolicitudCredito(gaGarantia.getSaldoDisponibleTotal() / nTCMonGarantiaAMonSolicitud);
-                   } else {
-                       crSolicitudCreditoGarantia.setMontoDisponibleMonedaSolicitudCredito(gaGarantia.getSaldoDisponibleTotal() * nTCMonGarantiaAMonSolicitud);
-                   }
-                   crSolicitudCreditoGarantia.setMontoDisponibleMonedaNacional(nTCMontoDisponibleMonedaNacional);
-                   crSolicitudCreditoGarantia.setEstadoRegistro("S");
-                   crSolicitudCreditoGarantia.setFechaModificacion(new Timestamp(System.currentTimeMillis()));
-                   crSolicitudCreditoGarantia.setUsuarioModificacion(codigoUsuario);
-                   crSolicitudCreditoGarantia.setTerminalModificacion(strRemoteHost);
-                   crSolicitudCreditoGarantia.setIpModificacion(strRemoteAddr);
-                   crSolicitudCreditoGarantiaInterfaceLocal.update(crSolicitudCreditoGarantia);
-               } else {
-                   crSolicitudCreditoGarantia = new CRSolicitudCreditoGarantia();
-                   crSolicitudCreditoGarantia.setIdSolicitudCreditoGarantia(strIdSolCreGarantia);
-                   crSolicitudCreditoGarantia.setGaGarantia(gaGarantia);
-                   // [Req. S16-016] jventura 03.03.2016
-                   crSolicitudCreditoGarantia.setNumeroSolicitudCredito(numeroSolicitud);
-                   crSolicitudCreditoGarantia.setFechaAsignacionCredito(fechaAplicacion);
-                   crSolicitudCreditoGarantia.setFechaTasacion(gaGarantia.getFechaTasacion());
-                   crSolicitudCreditoGarantia.setValorComercial(gaGarantia.getValorComercial());
-                   crSolicitudCreditoGarantia.setValorMercado(gaGarantia.getValorMercado());
-                   crSolicitudCreditoGarantia.setMontoRealizacion(gaGarantia.getMontoRealizacion());
-                   crSolicitudCreditoGarantia.setTipoCambioMonedaGarantiaMonedaSolicitudCredito(nTCMonGarantiaAMonSolicitud);
-                   crSolicitudCreditoGarantia.setTipoCambioMonedaGarantiaMonedaNacional(nTCMonGarantiaAMonNacional);
-                   crSolicitudCreditoGarantia.setMontoUtilizadoMonedaGarantia(dblUtilizadoMonGarantia);
-                   crSolicitudCreditoGarantia.setMontoUtilizadoMonedaSolicitudCredito(dblUtilizadoMonSolictud);
-                   crSolicitudCreditoGarantia.setMontoUtilizadoMonedaNacional(dblUtilizadoMonGarantia * nTCMonGarantiaAMonNacional);
-                   crSolicitudCreditoGarantia.setMontoDisponibleMonedaGarantia(gaGarantia.getSaldoDisponibleTotal());
-                   // [Req. S16-016] jventura 03.03.2016
-                   if (gaGarantia.getCodigoMoneda().equals("1") && codigoMonedaSolicitud.equals("2")) {
-                       crSolicitudCreditoGarantia.setMontoDisponibleMonedaSolicitudCredito(gaGarantia.getSaldoDisponibleTotal() / nTCMonGarantiaAMonSolicitud);
-                   } else {
-                       crSolicitudCreditoGarantia.setMontoDisponibleMonedaSolicitudCredito(gaGarantia.getSaldoDisponibleTotal() * nTCMonGarantiaAMonSolicitud);
-                   }
-                   crSolicitudCreditoGarantia.setMontoDisponibleMonedaNacional(gaGarantia.getSaldoDisponibleTotal() * nTCMonGarantiaAMonNacional);
-                   crSolicitudCreditoGarantia.setEstadoRegistro("S");
-                   crSolicitudCreditoGarantia.setFechaInsercion(new Timestamp(System.currentTimeMillis()));
-                   crSolicitudCreditoGarantia.setUsuarioInsercion(codigoUsuario);
-                   crSolicitudCreditoGarantia.setTerminalInsercion(strRemoteHost);
-                   crSolicitudCreditoGarantia.setIpInsercion(strRemoteAddr);
-                   // [Req. S16-016] jventura 26.02.2016
-                   crSolicitudCreditoGarantia.setCodigoAplicacionOrigen(codigoAplicativoOrigen);
-                   crSolicitudCreditoGarantiaInterfaceLocal.save(crSolicitudCreditoGarantia);
-               }
-               // Inicio [CC15-063] lnarvaez 21.10.2015
-               gaGarantiaFacadeLocal.setUITerminal(beanParametrosAuditoria);
-               // Fin [CC15-063]
-               strError = gaGarantiaFacadeLocal.actualizaSaldo(codigoGarantia,
-                                                               "C",
-                                                               new Double(dblMontoAnterior),
-                                                               dblUtilizadoMonGarantia);
-               if (!NO_ERROR.equals(strError)) {
-                   ctx.setRollbackOnly();
-                   return strError;
-               }
 
-               // Inicio [Ticket#9497] esalazar 28.11.2016: Impresión Clientes y Avales
-               if (_equiv(codigoAplicativoOrigen, Constante.CODIGO_APLICATIVO_DELFIN)) {
-                   //AGREGAR PERSONA RELACIONADA A LA GARANTIA PARA INSPECCION
-                   // [Req. S16-016] jventura 26.02.2016
-                   Map mapConstante = (Map) crGEGeneralesFacadeInterfaceLocal.valorConstante(codigoEmpresa,
-                                                                                             "CR_GESTIONA_INSPECCIONES",
-                                                                                             "");
-                   if (mapConstante != null) {
-                       strGestionaInspecciones = (String) mapConstante.get("strConstante");
-                   }
-                   GASubTipoGarantia subtipo = null;
-                   if (crSolicitudCreditoGarantia.getGaGarantia() != null) {
-                       List<GAGarantia> lstgarantia = (ArrayList<GAGarantia>) gaGarantiaInterfaceLocal.findByCodigoGarantia(crSolicitudCreditoGarantia.getGaGarantia().getCodigoGarantia());
-                       GAGarantia garantia = lstgarantia.get(0);
-                       subtipo = gaSubTipoGarantiaInterfaceLocal.findById(garantia.getGaSubTipoGarantia().getId());
-                   }
-                   if ("N".equals(indicadorModificacion) && "S".equals(strGestionaInspecciones) && subtipo != null &&
-                   //gliceta 08.11.2011: CRO - Mejoras Garantias
-                   //subtipo.getGaTipoGarantia().getIndTipoGarantiaEsAval().equals("S")){
-                   subtipo.getIndSubTipoGarantiaEsAval().equals("S")) {
-                       List<GATitularGarantia> lstTiGa = gaTitularGarantiaInterfaceLocal.findByCodigoGarantiaOrderByPorcentajeDesc(crSolicitudCreditoGarantia.getGaGarantia().getCodigoGarantia(),
-                                                                                                                                   "S");
-                       for (int i = 0; i < lstTiGa.size(); i++) {
-                           GATitularGarantia titular = lstTiGa.get(i);
-                           //                   Creamos registro de Personas relacionadas a la Solicitud de Credito
-                           strError = personasRelacionadasRegistra(codigoEmpresa,
-                                                                   codigoAgencia,
-                                                                   numeroSolicitud,
-                                                                   titular.getClPersonas().getCodigoPersona(),
-                                                                   "AV",
-                                                                   "N",
-                                                                   codigoUsuario,
-                                                                   strRemoteHost,
-                                                                   strRemoteAddr);
-                       }
-                       if (strError.equals(NO_ERROR)) {
-                           strError = asignaInspeccion(codigoEmpresa, codigoAgencia, numeroSolicitud, codigoUsuario);
-                       }
-                   }
-                   if (!NO_ERROR.equals(strError)) {
-                       ctx.setRollbackOnly();
-                       return strError;
-                   }
-               }
-               // Fin [Ticket#9497]
-           } catch (Exception e) {
-               e.printStackTrace();
-               throw new RemoteException(e.getMessage());
-           }
-           return NO_ERROR;
-       }
+                } catch (Exception e) {
+                    e.printStackTrace();
+                }
+                //Validar si la Garantia es Vigente
+                if (!"VG".equals(gaGarantia.getGaEstadoGarantia().getCodigoEstado())) {
+                    ctx.setRollbackOnly();
+                    return "227";
+                }
+                if (gaGarantia.getFechaBloqueo() != null) {
+                    ctx.setRollbackOnly();
+                    return "1011";
+                }
+            }
+            if (montoUtilizado.doubleValue() <= 0) {
+                ctx.setRollbackOnly();
+                return "471";
+            }
+            // Inicio [Req. S16-016] jventura 03.03.2016
+            if (_equiv(codigoAplicativoOrigen, Constante.CODIGO_APLICATIVO_DELFIN)) {
+                CRSolicitudCredito crSolicitudCredito = crSolicitudCreditoInterfaceLocal.findById(numeroSolicitud);
+                if (crSolicitudCredito == null) {
+                    ctx.setRollbackOnly();
+                    return "415";
+                }
+                codigoMonedaSolicitud = crSolicitudCredito.getCodigoMonedaAprobado();
+            } else if (_equiv(codigoAplicativoOrigen, Constante.CODIGO_APLICATIVO_BANTIQ)) {
+                final PropertyParams propertyParams = new PropertyParams();
+                propertyParams.addProperty("numeroExterno", numeroSolicitud);
+                propertyParams.addProperty("tipoRegistro", "SOL");
+                final List<CRCuentaCreditoExterno> listCRCuentaCreditoExterno = crCuentaCreditoExternoInterfaceLocal.findByProperties(propertyParams);
+                if (_isEmpty(listCRCuentaCreditoExterno)) {
+                    ctx.setRollbackOnly();
+                    return "415";
+                }
+                for (final CRCuentaCreditoExterno crCuentaCreditoExterno : listCRCuentaCreditoExterno) {
+                    if (!_inList(crCuentaCreditoExterno.getEstadoSolicitud(),
+                                 Constante.SOLICITUD_ESTADO_APERTURA,
+                                 Constante.SOLICITUD_ESTADO_APROBADO)) {
+                        return "1324";
+                    }
+                    codigoClienteSolicitud = crCuentaCreditoExterno.getClPersonas().getCodigoPersona();
+                    codigoMonedaSolicitud = crCuentaCreditoExterno.getCodigoMoneda();
+                    break;
+                }
+            }
+            // Fin [Req. S16-016]
+            String strMonedaNacional = valorMonedaNacional(codigoEmpresa, codigoUsuario);
+            Double dblImporte;
+            Double nTCMonGarantiaAMonSolicitud = 1.00;
+            Double nTCMonGarantiaAMonNacional = 1.00;
+            Double nTCMonSolicitudAMonGarantia = 1.00;
+            if (!gaGarantia.getCodigoMoneda().equals(codigoMonedaSolicitud)) {
+                Map TipoCambioGarantia = opBNGeneralesFacadeInterfaceLocal.obtenerTipoCambio(codigoEmpresa,
+                                                                                             codigoAgencia,
+                                                                                             new java.sql.Date(fechaAplicacion.getTime()),
+                                                                                             codigoMonedaSolicitud,// [Req. S16-016] jventura 03.03.2016
+                                                                                             gaGarantia.getCodigoMoneda(),
+                                                                                             codigoEmpresa + "0000002",
+                                                                                             "003",
+                                                                                             0.00,
+                                                                                             codigoClienteSolicitud,// [Req. S16-016] jventura 03.03.2016
+                                                                                             codigoUsuario);
+                strError = TipoCambioGarantia.get("strError").toString();
+                if (!"000".equals(strError)) {
+                    ctx.setRollbackOnly();
+                    return strError;
+                }
+                nTCMonGarantiaAMonSolicitud = (Double) TipoCambioGarantia.get("factorConversion");
+                dblImporte = (Double) TipoCambioGarantia.get("importeCambio");
+                Map TipoCambioSolicitud = opBNGeneralesFacadeInterfaceLocal.obtenerTipoCambio(codigoEmpresa,
+                                                                                              codigoAgencia,
+                                                                                              new java.sql.Date(fechaAplicacion.getTime()),
+                                                                                              gaGarantia.getCodigoMoneda(),
+                                                                                              codigoMonedaSolicitud,// [Req. S16-016] jventura 03.03.2016
+                                                                                              codigoEmpresa + "0000002",
+                                                                                              "003",
+                                                                                              0.00,
+                                                                                              codigoClienteSolicitud,// [Req. S16-016] jventura 03.03.2016
+                                                                                              codigoUsuario);
+                strError = TipoCambioSolicitud.get("strError").toString();
+                if (!"000".equals(strError)) {
+                    ctx.setRollbackOnly();
+                    return strError;
+                }
+                nTCMonSolicitudAMonGarantia = (Double) TipoCambioSolicitud.get("factorConversion");
+                dblImporte = (Double) TipoCambioSolicitud.get("importeCambio");
+            }
+            Double nMontoAnterior;
+            if (indicadorModificacion.equals("N")) {
+                nMontoAnterior = 0.00;
+                strIdSolCreGarantia = cbCorrelativoInterfaceLocal.GenerarCorrelativo(codigoEmpresa,
+                                                                                     "CRDSCGA",
+                                                                                     15,
+                                                                                     codigoUsuario,
+                                                                                     strRemoteHost,
+                                                                                     strRemoteAddr);
+            } else {
+                crSolicitudCreditoGarantia = crSolicitudCreditoGarantiaInterfaceLocal.findById(identificadorGarantiaSolicitud);
+                nMontoAnterior = crSolicitudCreditoGarantia.getMontoUtilizadoMonedaGarantia();
+                strIdSolCreGarantia = crSolicitudCreditoGarantia.getIdSolicitudCreditoGarantia();
+            }
+            Double dblUtilizadoMonGarantia = montoUtilizado;
+            Double dblUtilizadoMonSolictud = montoUtilizado;
+            Double nTCMontoUtilizadoMonedaNacional = montoUtilizado;
+            if (!gaGarantia.getCodigoMoneda().equals(codigoMonedaSolicitud)) {// [Req. S16-016] jventura 03.03.2016
+                if (!gaGarantia.getCodigoMoneda().equals("1")) {
+                    dblUtilizadoMonSolictud = dblUtilizadoMonGarantia * nTCMonSolicitudAMonGarantia;
+                } else {
+                    dblUtilizadoMonSolictud = dblUtilizadoMonGarantia / nTCMonSolicitudAMonGarantia;
+                }
+            }
+            if (!gaGarantia.getCodigoMoneda().equals(strMonedaNacional)) {
+                Map TipoCambioNacional = opBNGeneralesFacadeInterfaceLocal.obtenerTipoCambio(codigoEmpresa,
+                                                                                             codigoAgencia,
+                                                                                             new java.sql.Date(fechaAplicacion.getTime()),
+                                                                                             strMonedaNacional,
+                                                                                             gaGarantia.getCodigoMoneda(),
+                                                                                             codigoEmpresa + "0000002",
+                                                                                             "003",
+                                                                                             dblUtilizadoMonGarantia,
+                                                                                             codigoClienteSolicitud,// [Req. S16-016] jventura 03.03.2016
+                                                                                             codigoUsuario);
+                strError = TipoCambioNacional.get("strError").toString();
+                if (!"000".equals(strError)) {
+                    ctx.setRollbackOnly();
+                    return strError;
+                }
+                nTCMonGarantiaAMonNacional = (Double) TipoCambioNacional.get("factorConversion");
+                nTCMontoUtilizadoMonedaNacional = (Double) TipoCambioNacional.get("importeCambio");
+            }
+            Double nTCMontoDisponibleMonedaNacional = gaGarantia.getSaldoDisponibleTotal();
+            if (!gaGarantia.getCodigoMoneda().equals(strMonedaNacional)) {
+                Map TipoCambioNacional = opBNGeneralesFacadeInterfaceLocal.obtenerTipoCambio(codigoEmpresa,
+                                                                                             codigoAgencia,
+                                                                                             new java.sql.Date(fechaAplicacion.getTime()),
+                                                                                             strMonedaNacional,
+                                                                                             gaGarantia.getCodigoMoneda(),
+                                                                                             codigoEmpresa + "0000002",
+                                                                                             "003",
+                                                                                             gaGarantia.getSaldoDisponibleTotal(),
+                                                                                             codigoClienteSolicitud,// [Req. S16-016] jventura 03.03.2016
+                                                                                             codigoUsuario);
+                strError = TipoCambioNacional.get("strError").toString();
+                if (!"000".equals(strError)) {
+                    ctx.setRollbackOnly();
+                    return strError;
+                }
+                nTCMonGarantiaAMonNacional = (Double) TipoCambioNacional.get("factorConversion");
+                nTCMontoDisponibleMonedaNacional = (Double) TipoCambioNacional.get("importeCambio");
+            }
+            if ("S".equals(indicadorModificacion)) {
+                crSolicitudCreditoGarantia = crSolicitudCreditoGarantiaInterfaceLocal.findById(identificadorGarantiaSolicitud);
+                dblMontoAnterior = crSolicitudCreditoGarantia.getMontoUtilizadoMonedaGarantia();
+                crSolicitudCreditoGarantia.setGaGarantia(gaGarantia);
+                // [Req. S16-016] jventura 03.03.2016
+                crSolicitudCreditoGarantia.setNumeroSolicitudCredito(numeroSolicitud);
+                crSolicitudCreditoGarantia.setFechaAsignacionCredito(fechaAplicacion);
+                crSolicitudCreditoGarantia.setFechaTasacion(gaGarantia.getFechaTasacion());
+                crSolicitudCreditoGarantia.setValorComercial(gaGarantia.getValorComercial());
+                crSolicitudCreditoGarantia.setValorMercado(gaGarantia.getValorMercado());
+                crSolicitudCreditoGarantia.setMontoRealizacion(gaGarantia.getMontoRealizacion());
+                crSolicitudCreditoGarantia.setTipoCambioMonedaGarantiaMonedaSolicitudCredito(nTCMonGarantiaAMonSolicitud);
+                crSolicitudCreditoGarantia.setTipoCambioMonedaGarantiaMonedaNacional(nTCMonGarantiaAMonNacional);
+                crSolicitudCreditoGarantia.setMontoUtilizadoMonedaGarantia(dblUtilizadoMonGarantia);
+                crSolicitudCreditoGarantia.setMontoUtilizadoMonedaSolicitudCredito(dblUtilizadoMonSolictud);
+                crSolicitudCreditoGarantia.setMontoUtilizadoMonedaNacional(nTCMontoUtilizadoMonedaNacional);
+                crSolicitudCreditoGarantia.setMontoDisponibleMonedaGarantia(gaGarantia.getSaldoDisponibleTotal());
+                // [Req. S16-016] jventura 03.03.2016
+                if (gaGarantia.getCodigoMoneda().equals("1") && codigoMonedaSolicitud.equals("2")) {
+                    crSolicitudCreditoGarantia.setMontoDisponibleMonedaSolicitudCredito(gaGarantia.getSaldoDisponibleTotal() / nTCMonGarantiaAMonSolicitud);
+                } else {
+                    crSolicitudCreditoGarantia.setMontoDisponibleMonedaSolicitudCredito(gaGarantia.getSaldoDisponibleTotal() * nTCMonGarantiaAMonSolicitud);
+                }
+                crSolicitudCreditoGarantia.setMontoDisponibleMonedaNacional(nTCMontoDisponibleMonedaNacional);
+                crSolicitudCreditoGarantia.setEstadoRegistro("S");
+                crSolicitudCreditoGarantia.setFechaModificacion(new Timestamp(System.currentTimeMillis()));
+                crSolicitudCreditoGarantia.setUsuarioModificacion(codigoUsuario);
+                crSolicitudCreditoGarantia.setTerminalModificacion(strRemoteHost);
+                crSolicitudCreditoGarantia.setIpModificacion(strRemoteAddr);
+                crSolicitudCreditoGarantiaInterfaceLocal.update(crSolicitudCreditoGarantia);
+            } else {
+                crSolicitudCreditoGarantia = new CRSolicitudCreditoGarantia();
+                crSolicitudCreditoGarantia.setIdSolicitudCreditoGarantia(strIdSolCreGarantia);
+                crSolicitudCreditoGarantia.setGaGarantia(gaGarantia);
+                // [Req. S16-016] jventura 03.03.2016
+                crSolicitudCreditoGarantia.setNumeroSolicitudCredito(numeroSolicitud);
+                crSolicitudCreditoGarantia.setFechaAsignacionCredito(fechaAplicacion);
+                crSolicitudCreditoGarantia.setFechaTasacion(gaGarantia.getFechaTasacion());
+                crSolicitudCreditoGarantia.setValorComercial(gaGarantia.getValorComercial());
+                crSolicitudCreditoGarantia.setValorMercado(gaGarantia.getValorMercado());
+                crSolicitudCreditoGarantia.setMontoRealizacion(gaGarantia.getMontoRealizacion());
+                crSolicitudCreditoGarantia.setTipoCambioMonedaGarantiaMonedaSolicitudCredito(nTCMonGarantiaAMonSolicitud);
+                crSolicitudCreditoGarantia.setTipoCambioMonedaGarantiaMonedaNacional(nTCMonGarantiaAMonNacional);
+                crSolicitudCreditoGarantia.setMontoUtilizadoMonedaGarantia(dblUtilizadoMonGarantia);
+                crSolicitudCreditoGarantia.setMontoUtilizadoMonedaSolicitudCredito(dblUtilizadoMonSolictud);
+                crSolicitudCreditoGarantia.setMontoUtilizadoMonedaNacional(dblUtilizadoMonGarantia * nTCMonGarantiaAMonNacional);
+                crSolicitudCreditoGarantia.setMontoDisponibleMonedaGarantia(gaGarantia.getSaldoDisponibleTotal());
+                // [Req. S16-016] jventura 03.03.2016
+                if (gaGarantia.getCodigoMoneda().equals("1") && codigoMonedaSolicitud.equals("2")) {
+                    crSolicitudCreditoGarantia.setMontoDisponibleMonedaSolicitudCredito(gaGarantia.getSaldoDisponibleTotal() / nTCMonGarantiaAMonSolicitud);
+                } else {
+                    crSolicitudCreditoGarantia.setMontoDisponibleMonedaSolicitudCredito(gaGarantia.getSaldoDisponibleTotal() * nTCMonGarantiaAMonSolicitud);
+                }
+                crSolicitudCreditoGarantia.setMontoDisponibleMonedaNacional(gaGarantia.getSaldoDisponibleTotal() * nTCMonGarantiaAMonNacional);
+                crSolicitudCreditoGarantia.setEstadoRegistro("S");
+                crSolicitudCreditoGarantia.setFechaInsercion(new Timestamp(System.currentTimeMillis()));
+                crSolicitudCreditoGarantia.setUsuarioInsercion(codigoUsuario);
+                crSolicitudCreditoGarantia.setTerminalInsercion(strRemoteHost);
+                crSolicitudCreditoGarantia.setIpInsercion(strRemoteAddr);
+                // [Req. S16-016] jventura 26.02.2016
+                crSolicitudCreditoGarantia.setCodigoAplicacionOrigen(codigoAplicativoOrigen);
+                crSolicitudCreditoGarantiaInterfaceLocal.save(crSolicitudCreditoGarantia);
+            }
+            // Inicio [CC15-063] lnarvaez 21.10.2015
+            gaGarantiaFacadeLocal.setUITerminal(beanParametrosAuditoria);
+            // Fin [CC15-063]
+            strError = gaGarantiaFacadeLocal.actualizaSaldo(codigoGarantia,
+                                                            "C",
+                                                            new Double(dblMontoAnterior),
+                                                            dblUtilizadoMonGarantia);
+            if (!NO_ERROR.equals(strError)) {
+                ctx.setRollbackOnly();
+                return strError;
+            }
+
+            // Inicio [Ticket#9497] esalazar 28.11.2016: Impresión Clientes y Avales
+            if (_equiv(codigoAplicativoOrigen, Constante.CODIGO_APLICATIVO_DELFIN)) {
+                //AGREGAR PERSONA RELACIONADA A LA GARANTIA PARA INSPECCION
+                // [Req. S16-016] jventura 26.02.2016
+                Map mapConstante = (Map) crGEGeneralesFacadeInterfaceLocal.valorConstante(codigoEmpresa,
+                                                                                          "CR_GESTIONA_INSPECCIONES",
+                                                                                          "");
+                if (mapConstante != null) {
+                    strGestionaInspecciones = (String) mapConstante.get("strConstante");
+                }
+                GASubTipoGarantia subtipo = null;
+                if (crSolicitudCreditoGarantia.getGaGarantia() != null) {
+                    List<GAGarantia> lstgarantia = (ArrayList<GAGarantia>) gaGarantiaInterfaceLocal.findByCodigoGarantia(crSolicitudCreditoGarantia.getGaGarantia().getCodigoGarantia());
+                    GAGarantia garantia = lstgarantia.get(0);
+                    subtipo = gaSubTipoGarantiaInterfaceLocal.findById(garantia.getGaSubTipoGarantia().getId());
+                }
+                if ("N".equals(indicadorModificacion) && "S".equals(strGestionaInspecciones) && subtipo != null &&
+                //gliceta 08.11.2011: CRO - Mejoras Garantias
+                //subtipo.getGaTipoGarantia().getIndTipoGarantiaEsAval().equals("S")){
+                subtipo.getIndSubTipoGarantiaEsAval().equals("S")) {
+                    List<GATitularGarantia> lstTiGa = gaTitularGarantiaInterfaceLocal.findByCodigoGarantiaOrderByPorcentajeDesc(crSolicitudCreditoGarantia.getGaGarantia().getCodigoGarantia(),
+                                                                                                                                "S");
+                    for (int i = 0; i < lstTiGa.size(); i++) {
+                        GATitularGarantia titular = lstTiGa.get(i);
+                        //                   Creamos registro de Personas relacionadas a la Solicitud de Credito
+                        strError = personasRelacionadasRegistra(codigoEmpresa,
+                                                                codigoAgencia,
+                                                                numeroSolicitud,
+                                                                titular.getClPersonas().getCodigoPersona(),
+                                                                "AV",
+                                                                "N",
+                                                                codigoUsuario,
+                                                                strRemoteHost,
+                                                                strRemoteAddr);
+                    }
+                    if (strError.equals(NO_ERROR)) {
+                        strError = asignaInspeccion(codigoEmpresa, codigoAgencia, numeroSolicitud, codigoUsuario);
+                    }
+                }
+                if (!NO_ERROR.equals(strError)) {
+                    ctx.setRollbackOnly();
+                    return strError;
+                }
+            }
+            // Fin [Ticket#9497]
+        } catch (Exception e) {
+            e.printStackTrace();
+            throw new RemoteException(e.getMessage());
+        }
+        return NO_ERROR;
+    }
 
     public String garantiaEliminar(String idSolicitudGarantia, BeanParametrosAuditoria beanParametrosAuditoria) throws RemoteException {
         String moduleName = "CRBNSolicitudCreditoFacade.garantiaEliminar()";
@@ -3104,706 +3040,750 @@
         }
         return NO_ERROR;
     }
+
     // Fin [Req. S16-016]
 
     public Map registraResolucion(String codigoEmpresa,
-                String codigoAgencia, Date fechaAplicacion,
-                String numeroSolicitudCredito, String usuarioResponsable,
-                String estadoresolucion, String motivoEstadoResolucion,
-                String fundamentos, String montoAprobado, String fechaDesembolso,
-                String strRemoteHost, String strRemoteAddr, String tipoResolucion
-                , String codigoNivelAprobacion // [Req. S16-041] agarcia 05.12.2016
-                ) throws RemoteException {
-                
-                String moduleName = CRSolicitudCreditosFacade.class.getSimpleName()+"registraResolucion()";
-                String strDescripcionError = null;
-                String error = null;
-                String indicadorMM = "N";
-                Map output=new HashMap();
-                
-               // [CC 15-017] jjurado 29.04.2015
-              String indicadorEvaluacionCrediticia;
-              
-            try {
-                GEGeneralesFacadeInterfaceLocal geGeneralesFacadeInterfaceLocal = null;
-                context = new InitialContext();
-                geGeneralesFacadeInterfaceLocal = (GEGeneralesFacadeInterfaceLocal) context
-                        .lookup("GEGeneralesFacade/local");
-                
-                
-                CRSolicitudCredito crSolicitudCredito = crSolicitudCreditoInterfaceLocal
-                        .findById(numeroSolicitudCredito);
-                if (crSolicitudCredito == null) {
-                    cbControlErroresFacadeInterfaceLocal.crearLogErrores(usuarioResponsable, numeroSolicitudCredito, moduleName, "415", "");
-                    output.put("strError","415");
-                    return output;              
-                }
-                
-                if(crSolicitudCredito.getAnalistaResponsable()==null && crSolicitudCredito.getTipoSolicitud().equals("SC")){
-                    cbControlErroresFacadeInterfaceLocal.crearLogErrores(usuarioResponsable, numeroSolicitudCredito, moduleName, "423", "");
-                    output.put("strError","423");
-                    return output;
-                }
-                
-                
-                //jchilon 23.01.2013 Validacion del Monto Solicitado con el Monto Aprobado
-                Double montoSolicitado = crSolicitudCredito.getMontoSolicitado();
-                Double valorMontoAprobado = new Double (montoAprobado);             
-                int validaMontosSolicitadoAprobado = montoSolicitado.compareTo(valorMontoAprobado);
-            
-         // Inicio [Req. 14-115] galmerco 11.07.2015 
-         if (!_equiv(Constante.CREDITO_TIPO_HIPOTECARIO,
-                     crSolicitudCredito.getCrSubTipoCreditoByReCRSolicitudCredito07().getCrTipoCredito().getCodigoTipoCredito())) {
+                                  String codigoAgencia,
+                                  Date fechaAplicacion,
+                                  String numeroSolicitudCredito,
+                                  String usuarioResponsable,
+                                  String estadoresolucion,
+                                  String motivoEstadoResolucion,
+                                  String fundamentos,
+                                  String montoAprobado,
+                                  String fechaDesembolso,
+                                  String strRemoteHost,
+                                  String strRemoteAddr,
+                                  String tipoResolucion,
+                                  String codigoNivelAprobacion // [Req. S16-041] agarcia 05.12.2016
+    ) throws RemoteException {
 
-            if (validaMontosSolicitadoAprobado != 0) {
-               cbControlErroresFacadeInterfaceLocal.crearLogErrores(usuarioResponsable,
-                                                                    numeroSolicitudCredito,
-                                                                    moduleName,
-                                                                    "1392",
-                                                                    usuarioResponsable);
-               output.put("strError", "1392");
-               return output;
+        String moduleName = CRSolicitudCreditosFacade.class.getSimpleName() + "registraResolucion()";
+        String strDescripcionError = null;
+        String error = null;
+        String indicadorMM = "N";
+        Map output = new HashMap();
+
+        // [CC 15-017] jjurado 29.04.2015
+        String indicadorEvaluacionCrediticia;
+
+        try {
+            GEGeneralesFacadeInterfaceLocal geGeneralesFacadeInterfaceLocal = null;
+            context = new InitialContext();
+            geGeneralesFacadeInterfaceLocal = (GEGeneralesFacadeInterfaceLocal) context.lookup("GEGeneralesFacade/local");
+
+            CRSolicitudCredito crSolicitudCredito = crSolicitudCreditoInterfaceLocal.findById(numeroSolicitudCredito);
+            if (crSolicitudCredito == null) {
+                cbControlErroresFacadeInterfaceLocal.crearLogErrores(usuarioResponsable,
+                                                                     numeroSolicitudCredito,
+                                                                     moduleName,
+                                                                     "415",
+                                                                     "");
+                output.put("strError", "415");
+                return output;
             }
 
-         }
-         // Fin [Req. 14-115] galmerco
+            if (crSolicitudCredito.getAnalistaResponsable() == null && crSolicitudCredito.getTipoSolicitud().equals("SC")) {
+                cbControlErroresFacadeInterfaceLocal.crearLogErrores(usuarioResponsable,
+                                                                     numeroSolicitudCredito,
+                                                                     moduleName,
+                                                                     "423",
+                                                                     "");
+                output.put("strError", "423");
+                return output;
+            }
 
-                if (estadoresolucion.equals("AR")) { //Solo valida si es resolucion aprobada
-                    
-                    if (crSolicitudCredito.getTipoSolicitud().equals("SC")) {
-                       
-                       // Inicio [CC 15-017] jjurado 29.04.2015
-                       //if(crSolicitudCredito.getCrSubTipoCreditoByReCRSolicitudCredito06().getCrTipoCredito().getCodigoTipoCredito().equals("05") && !crSolicitudCredito.getCrSubTipoCreditoByReCRSolicitudCredito06().getId().getCodigoSubTipoCredito().equals("04") && !crSolicitudCredito.getCrSubTipoCreditoByReCRSolicitudCredito06().getId().getCodigoSubTipoCredito().equals("05")){
-                       indicadorEvaluacionCrediticia = crSolicitudCredito.getCrProductoByProductoAprobado().getIndicadorEvaluacionCrediticia();
-                        
-                       if (_equiv(indicadorEvaluacionCrediticia, "S")) {  
-                       // Fin [CC 15-017]                             
-                            List lstEvaluaciones=crAsignacionEvaluacionInterfaceLocal.findBySolicitud(numeroSolicitudCredito);
-                            if(lstEvaluaciones.size()==0){
-                                cbControlErroresFacadeInterfaceLocal.crearLogErrores(usuarioResponsable, numeroSolicitudCredito, moduleName, "1210", usuarioResponsable);
-                                output.put("strError","1210");
-                                return output;
+            //jchilon 23.01.2013 Validacion del Monto Solicitado con el Monto Aprobado
+            Double montoSolicitado = crSolicitudCredito.getMontoSolicitado();
+            Double valorMontoAprobado = new Double(montoAprobado);
+            int validaMontosSolicitadoAprobado = montoSolicitado.compareTo(valorMontoAprobado);
+
+            // Inicio [Req. 14-115] galmerco 11.07.2015 
+            if (!_equiv(Constante.CREDITO_TIPO_HIPOTECARIO,
+                        crSolicitudCredito.getCrSubTipoCreditoByReCRSolicitudCredito07().getCrTipoCredito().getCodigoTipoCredito())) {
+
+                if (validaMontosSolicitadoAprobado != 0) {
+                    cbControlErroresFacadeInterfaceLocal.crearLogErrores(usuarioResponsable,
+                                                                         numeroSolicitudCredito,
+                                                                         moduleName,
+                                                                         "1392",
+                                                                         usuarioResponsable);
+                    output.put("strError", "1392");
+                    return output;
+                }
+
+            }
+            // Fin [Req. 14-115] galmerco
+
+            if (estadoresolucion.equals("AR")) { //Solo valida si es resolucion aprobada
+
+                if (crSolicitudCredito.getTipoSolicitud().equals("SC")) {
+
+                    // Inicio [CC 15-017] jjurado 29.04.2015
+                    //if(crSolicitudCredito.getCrSubTipoCreditoByReCRSolicitudCredito06().getCrTipoCredito().getCodigoTipoCredito().equals("05") && !crSolicitudCredito.getCrSubTipoCreditoByReCRSolicitudCredito06().getId().getCodigoSubTipoCredito().equals("04") && !crSolicitudCredito.getCrSubTipoCreditoByReCRSolicitudCredito06().getId().getCodigoSubTipoCredito().equals("05")){
+                    indicadorEvaluacionCrediticia = crSolicitudCredito.getCrProductoByProductoAprobado().getIndicadorEvaluacionCrediticia();
+
+                    if (_equiv(indicadorEvaluacionCrediticia, "S")) {
+                        // Fin [CC 15-017]                             
+                        List lstEvaluaciones = crAsignacionEvaluacionInterfaceLocal.findBySolicitud(numeroSolicitudCredito);
+                        if (lstEvaluaciones.size() == 0) {
+                            cbControlErroresFacadeInterfaceLocal.crearLogErrores(usuarioResponsable,
+                                                                                 numeroSolicitudCredito,
+                                                                                 moduleName,
+                                                                                 "1210",
+                                                                                 usuarioResponsable);
+                            output.put("strError", "1210");
+                            return output;
+                        }
+                    }
+
+                    if (crSolicitudCredito.getCrSubTipoCreditoByReCRSolicitudCredito06().getCrTipoCredito().getCodigoTipoCredito().equals("05") && (crSolicitudCredito.getCrSubTipoCreditoByReCRSolicitudCredito06().getId().getCodigoSubTipoCredito().equals("04") || crSolicitudCredito.getCrSubTipoCreditoByReCRSolicitudCredito06().getId().getCodigoSubTipoCredito().equals("05"))) {
+                        CRTipoCreditoSBS crTipoCreditoSBS = new CRTipoCreditoSBS();
+                        crTipoCreditoSBS.setCodigoTipoCreditoSBS("08");
+                        crSolicitudCredito.setCrTipoCreditoSBS(crTipoCreditoSBS);
+                    } else {
+                        Calendar calendar3 = Calendar.getInstance();
+                        calendar3.setTime(crSolicitudCredito.getFechaSolicitud());
+
+                        //Inicio [Req.13-059] jchilon 26.06.2013 Actualización del código SBS por cliente.                          
+                        String fechaProceso = FormatoFecha.dateToStringDDMMYYYYY(fechaAplicacion);
+                        //Inicio [Ticket.6624 ] fvalle 28.08.2013 obtencion de Tipo de cambio
+                        Double montoEvaluacion = crSolicitudCredito.getMontoSolicitado();
+                        if ("2".equals(crSolicitudCredito.getCodigoMonedaSolicitado())) {
+                            Map mapTipoCambio = opBNGeneralesFacadeInterfaceLocal.obtenerTipoCambio(codigoEmpresa,
+                                                                                                    "",
+                                                                                                    financ.util.FormatoFecha.stringToSqlDate(fechaProceso),
+                                                                                                    "1",
+                                                                                                    "2",
+                                                                                                    codigoEmpresa + "0000002",
+                                                                                                    "003",
+                                                                                                    crSolicitudCredito.getMontoSolicitado(),
+                                                                                                    "",//codigoPersona
+                                                                                                    usuarioResponsable);
+                            if (mapTipoCambio.get("strError").equals("000")) {
+                                montoEvaluacion = (Double) mapTipoCambio.get("importeCambio");
                             }
                         }
-                        
-                        if(crSolicitudCredito.getCrSubTipoCreditoByReCRSolicitudCredito06().getCrTipoCredito().getCodigoTipoCredito().equals("05")  &&  (crSolicitudCredito.getCrSubTipoCreditoByReCRSolicitudCredito06().getId().getCodigoSubTipoCredito().equals("04") || crSolicitudCredito.getCrSubTipoCreditoByReCRSolicitudCredito06().getId().getCodigoSubTipoCredito().equals("05"))){
-                            CRTipoCreditoSBS crTipoCreditoSBS=new CRTipoCreditoSBS();
-                            crTipoCreditoSBS.setCodigoTipoCreditoSBS("08");
+                        //Fin [Ticket.6624 ]
+
+                        Map mapClasificacion = crSolicitudCreditoGeneralFacadeInterfaceLocal.clasificarTipoCredito(financ.util.Constante.RECLASIFICACION_TIPO_CREDITO_MANUAL,
+                                                                                                                   "SC",
+                                                                                                                   calendar3.get(Calendar.YEAR),
+                                                                                                                   calendar3.get(Calendar.MONTH) + 1,
+                                                                                                                   null,
+                                                                                                                   null,
+                                                                                                                   null,
+                                                                                                                   null,
+                                                                                                                   "143",
+                                                                                                                   crSolicitudCredito.getClPersonasByCodigoPersona().getCodigoPersona(),
+                                                                                                                   crSolicitudCredito.getClPersonasByCodigoPersona().getCodigoDeudorSbs(),
+                                                                                                                   crSolicitudCredito.getClPersonasByCodigoPersona().getClTipoPersona().getCodigoTipoPersona(),
+                                                                                                                   crSolicitudCredito.getCrSubTipoCreditoByReCRSolicitudCredito06().getCrTipoCredito().getCodigoTipoCredito(),
+                                                                                                                   crSolicitudCredito.getTipoModalidadCredito(),
+                                                                                                                   montoEvaluacion, //crSolicitudCredito.getMontoSolicitado(),
+                                                                                                                   codigoEmpresa,
+                                                                                                                   fechaProceso);
+                        //Fin [Req. 13-059] jchilon 
+
+                        if (!mapClasificacion.get("codigoError").toString().equals("000")) {
+                            cbControlErroresFacadeInterfaceLocal.crearLogErrores(usuarioResponsable,
+                                                                                 numeroSolicitudCredito,
+                                                                                 moduleName,
+                                                                                 "1208",
+                                                                                 usuarioResponsable);
+                            output.put("strError", "1210");
+                            return output;
+                        } else {
+                            CRTipoCreditoSBS crTipoCreditoSBS = new CRTipoCreditoSBS();
+                            crTipoCreditoSBS.setCodigoTipoCreditoSBS(mapClasificacion.get("tipoCreditoSbs").toString());
+
+                            if (!crTipoCreditoSBS.getCodigoTipoCreditoSBS().equals(crSolicitudCredito.getCrTipoCreditoSBS().getCodigoTipoCreditoSBS())) {
+                                cbControlErroresFacadeInterfaceLocal.crearLogErrores(usuarioResponsable,
+                                                                                     numeroSolicitudCredito,
+                                                                                     moduleName,
+                                                                                     "1208",
+                                                                                     usuarioResponsable);
+                                output.put("strError", "99999");
+                                return output;
+                            }
                             crSolicitudCredito.setCrTipoCreditoSBS(crTipoCreditoSBS);
-                        }else{
-                                Calendar calendar3 = Calendar.getInstance();
-                                calendar3.setTime(crSolicitudCredito.getFechaSolicitud());
-                                
-                                
-                                //Inicio [Req.13-059] jchilon 26.06.2013 Actualización del código SBS por cliente.                          
-                                String fechaProceso = FormatoFecha.dateToStringDDMMYYYYY(fechaAplicacion);
-                                //Inicio [Ticket.6624 ] fvalle 28.08.2013 obtencion de Tipo de cambio
-                                Double montoEvaluacion = crSolicitudCredito.getMontoSolicitado();
-                                if("2".equals(crSolicitudCredito.getCodigoMonedaSolicitado())){
-                                    Map mapTipoCambio=opBNGeneralesFacadeInterfaceLocal.obtenerTipoCambio(codigoEmpresa, 
-                                              "", 
-                                              financ.util.FormatoFecha.stringToSqlDate(fechaProceso), 
-                                              "1", 
-                                              "2", 
-                                              codigoEmpresa+"0000002", 
-                                              "003", 
-                                              crSolicitudCredito.getMontoSolicitado(),  
-                                              "",//codigoPersona
-                                              usuarioResponsable);
-                                    if(mapTipoCambio.get("strError").equals("000")){
-                                        montoEvaluacion=(Double)mapTipoCambio.get("importeCambio");
-                                    }
-                                }
-                                //Fin [Ticket.6624 ]
-                                
-                                Map mapClasificacion=crSolicitudCreditoGeneralFacadeInterfaceLocal.clasificarTipoCredito(financ.util.Constante.RECLASIFICACION_TIPO_CREDITO_MANUAL, 
-                                                                                                                         "SC", 
-                                                                                                                         calendar3.get(Calendar.YEAR), 
-                                                                                                                         calendar3.get(Calendar.MONTH)+1,
-                                                                                                                         null, 
-                                                                                                                         null, 
-                                                                                                                         null, 
-                                                                                                                         null,
-                                                                                                                         "143", 
-                                                                                                                         crSolicitudCredito.getClPersonasByCodigoPersona().getCodigoPersona(), 
-                                                                                                                         crSolicitudCredito.getClPersonasByCodigoPersona().getCodigoDeudorSbs(), 
-                                                                                                                         crSolicitudCredito.getClPersonasByCodigoPersona().getClTipoPersona().getCodigoTipoPersona(), 
-                                                                                                                         crSolicitudCredito.getCrSubTipoCreditoByReCRSolicitudCredito06().getCrTipoCredito().getCodigoTipoCredito(),
-                                                                                                                         crSolicitudCredito.getTipoModalidadCredito(), 
-                                                                                                                         montoEvaluacion, //crSolicitudCredito.getMontoSolicitado(),
-                                                                                                                         codigoEmpresa,
-                                                                                                                         fechaProceso);
-                                //Fin [Req. 13-059] jchilon 
-                                                                                                                         
-                                if(!mapClasificacion.get("codigoError").toString().equals("000")){
-                                    cbControlErroresFacadeInterfaceLocal.crearLogErrores(usuarioResponsable, numeroSolicitudCredito, moduleName, "1208", usuarioResponsable);
-                                    output.put("strError","1210");
-                                    return output;
-                                }else{
-                                    CRTipoCreditoSBS crTipoCreditoSBS=new CRTipoCreditoSBS();
-                                    crTipoCreditoSBS.setCodigoTipoCreditoSBS(mapClasificacion.get("tipoCreditoSbs").toString());
-                                    
-                                    if(!crTipoCreditoSBS.getCodigoTipoCreditoSBS().equals(crSolicitudCredito.getCrTipoCreditoSBS().getCodigoTipoCreditoSBS())){
-                                        cbControlErroresFacadeInterfaceLocal.crearLogErrores(usuarioResponsable, numeroSolicitudCredito, moduleName, "1208", usuarioResponsable);
-                                        output.put("strError","99999");
-                                        return output;
-                                    }
-                                    crSolicitudCredito.setCrTipoCreditoSBS(crTipoCreditoSBS);
-                                }
                         }
-                            
-                    }   
-                    
-                    
-                    
-                    BeanParametrosAuditoria beanParametrosAuditoria=new BeanParametrosAuditoria();
-                    beanParametrosAuditoria.setCodigoEmpresa(codigoEmpresa);
-                    beanParametrosAuditoria.setUsuarioInsercion(usuarioResponsable);
-                    beanParametrosAuditoria.setCodigoAgencia(codigoAgencia);
-                    String resultadoValidacion=crValidacionDocumentosFacadeLocal.validarDocumentacionCompleta(numeroSolicitudCredito,
+                    }
+
+                }
+
+                BeanParametrosAuditoria beanParametrosAuditoria = new BeanParametrosAuditoria();
+                beanParametrosAuditoria.setCodigoEmpresa(codigoEmpresa);
+                beanParametrosAuditoria.setUsuarioInsercion(usuarioResponsable);
+                beanParametrosAuditoria.setCodigoAgencia(codigoAgencia);
+                String resultadoValidacion = crValidacionDocumentosFacadeLocal.validarDocumentacionCompleta(numeroSolicitudCredito,
                                                                                                             codigoAgencia,
                                                                                                             beanParametrosAuditoria);
-                    //resultadoValidacion = "0" -> proceso OK
-                    if(resultadoValidacion.equals("conexion")){
-                        cbControlErroresFacadeInterfaceLocal.crearLogErrores(usuarioResponsable, numeroSolicitudCredito, moduleName, "1078", "");
-                        output.put("strError","1078");
-                        return output;
-                    }
-                    if(resultadoValidacion.equals("1")){
-                        cbControlErroresFacadeInterfaceLocal.crearLogErrores(usuarioResponsable, numeroSolicitudCredito, moduleName, "1079", "");
-                        output.put("strError","1079");
-                        return output;
-                    }
-                    if(resultadoValidacion.equals("2")){
-                        cbControlErroresFacadeInterfaceLocal.crearLogErrores(usuarioResponsable, numeroSolicitudCredito, moduleName, "1091", "");
-                        output.put("strError","1091");
-                        return output;
-                    }
-                    
-                    //validaciones de inspecciones domiciliarias
-                     List lstInspecciones = crSolicitudInpeccionesCabInterfaceLocal.buscarSolicXNroSolCredito(numeroSolicitudCredito);
-                     
-                     for(int i = 0; i < lstInspecciones.size(); i++){
-                         CRSolicitudInpeccionesCab crInspecciones = (CRSolicitudInpeccionesCab) lstInspecciones.get(i);
-                         if(crInspecciones.getEstadoRegistro().equals("S") && !crInspecciones.getEstadoSolicitud().equals("C") && crInspecciones.getCrSolicitudCredito().getIndicadorInspeccion()!=null && crInspecciones.getCrSolicitudCredito().getCrProductoByProductoSolicitado().getIndicadorInspeccion()!=null){
-                                cbControlErroresFacadeInterfaceLocal.crearLogErrores(usuarioResponsable, numeroSolicitudCredito, moduleName, "1091", "");
-                                output.put("strError","1212");
-                                return output;
-                         }
-                         
-                         //Inicio stacanga 15.02.2013 Ticket 4960
-                         String strNumeroVisitaMaxima = crVisitasInspeccionInterfaceLocal.maximaVisitaSolicitudInspeccion(crInspecciones.getNumeroSolicitudInspeccion());
-                         CRVisitasInspeccion crVisitasInspeccion = crVisitasInspeccionInterfaceLocal.findById(strNumeroVisitaMaxima);
-                         
-                         if("C".equals(crInspecciones.getEstadoSolicitud()) && "S".equals(crVisitasInspeccion.getCrResultadosVisita().getIndicadorResultadoNegativo())){        
-                             cbControlErroresFacadeInterfaceLocal.crearLogErrores(usuarioResponsable, numeroSolicitudCredito, moduleName, "1091", "");
-                             output.put("strError","1416");
-                             return output;                          
-                         }
-                         // Fin stacanga                         
-                     }
-                }
-                
-                List<CRSolicitudCambioCondiciones> listCrSolCamCond = new ArrayList<CRSolicitudCambioCondiciones>();
-
-                // Si es cambio de condiciones ubicamos la solicitud
-                if (!crSolicitudCredito.getTipoSolicitud().equals("SC")) {
-                    listCrSolCamCond = crSolicitudCambioCondicionesInterfaceLocal
-                            .findByCodigoSolicitud(numeroSolicitudCredito);
-                    if (listCrSolCamCond == null || listCrSolCamCond.size() == 0) {
-                        cbControlErroresFacadeInterfaceLocal.crearLogErrores(usuarioResponsable, numeroSolicitudCredito, moduleName, "665", "");
-                        output.put("strError","655");
-                        return output;
-                    }
-                }
-
-                String strCodigoPersonaUsuario = usuarioResponsable;
-
-                // Codigo Persona Relacionado a la Empresa
-                String strPersonaEmpresa;
-                try {
-                    Map temporal = geGeneralesFacadeInterfaceLocal.valorConstante(
-                            codigoEmpresa, "EMP_COD_PERSONA", usuarioResponsable);
-                    strPersonaEmpresa = temporal.get("strConstante").toString();
-                } catch (Exception e) {
-                    //e.printStackTrace();
-                    strPersonaEmpresa = "";
-                }
-
-                // Ubicamos cargo laboral relacionado al usuario
-                String strCargoLaboral = "";
-                CLCentroLaboralPersonas clCentroLaboralPersonas = null;
-                List lstCLCentroLaboralPersonas = null;
-                try {
-                    lstCLCentroLaboralPersonas = clCentroLaboralPersonasInterfaceLocal
-                            .findByPersonaNaturalAndPersonaJuridica(
-                                    usuarioResponsable, strPersonaEmpresa);
-
-                } catch (Exception e) {
-                    e.printStackTrace();
-                    strDescripcionError = e.toString().length() > 2000 ?e.toString().substring(0, 2000) : e.toString();
-                    cbControlErroresFacadeInterfaceLocal.crearLogErrores(usuarioResponsable, moduleName, strDescripcionError );
-                }
-                if (lstCLCentroLaboralPersonas != null
-                        && lstCLCentroLaboralPersonas.size() > 0) {
-                    clCentroLaboralPersonas = (CLCentroLaboralPersonas) lstCLCentroLaboralPersonas
-                            .get(0);
-                    strCargoLaboral = clCentroLaboralPersonas
-                            .getClCargosLaborales().getCargoLaboral();
-                }
-
-                // VALIDAMOS LIMITES OPERATIVOS
-                String strProcesoOperativo = "";
-
-                
-                //OBTENEMOS CODIGO DE PROCESO RELACIONADO A CREDITOS
-                String strIdProceso = null;
-                String query        = null;
-                if (crSolicitudCredito.getTipoSolicitud().equals("SC")) {
-                    // Prestamos Cuotas
-                    strIdProceso = "SCRES";
-                } else if (crSolicitudCredito.getTipoSolicitud().equals("RF")) {
-                    // Prestamos Revolvente o Linea de Credito
-                    strIdProceso = "RFRES";
-                } else if (crSolicitudCredito.getTipoSolicitud().equals("RP")) {
-                    // Prestamos Revolvente o Linea de Credito
-                    strIdProceso = "RPRES";
-                }
-                //OBTENEMOS CODIGO PROCESO OPERATIVO
-                query = "SELECT t.* "+
-                          "FROM CRTPOCR t "+
-                         "WHERE t.c_tipcre =:tipoCredito  "+
-                           "AND t.c_sticre =:subTipoCredito "+
-                           "AND t.c_idproc =:idProceso ";
-                List lstProcesos = entityManager.createNativeQuery(query)
-                    .setParameter("tipoCredito", crSolicitudCredito.getCrSubTipoCreditoByReCRSolicitudCredito07().getId().getCodigoTipoCredito())
-                    .setParameter("subTipoCredito", crSolicitudCredito.getCrSubTipoCreditoByReCRSolicitudCredito07().getId().getCodigoSubTipoCredito())
-                    .setParameter("idProceso", strIdProceso)
-                    .getResultList();
-                if (lstProcesos.size()>0) {
-                    strProcesoOperativo = ((Object[])lstProcesos.get(0))[3].toString();
-                }else {
-                    strProcesoOperativo = "";
-                }
-                        
-
-                GELimitesOperativosFacadeInterfaceLocal geLimitesOperativosFacadeInterfaceLocal = null;
-                context = new InitialContext();
-                geLimitesOperativosFacadeInterfaceLocal = (GELimitesOperativosFacadeInterfaceLocal) context
-                        .lookup(GELimitesOperativosFacade.LocalJNDIName);
-
-                String strLimitePermitido = "";
-                
-                if(estadoresolucion.equals("AR")){
-                    // Inicio [Req.S16-025] esalazar 06.09.2016
-                    GenericBean genericBean = new GenericBean();
-                    genericBean.addProperty("codigoProducto",
-                                            crSolicitudCredito.getCrProductoByProductoAprobado().getCodigoProducto());
-                    Map map = geLimitesOperativosFacadeInterfaceLocal.validaLimiteOperativo(codigoEmpresa,
-                                                                                            codigoAgencia,
-                                                                                            new java.sql.Date(fechaAplicacion.getTime()),
-                                                                                            usuarioResponsable,
-                                                                                            /* codigoEmpresa + */ strProcesoOperativo,
-                                                                                            crSolicitudCredito.getCodigoMonedaAprobado(),
-                                                                                            new Double(montoAprobado),
-                                                                                            genericBean);
-                    // Fin [Req.S16-025]
-                    if (!"000".equals((String) map.get("strError"))) {
-                        cbControlErroresFacadeInterfaceLocal.crearLogErrores(usuarioResponsable, numeroSolicitudCredito, moduleName, (String) map.get("strError"), "");
-                        output.put("strError",(String)map.get("strError"));
-                        return output;              
-                    } else {
-                        strLimitePermitido = (String) map.get("autorizado");
-                    }
-                    
-                }else{
-                    strLimitePermitido="S";
-                }
-                
-                
-                //validacion segun indicador limites operativos
-                if(tipoResolucion.equals("PE")){
-                    strLimitePermitido = "S";
-                }
-
-                //Evaluamos Estado de la Solicitud de Crédito
-                String strEstadoSolicitudCredito;
-                if (strLimitePermitido.equals("N")){
-                    strEstadoSolicitudCredito = "EE";
-                    cbControlErroresFacadeInterfaceLocal.crearLogErrores(usuarioResponsable, numeroSolicitudCredito, moduleName, "1016", "");
-                    output.put("strError","1016");
+                //resultadoValidacion = "0" -> proceso OK
+                if (resultadoValidacion.equals("conexion")) {
+                    cbControlErroresFacadeInterfaceLocal.crearLogErrores(usuarioResponsable,
+                                                                         numeroSolicitudCredito,
+                                                                         moduleName,
+                                                                         "1078",
+                                                                         "");
+                    output.put("strError", "1078");
                     return output;
-                    
                 }
-                else{
-                    if ( !(estadoresolucion.equals("AR")||estadoresolucion.equals("RE")) ) {
-                        strEstadoSolicitudCredito = "EE";
-                        
-                    }else {
-                        String errorValidaTitulares=crbnSolicitudCreditoFacadeInterfaceLocal.validarTitulares(codigoEmpresa
-                                                                                                            , numeroSolicitudCredito
-                                                                                                            , usuarioResponsable);
-                        
-
-                        if(!errorValidaTitulares.equals("000")){
-                            strEstadoSolicitudCredito = "EE";
-                            cbControlErroresFacadeInterfaceLocal.crearLogErrores(usuarioResponsable, numeroSolicitudCredito, moduleName, errorValidaTitulares, "");
-                            output.put("strError",errorValidaTitulares);
-                            return output;
-                        }else{
-                            strEstadoSolicitudCredito = estadoresolucion;
-                        }
-                    }               
+                if (resultadoValidacion.equals("1")) {
+                    cbControlErroresFacadeInterfaceLocal.crearLogErrores(usuarioResponsable,
+                                                                         numeroSolicitudCredito,
+                                                                         moduleName,
+                                                                         "1079",
+                                                                         "");
+                    output.put("strError", "1079");
+                    return output;
                 }
-                
-                
-                //ACTUALIZAMOS ESTADOS DE RESOLUCION EN CRSolicitudCredito, donde:
-                CREstadoResolucionCredito crUltimoEstadoResolucion=new CREstadoResolucionCredito();
-                crUltimoEstadoResolucion.setEstadoResolucion(estadoresolucion);
-                crSolicitudCredito.setCrUltimoEstadoResolucion(crUltimoEstadoResolucion);
-                if("OB".equals(estadoresolucion)){
-                    crSolicitudCredito.setIndEnvioEvaluacionSC("N");
-                    crSolicitudCredito.setAnalistaResponsable(null);
-                }
-                crSolicitudCreditoInterfaceLocal.update(crSolicitudCredito);
-                
-                // EVALUAMOS CAMBIO DE ESTADO EN SOLICITUD CAMBIO DE CONDICIONES
-                if (!crSolicitudCredito.getTipoSolicitud().equals("SC")) {
-                    // Actualizar Registro de cambio de condiciones en entidad
-                    // CRSolicitudCambioCondiciones, donde:
-                    CRSolicitudCambioCondiciones solicitudCambios = listCrSolCamCond
-                            .get(0);
-                    solicitudCambios
-                            .setEstadoSolicitudCambioCondiciones(strEstadoSolicitudCredito);
-                    
-                    if(solicitudCambios.getTotalMontoPago().doubleValue()>0){
-                        indicadorMM = "S";
-                    }
-                    
-                    crSolicitudCambioCondicionesInterfaceLocal
-                            .update(solicitudCambios);
-
-                    // Actualizamos Estado en Solictud de credito relacionado en
-                    // etidad CRSolicitudCredito, donde:
-                    crSolicitudCredito.setCrEstadoSolicitud(new CREstadoSolicitud());
-                    crSolicitudCredito.getCrEstadoSolicitud().setCodigoEstado(strEstadoSolicitudCredito);
-                    crSolicitudCredito.setFechaResolucion(fechaAplicacion);
-                    crSolicitudCredito.setUsuarioResponsableResolucion(usuarioResponsable);
-                    crSolicitudCredito.setFechaModificacion(fechaAplicacion);
-                    crSolicitudCredito.setUsuarioModificacion(usuarioResponsable);
-
-                    crSolicitudCreditoInterfaceLocal.update(crSolicitudCredito);
+                if (resultadoValidacion.equals("2")) {
+                    cbControlErroresFacadeInterfaceLocal.crearLogErrores(usuarioResponsable,
+                                                                         numeroSolicitudCredito,
+                                                                         moduleName,
+                                                                         "1091",
+                                                                         "");
+                    output.put("strError", "1091");
+                    return output;
                 }
 
-                // Creamos regsitro de resolucion, en entidad CRSolicitudResolucion,
-                // donde:
-                String idRegistroResolucion = cbCorrelativoInterfaceLocal
-                        .GenerarCorrelativo(codigoEmpresa, "CRDSCRE", 15,
-                                usuarioResponsable, strRemoteHost, strRemoteAddr);
+                //validaciones de inspecciones domiciliarias
+                List lstInspecciones = crSolicitudInpeccionesCabInterfaceLocal.buscarSolicXNroSolCredito(numeroSolicitudCredito);
 
-                CREstadoResolucionCredito crEstadoResolucionCredito = new CREstadoResolucionCredito();
-                crEstadoResolucionCredito.setEstadoResolucion(estadoresolucion);
-                CRMotivoXEstadoResolucionCredito crMotivoXEstadoResolucionCredito=null;
-                // [Req.14-115] gAlmerco 20.06.2015
-                if (motivoEstadoResolucion != null && !motivoEstadoResolucion.equals("")) {
-                    crMotivoXEstadoResolucionCredito = new CRMotivoXEstadoResolucionCredito();
-                    crMotivoXEstadoResolucionCredito.setMotivoXEstadoResolucion(motivoEstadoResolucion);
-                }
-                
-                CRSolicitudResolucion crSolicitudResolucion = new CRSolicitudResolucion();
-                crSolicitudResolucion.setIdRegistroResolucion(idRegistroResolucion);
-                //crSolicitudResolucion.setFechaResolucion(fechaAplicacion);
-                
-                crSolicitudResolucion.setFechaResolucion(
-                        FormatoFecha.stringToTimestampddMMyyyyhhmmss(FormatoFecha.dateUtilToStringDDMMYYYY(fechaAplicacion), (new FormatoFecha().obtenerHora()))
-                        );
-                crSolicitudResolucion.setCrSolicitudCredito(crSolicitudCredito);
-                crSolicitudResolucion.setUsuarioResponsableResolucion(usuarioResponsable);
-                CLCargosLaborales clCargosLaborales = new CLCargosLaborales();
-                clCargosLaborales.setCargoLaboral(codigoEmpresa + "0000001");
-                crSolicitudResolucion.setClCargosLaborales(clCargosLaborales);
-                crSolicitudResolucion.setCrEstadoResolucionCredito(crEstadoResolucionCredito);
-                //jpena 27.06.2012 Se aumenta la cantidad de caracteres a guardar de acuerdo a lo permitido en la base de datos.
-                crSolicitudResolucion.setFundamentos(fundamentos.length()>2000?fundamentos.substring(0,2000):fundamentos);
-                CREstadoSolicitud crEstadoSolicitud = new CREstadoSolicitud();
-                crEstadoSolicitud.setCodigoEstado(strEstadoSolicitudCredito);
-                crSolicitudResolucion.setCrEstadoSolicitud(crEstadoSolicitud);
-                crSolicitudResolucion.setMontoAprobadoSugerido(new Double(montoAprobado));
-                crSolicitudResolucion.setEstadoRegistro("S");
-                crSolicitudResolucion.setCrMotivoXEstadoResolucionCredito(crMotivoXEstadoResolucionCredito);                
-                crSolicitudResolucion.setUsuarioInsercion(usuarioResponsable);
-                crSolicitudResolucion.setTerminalInsercion(strRemoteHost);
-                crSolicitudResolucion.setFechaInsercion(new Timestamp(System.currentTimeMillis()));
-                crSolicitudResolucion.setIpInsercion(strRemoteAddr);
-                if(tipoResolucion.equals("PE")){
-                    crSolicitudResolucion.setEtapaEvaluacion(tipoResolucion);                   
-                }else{
-                    crSolicitudResolucion.setEtapaEvaluacion("RC");
-                }
-                // Inicio [Req. S16-041] agarcia 05.12.2016
-                if(!_isEmpty(codigoNivelAprobacion)){
-                    CRNivelAprobacion crNivelAprobacion = new CRNivelAprobacion();
-                    crNivelAprobacion.setCodigo(codigoNivelAprobacion);
-                    crSolicitudResolucion.setCrNivelAprobacion(crNivelAprobacion);
-                }
-                // Fin [Req. S16-041] 
-                crSolicitudResolucionInterfaceLocal.save(crSolicitudResolucion);
-                entityManager.flush();
-                
-                //creando un registro en solicitudDesembolso en caso la resolucion aprobada y de tipo emprendedor
-                
-                if(estadoresolucion.equals("AR")){
-                    
-                    //stacanga 24.10.2011
-                    /*CRSolCrePrestamoCuotas crSolCrePrestamoCuotas = crSolCrePrestamoCuotasInterfaceLocal.findById(numeroSolicitudCredito);
-                                            
-                        if(crSolCrePrestamoCuotas!=null && crSolCrePrestamoCuotas.getIndicadorCredido()!=null && crSolCrePrestamoCuotas.getIndicadorCredido().equals("S") && crSolCrePrestamoCuotas.getCrTipoDesembolsoCredito().getTipoDesembolso().equals("TR")){
-
-                            if(crSolCrePrestamoCuotas.getIndicadorModalidadCredido().equals("CT") || crSolCrePrestamoCuotas.getIndicadorModalidadCredido().equals("NR") ){
-                            
-                            BeanParametrosAuditoria beanParametrosAuditoria=new BeanParametrosAuditoria();
-                            beanParametrosAuditoria.setCodigoEmpresa(codigoEmpresa);
-                            beanParametrosAuditoria.setUsuarioInsercion(usuarioResponsable);
-                            beanParametrosAuditoria.setCodigoAgencia(codigoAgencia);
-                            beanParametrosAuditoria.setIpInsercion(strRemoteAddr);
-                            beanParametrosAuditoria.setTerminalInsercion(strRemoteHost);
-                            beanParametrosAuditoria.setFechaInsercion(fechaAplicacion);                     
-                            
-                            Map mapSolEmp = crSolicitudDesembolsoCreditoFacadeLocal.registroSolicitudDesembolso(beanParametrosAuditoria, numeroSolicitudCredito);
-
-                            error = (String) mapSolEmp.get("error");
-
-                            if (!"000".equals(error)) {
-                                cbControlErroresFacadeInterfaceLocal.crearLogErrores(usuarioResponsable, numeroSolicitudCredito, moduleName, error, "");
-                                ctx.setRollbackOnly();
-                                output.put("strError",error);
-                                return output;
-                            }
-                            
-                        }
-
-                    }*/
-                    
-                    CRSolCrePrestamoCartaFianza crSolCrePrestamoCartaFianza=crSolCrePrestamoCartaFianzaInterfaceLocal.findById(numeroSolicitudCredito);
-                    if(crSolCrePrestamoCartaFianza!=null){
-                        crSolCrePrestamoCartaFianza.setEstadoCartaFianza("A");
-                        crSolCrePrestamoCartaFianza.setFechaAprobacion(FormatoFecha.stringToTimestampddMMyyyyhhmmss(FormatoFecha.dateUtilToStringDDMMYYYY(fechaAplicacion), (new FormatoFecha().obtenerHora())));
-                        crSolCrePrestamoCartaFianza.setUsuarioAprobacion(usuarioResponsable);
-                        crSolCrePrestamoCartaFianza.setUsuarioModificacion(usuarioResponsable);
-                        crSolCrePrestamoCartaFianza.setFechaModificacion(new Timestamp(System.currentTimeMillis()));
-                        crSolCrePrestamoCartaFianza.setTerminalModificacion(strRemoteHost);
-                        crSolCrePrestamoCartaFianza.setIpModificacion(strRemoteAddr);
-                        crSolCrePrestamoCartaFianzaInterfaceLocal.update(crSolCrePrestamoCartaFianza);
-                    }
-                    
-                }
-                
-                //Adicionar Historico Cambio de Estado Solicitud de Credito
-                String strMotivoCambioEstado = "02";
-                if (estadoresolucion.equals("OB")) {
-                    strMotivoCambioEstado = "11";
-                } else if(estadoresolucion.equals("RE")){
-                    strMotivoCambioEstado = "12";
-                    
-                    //mnieves 29.03.2011
-                    Map mapAplicar = crDetalleObsEncontradoFacadeInterfaceLocal.actualizarDetalleObsByNumeroSolicitud(numeroSolicitudCredito);
-                    if (!"000".equals((String) mapAplicar.get("strError"))) {
-                        error = (String) mapAplicar.get("strError");
-                        cbControlErroresFacadeInterfaceLocal.crearLogErrores(usuarioResponsable, numeroSolicitudCredito, moduleName, error, "");
-                        ctx.setRollbackOnly();
-                        output.put("strError",error);
+                for (int i = 0; i < lstInspecciones.size(); i++) {
+                    CRSolicitudInpeccionesCab crInspecciones = (CRSolicitudInpeccionesCab) lstInspecciones.get(i);
+                    if (crInspecciones.getEstadoRegistro().equals("S") && !crInspecciones.getEstadoSolicitud().equals("C") && crInspecciones.getCrSolicitudCredito().getIndicadorInspeccion() != null && crInspecciones.getCrSolicitudCredito().getCrProductoByProductoSolicitado().getIndicadorInspeccion() != null) {
+                        cbControlErroresFacadeInterfaceLocal.crearLogErrores(usuarioResponsable,
+                                                                             numeroSolicitudCredito,
+                                                                             moduleName,
+                                                                             "1091",
+                                                                             "");
+                        output.put("strError", "1212");
                         return output;
                     }
-                    
-                    mapAplicar = crLevantamientoObservacionFacadeInterfaceLocal.actualizacionObservacionByNumeroSolicitud(numeroSolicitudCredito);
-                    if (!"000".equals((String) mapAplicar.get("strError"))) {
-                        error = (String) mapAplicar.get("strError");
-                        cbControlErroresFacadeInterfaceLocal.crearLogErrores(usuarioResponsable, numeroSolicitudCredito, moduleName, error, "");
-                        ctx.setRollbackOnly();
-                        output.put("strError",error);
+
+                    //Inicio stacanga 15.02.2013 Ticket 4960
+                    String strNumeroVisitaMaxima = crVisitasInspeccionInterfaceLocal.maximaVisitaSolicitudInspeccion(crInspecciones.getNumeroSolicitudInspeccion());
+                    CRVisitasInspeccion crVisitasInspeccion = crVisitasInspeccionInterfaceLocal.findById(strNumeroVisitaMaxima);
+
+                    if ("C".equals(crInspecciones.getEstadoSolicitud()) && "S".equals(crVisitasInspeccion.getCrResultadosVisita().getIndicadorResultadoNegativo())) {
+                        cbControlErroresFacadeInterfaceLocal.crearLogErrores(usuarioResponsable,
+                                                                             numeroSolicitudCredito,
+                                                                             moduleName,
+                                                                             "1091",
+                                                                             "");
+                        output.put("strError", "1416");
                         return output;
                     }
-                    
+                    // Fin stacanga                         
                 }
-                
-                crbnSolicitudCreditoFacadeInterfaceLocal.historicoCambioEstado(
-                        crSolicitudCredito.getNumeroSolicitud(), 
-                        strEstadoSolicitudCredito, 
-                        strMotivoCambioEstado, 
-                        codigoEmpresa, 
-                        usuarioResponsable, 
-                        strRemoteHost, 
-                        strRemoteAddr, 
-                        (new java.sql.Date(fechaAplicacion.getTime()))); 
+            }
 
-                // /ACTUALIZAMOS SOLICITUD DE CREDITO COMO RESOLUCION APROBADA//TODO
-                if (crSolicitudCredito.getTipoSolicitud().equals("SC")) {
-                    if ("AR".equals(strEstadoSolicitudCredito) || "RE".equals(strEstadoSolicitudCredito)) {
-                        
-                            // Evaluamos Proceso según Forma y Modalidad de Crédito
-                            if ("PRC".equals(crSolicitudCredito.getTipoModalidadCredito()) || "PRR".equals(crSolicitudCredito.getTipoModalidadCredito())) {
-                                // Resolucion de Prestamos
-                                error = crbnSolicitudCreditoFacadeInterfaceLocal.resolucionPrestamos(codigoEmpresa,
-                                                codigoAgencia, 
-                                                numeroSolicitudCredito,
-                                                strEstadoSolicitudCredito,
-                                                (new java.sql.Date(fechaAplicacion.getTime())),
-                                                usuarioResponsable, 
-                                                Double.parseDouble(montoAprobado),
-                                                FormatoFecha.stringToSqlDate(fechaDesembolso),
-                                                null, 
-                                                usuarioResponsable,
-                                                strRemoteHost, 
-                                                strRemoteAddr);
-                                if (!"000".equals(error)) {
-                                    cbControlErroresFacadeInterfaceLocal.crearLogErrores(usuarioResponsable, numeroSolicitudCredito, moduleName, error, "");
-                                    ctx.setRollbackOnly();
-                                    output.put("strError",error);
-                                    return output;
-                                }
-                        }else if("PRF".equals(crSolicitudCredito.getTipoModalidadCredito())){
-                            CREstadoSolicitud crEstadoSolicitudRes = new CREstadoSolicitud(estadoresolucion, null, null);
-                            crSolicitudCredito.setCrEstadoSolicitud(crEstadoSolicitudRes);
-                            crSolicitudCredito.setFechaResolucion(fechaAplicacion);
-                            crSolicitudCredito.setUsuarioResponsableResolucion(usuarioResponsable);
-                            crSolicitudCredito.setFechaModificacion(fechaAplicacion);
-                            crSolicitudCredito.setUsuarioModificacion(usuarioResponsable);
-                            crSolicitudCreditoInterfaceLocal.update(crSolicitudCredito);
-                        }
-                        // Inicio [Ticket#9425] esalazar 06.09.2016
-                        if (_equiv("RE", strEstadoSolicitudCredito)) {
-                            // [Req. CC15-013] lnarvaez 06.05.2015
-                            error = crbnSolicitudCreditoFacadeInterfaceLocal.liberarGarantias(codigoEmpresa,
-                                                                                              codigoAgencia,
-                                                                                              usuarioResponsable,
-                                                                                              numeroSolicitudCredito,
-                                                                                              // Inicio [CC15-063] lnarvaez 21.10.2015
-                                                                                              fechaAplicacion,
-                                                                                              strRemoteHost,
-                                                                                              strRemoteAddr);
-                            if (!_equiv(error, NO_ERROR)) {
-                                output.put("strError", error);
-                                return output;
-                            }
-                            // Fin [CC15-063]
-                        }
-                     // Fin [Ticket#9425]
-                    }
-                }else{
-                    if("AR".equals(strEstadoSolicitudCredito)){
-                        if("N".equals(indicadorMM)){
-                            Map mapAplica = crOperacionesFacadeLocal.aplicacionRefinanciacion(
-                                                                            null,
-                                                                            codigoEmpresa, 
-                                                                            codigoAgencia, 
-                                                                            null, 
-                                                                            numeroSolicitudCredito, 
-                                                                            null, 
-                                                                            null, 
-                                                                            crSolicitudCredito.getCodigoMonedaAprobado(), 
-                                                                            new Double(0), 
-                                                                            new Double(1), 
-                                                                            fechaAplicacion,
-                                                                            null, 
-                                                                            usuarioResponsable, 
-                                                                            null,
-                                                                            strRemoteHost, 
-                                                                            strRemoteAddr);
-                            if (!"000".equals((String) mapAplica.get("strError"))) {
-                                error = (String) mapAplica.get("strError");
-                                cbControlErroresFacadeInterfaceLocal.crearLogErrores(usuarioResponsable, numeroSolicitudCredito, moduleName, error, "");
-                                ctx.setRollbackOnly();
-                                output.put("strError",error);
-                                return output;
-                            }else{
-                                if(mapAplica.get("numeroTransaccionRefinanciacion")!=null){
-                                    output.put("numeroTransaccionRefinanciacion", mapAplica.get("numeroTransaccionRefinanciacion").toString());
-                                }
-                            }
-                        }
-                    }
-                }
+            List<CRSolicitudCambioCondiciones> listCrSolCamCond = new ArrayList<CRSolicitudCambioCondiciones>();
 
-                if ("AR".equals(strEstadoSolicitudCredito) || "RE".equals(strEstadoSolicitudCredito)) {
-                    List lstTitulares=crSolicitudTitularesInterfaceLocal.findByNumeroSolicitud(crSolicitudCredito.getNumeroSolicitud());
-                    for(int p=0;p<lstTitulares.size();p++){
-                        CRSolicitudTitulares crSolicitudTitulares=(CRSolicitudTitulares)lstTitulares.get(p);
-        //              Verificacion de Lista Negra
-                        clListaNegraFacadeInterfaceLocal.insertarListaNegraSol(
-                                crSolicitudTitulares.getClPersonas().getCodigoPersona(),
-                                crSolicitudTitulares.getClPersonas().getNumeroDocumentoIdentidad(), 
-                                crSolicitudCredito.getNumeroSolicitud(), 
-                                crSolicitudCredito.getFechaResolucion(),
-                                usuarioResponsable, 
-                                strRemoteHost, 
-                                strRemoteAddr);
-                    }
-                    
-                    
-                    List lstAsignacion=crAsignacionEvaluacionInterfaceLocal.findBySolicitud(crSolicitudCredito.getNumeroSolicitud());
-                    if(lstAsignacion.size()>0){
-                        crRccEvaluacionFinancieraFacadeLocal.registrarDatosRccEvaluacion(((CRAsignacionEvaluacion)lstAsignacion.get(0)).getIdAsignacionEvaluacion(), crSolicitudCredito.getClPersonasByCodigoPersona().getCodigoDeudorSbs(), codigoEmpresa, fechaAplicacion, usuarioResponsable, strRemoteHost, strRemoteAddr);
-                    }
-                    
+            // Si es cambio de condiciones ubicamos la solicitud
+            if (!crSolicitudCredito.getTipoSolicitud().equals("SC")) {
+                listCrSolCamCond = crSolicitudCambioCondicionesInterfaceLocal.findByCodigoSolicitud(numeroSolicitudCredito);
+                if (listCrSolCamCond == null || listCrSolCamCond.size() == 0) {
+                    cbControlErroresFacadeInterfaceLocal.crearLogErrores(usuarioResponsable,
+                                                                         numeroSolicitudCredito,
+                                                                         moduleName,
+                                                                         "665",
+                                                                         "");
+                    output.put("strError", "655");
+                    return output;
                 }
-                
+            }
+
+            String strCodigoPersonaUsuario = usuarioResponsable;
+
+            // Codigo Persona Relacionado a la Empresa
+            String strPersonaEmpresa;
+            try {
+                Map temporal = geGeneralesFacadeInterfaceLocal.valorConstante(codigoEmpresa,
+                                                                              "EMP_COD_PERSONA",
+                                                                              usuarioResponsable);
+                strPersonaEmpresa = temporal.get("strConstante").toString();
+            } catch (Exception e) {
+                //e.printStackTrace();
+                strPersonaEmpresa = "";
+            }
+
+            // Ubicamos cargo laboral relacionado al usuario
+            String strCargoLaboral = "";
+            CLCentroLaboralPersonas clCentroLaboralPersonas = null;
+            List lstCLCentroLaboralPersonas = null;
+            try {
+                lstCLCentroLaboralPersonas = clCentroLaboralPersonasInterfaceLocal.findByPersonaNaturalAndPersonaJuridica(usuarioResponsable,
+                                                                                                                          strPersonaEmpresa);
+
             } catch (Exception e) {
                 e.printStackTrace();
-                FormatoFecha hora = new FormatoFecha();
-                BeanControlErrores beanControlErrores = new BeanControlErrores();
-                beanControlErrores.setStrCodigoUsuario(usuarioResponsable);
-                beanControlErrores.setStrDescripcionError(strDescripcionError);
-                beanControlErrores.setStrFechaOcurrencia(hora.obtenerFechaActual());
-                beanControlErrores.setStrHoraOcurrencia(hora.obtenerHora());
-                beanControlErrores.setStrNombreProceso(moduleName);
-                cbControlErroresFacadeInterfaceLocal.crearLogErrores(beanControlErrores);
-                throw new RemoteException();
+                strDescripcionError = e.toString().length() > 2000 ? e.toString().substring(0, 2000) : e.toString();
+                cbControlErroresFacadeInterfaceLocal.crearLogErrores(usuarioResponsable,
+                                                                     moduleName,
+                                                                     strDescripcionError);
             }
-            output.put("strError",NO_ERROR);
-            return output;
+            if (lstCLCentroLaboralPersonas != null && lstCLCentroLaboralPersonas.size() > 0) {
+                clCentroLaboralPersonas = (CLCentroLaboralPersonas) lstCLCentroLaboralPersonas.get(0);
+                strCargoLaboral = clCentroLaboralPersonas.getClCargosLaborales().getCargoLaboral();
+            }
+
+            // VALIDAMOS LIMITES OPERATIVOS
+            String strProcesoOperativo = "";
+
+            //OBTENEMOS CODIGO DE PROCESO RELACIONADO A CREDITOS
+            String strIdProceso = null;
+            String query = null;
+            if (crSolicitudCredito.getTipoSolicitud().equals("SC")) {
+                // Prestamos Cuotas
+                strIdProceso = "SCRES";
+            } else if (crSolicitudCredito.getTipoSolicitud().equals("RF")) {
+                // Prestamos Revolvente o Linea de Credito
+                strIdProceso = "RFRES";
+            } else if (crSolicitudCredito.getTipoSolicitud().equals("RP")) {
+                // Prestamos Revolvente o Linea de Credito
+                strIdProceso = "RPRES";
+            }
+            //OBTENEMOS CODIGO PROCESO OPERATIVO
+            query = "SELECT t.* " + "FROM CRTPOCR t " + "WHERE t.c_tipcre =:tipoCredito  " + "AND t.c_sticre =:subTipoCredito " + "AND t.c_idproc =:idProceso ";
+            List lstProcesos = entityManager.createNativeQuery(query).setParameter("tipoCredito",
+                                                                                   crSolicitudCredito.getCrSubTipoCreditoByReCRSolicitudCredito07().getId().getCodigoTipoCredito()).setParameter("subTipoCredito",
+                                                                                                                                                                                                 crSolicitudCredito.getCrSubTipoCreditoByReCRSolicitudCredito07().getId().getCodigoSubTipoCredito()).setParameter("idProceso",
+                                                                                                                                                                                                                                                                                                                  strIdProceso).getResultList();
+            if (lstProcesos.size() > 0) {
+                strProcesoOperativo = ((Object[]) lstProcesos.get(0))[3].toString();
+            } else {
+                strProcesoOperativo = "";
+            }
+
+            GELimitesOperativosFacadeInterfaceLocal geLimitesOperativosFacadeInterfaceLocal = null;
+            context = new InitialContext();
+            geLimitesOperativosFacadeInterfaceLocal = (GELimitesOperativosFacadeInterfaceLocal) context.lookup(GELimitesOperativosFacade.LocalJNDIName);
+
+            String strLimitePermitido = "";
+
+            if (estadoresolucion.equals("AR")) {
+                // Inicio [Req.S16-025] esalazar 06.09.2016
+                GenericBean genericBean = new GenericBean();
+                genericBean.addProperty("codigoProducto",
+                                        crSolicitudCredito.getCrProductoByProductoAprobado().getCodigoProducto());
+                Map map = geLimitesOperativosFacadeInterfaceLocal.validaLimiteOperativo(codigoEmpresa,
+                                                                                        codigoAgencia,
+                                                                                        new java.sql.Date(fechaAplicacion.getTime()),
+                                                                                        usuarioResponsable,
+                                                                                        /* codigoEmpresa + */strProcesoOperativo,
+                                                                                        crSolicitudCredito.getCodigoMonedaAprobado(),
+                                                                                        new Double(montoAprobado),
+                                                                                        genericBean);
+                // Fin [Req.S16-025]
+                if (!"000".equals((String) map.get("strError"))) {
+                    cbControlErroresFacadeInterfaceLocal.crearLogErrores(usuarioResponsable,
+                                                                         numeroSolicitudCredito,
+                                                                         moduleName,
+                                                                         (String) map.get("strError"),
+                                                                         "");
+                    output.put("strError", (String) map.get("strError"));
+                    return output;
+                } else {
+                    strLimitePermitido = (String) map.get("autorizado");
+                }
+
+            } else {
+                strLimitePermitido = "S";
+            }
+
+            //validacion segun indicador limites operativos
+            if (tipoResolucion.equals("PE")) {
+                strLimitePermitido = "S";
+            }
+
+            //Evaluamos Estado de la Solicitud de Crédito
+            String strEstadoSolicitudCredito;
+            if (strLimitePermitido.equals("N")) {
+                strEstadoSolicitudCredito = "EE";
+                cbControlErroresFacadeInterfaceLocal.crearLogErrores(usuarioResponsable,
+                                                                     numeroSolicitudCredito,
+                                                                     moduleName,
+                                                                     "1016",
+                                                                     "");
+                output.put("strError", "1016");
+                return output;
+
+            } else {
+                if (!(estadoresolucion.equals("AR") || estadoresolucion.equals("RE"))) {
+                    strEstadoSolicitudCredito = "EE";
+
+                } else {
+                    String errorValidaTitulares = crbnSolicitudCreditoFacadeInterfaceLocal.validarTitulares(codigoEmpresa,
+                                                                                                            numeroSolicitudCredito,
+                                                                                                            usuarioResponsable);
+
+                    if (!errorValidaTitulares.equals("000")) {
+                        strEstadoSolicitudCredito = "EE";
+                        cbControlErroresFacadeInterfaceLocal.crearLogErrores(usuarioResponsable,
+                                                                             numeroSolicitudCredito,
+                                                                             moduleName,
+                                                                             errorValidaTitulares,
+                                                                             "");
+                        output.put("strError", errorValidaTitulares);
+                        return output;
+                    } else {
+                        strEstadoSolicitudCredito = estadoresolucion;
+                    }
+                }
+            }
+
+            //ACTUALIZAMOS ESTADOS DE RESOLUCION EN CRSolicitudCredito, donde:
+            CREstadoResolucionCredito crUltimoEstadoResolucion = new CREstadoResolucionCredito();
+            crUltimoEstadoResolucion.setEstadoResolucion(estadoresolucion);
+            crSolicitudCredito.setCrUltimoEstadoResolucion(crUltimoEstadoResolucion);
+            if ("OB".equals(estadoresolucion)) {
+                crSolicitudCredito.setIndEnvioEvaluacionSC("N");
+                crSolicitudCredito.setAnalistaResponsable(null);
+            }
+            crSolicitudCreditoInterfaceLocal.update(crSolicitudCredito);
+
+            // EVALUAMOS CAMBIO DE ESTADO EN SOLICITUD CAMBIO DE CONDICIONES
+            if (!crSolicitudCredito.getTipoSolicitud().equals("SC")) {
+                // Actualizar Registro de cambio de condiciones en entidad
+                // CRSolicitudCambioCondiciones, donde:
+                CRSolicitudCambioCondiciones solicitudCambios = listCrSolCamCond.get(0);
+                solicitudCambios.setEstadoSolicitudCambioCondiciones(strEstadoSolicitudCredito);
+
+                if (solicitudCambios.getTotalMontoPago().doubleValue() > 0) {
+                    indicadorMM = "S";
+                }
+
+                crSolicitudCambioCondicionesInterfaceLocal.update(solicitudCambios);
+
+                // Actualizamos Estado en Solictud de credito relacionado en
+                // etidad CRSolicitudCredito, donde:
+                crSolicitudCredito.setCrEstadoSolicitud(new CREstadoSolicitud());
+                crSolicitudCredito.getCrEstadoSolicitud().setCodigoEstado(strEstadoSolicitudCredito);
+                crSolicitudCredito.setFechaResolucion(fechaAplicacion);
+                crSolicitudCredito.setUsuarioResponsableResolucion(usuarioResponsable);
+                crSolicitudCredito.setFechaModificacion(fechaAplicacion);
+                crSolicitudCredito.setUsuarioModificacion(usuarioResponsable);
+
+                crSolicitudCreditoInterfaceLocal.update(crSolicitudCredito);
+            }
+
+            // Creamos regsitro de resolucion, en entidad CRSolicitudResolucion,
+            // donde:
+            String idRegistroResolucion = cbCorrelativoInterfaceLocal.GenerarCorrelativo(codigoEmpresa,
+                                                                                         "CRDSCRE",
+                                                                                         15,
+                                                                                         usuarioResponsable,
+                                                                                         strRemoteHost,
+                                                                                         strRemoteAddr);
+
+            CREstadoResolucionCredito crEstadoResolucionCredito = new CREstadoResolucionCredito();
+            crEstadoResolucionCredito.setEstadoResolucion(estadoresolucion);
+            CRMotivoXEstadoResolucionCredito crMotivoXEstadoResolucionCredito = null;
+            // [Req.14-115] gAlmerco 20.06.2015
+            if (motivoEstadoResolucion != null && !motivoEstadoResolucion.equals("")) {
+                crMotivoXEstadoResolucionCredito = new CRMotivoXEstadoResolucionCredito();
+                crMotivoXEstadoResolucionCredito.setMotivoXEstadoResolucion(motivoEstadoResolucion);
+            }
+
+            CRSolicitudResolucion crSolicitudResolucion = new CRSolicitudResolucion();
+            crSolicitudResolucion.setIdRegistroResolucion(idRegistroResolucion);
+            //crSolicitudResolucion.setFechaResolucion(fechaAplicacion);
+
+            crSolicitudResolucion.setFechaResolucion(FormatoFecha.stringToTimestampddMMyyyyhhmmss(FormatoFecha.dateUtilToStringDDMMYYYY(fechaAplicacion),
+                                                                                                  (new FormatoFecha().obtenerHora())));
+            crSolicitudResolucion.setCrSolicitudCredito(crSolicitudCredito);
+            crSolicitudResolucion.setUsuarioResponsableResolucion(usuarioResponsable);
+            CLCargosLaborales clCargosLaborales = new CLCargosLaborales();
+            clCargosLaborales.setCargoLaboral(codigoEmpresa + "0000001");
+            crSolicitudResolucion.setClCargosLaborales(clCargosLaborales);
+            crSolicitudResolucion.setCrEstadoResolucionCredito(crEstadoResolucionCredito);
+            //jpena 27.06.2012 Se aumenta la cantidad de caracteres a guardar de acuerdo a lo permitido en la base de datos.
+            crSolicitudResolucion.setFundamentos(fundamentos.length() > 2000 ? fundamentos.substring(0, 2000) : fundamentos);
+            CREstadoSolicitud crEstadoSolicitud = new CREstadoSolicitud();
+            crEstadoSolicitud.setCodigoEstado(strEstadoSolicitudCredito);
+            crSolicitudResolucion.setCrEstadoSolicitud(crEstadoSolicitud);
+            crSolicitudResolucion.setMontoAprobadoSugerido(new Double(montoAprobado));
+            crSolicitudResolucion.setEstadoRegistro("S");
+            crSolicitudResolucion.setCrMotivoXEstadoResolucionCredito(crMotivoXEstadoResolucionCredito);
+            crSolicitudResolucion.setUsuarioInsercion(usuarioResponsable);
+            crSolicitudResolucion.setTerminalInsercion(strRemoteHost);
+            crSolicitudResolucion.setFechaInsercion(new Timestamp(System.currentTimeMillis()));
+            crSolicitudResolucion.setIpInsercion(strRemoteAddr);
+            if (tipoResolucion.equals("PE")) {
+                crSolicitudResolucion.setEtapaEvaluacion(tipoResolucion);
+            } else {
+                crSolicitudResolucion.setEtapaEvaluacion("RC");
+            }
+            // Inicio [Req. S16-041] agarcia 05.12.2016
+            if (!_isEmpty(codigoNivelAprobacion)) {
+                CRNivelAprobacion crNivelAprobacion = new CRNivelAprobacion();
+                crNivelAprobacion.setCodigo(codigoNivelAprobacion);
+                crSolicitudResolucion.setCrNivelAprobacion(crNivelAprobacion);
+            }
+            // Fin [Req. S16-041] 
+            crSolicitudResolucionInterfaceLocal.save(crSolicitudResolucion);
+            entityManager.flush();
+
+            //creando un registro en solicitudDesembolso en caso la resolucion aprobada y de tipo emprendedor
+
+            if (estadoresolucion.equals("AR")) {
+
+                //stacanga 24.10.2011
+                /*
+                 * CRSolCrePrestamoCuotas crSolCrePrestamoCuotas = crSolCrePrestamoCuotasInterfaceLocal.findById(numeroSolicitudCredito); if(crSolCrePrestamoCuotas!=null &&
+                 * crSolCrePrestamoCuotas.getIndicadorCredido()!=null && crSolCrePrestamoCuotas.getIndicadorCredido().equals("S") &&
+                 * crSolCrePrestamoCuotas.getCrTipoDesembolsoCredito().getTipoDesembolso().equals("TR")){ if(crSolCrePrestamoCuotas.getIndicadorModalidadCredido().equals("CT") ||
+                 * crSolCrePrestamoCuotas.getIndicadorModalidadCredido().equals("NR") ){ BeanParametrosAuditoria beanParametrosAuditoria=new BeanParametrosAuditoria();
+                 * beanParametrosAuditoria.setCodigoEmpresa(codigoEmpresa); beanParametrosAuditoria.setUsuarioInsercion(usuarioResponsable); beanParametrosAuditoria.setCodigoAgencia(codigoAgencia);
+                 * beanParametrosAuditoria.setIpInsercion(strRemoteAddr); beanParametrosAuditoria.setTerminalInsercion(strRemoteHost); beanParametrosAuditoria.setFechaInsercion(fechaAplicacion); Map
+                 * mapSolEmp = crSolicitudDesembolsoCreditoFacadeLocal.registroSolicitudDesembolso(beanParametrosAuditoria, numeroSolicitudCredito); error = (String) mapSolEmp.get("error"); if
+                 * (!"000".equals(error)) { cbControlErroresFacadeInterfaceLocal.crearLogErrores(usuarioResponsable, numeroSolicitudCredito, moduleName, error, ""); ctx.setRollbackOnly();
+                 * output.put("strError",error); return output; } } }
+                 */
+
+                CRSolCrePrestamoCartaFianza crSolCrePrestamoCartaFianza = crSolCrePrestamoCartaFianzaInterfaceLocal.findById(numeroSolicitudCredito);
+                if (crSolCrePrestamoCartaFianza != null) {
+                    crSolCrePrestamoCartaFianza.setEstadoCartaFianza("A");
+                    crSolCrePrestamoCartaFianza.setFechaAprobacion(FormatoFecha.stringToTimestampddMMyyyyhhmmss(FormatoFecha.dateUtilToStringDDMMYYYY(fechaAplicacion),
+                                                                                                                (new FormatoFecha().obtenerHora())));
+                    crSolCrePrestamoCartaFianza.setUsuarioAprobacion(usuarioResponsable);
+                    crSolCrePrestamoCartaFianza.setUsuarioModificacion(usuarioResponsable);
+                    crSolCrePrestamoCartaFianza.setFechaModificacion(new Timestamp(System.currentTimeMillis()));
+                    crSolCrePrestamoCartaFianza.setTerminalModificacion(strRemoteHost);
+                    crSolCrePrestamoCartaFianza.setIpModificacion(strRemoteAddr);
+                    crSolCrePrestamoCartaFianzaInterfaceLocal.update(crSolCrePrestamoCartaFianza);
+                }
+
+            }
+
+            //Adicionar Historico Cambio de Estado Solicitud de Credito
+            String strMotivoCambioEstado = "02";
+            if (estadoresolucion.equals("OB")) {
+                strMotivoCambioEstado = "11";
+            } else if (estadoresolucion.equals("RE")) {
+                strMotivoCambioEstado = "12";
+
+                //mnieves 29.03.2011
+                Map mapAplicar = crDetalleObsEncontradoFacadeInterfaceLocal.actualizarDetalleObsByNumeroSolicitud(numeroSolicitudCredito);
+                if (!"000".equals((String) mapAplicar.get("strError"))) {
+                    error = (String) mapAplicar.get("strError");
+                    cbControlErroresFacadeInterfaceLocal.crearLogErrores(usuarioResponsable,
+                                                                         numeroSolicitudCredito,
+                                                                         moduleName,
+                                                                         error,
+                                                                         "");
+                    ctx.setRollbackOnly();
+                    output.put("strError", error);
+                    return output;
+                }
+
+                mapAplicar = crLevantamientoObservacionFacadeInterfaceLocal.actualizacionObservacionByNumeroSolicitud(numeroSolicitudCredito);
+                if (!"000".equals((String) mapAplicar.get("strError"))) {
+                    error = (String) mapAplicar.get("strError");
+                    cbControlErroresFacadeInterfaceLocal.crearLogErrores(usuarioResponsable,
+                                                                         numeroSolicitudCredito,
+                                                                         moduleName,
+                                                                         error,
+                                                                         "");
+                    ctx.setRollbackOnly();
+                    output.put("strError", error);
+                    return output;
+                }
+
+            }
+
+            crbnSolicitudCreditoFacadeInterfaceLocal.historicoCambioEstado(crSolicitudCredito.getNumeroSolicitud(),
+                                                                           strEstadoSolicitudCredito,
+                                                                           strMotivoCambioEstado,
+                                                                           codigoEmpresa,
+                                                                           usuarioResponsable,
+                                                                           strRemoteHost,
+                                                                           strRemoteAddr,
+                                                                           (new java.sql.Date(fechaAplicacion.getTime())));
+
+            // /ACTUALIZAMOS SOLICITUD DE CREDITO COMO RESOLUCION APROBADA//TODO
+            if (crSolicitudCredito.getTipoSolicitud().equals("SC")) {
+                if ("AR".equals(strEstadoSolicitudCredito) || "RE".equals(strEstadoSolicitudCredito)) {
+
+                    // Evaluamos Proceso según Forma y Modalidad de Crédito
+                    if ("PRC".equals(crSolicitudCredito.getTipoModalidadCredito()) || "PRR".equals(crSolicitudCredito.getTipoModalidadCredito())) {
+                        // Resolucion de Prestamos
+                        error = crbnSolicitudCreditoFacadeInterfaceLocal.resolucionPrestamos(codigoEmpresa,
+                                                                                             codigoAgencia,
+                                                                                             numeroSolicitudCredito,
+                                                                                             strEstadoSolicitudCredito,
+                                                                                             (new java.sql.Date(fechaAplicacion.getTime())),
+                                                                                             usuarioResponsable,
+                                                                                             Double.parseDouble(montoAprobado),
+                                                                                             FormatoFecha.stringToSqlDate(fechaDesembolso),
+                                                                                             null,
+                                                                                             usuarioResponsable,
+                                                                                             strRemoteHost,
+                                                                                             strRemoteAddr);
+                        if (!"000".equals(error)) {
+                            cbControlErroresFacadeInterfaceLocal.crearLogErrores(usuarioResponsable,
+                                                                                 numeroSolicitudCredito,
+                                                                                 moduleName,
+                                                                                 error,
+                                                                                 "");
+                            ctx.setRollbackOnly();
+                            output.put("strError", error);
+                            return output;
+                        }
+                    } else if ("PRF".equals(crSolicitudCredito.getTipoModalidadCredito())) {
+                        CREstadoSolicitud crEstadoSolicitudRes = new CREstadoSolicitud(estadoresolucion, null, null);
+                        crSolicitudCredito.setCrEstadoSolicitud(crEstadoSolicitudRes);
+                        crSolicitudCredito.setFechaResolucion(fechaAplicacion);
+                        crSolicitudCredito.setUsuarioResponsableResolucion(usuarioResponsable);
+                        crSolicitudCredito.setFechaModificacion(fechaAplicacion);
+                        crSolicitudCredito.setUsuarioModificacion(usuarioResponsable);
+                        crSolicitudCreditoInterfaceLocal.update(crSolicitudCredito);
+                    }
+                    // Inicio [Ticket#9425] esalazar 06.09.2016
+                    if (_equiv("RE", strEstadoSolicitudCredito)) {
+                        // [Req. CC15-013] lnarvaez 06.05.2015
+                        error = crbnSolicitudCreditoFacadeInterfaceLocal.liberarGarantias(codigoEmpresa,
+                                                                                          codigoAgencia,
+                                                                                          usuarioResponsable,
+                                                                                          numeroSolicitudCredito,
+                                                                                          // Inicio [CC15-063] lnarvaez 21.10.2015
+                                                                                          fechaAplicacion,
+                                                                                          strRemoteHost,
+                                                                                          strRemoteAddr);
+                        if (!_equiv(error, NO_ERROR)) {
+                            output.put("strError", error);
+                            return output;
+                        }
+                        // Fin [CC15-063]
+                    }
+                    // Fin [Ticket#9425]
+                }
+            } else {
+                if ("AR".equals(strEstadoSolicitudCredito)) {
+                    if ("N".equals(indicadorMM)) {
+                        Map mapAplica = crOperacionesFacadeLocal.aplicacionRefinanciacion(null,
+                                                                                          codigoEmpresa,
+                                                                                          codigoAgencia,
+                                                                                          null,
+                                                                                          numeroSolicitudCredito,
+                                                                                          null,
+                                                                                          null,
+                                                                                          crSolicitudCredito.getCodigoMonedaAprobado(),
+                                                                                          new Double(0),
+                                                                                          new Double(1),
+                                                                                          fechaAplicacion,
+                                                                                          null,
+                                                                                          usuarioResponsable,
+                                                                                          null,
+                                                                                          strRemoteHost,
+                                                                                          strRemoteAddr);
+                        if (!"000".equals((String) mapAplica.get("strError"))) {
+                            error = (String) mapAplica.get("strError");
+                            cbControlErroresFacadeInterfaceLocal.crearLogErrores(usuarioResponsable,
+                                                                                 numeroSolicitudCredito,
+                                                                                 moduleName,
+                                                                                 error,
+                                                                                 "");
+                            ctx.setRollbackOnly();
+                            output.put("strError", error);
+                            return output;
+                        } else {
+                            if (mapAplica.get("numeroTransaccionRefinanciacion") != null) {
+                                output.put("numeroTransaccionRefinanciacion",
+                                           mapAplica.get("numeroTransaccionRefinanciacion").toString());
+                            }
+                        }
+                    }
+                }
+            }
+
+            if ("AR".equals(strEstadoSolicitudCredito) || "RE".equals(strEstadoSolicitudCredito)) {
+                List lstTitulares = crSolicitudTitularesInterfaceLocal.findByNumeroSolicitud(crSolicitudCredito.getNumeroSolicitud());
+                for (int p = 0; p < lstTitulares.size(); p++) {
+                    CRSolicitudTitulares crSolicitudTitulares = (CRSolicitudTitulares) lstTitulares.get(p);
+                    //              Verificacion de Lista Negra
+                    clListaNegraFacadeInterfaceLocal.insertarListaNegraSol(crSolicitudTitulares.getClPersonas().getCodigoPersona(),
+                                                                           crSolicitudTitulares.getClPersonas().getNumeroDocumentoIdentidad(),
+                                                                           crSolicitudCredito.getNumeroSolicitud(),
+                                                                           crSolicitudCredito.getFechaResolucion(),
+                                                                           usuarioResponsable,
+                                                                           strRemoteHost,
+                                                                           strRemoteAddr);
+                }
+
+                List lstAsignacion = crAsignacionEvaluacionInterfaceLocal.findBySolicitud(crSolicitudCredito.getNumeroSolicitud());
+                if (lstAsignacion.size() > 0) {
+                    crRccEvaluacionFinancieraFacadeLocal.registrarDatosRccEvaluacion(((CRAsignacionEvaluacion) lstAsignacion.get(0)).getIdAsignacionEvaluacion(),
+                                                                                     crSolicitudCredito.getClPersonasByCodigoPersona().getCodigoDeudorSbs(),
+                                                                                     codigoEmpresa,
+                                                                                     fechaAplicacion,
+                                                                                     usuarioResponsable,
+                                                                                     strRemoteHost,
+                                                                                     strRemoteAddr);
+                }
+
+            }
+
+        } catch (Exception e) {
+            e.printStackTrace();
+            FormatoFecha hora = new FormatoFecha();
+            BeanControlErrores beanControlErrores = new BeanControlErrores();
+            beanControlErrores.setStrCodigoUsuario(usuarioResponsable);
+            beanControlErrores.setStrDescripcionError(strDescripcionError);
+            beanControlErrores.setStrFechaOcurrencia(hora.obtenerFechaActual());
+            beanControlErrores.setStrHoraOcurrencia(hora.obtenerHora());
+            beanControlErrores.setStrNombreProceso(moduleName);
+            cbControlErroresFacadeInterfaceLocal.crearLogErrores(beanControlErrores);
+            throw new RemoteException();
         }
+        output.put("strError", NO_ERROR);
+        return output;
+    }
 
     /**
-     *Metodo que usa el web service
+     * Metodo que usa el web service
      **/
-    public Retorno ws_registraResolucion(BeanCRResolucionCredito beanCRResolucionCredito){
+    public Retorno ws_registraResolucion(BeanCRResolucionCredito beanCRResolucionCredito) {
         String montoApro = beanCRResolucionCredito.getStrMontoAprobadoSugerido();
-        
-        String moduleName = CRSolicitudCreditosFacade.class.getSimpleName()+"registraResolucion()";
+
+        String moduleName = CRSolicitudCreditosFacade.class.getSimpleName() + "registraResolucion()";
         String strDescripcionError = null;
         String error = null;
         Retorno retorno = new Retorno();
-        try{
+        try {
             GEGeneralesFacadeInterfaceRemote geGeneralesFacadeInterfaceRemote = null;
             context = new InitialContext();
-            geGeneralesFacadeInterfaceRemote = (GEGeneralesFacadeInterfaceRemote)context.lookup("GEGeneralesFacade/remote");
-            
+            geGeneralesFacadeInterfaceRemote = (GEGeneralesFacadeInterfaceRemote) context.lookup("GEGeneralesFacade/remote");
+
             System.out.println("---------------------------");
-            System.out.println("beanCRResolucionCredito.getCodigoEmpresa()"+beanCRResolucionCredito.getCodigoEmpresa());
-            System.out.println("beanCRResolucionCredito.getTerminalInsercion()= "+beanCRResolucionCredito.getTerminalInsercion());
-            System.out.println("beanCRResolucionCredito.getIpInsercion()= "+beanCRResolucionCredito.getIpInsercion());
-            System.out.println("beanCRResolucionCredito.getCodigoAgencia()= "+beanCRResolucionCredito.getCodigoAgencia());
-            System.out.println("beanCRResolucionCredito.getBeanCRSolicitudCredito().getStrNumeroSolicitud()= "+beanCRResolucionCredito.getBeanCRSolicitudCredito().getStrNumeroSolicitud());
-            System.out.println("beanCRResolucionCredito.getUsuarioResponsableResolucion()= "+beanCRResolucionCredito.getUsuarioResponsableResolucion());
-            System.out.println("beanCRResolucionCredito.getCodigoEstadoResolucionCredito()= "+beanCRResolucionCredito.getCodigoEstadoResolucionCredito());
-            System.out.println("beanCRResolucionCredito.getFundamentos()= "+beanCRResolucionCredito.getFundamentos());
-            System.out.println("beanCRResolucionCredito.getStrMontoAprobadoSugerido()= "+beanCRResolucionCredito.getStrMontoAprobadoSugerido());
-            System.out.println("beanCRResolucionCredito.getCodigoEstadoSolicitud()= "+beanCRResolucionCredito.getCodigoEstadoSolicitud());
+            System.out.println("beanCRResolucionCredito.getCodigoEmpresa()" + beanCRResolucionCredito.getCodigoEmpresa());
+            System.out.println("beanCRResolucionCredito.getTerminalInsercion()= " + beanCRResolucionCredito.getTerminalInsercion());
+            System.out.println("beanCRResolucionCredito.getIpInsercion()= " + beanCRResolucionCredito.getIpInsercion());
+            System.out.println("beanCRResolucionCredito.getCodigoAgencia()= " + beanCRResolucionCredito.getCodigoAgencia());
+            System.out.println("beanCRResolucionCredito.getBeanCRSolicitudCredito().getStrNumeroSolicitud()= " + beanCRResolucionCredito.getBeanCRSolicitudCredito().getStrNumeroSolicitud());
+            System.out.println("beanCRResolucionCredito.getUsuarioResponsableResolucion()= " + beanCRResolucionCredito.getUsuarioResponsableResolucion());
+            System.out.println("beanCRResolucionCredito.getCodigoEstadoResolucionCredito()= " + beanCRResolucionCredito.getCodigoEstadoResolucionCredito());
+            System.out.println("beanCRResolucionCredito.getFundamentos()= " + beanCRResolucionCredito.getFundamentos());
+            System.out.println("beanCRResolucionCredito.getStrMontoAprobadoSugerido()= " + beanCRResolucionCredito.getStrMontoAprobadoSugerido());
+            System.out.println("beanCRResolucionCredito.getCodigoEstadoSolicitud()= " + beanCRResolucionCredito.getCodigoEstadoSolicitud());
             System.out.println("---------------------------");
             beanCRResolucionCredito.setMontoAprobadoSugerido(new Double(montoApro));
             CRSolicitudCredito crSolicitudCredito = crSolicitudCreditoInterfaceRemote.findById(beanCRResolucionCredito.getBeanCRSolicitudCredito().getStrNumeroSolicitud());
-            
+
             if (crSolicitudCredito == null) {
                 retorno.setCodError("0");
                 retorno.setDescError("Error no existe la solicitud de credito");
-                return retorno;             
+                return retorno;
             }
-            
+
             List<CRSolicitudCambioCondiciones> listCrSolCamCond = new ArrayList<CRSolicitudCambioCondiciones>();
             // Si es cambio de condiciones ubicamos la solicitud
             if (!crSolicitudCredito.getTipoSolicitud().equals("SC")) {
-                listCrSolCamCond = crSolicitudCambioCondicionesInterfaceRemote
-                        .findByCodigoSolicitud(beanCRResolucionCredito.getBeanCRSolicitudCredito().getStrNumeroSolicitud());
+                listCrSolCamCond = crSolicitudCambioCondicionesInterfaceRemote.findByCodigoSolicitud(beanCRResolucionCredito.getBeanCRSolicitudCredito().getStrNumeroSolicitud());
                 if (listCrSolCamCond == null || listCrSolCamCond.size() == 0) {
                     retorno.setCodError("0");
                     retorno.setDescError("Error en la solicitud de credito, no existe cambio de condiciones");
@@ -3817,12 +3797,11 @@
                 if (crSolicitudCredito.getTipoModalidadCredito().equals("PRC"))
                     // Prestamos Cuotas
                     strProcesoOperativo = "000000000001";
-                else if (crSolicitudCredito.getTipoModalidadCredito().equals(
-                        "PRR"))
+                else if (crSolicitudCredito.getTipoModalidadCredito().equals("PRR"))
                     // Prestamos Revolvente o Linea de Credito
                     strProcesoOperativo = "000000000002";
                 else if (crSolicitudCredito.getTipoModalidadCredito().equals("PRF"))
-                //creditos Indirectos
+                    //creditos Indirectos
                     strProcesoOperativo = "000000000050";
 
             } else {
@@ -3839,20 +3818,20 @@
             }
 
             String strLimitePermitido = "";
-            
+
             CBCalendarioId cbCalendarioId = new CBCalendarioId("SF", beanCRResolucionCredito.getCodigoEmpresa());
             CBCalendario cbCalendario = new CBCalendario();
             cbCalendario = cbCalendarioFacadeRemote.findById(cbCalendarioId);
-            
+
             Calendar cale = Calendar.getInstance();
             //Obtiene la fecha con la que trabaja el sistema
             cale.setTime(cbCalendario.getFechaProceso());
             int dia = cale.get(Calendar.DAY_OF_MONTH);
-            int mes = cale.get(Calendar.MONTH)+1;
+            int mes = cale.get(Calendar.MONTH) + 1;
             int anio = cale.get(Calendar.YEAR);
 
             SimpleDateFormat formateador = new SimpleDateFormat("dd/MM/yyyy");
-            String strFechaAplicacion = dia+"/"+mes+"/"+anio;                               
+            String strFechaAplicacion = dia + "/" + mes + "/" + anio;
             Date fechaAplicacion = new java.sql.Date(formateador.parse(strFechaAplicacion).getTime());
             //
             // Inicio [Req.S16-025] esalazar 06.09.2016
@@ -3868,7 +3847,7 @@
                                                                                      crSolicitudCredito.getMontoAprobado(),
                                                                                      genericBean);
             // Fin [Req.S16-025]
-            
+
             if (!"000".equals((String) map.get("strError"))) {
                 //cbControlErroresFacadeInterfaceLocal.crearLogErrores(usuarioResponsable, numeroSolicitudCredito, moduleName, (String) map.get("strError"), "");
                 retorno.setCodError("0");
@@ -3877,39 +3856,37 @@
             } else {
                 strLimitePermitido = (String) map.get("autorizado");
             }
-            
+
             //Evaluamos Estado de la Solicitud de Crédito
             String strEstadoSolicitudCredito;
             String estadoresolucion = beanCRResolucionCredito.getCodigoEstadoResolucionCredito();
-            if (strLimitePermitido.equals("N")){
+            if (strLimitePermitido.equals("N")) {
                 strEstadoSolicitudCredito = "EE";
-            }
-            else{
-                if ( !(estadoresolucion.equals("AR")||estadoresolucion.equals("RE")) ) {
+            } else {
+                if (!(estadoresolucion.equals("AR") || estadoresolucion.equals("RE"))) {
                     strEstadoSolicitudCredito = "EE";
-                    
-                }else {
-                    String errorValidaTitulares=crbnSolicitudCreditoFacadeInterfaceLocal.
-                                                        validarTitulares(beanCRResolucionCredito.getCodigoEmpresa(),
-                                                                         beanCRResolucionCredito.getBeanCRSolicitudCredito().getStrNumeroSolicitud(),
-                                                                         beanCRResolucionCredito.getUsuarioResponsableResolucion());
-                    if(!errorValidaTitulares.equals("000")){
+
+                } else {
+                    String errorValidaTitulares = crbnSolicitudCreditoFacadeInterfaceLocal.validarTitulares(beanCRResolucionCredito.getCodigoEmpresa(),
+                                                                                                            beanCRResolucionCredito.getBeanCRSolicitudCredito().getStrNumeroSolicitud(),
+                                                                                                            beanCRResolucionCredito.getUsuarioResponsableResolucion());
+                    if (!errorValidaTitulares.equals("000")) {
                         strEstadoSolicitudCredito = "EE";
-                    }else{
+                    } else {
                         strEstadoSolicitudCredito = estadoresolucion;
                     }
-                }               
+                }
             }
-            
+
             //ACTUALIZAMOS ESTADOS DE RESOLUCION EN CRSolicitudCredito, donde:
-            CREstadoResolucionCredito crUltimoEstadoResolucion=new CREstadoResolucionCredito();
+            CREstadoResolucionCredito crUltimoEstadoResolucion = new CREstadoResolucionCredito();
             crUltimoEstadoResolucion.setEstadoResolucion(estadoresolucion);
             crSolicitudCredito.setCrUltimoEstadoResolucion(crUltimoEstadoResolucion);
-            if("OB".equals(estadoresolucion)){
+            if ("OB".equals(estadoresolucion)) {
                 crSolicitudCredito.setIndEnvioEvaluacionSC("N");
             }
             crSolicitudCreditoInterfaceRemote.update(crSolicitudCredito);
-            
+
             //EVALUAMOS CAMBIO DE ESTADO EN SOLICITUD CAMBIO DE CONDICIONES
             if (!crSolicitudCredito.getTipoSolicitud().equals("SC")) {
                 // Actualizar Registro de cambio de condiciones en entidad
@@ -3929,39 +3906,39 @@
 
                 crSolicitudCreditoInterfaceRemote.update(crSolicitudCredito);
             }
-            
+
             // Creamos regsitro de resolucion, en entidad CRSolicitudResolucion,
             // donde:
             String idRegistroResolucion = cbCorrelativoInterfaceRemote.GenerarCorrelativo(beanCRResolucionCredito.getCodigoEmpresa(),
-                            "CRDSCRE", 15,
-                            beanCRResolucionCredito.getUsuarioResponsableResolucion(),
-                            beanCRResolucionCredito.getTerminalInsercion(),
-                            beanCRResolucionCredito.getIpInsercion());
+                                                                                          "CRDSCRE",
+                                                                                          15,
+                                                                                          beanCRResolucionCredito.getUsuarioResponsableResolucion(),
+                                                                                          beanCRResolucionCredito.getTerminalInsercion(),
+                                                                                          beanCRResolucionCredito.getIpInsercion());
 
             CREstadoResolucionCredito crEstadoResolucionCredito = new CREstadoResolucionCredito();
             crEstadoResolucionCredito.setEstadoResolucion(estadoresolucion);
-            CRMotivoXEstadoResolucionCredito crMotivoXEstadoResolucionCredito=null;
+            CRMotivoXEstadoResolucionCredito crMotivoXEstadoResolucionCredito = null;
             String motivoEstadoResolucion = beanCRResolucionCredito.getMotivoEstadoResolucion();
-            if (motivoEstadoResolucion!=null ) {
+            if (motivoEstadoResolucion != null) {
                 crMotivoXEstadoResolucionCredito = new CRMotivoXEstadoResolucionCredito();
                 crMotivoXEstadoResolucionCredito.setMotivoXEstadoResolucion(motivoEstadoResolucion);
             }
-            
+
             CRSolicitudResolucion crSolicitudResolucion = new CRSolicitudResolucion();
             crSolicitudResolucion.setIdRegistroResolucion(idRegistroResolucion);
             //crSolicitudResolucion.setFechaResolucion(fechaAplicacion);
-            
-            crSolicitudResolucion.setFechaResolucion(
-                    FormatoFecha.stringToTimestampddMMyyyyhhmmss(FormatoFecha.dateUtilToStringDDMMYYYY(fechaAplicacion), (new FormatoFecha().obtenerHora()))
-                    );
+
+            crSolicitudResolucion.setFechaResolucion(FormatoFecha.stringToTimestampddMMyyyyhhmmss(FormatoFecha.dateUtilToStringDDMMYYYY(fechaAplicacion),
+                                                                                                  (new FormatoFecha().obtenerHora())));
             crSolicitudResolucion.setCrSolicitudCredito(crSolicitudCredito);
             crSolicitudResolucion.setUsuarioResponsableResolucion(beanCRResolucionCredito.getUsuarioResponsableResolucion());
             CLCargosLaborales clCargosLaborales = new CLCargosLaborales();
             clCargosLaborales.setCargoLaboral(beanCRResolucionCredito.getCodigoEmpresa() + "0000001");
             crSolicitudResolucion.setClCargosLaborales(clCargosLaborales);
             crSolicitudResolucion.setCrEstadoResolucionCredito(crEstadoResolucionCredito);
-            String strFundamentos=beanCRResolucionCredito.getFundamentos()!=null?beanCRResolucionCredito.getFundamentos():"";
-            crSolicitudResolucion.setFundamentos(strFundamentos.length()>499?strFundamentos.substring(0,499):strFundamentos);
+            String strFundamentos = beanCRResolucionCredito.getFundamentos() != null ? beanCRResolucionCredito.getFundamentos() : "";
+            crSolicitudResolucion.setFundamentos(strFundamentos.length() > 499 ? strFundamentos.substring(0, 499) : strFundamentos);
             CREstadoSolicitud crEstadoSolicitud = new CREstadoSolicitud();
             crEstadoSolicitud.setCodigoEstado(strEstadoSolicitudCredito);
             crSolicitudResolucion.setCrEstadoSolicitud(crEstadoSolicitud);
@@ -3970,26 +3947,25 @@
             crSolicitudResolucion.setCrMotivoXEstadoResolucionCredito(crMotivoXEstadoResolucionCredito);
             crSolicitudResolucionInterfaceRemote.save(crSolicitudResolucion);
             entityManager.flush();
-            
+
             //ACTUALIZAMOS SOLICITUD DE CREDITO COMO RESOLUCION APROBADA//TODO
             if (crSolicitudCredito.getTipoSolicitud().equals("SC")) {
                 if ("AR".equals(strEstadoSolicitudCredito) || "RE".equals(strEstadoSolicitudCredito)) {
                     // Evaluamos Proceso según Forma y Modalidad de Crédito
                     if ("PRC".equals(crSolicitudCredito.getTipoModalidadCredito()) || "PRR".equals(crSolicitudCredito.getTipoModalidadCredito())) {
                         // Resolucion de Prestamos
-                        error = crbnSolicitudCreditoFacadeInterfaceRemote.resolucionPrestamos(
-                                    beanCRResolucionCredito.getCodigoEmpresa(), 
-                                    beanCRResolucionCredito.getCodigoAgencia(), 
-                                    beanCRResolucionCredito.getBeanCRSolicitudCredito().getStrNumeroSolicitud(), 
-                                    strEstadoSolicitudCredito, 
-                                    (new java.sql.Date(fechaAplicacion.getTime())), 
-                                    beanCRResolucionCredito.getUsuarioResponsableResolucion(), 
-                                    beanCRResolucionCredito.getMontoAprobadoSugerido(), 
-                                    (new java.sql.Date(fechaAplicacion.getTime())), 
-                                    null, 
-                                    beanCRResolucionCredito.getUsuarioResponsableResolucion(),
-                                    beanCRResolucionCredito.getTerminalInsercion(), 
-                                    beanCRResolucionCredito.getIpInsercion());
+                        error = crbnSolicitudCreditoFacadeInterfaceRemote.resolucionPrestamos(beanCRResolucionCredito.getCodigoEmpresa(),
+                                                                                              beanCRResolucionCredito.getCodigoAgencia(),
+                                                                                              beanCRResolucionCredito.getBeanCRSolicitudCredito().getStrNumeroSolicitud(),
+                                                                                              strEstadoSolicitudCredito,
+                                                                                              (new java.sql.Date(fechaAplicacion.getTime())),
+                                                                                              beanCRResolucionCredito.getUsuarioResponsableResolucion(),
+                                                                                              beanCRResolucionCredito.getMontoAprobadoSugerido(),
+                                                                                              (new java.sql.Date(fechaAplicacion.getTime())),
+                                                                                              null,
+                                                                                              beanCRResolucionCredito.getUsuarioResponsableResolucion(),
+                                                                                              beanCRResolucionCredito.getTerminalInsercion(),
+                                                                                              beanCRResolucionCredito.getIpInsercion());
                         if (!"000".equals(error)) {
                             //cbControlErroresFacadeInterfaceLocal.crearLogErrores(usuarioResponsable, numeroSolicitudCredito, moduleName, error, "");
                             ctx.setRollbackOnly();
@@ -4003,33 +3979,32 @@
             retorno.setCodError("1");
             retorno.setDescError("Se ingreso la resolución de credito");
             retorno.setIdOperacion(idRegistroResolucion);
-        }catch(Exception e){
+        } catch (Exception e) {
             e.printStackTrace();
             retorno.setCodError("0");
             retorno.setDescError(e.getMessage());
             ctx.setRollbackOnly();
         }
         return retorno;
-    }   
-    
-    
-    
-    public void delete(String idDestinoPrestamoXSolitud){
-     try {
-         CRDestinosPrestamoXSolicitud cr = crDestinosPrestamoXSolicitudInterfaceLocal.findById(idDestinoPrestamoXSolitud);
-         cr.setEstadoRegistro("N");
-             crDestinosPrestamoXSolicitudInterfaceLocal.update(cr);
+    }
+
+    public void delete(String idDestinoPrestamoXSolitud) {
+        try {
+            CRDestinosPrestamoXSolicitud cr = crDestinosPrestamoXSolicitudInterfaceLocal.findById(idDestinoPrestamoXSolitud);
+            cr.setEstadoRegistro("N");
+            crDestinosPrestamoXSolicitudInterfaceLocal.update(cr);
         } catch (Exception e) {
             e.printStackTrace();
-        } 
+        }
     }
-    public BeanCRSolCrePrestamoCartaFianza getBeanCRSolCrePrestamoCartaFianza(String numeroSolicitud)throws Exception{
-        
-        try{
+
+    public BeanCRSolCrePrestamoCartaFianza getBeanCRSolCrePrestamoCartaFianza(String numeroSolicitud) throws Exception {
+
+        try {
             BeanCRSolCrePrestamoCartaFianza bean = new BeanCRSolCrePrestamoCartaFianza();
 
-            CRSolCrePrestamoCartaFianza crSolCrePrestamoCartaFianza =  crSolCrePrestamoCartaFianzaInterfaceLocal.findById(numeroSolicitud);
-            if(crSolCrePrestamoCartaFianza!=null){
+            CRSolCrePrestamoCartaFianza crSolCrePrestamoCartaFianza = crSolCrePrestamoCartaFianzaInterfaceLocal.findById(numeroSolicitud);
+            if (crSolCrePrestamoCartaFianza != null) {
                 bean.setCodigoClPersonas(crSolCrePrestamoCartaFianza.getClPersonas().getCodigoPersona());
                 bean.setNombreClPersonas(crSolCrePrestamoCartaFianza.getClPersonas().getNombreoRazonSocial());
                 bean.setFechaTerminoSolicitado(crSolCrePrestamoCartaFianza.getFechaTerminoSolicitado());
@@ -4038,77 +4013,77 @@
                 bean.setIndAdjudicacionDirecta(crSolCrePrestamoCartaFianza.getIndAdjudicacionDirecta());
                 bean.setPorcentajeComisionSolicitado(crSolCrePrestamoCartaFianza.getPorcentajeComisionSolicitado());
             }
-            
+
             return bean;
-        }catch(Exception e){
+        } catch (Exception e) {
             throw new Exception(e);
         }
-        
-        
+
     }
-    
+
     @SuppressWarnings("unchecked")
-    public BeanCRSolicitudCredito obtenerSolicCredito(String strNroSolCredito) throws Exception{
-        Object query=null;
+    public BeanCRSolicitudCredito obtenerSolicCredito(String strNroSolCredito) throws Exception {
+        Object query = null;
         BeanCRSolicitudCredito beanCRSolicitudCredito = null;
         CRSolicitudCredito crSolicitudCredito = null;
-        try{
-            
-            query = entityManager.createNamedQuery("CRSolicitudCredito.findByNroSolicitudCredito")
-            .setParameter("strNroSolCredito",strNroSolCredito)
-            .getResultList();
-            if (query!=null && ((List)query).size()>0){
-               crSolicitudCredito = (CRSolicitudCredito)(((List)query).get(0));
-               beanCRSolicitudCredito = new BeanCRSolicitudCredito();
-               beanCRSolicitudCredito.setStrNumeroSolicitud(crSolicitudCredito.getNumeroSolicitud());
-               beanCRSolicitudCredito.setStrEstadoSolicitud(crSolicitudCredito.getCrEstadoSolicitud().getCodigoEstado());
-               beanCRSolicitudCredito.setStrIndEnvioInspecciones(crSolicitudCredito.getIndEnvioInspecciones());
+        try {
+
+            query = entityManager.createNamedQuery("CRSolicitudCredito.findByNroSolicitudCredito").setParameter("strNroSolCredito",
+                                                                                                                strNroSolCredito).getResultList();
+            if (query != null && ((List) query).size() > 0) {
+                crSolicitudCredito = (CRSolicitudCredito) (((List) query).get(0));
+                beanCRSolicitudCredito = new BeanCRSolicitudCredito();
+                beanCRSolicitudCredito.setStrNumeroSolicitud(crSolicitudCredito.getNumeroSolicitud());
+                beanCRSolicitudCredito.setStrEstadoSolicitud(crSolicitudCredito.getCrEstadoSolicitud().getCodigoEstado());
+                beanCRSolicitudCredito.setStrIndEnvioInspecciones(crSolicitudCredito.getIndEnvioInspecciones());
             }
-        
-        }catch (Exception e){
+
+        } catch (Exception e) {
             e.printStackTrace();
             throw new Exception(e.getMessage());
         }
         return beanCRSolicitudCredito;
     }
-    
+
     @SuppressWarnings("unchecked")
-    public String asignaInspeccionCrea(String codigoEmpresa, 
-                                        String codigoAgencia,
-                                        String tipoInspeccion,
-                                        String numeroSolicitudCredito,
-                                        String codigoPersonaRelacionada,
-                                        String inspeccionAutomatica,
-                                        String inspeccionManual,
-                                        String usuarioDecideRealizarInspeccion
-                                      ) throws Exception{
-        
+    public String asignaInspeccionCrea(String codigoEmpresa,
+                                       String codigoAgencia,
+                                       String tipoInspeccion,
+                                       String numeroSolicitudCredito,
+                                       String codigoPersonaRelacionada,
+                                       String inspeccionAutomatica,
+                                       String inspeccionManual,
+                                       String usuarioDecideRealizarInspeccion) throws Exception {
+
         String strCodigoError = NO_ERROR;
         String moduleName = "CRSolicitudCredito.asignaInspeccionCrea";
         String strIDPersonaRelacionada = "";
-        try{
+        try {
             //UBICAMOS REGISTRO DE PERSONA RELACIONADA
-            List<CRPersonasRelacionadasSolCred> listPersonasRelacionadas = crPersonasRelacionadasSolCredInterfaceLocal.findByNumeroSolicitudPersonaRelacionadoEstado(numeroSolicitudCredito, codigoPersonaRelacionada, "S");
-            
-            if(listPersonasRelacionadas!=null && listPersonasRelacionadas.size()!=0){
+            List<CRPersonasRelacionadasSolCred> listPersonasRelacionadas = crPersonasRelacionadasSolCredInterfaceLocal.findByNumeroSolicitudPersonaRelacionadoEstado(numeroSolicitudCredito,
+                                                                                                                                                                     codigoPersonaRelacionada,
+                                                                                                                                                                     "S");
+
+            if (listPersonasRelacionadas != null && listPersonasRelacionadas.size() != 0) {
                 CRPersonasRelacionadasSolCred persona = listPersonasRelacionadas.get(0);
-            
+
                 strIDPersonaRelacionada = persona.getIdPersonasRelacionadaSolicitudCredito();
-                
+
                 //UBICAMOS REGISTRO DE ASIGNACION DE INSPECCION DE PERSONA RELACIONADA
-                
-                
-                 List<CRInspeccionesXPersonasRelacionadaSolCred> lstCRInsxPersona = crInspeccionesXPersonasRelacionadaSolCredInterfaceLocal.findByPersonaRelacionadaTipoInspeccion(strIDPersonaRelacionada, tipoInspeccion, "S");
-                 
-                 if(lstCRInsxPersona==null || lstCRInsxPersona.size()==0){
+
+                List<CRInspeccionesXPersonasRelacionadaSolCred> lstCRInsxPersona = crInspeccionesXPersonasRelacionadaSolCredInterfaceLocal.findByPersonaRelacionadaTipoInspeccion(strIDPersonaRelacionada,
+                                                                                                                                                                                  tipoInspeccion,
+                                                                                                                                                                                  "S");
+
+                if (lstCRInsxPersona == null || lstCRInsxPersona.size() == 0) {
                     //CREAMOS REGISTRO DE ASIGNACION DE INSPECCIONES en CRInspeccionesXPersonasRelacionadaSolCred, donde:
-                    
-                    String idInspeccionesXSolicitudCredito = cbCorrelativoInterfaceLocal.GenerarCorrelativo(codigoEmpresa, 
-                                                                                                "CRDPXIN", 
-                                                                                                 15,
-                                                                                                 usuarioDecideRealizarInspeccion, 
-                                                                                                 "",
-                                                                                                 ""); 
+
+                    String idInspeccionesXSolicitudCredito = cbCorrelativoInterfaceLocal.GenerarCorrelativo(codigoEmpresa,
+                                                                                                            "CRDPXIN",
+                                                                                                            15,
+                                                                                                            usuarioDecideRealizarInspeccion,
+                                                                                                            "",
+                                                                                                            "");
 
                     CRInspeccionesXPersonasRelacionadaSolCred command = new CRInspeccionesXPersonasRelacionadaSolCred();
                     command.setIdInspeccionesXSolicitudCredito(idInspeccionesXSolicitudCredito);
@@ -4119,130 +4094,132 @@
                     command.setIndRealizarInspeccionAsigManualmente(inspeccionManual);
                     command.setUsuarioDecideRealizarInspección(usuarioDecideRealizarInspeccion);
                     command.setEstadoRegistro("S");
-                    
+
                     crInspeccionesXPersonasRelacionadaSolCredInterfaceLocal.save(command);
-                     
-                 }
-                    
+
+                }
+
             }
-                    
-        }catch (Exception e){
+
+        } catch (Exception e) {
             e.printStackTrace();
-            cbControlErroresFacadeInterfaceLocal.crearLogErrores(usuarioDecideRealizarInspeccion, moduleName, e.getMessage().length()<=2000?e.getMessage():e.getMessage().substring(2000));
+            cbControlErroresFacadeInterfaceLocal.crearLogErrores(usuarioDecideRealizarInspeccion,
+                                                                 moduleName,
+                                                                 e.getMessage().length() <= 2000 ? e.getMessage() : e.getMessage().substring(2000));
             throw new Exception(e.getMessage());
         }
-        
+
         return strCodigoError;
     }
-    
+
     @SuppressWarnings("unchecked")
-    public String asignaInspeccion(String codigoEmpresa, 
-                                        String codigoAgencia,
-                                        String numeroSolicitud,
-                                        String usuario
-                                      ) throws Exception{
-        
+    public String asignaInspeccion(String codigoEmpresa, String codigoAgencia, String numeroSolicitud, String usuario) throws Exception {
+
         String strCodigoError = NO_ERROR;
         String moduleName = "CRSolicitudCredito.asignaInspeccion";
-        
-        try{
+
+        try {
             //ELIMINAMOS LO ANTERIOR GENERADO
-            List<CRInspeccionesXPersonasRelacionadaSolCred> lstInspeccion =crInspeccionesXPersonasRelacionadaSolCredInterfaceLocal.findByNumeroSolicitudEstado(numeroSolicitud, "S");
-            for(int i=0;i<lstInspeccion.size();i++){
+            List<CRInspeccionesXPersonasRelacionadaSolCred> lstInspeccion = crInspeccionesXPersonasRelacionadaSolCredInterfaceLocal.findByNumeroSolicitudEstado(numeroSolicitud,
+                                                                                                                                                                "S");
+            for (int i = 0; i < lstInspeccion.size(); i++) {
                 CRInspeccionesXPersonasRelacionadaSolCred command = lstInspeccion.get(i);
                 command.setEstadoRegistro("N");
                 crInspeccionesXPersonasRelacionadaSolCredInterfaceLocal.update(command);
             }
-            
+
             entityManager.flush();
-            
+
             //UBICAMOS REGISTRO DE PERSONA RELACIONADAS
-            List<CRPersonasRelacionadasSolCred> listPersonasRelacionadas = crPersonasRelacionadasSolCredInterfaceLocal.findByNumeroSolicitudRelacionadoEstado(numeroSolicitud, "S");
-            
+            List<CRPersonasRelacionadasSolCred> listPersonasRelacionadas = crPersonasRelacionadasSolCredInterfaceLocal.findByNumeroSolicitudRelacionadoEstado(numeroSolicitud,
+                                                                                                                                                              "S");
+
             //CREAMOS REGISTRO DE ASIGNACION DE INSPECCIONES
-            for(int j=0;j<listPersonasRelacionadas.size();j++){
+            for (int j = 0; j < listPersonasRelacionadas.size(); j++) {
                 CRPersonasRelacionadasSolCred persona = listPersonasRelacionadas.get(j);
-                if("TI".equals(persona.getCrTipoRelacionFamiliarSC().getCodigoTipoRelacion())){
-                    
+                if ("TI".equals(persona.getCrTipoRelacionFamiliarSC().getCodigoTipoRelacion())) {
+
                     //Creamos una asignacion de Inspeccion Domiciliaria
-                    strCodigoError = asignaInspeccionCrea(codigoEmpresa, 
-                                                          codigoAgencia, 
-                                                          "D", 
+                    strCodigoError = asignaInspeccionCrea(codigoEmpresa,
+                                                          codigoAgencia,
+                                                          "D",
                                                           numeroSolicitud,
-                                                          persona.getCodigoPersonaRelacionada(), 
-                                                          "N", 
-                                                          "S", 
+                                                          persona.getCodigoPersonaRelacionada(),
+                                                          "N",
+                                                          "S",
                                                           "");
-                    
+
                     //Creamos una asignacion de Inspeccion Laboral
-                    strCodigoError = asignaInspeccionCrea(codigoEmpresa, 
-                                                          codigoAgencia, 
-                                                          "L", 
+                    strCodigoError = asignaInspeccionCrea(codigoEmpresa,
+                                                          codigoAgencia,
+                                                          "L",
                                                           numeroSolicitud,
-                                                          persona.getCodigoPersonaRelacionada(), 
-                                                          "N", 
-                                                          "S", 
+                                                          persona.getCodigoPersonaRelacionada(),
+                                                          "N",
+                                                          "S",
                                                           "");
                 }
-                
-                if("CT".equals(persona.getCrTipoRelacionFamiliarSC().getCodigoTipoRelacion())){
+
+                if ("CT".equals(persona.getCrTipoRelacionFamiliarSC().getCodigoTipoRelacion())) {
                     //Creamos una asignacion de Inspeccion Laboral
-                    strCodigoError = asignaInspeccionCrea(codigoEmpresa, 
-                                                          codigoAgencia, 
-                                                          "L", 
+                    strCodigoError = asignaInspeccionCrea(codigoEmpresa,
+                                                          codigoAgencia,
+                                                          "L",
                                                           numeroSolicitud,
-                                                          persona.getCodigoPersonaRelacionada(), 
-                                                          "N", 
-                                                          "S", 
+                                                          persona.getCodigoPersonaRelacionada(),
+                                                          "N",
+                                                          "S",
                                                           "");
                 }
-                
-                if("AV".equals(persona.getCrTipoRelacionFamiliarSC().getCodigoTipoRelacion())){
+
+                if ("AV".equals(persona.getCrTipoRelacionFamiliarSC().getCodigoTipoRelacion())) {
                     //Creamos una asignacion de Inspeccion Laboral
-                    strCodigoError = asignaInspeccionCrea(codigoEmpresa, 
-                                                          codigoAgencia, 
-                                                          "D", 
+                    strCodigoError = asignaInspeccionCrea(codigoEmpresa,
+                                                          codigoAgencia,
+                                                          "D",
                                                           numeroSolicitud,
-                                                          persona.getCodigoPersonaRelacionada(), 
-                                                          "N", 
-                                                          "S", 
+                                                          persona.getCodigoPersonaRelacionada(),
+                                                          "N",
+                                                          "S",
                                                           "");
-                    }
-                
+                }
+
             }
-            
-        }catch (Exception e){
+
+        } catch (Exception e) {
             e.printStackTrace();
-            cbControlErroresFacadeInterfaceLocal.crearLogErrores(usuario, moduleName, e.getMessage().length()<=2000?e.getMessage():e.getMessage().substring(2000));
+            cbControlErroresFacadeInterfaceLocal.crearLogErrores(usuario,
+                                                                 moduleName,
+                                                                 e.getMessage().length() <= 2000 ? e.getMessage() : e.getMessage().substring(2000));
             throw new Exception(e.getMessage());
         }
         return strCodigoError;
     }
-
 
     /**
      * Crea regsitros de personas relacionada a la solicitud de credito
      * */
     @SuppressWarnings("unchecked")
-    public String personasRelacionadasRegistra(String codigoEmpresa, 
-                                        String codigoAgencia,
-                                        String numeroSolicitud,
-                                        String codigoPersona,
-                                        String tipoRelacion,
-                                        String indicadorTituloPrincipal,
-                                        String usuario,
-                                        String host,
-                                        String ip
-                                      ) throws Exception{
-        
+    public String personasRelacionadasRegistra(String codigoEmpresa,
+                                               String codigoAgencia,
+                                               String numeroSolicitud,
+                                               String codigoPersona,
+                                               String tipoRelacion,
+                                               String indicadorTituloPrincipal,
+                                               String usuario,
+                                               String host,
+                                               String ip) throws Exception {
+
         String strCodigoError = NO_ERROR;
         String moduleName = "CRSolicitudCredito.asignaInspeccionCrea";
         String strIDPersonaRelacionada = "";
-        try{
+        try {
             //UBICAMOS REGSITRO DE PERSONA ANTERIOR
-            List<CRPersonasRelacionadasSolCred> listPersonasRelacionadas = crPersonasRelacionadasSolCredInterfaceLocal.findByNumeroSolicitudCreditoPersonaRelacionadaEstado(numeroSolicitud, codigoPersona, "S");
-            
-            if(listPersonasRelacionadas!=null && listPersonasRelacionadas.size()!=0){
+            List<CRPersonasRelacionadasSolCred> listPersonasRelacionadas = crPersonasRelacionadasSolCredInterfaceLocal.findByNumeroSolicitudCreditoPersonaRelacionadaEstado(numeroSolicitud,
+                                                                                                                                                                            codigoPersona,
+                                                                                                                                                                            "S");
+
+            if (listPersonasRelacionadas != null && listPersonasRelacionadas.size() != 0) {
                 CRPersonasRelacionadasSolCred persona = listPersonasRelacionadas.get(0);
                 persona.setCrSolicitudCredito(new CRSolicitudCredito());
                 persona.getCrSolicitudCredito().setNumeroSolicitud(numeroSolicitud);
@@ -4251,23 +4228,23 @@
                 persona.getCrTipoRelacionFamiliarSC().setCodigoTipoRelacion(tipoRelacion);
                 persona.setIndTitularPrincipal(indicadorTituloPrincipal);
                 persona.setEstadoRegistro("S");
-                
+
                 persona.setUsuarioModificacion(usuario);
                 persona.setTerminalModificacion(host);
                 persona.setIpModificacion(ip);
                 persona.setFechaModificacion(new Date(System.currentTimeMillis()));
-                
+
                 crPersonasRelacionadasSolCredInterfaceLocal.update(persona);
-    
-            }else{
-                
+
+            } else {
+
                 CRPersonasRelacionadasSolCred persona = new CRPersonasRelacionadasSolCred();
-                String strIdPersonaRelacionada  = cbCorrelativoInterfaceLocal.GenerarCorrelativo(codigoEmpresa, 
-                                                                                                "CRDSCPR", 
-                                                                                                 15,
-                                                                                                 usuario, 
-                                                                                                 host,
-                                                                                                 ip); 
+                String strIdPersonaRelacionada = cbCorrelativoInterfaceLocal.GenerarCorrelativo(codigoEmpresa,
+                                                                                                "CRDSCPR",
+                                                                                                15,
+                                                                                                usuario,
+                                                                                                host,
+                                                                                                ip);
                 persona.setIdPersonasRelacionadaSolicitudCredito(strIdPersonaRelacionada);
                 persona.setCrSolicitudCredito(new CRSolicitudCredito());
                 persona.getCrSolicitudCredito().setNumeroSolicitud(numeroSolicitud);
@@ -4276,88 +4253,92 @@
                 persona.getCrTipoRelacionFamiliarSC().setCodigoTipoRelacion(tipoRelacion);
                 persona.setIndTitularPrincipal(indicadorTituloPrincipal);
                 persona.setEstadoRegistro("S");
-                
+
                 persona.setUsuarioInsercion(usuario);
                 persona.setTerminalInsercion(host);
                 persona.setIpInsercion(ip);
                 persona.setFechaInsercion(new Date(System.currentTimeMillis()));
-                
+
                 crPersonasRelacionadasSolCredInterfaceLocal.save(persona);
             }
-                    
-        }catch (Exception e){
+
+        } catch (Exception e) {
             e.printStackTrace();
-            cbControlErroresFacadeInterfaceLocal.crearLogErrores(usuario, moduleName, e.getMessage().length()<=2000?e.getMessage():e.getMessage().substring(2000));
+            cbControlErroresFacadeInterfaceLocal.crearLogErrores(usuario,
+                                                                 moduleName,
+                                                                 e.getMessage().length() <= 2000 ? e.getMessage() : e.getMessage().substring(2000));
             throw new Exception(e.getMessage());
         }
-        
+
         return strCodigoError;
     }
-    public List lstPersonasxSolicituCredito(String numeroSolicitud)throws Exception{
-        List lstPersonasTemp=new ArrayList();
-        List lstPersonas=new ArrayList();
-        lstPersonasTemp=crPersonasRelacionadasSolCredInterfaceLocal.findByNumeroSolictud(numeroSolicitud);
-        CRPersonasRelacionadasSolCred crPersonasRelacionadasSolCred=new CRPersonasRelacionadasSolCred();
-        BeanCRPersonasRelacionadasSolCred beanCRPersonasRelacionadasSolCred=new BeanCRPersonasRelacionadasSolCred();
-        for(int i=0;i<lstPersonasTemp.size();i++){
-            crPersonasRelacionadasSolCred=(CRPersonasRelacionadasSolCred)lstPersonasTemp.get(i);
-            beanCRPersonasRelacionadasSolCred=new BeanCRPersonasRelacionadasSolCred();          
+
+    public List lstPersonasxSolicituCredito(String numeroSolicitud) throws Exception {
+        List lstPersonasTemp = new ArrayList();
+        List lstPersonas = new ArrayList();
+        lstPersonasTemp = crPersonasRelacionadasSolCredInterfaceLocal.findByNumeroSolictud(numeroSolicitud);
+        CRPersonasRelacionadasSolCred crPersonasRelacionadasSolCred = new CRPersonasRelacionadasSolCred();
+        BeanCRPersonasRelacionadasSolCred beanCRPersonasRelacionadasSolCred = new BeanCRPersonasRelacionadasSolCred();
+        for (int i = 0; i < lstPersonasTemp.size(); i++) {
+            crPersonasRelacionadasSolCred = (CRPersonasRelacionadasSolCred) lstPersonasTemp.get(i);
+            beanCRPersonasRelacionadasSolCred = new BeanCRPersonasRelacionadasSolCred();
             beanCRPersonasRelacionadasSolCred.setIdPersonasRelacionadaSolicitudCredito(crPersonasRelacionadasSolCred.getIdPersonasRelacionadaSolicitudCredito());
             beanCRPersonasRelacionadasSolCred.setCodigoPersonaRelacionada(crPersonasRelacionadasSolCred.getCodigoPersonaRelacionada());
-            CLPersonas clPersonas=new CLPersonas();
-            clPersonas=clPersonasInterfaceLocal.findById(crPersonasRelacionadasSolCred.getCodigoPersonaRelacionada());
+            CLPersonas clPersonas = new CLPersonas();
+            clPersonas = clPersonasInterfaceLocal.findById(crPersonasRelacionadasSolCred.getCodigoPersonaRelacionada());
             beanCRPersonasRelacionadasSolCred.setNombrePersonaRelacionada(clPersonas.getNombreoRazonSocial());
             beanCRPersonasRelacionadasSolCred.setCrSolicitudCredito(crPersonasRelacionadasSolCred.getCrSolicitudCredito().getNumeroSolicitud());
             beanCRPersonasRelacionadasSolCred.setCrTipoRelacionFamiliarSC(crPersonasRelacionadasSolCred.getCrTipoRelacionFamiliarSC().getCodigoTipoRelacion());
             beanCRPersonasRelacionadasSolCred.setIndTitularPrincipal(crPersonasRelacionadasSolCred.getIndTitularPrincipal());
-            CRTipoRelacionFamiliarSC crTipoRelacionFamiliarSC=new CRTipoRelacionFamiliarSC();
-            crTipoRelacionFamiliarSC=crTipoRelacionFamiliarSCInterfaceLocal.findById(crPersonasRelacionadasSolCred.getCrTipoRelacionFamiliarSC().getCodigoTipoRelacion());
+            CRTipoRelacionFamiliarSC crTipoRelacionFamiliarSC = new CRTipoRelacionFamiliarSC();
+            crTipoRelacionFamiliarSC = crTipoRelacionFamiliarSCInterfaceLocal.findById(crPersonasRelacionadasSolCred.getCrTipoRelacionFamiliarSC().getCodigoTipoRelacion());
             beanCRPersonasRelacionadasSolCred.setDescTipoRelacion(crTipoRelacionFamiliarSC.getDescripcion());
             beanCRPersonasRelacionadasSolCred.setCantReg(new Long(lstPersonasTemp.size()));
             lstPersonas.add(beanCRPersonasRelacionadasSolCred);
         }
         return lstPersonas;
     }
-    
-    public List lstInspeccionesxPersona(String idPersonaxSolicitudCredito)throws Exception{
-        List lstInspeccionesTemp=new ArrayList();
-        List lstInspecciones=new ArrayList();
-        lstInspeccionesTemp=crInspeccionesXPersonasRelacionadaSolCredInterfaceLocal.findByPersonaxSolicitud(idPersonaxSolicitudCredito);
-        CRInspeccionesXPersonasRelacionadaSolCred crInspeccionesXPersonasRelacionadaSolCred=new CRInspeccionesXPersonasRelacionadaSolCred();
-        BeanCRInspeccionesXPersonasRelacionadaSolCred beanCRInspeccionesXPersonasRelacionadaSolCred=new BeanCRInspeccionesXPersonasRelacionadaSolCred();
-        List lstTemp=new ArrayList();
-        for(int i=0;i<lstInspeccionesTemp.size();i++){
-            crInspeccionesXPersonasRelacionadaSolCred=(CRInspeccionesXPersonasRelacionadaSolCred)lstInspeccionesTemp.get(i);
-            beanCRInspeccionesXPersonasRelacionadaSolCred=new BeanCRInspeccionesXPersonasRelacionadaSolCred();
+
+    public List lstInspeccionesxPersona(String idPersonaxSolicitudCredito) throws Exception {
+        List lstInspeccionesTemp = new ArrayList();
+        List lstInspecciones = new ArrayList();
+        lstInspeccionesTemp = crInspeccionesXPersonasRelacionadaSolCredInterfaceLocal.findByPersonaxSolicitud(idPersonaxSolicitudCredito);
+        CRInspeccionesXPersonasRelacionadaSolCred crInspeccionesXPersonasRelacionadaSolCred = new CRInspeccionesXPersonasRelacionadaSolCred();
+        BeanCRInspeccionesXPersonasRelacionadaSolCred beanCRInspeccionesXPersonasRelacionadaSolCred = new BeanCRInspeccionesXPersonasRelacionadaSolCred();
+        List lstTemp = new ArrayList();
+        for (int i = 0; i < lstInspeccionesTemp.size(); i++) {
+            crInspeccionesXPersonasRelacionadaSolCred = (CRInspeccionesXPersonasRelacionadaSolCred) lstInspeccionesTemp.get(i);
+            beanCRInspeccionesXPersonasRelacionadaSolCred = new BeanCRInspeccionesXPersonasRelacionadaSolCred();
             beanCRInspeccionesXPersonasRelacionadaSolCred.setIdInspeccionesXSolicitudCredito(crInspeccionesXPersonasRelacionadaSolCred.getIdInspeccionesXSolicitudCredito());
             beanCRInspeccionesXPersonasRelacionadaSolCred.setCrPersonasRelacionadasSolCred(crInspeccionesXPersonasRelacionadaSolCred.getCrPersonasRelacionadasSolCred().getCodigoPersonaRelacionada());
             beanCRInspeccionesXPersonasRelacionadaSolCred.setIndRealizarInspeccionAsigAutomaticamente(crInspeccionesXPersonasRelacionadaSolCred.getIndRealizarInspeccionAsigAutomaticamente());
             beanCRInspeccionesXPersonasRelacionadaSolCred.setIndRealizarInspeccionAsigManualmente(crInspeccionesXPersonasRelacionadaSolCred.getIndRealizarInspeccionAsigManualmente());
-            CLPersonas clPersonas=new CLPersonas();
-            clPersonas=clPersonasInterfaceLocal.findById(crInspeccionesXPersonasRelacionadaSolCred.getCrPersonasRelacionadasSolCred().getCodigoPersonaRelacionada());
+            CLPersonas clPersonas = new CLPersonas();
+            clPersonas = clPersonasInterfaceLocal.findById(crInspeccionesXPersonasRelacionadaSolCred.getCrPersonasRelacionadasSolCred().getCodigoPersonaRelacionada());
             beanCRInspeccionesXPersonasRelacionadaSolCred.setNombrePersonaRelacionada(clPersonas.getNombreoRazonSocial());
             beanCRInspeccionesXPersonasRelacionadaSolCred.setUsuarioDecideRealizarInspección(crInspeccionesXPersonasRelacionadaSolCred.getUsuarioDecideRealizarInspección());
             beanCRInspeccionesXPersonasRelacionadaSolCred.setTipoInspeccion(crInspeccionesXPersonasRelacionadaSolCred.getTipoInspeccion());
-            beanCRInspeccionesXPersonasRelacionadaSolCred.setObservaciones(
-                    crInspeccionesXPersonasRelacionadaSolCred.getObservaciones()==null?"":crInspeccionesXPersonasRelacionadaSolCred.getObservaciones());
-            lstTemp=cbCatalogoCheckConstraintInterfaceLocal.findByTablaCampoConstraint("CRDPXIN", "C_TIPINS", crInspeccionesXPersonasRelacionadaSolCred.getTipoInspeccion());
-            if(lstTemp.size()>0){
-                beanCRInspeccionesXPersonasRelacionadaSolCred.setDescripcionTipoInspeccion(((CBCatalogoCheckConstraint)lstTemp.get(0)).getDescripcion());
+            beanCRInspeccionesXPersonasRelacionadaSolCred.setObservaciones(crInspeccionesXPersonasRelacionadaSolCred.getObservaciones() == null ? "" : crInspeccionesXPersonasRelacionadaSolCred.getObservaciones());
+            lstTemp = cbCatalogoCheckConstraintInterfaceLocal.findByTablaCampoConstraint("CRDPXIN",
+                                                                                         "C_TIPINS",
+                                                                                         crInspeccionesXPersonasRelacionadaSolCred.getTipoInspeccion());
+            if (lstTemp.size() > 0) {
+                beanCRInspeccionesXPersonasRelacionadaSolCred.setDescripcionTipoInspeccion(((CBCatalogoCheckConstraint) lstTemp.get(0)).getDescripcion());
             }
             beanCRInspeccionesXPersonasRelacionadaSolCred.setCantReg(new Long(lstInspeccionesTemp.size()));
             lstInspecciones.add(beanCRInspeccionesXPersonasRelacionadaSolCred);
         }
         return lstInspecciones;
     }
-    
-    public Map grabarInspecciones(List lstInspecciones, java.sql.Date fechaProceso) throws Exception{
-        Map output=new HashMap();
-        BeanCRInspeccionesXPersonasRelacionadaSolCred beanCRInspeccionesXPersonasRelacionadaSolCred=new BeanCRInspeccionesXPersonasRelacionadaSolCred();
-        CRInspeccionesXPersonasRelacionadaSolCred crInspeccionesXPersonasRelacionadaSolCred=new CRInspeccionesXPersonasRelacionadaSolCred();
-        try{
-            for(int i=0;i<lstInspecciones.size();i++){
-                beanCRInspeccionesXPersonasRelacionadaSolCred=(BeanCRInspeccionesXPersonasRelacionadaSolCred)lstInspecciones.get(i);
-                crInspeccionesXPersonasRelacionadaSolCred=crInspeccionesXPersonasRelacionadaSolCredInterfaceLocal.findById(beanCRInspeccionesXPersonasRelacionadaSolCred.getIdInspeccionesXSolicitudCredito());
+
+    public Map grabarInspecciones(List lstInspecciones, java.sql.Date fechaProceso) throws Exception {
+        Map output = new HashMap();
+        BeanCRInspeccionesXPersonasRelacionadaSolCred beanCRInspeccionesXPersonasRelacionadaSolCred = new BeanCRInspeccionesXPersonasRelacionadaSolCred();
+        CRInspeccionesXPersonasRelacionadaSolCred crInspeccionesXPersonasRelacionadaSolCred = new CRInspeccionesXPersonasRelacionadaSolCred();
+        try {
+            for (int i = 0; i < lstInspecciones.size(); i++) {
+                beanCRInspeccionesXPersonasRelacionadaSolCred = (BeanCRInspeccionesXPersonasRelacionadaSolCred) lstInspecciones.get(i);
+                crInspeccionesXPersonasRelacionadaSolCred = crInspeccionesXPersonasRelacionadaSolCredInterfaceLocal.findById(beanCRInspeccionesXPersonasRelacionadaSolCred.getIdInspeccionesXSolicitudCredito());
                 crInspeccionesXPersonasRelacionadaSolCred.setIndRealizarInspeccionAsigManualmente(beanCRInspeccionesXPersonasRelacionadaSolCred.getIndRealizarInspeccionAsigManualmente());
                 //Datos de la Auditoria
                 crInspeccionesXPersonasRelacionadaSolCred.setFechaModificacion(beanCRInspeccionesXPersonasRelacionadaSolCred.getFechaModificacion());
@@ -4367,180 +4348,173 @@
                 crInspeccionesXPersonasRelacionadaSolCred.setObservaciones(beanCRInspeccionesXPersonasRelacionadaSolCred.getObservaciones());
                 crInspeccionesXPersonasRelacionadaSolCredInterfaceLocal.update(crInspeccionesXPersonasRelacionadaSolCred);
             }
-            
-            
-        }catch(Exception e){
+
+        } catch (Exception e) {
             e.printStackTrace();
             throw e;
         }
         output.put("strError", NO_ERROR);
         return output;
     }
-    
-    public String VerificaInspeccion(String codigoEmpresa){
-        String valorConstante="";
-        CBConstante dConstante = cbConstanteInterfaceLocal.findById(new CBConstanteId(codigoEmpresa, "CR_GESTIONA_INSPECCIONES"));
-        if(dConstante!=null){
-            valorConstante = dConstante.getValor();
-        }
-        return valorConstante;
-    }
-    
-    public String VerificaExpediente(String codigoEmpresa){
-        String valorConstante="";
-        CBConstante dConstante = cbConstanteInterfaceLocal.findById(new CBConstanteId(codigoEmpresa, "CR_GESTIONA_EXPEDIENTES"));
-        if(dConstante!=null){
-            valorConstante = dConstante.getValor();
-        }
-        return valorConstante;
-    }
-    
-    /**
-    *Segeneraelresumendeliquidacionporcreditoretail.
-    *
-    *@author
-    *@since
-    *@since22.10.2010gfernandez:Secambio el tipo de retornodel metodo y se agrego los parametros.
-    *@paramcodigoEmpresa
-    *@paramnumeroSolicitudCredito
-    *@paramfechaIngreso
-    *@paramhoraIngreso
-    *@paramcodigoEmpresa,
-    *@paramindInspeccionDiferido,
-    *@paramusuarioInsercion
-    *@paramterminalInsercion,
-    *@paramipInsercion
-    *@paramstrInsAge,
-    *@paramstrCodAge
-    */
-    
-    public Map registroSolcitudInspeccion(String numeroSolicitudCredito,
-            String fechaIngreso, String horaIngreso, String codigoEmpresa,
-            String indInspeccionDiferido,
-            String usuarioInsercion, String terminalInsercion,
-            String ipInsercion, String strInsAge,
-            String strCodAge) throws Exception {
 
-        Map output=new HashMap();
+    public String VerificaInspeccion(String codigoEmpresa) {
+        String valorConstante = "";
+        CBConstante dConstante = cbConstanteInterfaceLocal.findById(new CBConstanteId(codigoEmpresa, "CR_GESTIONA_INSPECCIONES"));
+        if (dConstante != null) {
+            valorConstante = dConstante.getValor();
+        }
+        return valorConstante;
+    }
+
+    public String VerificaExpediente(String codigoEmpresa) {
+        String valorConstante = "";
+        CBConstante dConstante = cbConstanteInterfaceLocal.findById(new CBConstanteId(codigoEmpresa, "CR_GESTIONA_EXPEDIENTES"));
+        if (dConstante != null) {
+            valorConstante = dConstante.getValor();
+        }
+        return valorConstante;
+    }
+
+    /**
+     * Segeneraelresumendeliquidacionporcreditoretail.
+     * 
+     * @author
+     * @since
+     * @since22.10.2010gfernandez:Secambio el tipo de retornodel metodo y se agrego los parametros.
+     * @paramcodigoEmpresa
+     * @paramnumeroSolicitudCredito
+     * @paramfechaIngreso
+     * @paramhoraIngreso
+     * @paramcodigoEmpresa,
+     * @paramindInspeccionDiferido,
+     * @paramusuarioInsercion
+     * @paramterminalInsercion,
+     * @paramipInsercion
+     * @paramstrInsAge,
+     * @paramstrCodAge
+     */
+
+    public Map registroSolcitudInspeccion(String numeroSolicitudCredito,
+                                          String fechaIngreso,
+                                          String horaIngreso,
+                                          String codigoEmpresa,
+                                          String indInspeccionDiferido,
+                                          String usuarioInsercion,
+                                          String terminalInsercion,
+                                          String ipInsercion,
+                                          String strInsAge,
+                                          String strCodAge) throws Exception {
+
+        Map output = new HashMap();
         Calendar cal = Calendar.getInstance();
         cal.getTime();
         FormatoFecha hora = new FormatoFecha();
         java.text.SimpleDateFormat sdf = new java.text.SimpleDateFormat("dd/MM/yyyy");
-        
+
         try {
-            ArrayList lstPersonasRelacionadasSolCred = (ArrayList) crPersonasRelacionadasSolCredInterfaceLocal
-                    .findByNumeroSolictud(numeroSolicitudCredito);
+            ArrayList lstPersonasRelacionadasSolCred = (ArrayList) crPersonasRelacionadasSolCredInterfaceLocal.findByNumeroSolictud(numeroSolicitudCredito);
             Iterator i = lstPersonasRelacionadasSolCred.iterator();
-            
+
             //inicio validacion
             //recorremos toda las lista para ver que existan todas las direcciones y recien crear las
             while (i.hasNext()) {
-                CRPersonasRelacionadasSolCred crPersonasRelacionadasSolCred = (CRPersonasRelacionadasSolCred) i
-                        .next();
+                CRPersonasRelacionadasSolCred crPersonasRelacionadasSolCred = (CRPersonasRelacionadasSolCred) i.next();
                 if (crPersonasRelacionadasSolCred != null) {
-                    ArrayList lstInspeccionesXPersonasRelacionadaSolCred = (ArrayList) crInspeccionesXPersonasRelacionadaSolCredInterfaceLocal
-                            .findByPersonaxSolicitud(
-                                    crPersonasRelacionadasSolCred
-                                            .getIdPersonasRelacionadaSolicitudCredito(),
-                                    "S");
+                    ArrayList lstInspeccionesXPersonasRelacionadaSolCred = (ArrayList) crInspeccionesXPersonasRelacionadaSolCredInterfaceLocal.findByPersonaxSolicitud(crPersonasRelacionadasSolCred.getIdPersonasRelacionadaSolicitudCredito(),
+                                                                                                                                                                       "S");
                     if (lstInspeccionesXPersonasRelacionadaSolCred.size() > 0) {
-                        Iterator itr = lstInspeccionesXPersonasRelacionadaSolCred.iterator();                       
-                        
+                        Iterator itr = lstInspeccionesXPersonasRelacionadaSolCred.iterator();
+
                         //recorremos toda las lista para ver que existan todas las direcciones y recien crear las
                         //inspecciones domiciliarias
                         while (itr.hasNext()) {
-                            CRInspeccionesXPersonasRelacionadaSolCred crInspeccionesXPersonasRelacionadaSolCred = (CRInspeccionesXPersonasRelacionadaSolCred) itr
-                                    .next();
+                            CRInspeccionesXPersonasRelacionadaSolCred crInspeccionesXPersonasRelacionadaSolCred = (CRInspeccionesXPersonasRelacionadaSolCred) itr.next();
                             String codigoPersona = "";
-                            CRSolicitudCredito crSolicitudCredito = crSolicitudCreditoInterfaceLocal
-                                    .findById(numeroSolicitudCredito);
-                            codigoPersona = crPersonasRelacionadasSolCred
-                                    .getCodigoPersonaRelacionada();
+                            CRSolicitudCredito crSolicitudCredito = crSolicitudCreditoInterfaceLocal.findById(numeroSolicitudCredito);
+                            codigoPersona = crPersonasRelacionadasSolCred.getCodigoPersonaRelacionada();
                             String tipoDireccion = "";
-                            String mensaje="";
-                            if(crPersonasRelacionadasSolCred.getCrTipoRelacionFamiliarSC().getCodigoTipoRelacion().equals("TI")){                           
-                                if (crInspeccionesXPersonasRelacionadaSolCred.getTipoInspeccion().equals(Constante.VIIN_TIP_INSP_D)){
+                            String mensaje = "";
+                            if (crPersonasRelacionadasSolCred.getCrTipoRelacionFamiliarSC().getCodigoTipoRelacion().equals("TI")) {
+                                if (crInspeccionesXPersonasRelacionadaSolCred.getTipoInspeccion().equals(Constante.VIIN_TIP_INSP_D)) {
                                     mensaje = "1050";
                                     tipoDireccion = "01";
-                                } else if (crInspeccionesXPersonasRelacionadaSolCred.getTipoInspeccion().equals(Constante.VIIN_TIP_INSP_L) 
-                                        || crInspeccionesXPersonasRelacionadaSolCred.getTipoInspeccion().equals(Constante.VIIN_TIP_INSP_C)){
+                                } else if (crInspeccionesXPersonasRelacionadaSolCred.getTipoInspeccion().equals(Constante.VIIN_TIP_INSP_L) || crInspeccionesXPersonasRelacionadaSolCred.getTipoInspeccion().equals(Constante.VIIN_TIP_INSP_C)) {
                                     mensaje = "1051";
                                     tipoDireccion = "02";
                                 }
                             }
-                            if(crPersonasRelacionadasSolCred.getCrTipoRelacionFamiliarSC().getCodigoTipoRelacion().equals("AV")){                           
-                                if (crInspeccionesXPersonasRelacionadaSolCred.getTipoInspeccion().equals(Constante.VIIN_TIP_INSP_D)){
+                            if (crPersonasRelacionadasSolCred.getCrTipoRelacionFamiliarSC().getCodigoTipoRelacion().equals("AV")) {
+                                if (crInspeccionesXPersonasRelacionadaSolCred.getTipoInspeccion().equals(Constante.VIIN_TIP_INSP_D)) {
                                     mensaje = "1052";
                                     tipoDireccion = "01";
-                                } else if (crInspeccionesXPersonasRelacionadaSolCred.getTipoInspeccion().equals(Constante.VIIN_TIP_INSP_L) 
-                                        || crInspeccionesXPersonasRelacionadaSolCred.getTipoInspeccion().equals(Constante.VIIN_TIP_INSP_C)){
+                                } else if (crInspeccionesXPersonasRelacionadaSolCred.getTipoInspeccion().equals(Constante.VIIN_TIP_INSP_L) || crInspeccionesXPersonasRelacionadaSolCred.getTipoInspeccion().equals(Constante.VIIN_TIP_INSP_C)) {
                                     mensaje = "1053";
                                     tipoDireccion = "02";
                                 }
                             }
-                            if(crPersonasRelacionadasSolCred.getCrTipoRelacionFamiliarSC().getCodigoTipoRelacion().equals("CT")){                           
-                                if (crInspeccionesXPersonasRelacionadaSolCred.getTipoInspeccion().equals(Constante.VIIN_TIP_INSP_D)){
+                            if (crPersonasRelacionadasSolCred.getCrTipoRelacionFamiliarSC().getCodigoTipoRelacion().equals("CT")) {
+                                if (crInspeccionesXPersonasRelacionadaSolCred.getTipoInspeccion().equals(Constante.VIIN_TIP_INSP_D)) {
                                     mensaje = "1054";
                                     tipoDireccion = "01";
-                                } else if (crInspeccionesXPersonasRelacionadaSolCred.getTipoInspeccion().equals(Constante.VIIN_TIP_INSP_L) 
-                                        || crInspeccionesXPersonasRelacionadaSolCred.getTipoInspeccion().equals(Constante.VIIN_TIP_INSP_C)){
+                                } else if (crInspeccionesXPersonasRelacionadaSolCred.getTipoInspeccion().equals(Constante.VIIN_TIP_INSP_L) || crInspeccionesXPersonasRelacionadaSolCred.getTipoInspeccion().equals(Constante.VIIN_TIP_INSP_C)) {
                                     mensaje = "1055";
                                     tipoDireccion = "02";
                                 }
                             }
-                            if(crPersonasRelacionadasSolCred.getCrTipoRelacionFamiliarSC().getCodigoTipoRelacion().equals("CA")){                           
-                                if (crInspeccionesXPersonasRelacionadaSolCred.getTipoInspeccion().equals(Constante.VIIN_TIP_INSP_D)){
+                            if (crPersonasRelacionadasSolCred.getCrTipoRelacionFamiliarSC().getCodigoTipoRelacion().equals("CA")) {
+                                if (crInspeccionesXPersonasRelacionadaSolCred.getTipoInspeccion().equals(Constante.VIIN_TIP_INSP_D)) {
                                     mensaje = "1056";
                                     tipoDireccion = "01";
-                                } else if (crInspeccionesXPersonasRelacionadaSolCred.getTipoInspeccion().equals(Constante.VIIN_TIP_INSP_L) 
-                                        || crInspeccionesXPersonasRelacionadaSolCred.getTipoInspeccion().equals(Constante.VIIN_TIP_INSP_C)){
+                                } else if (crInspeccionesXPersonasRelacionadaSolCred.getTipoInspeccion().equals(Constante.VIIN_TIP_INSP_L) || crInspeccionesXPersonasRelacionadaSolCred.getTipoInspeccion().equals(Constante.VIIN_TIP_INSP_C)) {
                                     mensaje = "1057";
                                     tipoDireccion = "02";
                                 }
-                            }                                                   
+                            }
 
-                            CLPersonas clPersonas = clPersonasInterfaceLocal
-                                    .findById(codigoPersona);
-                            
-                            List lstDirPer = clDireccionPersonasInterfaceLocal.findByCodigoPersonaTipoDireccionPrincipal(codigoPersona,tipoDireccion,Constante.IND_DIRECCION_DOMICILIARIA_PRINCIPAL_S);
+                            CLPersonas clPersonas = clPersonasInterfaceLocal.findById(codigoPersona);
+
+                            List lstDirPer = clDireccionPersonasInterfaceLocal.findByCodigoPersonaTipoDireccionPrincipal(codigoPersona,
+                                                                                                                         tipoDireccion,
+                                                                                                                         Constante.IND_DIRECCION_DOMICILIARIA_PRINCIPAL_S);
                             //Se modifico el tipo de retorno para los mensajes
-                            if(lstDirPer.size()==0){
+                            if (lstDirPer.size() == 0) {
                                 // Inicio stacanga 12.02.2013 Ticket 4960 
-                                if (mensaje == "1050"){
+                                if (mensaje == "1050") {
                                     ctx.setRollbackOnly();
                                     output.put("mapRegistrarInspecciones", "1050");
                                     return output; // No existe direccion domiciliaria para Titular
-                                }else if(mensaje == "1051"){
+                                } else if (mensaje == "1051") {
                                     ctx.setRollbackOnly();
                                     output.put("mapRegistrarInspecciones", "1051");
                                     return output;// No existe direccion laboral para Titular
-                                }else if(mensaje == "1052"){
+                                } else if (mensaje == "1052") {
                                     ctx.setRollbackOnly();
                                     output.put("mapRegistrarInspecciones", "1052");
                                     return output;// No existe direccion domiciliaria para Aval 
-                                }else if(mensaje == "1053"){
+                                } else if (mensaje == "1053") {
                                     ctx.setRollbackOnly();
                                     output.put("mapRegistrarInspecciones", "1053");
                                     return output; // No existe direccion laboral para Aval
-                                }else if(mensaje == "1054"){
+                                } else if (mensaje == "1054") {
                                     ctx.setRollbackOnly();
                                     output.put("mapRegistrarInspecciones", "1054");
                                     return output; // No existe direccion domiciliaria para Conyugue Titular
-                                }else if(mensaje == "1055"){
+                                } else if (mensaje == "1055") {
                                     ctx.setRollbackOnly();
                                     output.put("mapRegistrarInspecciones", "1055");
                                     return output; // No existe direccion laboral para Conyugue Titular
-                                }else if(mensaje == "1056"){
+                                } else if (mensaje == "1056") {
                                     ctx.setRollbackOnly();
                                     output.put("mapRegistrarInspecciones", "1056");
                                     return output; // No existe direccion domiciliaria para Conyugue Aval
-                                }if(mensaje == "1057"){
+                                }
+                                if (mensaje == "1057") {
                                     ctx.setRollbackOnly();
                                     output.put("mapRegistrarInspecciones", "1057");
                                     return output;// No existe direccion laboral para Conyugue Aval
                                 }
                                 // Fin stacanga
-                            }                           
+                            }
                         }
                     }
                 }
@@ -4552,77 +4526,70 @@
             i = lstPersonasRelacionadasSolCred.iterator();
             //gfernandez 22.10.2010  creacion de variables
             String opciones = "";
-            
+
             while (i.hasNext()) {
-                CRPersonasRelacionadasSolCred crPersonasRelacionadasSolCred = (CRPersonasRelacionadasSolCred) i
-                        .next();
+                CRPersonasRelacionadasSolCred crPersonasRelacionadasSolCred = (CRPersonasRelacionadasSolCred) i.next();
                 if (crPersonasRelacionadasSolCred != null) {
-                    ArrayList lstInspeccionesXPersonasRelacionadaSolCred = (ArrayList) crInspeccionesXPersonasRelacionadaSolCredInterfaceLocal
-                            .findByPersonaxSolicitud(
-                                    crPersonasRelacionadasSolCred
-                                            .getIdPersonasRelacionadaSolicitudCredito(),
-                                    "S");
+                    ArrayList lstInspeccionesXPersonasRelacionadaSolCred = (ArrayList) crInspeccionesXPersonasRelacionadaSolCredInterfaceLocal.findByPersonaxSolicitud(crPersonasRelacionadasSolCred.getIdPersonasRelacionadaSolicitudCredito(),
+                                                                                                                                                                       "S");
                     if (lstInspeccionesXPersonasRelacionadaSolCred.size() > 0) {
-                        Iterator itr = lstInspeccionesXPersonasRelacionadaSolCred.iterator();                       
-                        
+                        Iterator itr = lstInspeccionesXPersonasRelacionadaSolCred.iterator();
+
                         while (itr.hasNext()) {
-                            CRInspeccionesXPersonasRelacionadaSolCred crInspeccionesXPersonasRelacionadaSolCred = (CRInspeccionesXPersonasRelacionadaSolCred) itr
-                                    .next();
+                            CRInspeccionesXPersonasRelacionadaSolCred crInspeccionesXPersonasRelacionadaSolCred = (CRInspeccionesXPersonasRelacionadaSolCred) itr.next();
                             String codigoPersona = "";
                             CRSolicitudCredito crSolicitudCredito = crSolicitudCreditoInterfaceLocal.findById(numeroSolicitudCredito);
                             codigoPersona = crPersonasRelacionadasSolCred.getCodigoPersonaRelacionada();
-                            
+
                             // Inicio stacanga 12.02.2013 Ticket 4960
                             String tipoDireccion = "";
-                            
-                            if(crPersonasRelacionadasSolCred.getCrTipoRelacionFamiliarSC().getCodigoTipoRelacion().equals("TI")){                           
-                                if (crInspeccionesXPersonasRelacionadaSolCred.getTipoInspeccion().equals(Constante.VIIN_TIP_INSP_D)){                                   
+
+                            if (crPersonasRelacionadasSolCred.getCrTipoRelacionFamiliarSC().getCodigoTipoRelacion().equals("TI")) {
+                                if (crInspeccionesXPersonasRelacionadaSolCred.getTipoInspeccion().equals(Constante.VIIN_TIP_INSP_D)) {
                                     tipoDireccion = "01";
-                                } else if (crInspeccionesXPersonasRelacionadaSolCred.getTipoInspeccion().equals(Constante.VIIN_TIP_INSP_L) 
-                                        || crInspeccionesXPersonasRelacionadaSolCred.getTipoInspeccion().equals(Constante.VIIN_TIP_INSP_C)){                                    
+                                } else if (crInspeccionesXPersonasRelacionadaSolCred.getTipoInspeccion().equals(Constante.VIIN_TIP_INSP_L) || crInspeccionesXPersonasRelacionadaSolCred.getTipoInspeccion().equals(Constante.VIIN_TIP_INSP_C)) {
                                     tipoDireccion = "02";
                                 }
                             }
-                            if(crPersonasRelacionadasSolCred.getCrTipoRelacionFamiliarSC().getCodigoTipoRelacion().equals("AV")){                           
-                                if (crInspeccionesXPersonasRelacionadaSolCred.getTipoInspeccion().equals(Constante.VIIN_TIP_INSP_D)){                                   
+                            if (crPersonasRelacionadasSolCred.getCrTipoRelacionFamiliarSC().getCodigoTipoRelacion().equals("AV")) {
+                                if (crInspeccionesXPersonasRelacionadaSolCred.getTipoInspeccion().equals(Constante.VIIN_TIP_INSP_D)) {
                                     tipoDireccion = "01";
-                                } else if (crInspeccionesXPersonasRelacionadaSolCred.getTipoInspeccion().equals(Constante.VIIN_TIP_INSP_L) 
-                                        || crInspeccionesXPersonasRelacionadaSolCred.getTipoInspeccion().equals(Constante.VIIN_TIP_INSP_C)){                                    
+                                } else if (crInspeccionesXPersonasRelacionadaSolCred.getTipoInspeccion().equals(Constante.VIIN_TIP_INSP_L) || crInspeccionesXPersonasRelacionadaSolCred.getTipoInspeccion().equals(Constante.VIIN_TIP_INSP_C)) {
                                     tipoDireccion = "02";
                                 }
                             }
-                            if(crPersonasRelacionadasSolCred.getCrTipoRelacionFamiliarSC().getCodigoTipoRelacion().equals("CT")){                           
-                                if (crInspeccionesXPersonasRelacionadaSolCred.getTipoInspeccion().equals(Constante.VIIN_TIP_INSP_D)){                                   
+                            if (crPersonasRelacionadasSolCred.getCrTipoRelacionFamiliarSC().getCodigoTipoRelacion().equals("CT")) {
+                                if (crInspeccionesXPersonasRelacionadaSolCred.getTipoInspeccion().equals(Constante.VIIN_TIP_INSP_D)) {
                                     tipoDireccion = "01";
-                                } else if (crInspeccionesXPersonasRelacionadaSolCred.getTipoInspeccion().equals(Constante.VIIN_TIP_INSP_L) 
-                                        || crInspeccionesXPersonasRelacionadaSolCred.getTipoInspeccion().equals(Constante.VIIN_TIP_INSP_C)){                                    
+                                } else if (crInspeccionesXPersonasRelacionadaSolCred.getTipoInspeccion().equals(Constante.VIIN_TIP_INSP_L) || crInspeccionesXPersonasRelacionadaSolCred.getTipoInspeccion().equals(Constante.VIIN_TIP_INSP_C)) {
                                     tipoDireccion = "02";
                                 }
                             }
-                            if(crPersonasRelacionadasSolCred.getCrTipoRelacionFamiliarSC().getCodigoTipoRelacion().equals("CA")){                           
-                                if (crInspeccionesXPersonasRelacionadaSolCred.getTipoInspeccion().equals(Constante.VIIN_TIP_INSP_D)){                                   
+                            if (crPersonasRelacionadasSolCred.getCrTipoRelacionFamiliarSC().getCodigoTipoRelacion().equals("CA")) {
+                                if (crInspeccionesXPersonasRelacionadaSolCred.getTipoInspeccion().equals(Constante.VIIN_TIP_INSP_D)) {
                                     tipoDireccion = "01";
-                                } else if (crInspeccionesXPersonasRelacionadaSolCred.getTipoInspeccion().equals(Constante.VIIN_TIP_INSP_L) 
-                                        || crInspeccionesXPersonasRelacionadaSolCred.getTipoInspeccion().equals(Constante.VIIN_TIP_INSP_C)){
+                                } else if (crInspeccionesXPersonasRelacionadaSolCred.getTipoInspeccion().equals(Constante.VIIN_TIP_INSP_L) || crInspeccionesXPersonasRelacionadaSolCred.getTipoInspeccion().equals(Constante.VIIN_TIP_INSP_C)) {
                                     tipoDireccion = "02";
                                 }
-                            }                                               
+                            }
                             // Fin stacanga.
-                            
+
                             CLPersonas clPersonas = clPersonasInterfaceLocal.findById(codigoPersona);
-                            
-                            List lstDirPer = clDireccionPersonasInterfaceLocal.findByCodigoPersonaTipoDireccionPrincipal(codigoPersona,tipoDireccion,Constante.IND_DIRECCION_DOMICILIARIA_PRINCIPAL_S);
-                            
-                            if (lstDirPer!=null && lstDirPer.size()>0){
-                                CLDireccionPersonas clDireccionPersonas =(CLDireccionPersonas)(lstDirPer.get(0));
-                            
+
+                            List lstDirPer = clDireccionPersonasInterfaceLocal.findByCodigoPersonaTipoDireccionPrincipal(codigoPersona,
+                                                                                                                         tipoDireccion,
+                                                                                                                         Constante.IND_DIRECCION_DOMICILIARIA_PRINCIPAL_S);
+
+                            if (lstDirPer != null && lstDirPer.size() > 0) {
+                                CLDireccionPersonas clDireccionPersonas = (CLDireccionPersonas) (lstDirPer.get(0));
+
                                 CRTipoRelacionFamiliarSC crTipoRelacionFamiliarSC = crTipoRelacionFamiliarSCInterfaceLocal.findById(crPersonasRelacionadasSolCred.getCrTipoRelacionFamiliarSC().getCodigoTipoRelacion());
-                                /****COLOCAR VALIDACION SI INSPECCION ES AGENCIA O POR BASE.*******/
+                                /**** COLOCAR VALIDACION SI INSPECCION ES AGENCIA O POR BASE. *******/
                                 CRBases crBases = null;
                                 //gfernandez 22.10.2010 Se valida la inspeccion es por "Inspeccion a Agencia" o por "Base"
-                                if(strInsAge.equals("S")){                          
+                                if (strInsAge.equals("S")) {
                                     //Agencia
-                                }else{
+                                } else {
                                     // Inicio stacanga 12.02.2013 Ticket 4960
                                     String codigoBase = crDistritoBaseInterfaceLocal.findCodigoBase(String.valueOf(clDireccionPersonas.getCodigoUbigeo()));
                                     if (codigoBase.equals("")) {
@@ -4633,147 +4600,110 @@
                                     crBases = crBasesInterfaceLocal.findById(codigoBase);
                                     // Fin stacanga.
                                 }
-                                
-                                                                                                                                                                                                                                                                                                                                                                                                                                                             
-                                CRSolicitudInpeccionesCab crSolicitudInpeccionesCab = new CRSolicitudInpeccionesCab();
-                                String strIdNumeroCorrelativo = (String) cbCorrelativoInterfaceLocal
-                                        .GenerarCorrelativo(codigoEmpresa,
-                                                "CRDSOIN", 15,
-                                                usuarioInsercion,
-                                                terminalInsercion, ipInsercion);
-                                crSolicitudInpeccionesCab
-                                        .setNumeroSolicitudInspeccion(strIdNumeroCorrelativo);
-                                crSolicitudInpeccionesCab
-                                        .setCodigoEmpresa(codigoEmpresa);
-                                crSolicitudInpeccionesCab
-                                        .setTipoInspeccion(crInspeccionesXPersonasRelacionadaSolCred
-                                                .getTipoInspeccion());
-                                crSolicitudInpeccionesCab
-                                        .setCrSolicitudCredito(crSolicitudCredito);
-                                crSolicitudInpeccionesCab
-                                        .setCrTipoRelacionFamiliarSC(crTipoRelacionFamiliarSC);
-                                crSolicitudInpeccionesCab
-                                        .setClPersonas(clPersonas);
-                                crSolicitudInpeccionesCab
-                                        .setCodigoUbicacionGeografica(clDireccionPersonas
-                                                .getCodigoUbigeo());
-                                crSolicitudInpeccionesCab
-                                        .setDirCompletaPersonaInspeccionar(clDireccionPersonas
-                                                .getDireccionCompleta());
-                                //gfernandez 22.10.2010 Se valida la inspeccion es por "Inspeccion a Agencia" o por "Base"
-                                if(strInsAge.equals("S")){  
-                                crSolicitudInpeccionesCab.setCodigoAgencia(strCodAge);
-                                }else{
-                                crSolicitudInpeccionesCab.setCrBases(crBases);
-                                }
-                                crSolicitudInpeccionesCab
-                                        .setEstadoRegistro(Constante.EST_GENERAL_REG_S);
-                                crSolicitudInpeccionesCab
-                                        .setIpInsercion(ipInsercion);
-                                crSolicitudInpeccionesCab
-                                        .setTerminalInsercion(terminalInsercion);
 
-                                crSolicitudInpeccionesCab
-                                        .setFechaInsercion(new Timestamp(System
-                                                .currentTimeMillis()));
-                                crSolicitudInpeccionesCab
-                                        .setUsuarioInsercion(usuarioInsercion);
-                                crSolicitudInpeccionesCab
-                                        .setFechaSolicitudInspeccion(sdf
-                                                .parse(fechaIngreso));
-                                crSolicitudInpeccionesCab
-                                        .setHoraSolicitudInspeccion(horaIngreso);
-                                crSolicitudInpeccionesCab
-                                        .setNumeroVistasRealizadas(Long
-                                                .valueOf(Constante.VIIN_NUMERO_VISITA_INICIAL));
-                                
+                                CRSolicitudInpeccionesCab crSolicitudInpeccionesCab = new CRSolicitudInpeccionesCab();
+                                String strIdNumeroCorrelativo = (String) cbCorrelativoInterfaceLocal.GenerarCorrelativo(codigoEmpresa,
+                                                                                                                        "CRDSOIN",
+                                                                                                                        15,
+                                                                                                                        usuarioInsercion,
+                                                                                                                        terminalInsercion,
+                                                                                                                        ipInsercion);
+                                crSolicitudInpeccionesCab.setNumeroSolicitudInspeccion(strIdNumeroCorrelativo);
+                                crSolicitudInpeccionesCab.setCodigoEmpresa(codigoEmpresa);
+                                crSolicitudInpeccionesCab.setTipoInspeccion(crInspeccionesXPersonasRelacionadaSolCred.getTipoInspeccion());
+                                crSolicitudInpeccionesCab.setCrSolicitudCredito(crSolicitudCredito);
+                                crSolicitudInpeccionesCab.setCrTipoRelacionFamiliarSC(crTipoRelacionFamiliarSC);
+                                crSolicitudInpeccionesCab.setClPersonas(clPersonas);
+                                crSolicitudInpeccionesCab.setCodigoUbicacionGeografica(clDireccionPersonas.getCodigoUbigeo());
+                                crSolicitudInpeccionesCab.setDirCompletaPersonaInspeccionar(clDireccionPersonas.getDireccionCompleta());
+                                //gfernandez 22.10.2010 Se valida la inspeccion es por "Inspeccion a Agencia" o por "Base"
+                                if (strInsAge.equals("S")) {
+                                    crSolicitudInpeccionesCab.setCodigoAgencia(strCodAge);
+                                } else {
+                                    crSolicitudInpeccionesCab.setCrBases(crBases);
+                                }
+                                crSolicitudInpeccionesCab.setEstadoRegistro(Constante.EST_GENERAL_REG_S);
+                                crSolicitudInpeccionesCab.setIpInsercion(ipInsercion);
+                                crSolicitudInpeccionesCab.setTerminalInsercion(terminalInsercion);
+
+                                crSolicitudInpeccionesCab.setFechaInsercion(new Timestamp(System.currentTimeMillis()));
+                                crSolicitudInpeccionesCab.setUsuarioInsercion(usuarioInsercion);
+                                crSolicitudInpeccionesCab.setFechaSolicitudInspeccion(sdf.parse(fechaIngreso));
+                                crSolicitudInpeccionesCab.setHoraSolicitudInspeccion(horaIngreso);
+                                crSolicitudInpeccionesCab.setNumeroVistasRealizadas(Long.valueOf(Constante.VIIN_NUMERO_VISITA_INICIAL));
+
                                 //estado de solicitud
                                 crSolicitudInpeccionesCab.setEstadoSolicitud("G");
-                                
-                                crSolicitudInpeccionesCabInterfaceLocal
-                                        .save(crSolicitudInpeccionesCab);
+
+                                crSolicitudInpeccionesCabInterfaceLocal.save(crSolicitudInpeccionesCab);
                                 //gfernandez 22.10.2010 Se agrego el tipo de retorno
                                 output.put("solicitudinspeccion", strIdNumeroCorrelativo);
-                                
-                                /****FIN*******/
-                                
+
+                                /**** FIN *******/
+
                                 // //////////////////////////////////////////////////////////////////////////////////////
                                 // ///////////////////////////////// REGISTRO DE 
                                 // VISITAS /////////////////////77//////
 
                                 CRVisitasInspeccion crVisitasInspeccion = new CRVisitasInspeccion();
-                                String numeroVisitaInspeccion = (String) cbCorrelativoInterfaceLocal
-                                        .GenerarCorrelativo(codigoEmpresa,
-                                                "CRDVIIN", 15,
-                                                usuarioInsercion,
-                                                terminalInsercion, ipInsercion);
-                                crVisitasInspeccion
-                                        .setNumeroVisitaInspeccion(numeroVisitaInspeccion);
-                                crVisitasInspeccion
-                                        .setCrSolicitudInpeccionesCab(crSolicitudInpeccionesCab);
-                                crVisitasInspeccion
-                                        .setEstadoVisita(Constante.EST_VISITA_INSP_X_ASIGNAR);
-                                crVisitasInspeccion
-                                        .setIndVisitaRequiereAutorización(Constante.INDICADOR_NO_AUTORIZACION);
+                                String numeroVisitaInspeccion = (String) cbCorrelativoInterfaceLocal.GenerarCorrelativo(codigoEmpresa,
+                                                                                                                        "CRDVIIN",
+                                                                                                                        15,
+                                                                                                                        usuarioInsercion,
+                                                                                                                        terminalInsercion,
+                                                                                                                        ipInsercion);
+                                crVisitasInspeccion.setNumeroVisitaInspeccion(numeroVisitaInspeccion);
+                                crVisitasInspeccion.setCrSolicitudInpeccionesCab(crSolicitudInpeccionesCab);
+                                crVisitasInspeccion.setEstadoVisita(Constante.EST_VISITA_INSP_X_ASIGNAR);
+                                crVisitasInspeccion.setIndVisitaRequiereAutorización(Constante.INDICADOR_NO_AUTORIZACION);
                                 crVisitasInspeccion.setIpInsercion(ipInsercion);
-                                crVisitasInspeccion
-                                        .setTerminalInsercion(terminalInsercion);
-                                crVisitasInspeccion
-                                        .setFechaInsercion(new Timestamp(System
-                                                .currentTimeMillis()));
-                                crVisitasInspeccion
-                                        .setUsuarioInsercion(usuarioInsercion);
-                                crVisitasInspeccionInterfaceLocal
-                                        .save(crVisitasInspeccion);     
+                                crVisitasInspeccion.setTerminalInsercion(terminalInsercion);
+                                crVisitasInspeccion.setFechaInsercion(new Timestamp(System.currentTimeMillis()));
+                                crVisitasInspeccion.setUsuarioInsercion(usuarioInsercion);
+                                crVisitasInspeccionInterfaceLocal.save(crVisitasInspeccion);
                                 //gfernandez 22.10.2010 se agrego el tipo de retorno
                                 output.put("visitainspeccion", numeroVisitaInspeccion);
-                                
-                                
-                                opciones+=""+numeroVisitaInspeccion+"-"+strIdNumeroCorrelativo+"-;";
-                            }                           
-                        }                       
+
+                                opciones += "" + numeroVisitaInspeccion + "-" + strIdNumeroCorrelativo + "-;";
+                            }
+                        }
                     }
                 }
             }//fin  de while
-            
+
             //gfernandez 22.10.2010 Se agrego el tipo de retorno
             output.put("visitasolicitudinspeccion", opciones);
 
             CRSolicitudCredito crSolicitudCredito = crSolicitudCreditoInterfaceLocal.findById(numeroSolicitudCredito);
             crSolicitudCredito.setIndEnvioInspecciones("S");
-            
+
             // [Ticket 5478] stacanga 22.03.2013 Actualiza el envío a Inspecciones.
             crSolicitudCredito.setIndicadorInspeccion("S");
-            
+
             crSolicitudCredito.setIndInspeccionDiferido(indInspeccionDiferido);
             crSolicitudCreditoInterfaceLocal.update(crSolicitudCredito);
-            
+
             //Cambio estado Solicitud
-            crbnSolicitudCreditoFacadeInterfaceLocal.historicoCambioEstado(
-                    crSolicitudCredito.getNumeroSolicitud(), 
-                    crSolicitudCredito.getCrEstadoSolicitud().getCodigoEstado(), 
-                    "08", 
-                    crSolicitudCredito.getCodigoEmpresa(), 
-                    usuarioInsercion, 
-                    terminalInsercion, 
-                    ipInsercion, 
-                    FormatoFecha.stringToSqlDate(fechaIngreso));
-            
+            crbnSolicitudCreditoFacadeInterfaceLocal.historicoCambioEstado(crSolicitudCredito.getNumeroSolicitud(),
+                                                                           crSolicitudCredito.getCrEstadoSolicitud().getCodigoEstado(),
+                                                                           "08",
+                                                                           crSolicitudCredito.getCodigoEmpresa(),
+                                                                           usuarioInsercion,
+                                                                           terminalInsercion,
+                                                                           ipInsercion,
+                                                                           FormatoFecha.stringToSqlDate(fechaIngreso));
+
         } catch (Exception e) {
             e.printStackTrace();
-            String descripcionError = e.toString().length() > 2000 ? e
-                    .toString().substring(0, 2000) : e.toString();
+            String descripcionError = e.toString().length() > 2000 ? e.toString().substring(0, 2000) : e.toString();
             BeanControlErrores beanControlErrores = new BeanControlErrores();
             beanControlErrores.setStrCodigoUsuario(usuarioInsercion);
-            beanControlErrores.setStrFechaOcurrencia(hora.obtenerFecha(cal
-                    .getTime().toString()));
+            beanControlErrores.setStrFechaOcurrencia(hora.obtenerFecha(cal.getTime().toString()));
             beanControlErrores.setStrHoraOcurrencia(hora.obtenerHora());
-            beanControlErrores
-                    .setStrNombreProceso("CRAdministracionSolicitudFacade .registroSolcitudInspeccion");
+            beanControlErrores.setStrNombreProceso("CRAdministracionSolicitudFacade .registroSolcitudInspeccion");
             beanControlErrores.setStrDescripcionError(descripcionError);
             try {
-                cbControlErroresFacadeInterfaceLocal
-                        .crearLogErrores(beanControlErrores);
+                cbControlErroresFacadeInterfaceLocal.crearLogErrores(beanControlErrores);
             } catch (Exception err) {
                 err.getStackTrace();
             }
@@ -4784,41 +4714,37 @@
         return output;
 
     }
-    
-    public Map findClienteExpediente(String numeroSolicitudCredito,String usuarioInsercion)throws Exception{
-        Map output=new HashMap();
-        FormatoFecha hora=new FormatoFecha();
+
+    public Map findClienteExpediente(String numeroSolicitudCredito, String usuarioInsercion) throws Exception {
+        Map output = new HashMap();
+        FormatoFecha hora = new FormatoFecha();
         Calendar cal = Calendar.getInstance();
         cal.getTime();
         output.put("nombrePersona", "");
-        try{
-            CRSolicitudCredito crSolicitudCredito=new CRSolicitudCredito();
-            crSolicitudCredito=crSolicitudCreditoInterfaceLocal.findById(numeroSolicitudCredito);
-            if(crSolicitudCredito!=null){
-                
-                    CLPersonas clPersonas=new CLPersonas();
-                    clPersonas=clPersonasInterfaceLocal.findById(crSolicitudCredito.getClPersonasByCodigoPersona().getCodigoPersona());
-                    if(clPersonas!=null){
-                        output.put("nombrePersona", clPersonas.getNombreoRazonSocial());
-                    }
-                
+        try {
+            CRSolicitudCredito crSolicitudCredito = new CRSolicitudCredito();
+            crSolicitudCredito = crSolicitudCreditoInterfaceLocal.findById(numeroSolicitudCredito);
+            if (crSolicitudCredito != null) {
+
+                CLPersonas clPersonas = new CLPersonas();
+                clPersonas = clPersonasInterfaceLocal.findById(crSolicitudCredito.getClPersonasByCodigoPersona().getCodigoPersona());
+                if (clPersonas != null) {
+                    output.put("nombrePersona", clPersonas.getNombreoRazonSocial());
+                }
+
             }
-            
-        }catch(Exception e){
+
+        } catch (Exception e) {
             e.printStackTrace();
-            String descripcionError = e.toString().length() > 2000 ? e
-                    .toString().substring(0, 2000) : e.toString();
+            String descripcionError = e.toString().length() > 2000 ? e.toString().substring(0, 2000) : e.toString();
             BeanControlErrores beanControlErrores = new BeanControlErrores();
             beanControlErrores.setStrCodigoUsuario(usuarioInsercion);
-            beanControlErrores.setStrFechaOcurrencia(hora.obtenerFecha(cal
-                    .getTime().toString()));
+            beanControlErrores.setStrFechaOcurrencia(hora.obtenerFecha(cal.getTime().toString()));
             beanControlErrores.setStrHoraOcurrencia(hora.obtenerHora());
-            beanControlErrores
-                    .setStrNombreProceso("CRSolicitudCreditoFacade .findClienteExpediente");
+            beanControlErrores.setStrNombreProceso("CRSolicitudCreditoFacade .findClienteExpediente");
             beanControlErrores.setStrDescripcionError(descripcionError);
             try {
-                cbControlErroresFacadeInterfaceLocal
-                        .crearLogErrores(beanControlErrores);
+                cbControlErroresFacadeInterfaceLocal.crearLogErrores(beanControlErrores);
             } catch (Exception err) {
                 err.getStackTrace();
             }
@@ -4826,29 +4752,26 @@
         }
         output.put("strError", NO_ERROR);
         return output;
-    }   
-    
+    }
+
     @TransactionAttribute(TransactionAttributeType.REQUIRED)
-    public String comisionesGastosGenera(
-            String codigoEmpresa,
-            String codigoAgencia,
-            String numeroSolicitudCredito,
-            ArrayList vComisionesGastos,
-            String usuario,
-            String host,
-            String ip
-            )throws Exception{
+    public String comisionesGastosGenera(String codigoEmpresa,
+                                         String codigoAgencia,
+                                         String numeroSolicitudCredito,
+                                         ArrayList vComisionesGastos,
+                                         String usuario,
+                                         String host,
+                                         String ip) throws Exception {
         try {
             //Valida que se pueda modificar la Solicitud
             CRSolicitudCredito crSolicitudCredito = crSolicitudCreditoInterfaceLocal.findById(numeroSolicitudCredito);
-            if (!crbnSolicitudCreditoFacadeInterfaceLocal.
-                    permiteModificarSolicitud(numeroSolicitudCredito, usuario)) {
+            if (!crbnSolicitudCreditoFacadeInterfaceLocal.permiteModificarSolicitud(numeroSolicitudCredito, usuario)) {
                 if (crSolicitudCredito.getTipoSolicitud().equals("SC")) {
                     return "204";
-                }else{
+                } else {
                     return "480";
                 }
-            }           
+            }
             //ELIMINAMOS LOGICAMENTE LO ANTERIOR GENERADO
             List<CRSolCredComisionesGastos> lstTmp = new ArrayList<CRSolCredComisionesGastos>(0);
             lstTmp = crSolCredComisionesGastosInterfaceLocal.findbySolicitudEstado(numeroSolicitudCredito);
@@ -4861,9 +4784,13 @@
             //CREAMOS LOS REGISTROS COMISIONES Y GASTOS
             for (Iterator iter = vComisionesGastos.iterator(); iter.hasNext();) {
                 BeanCRComisionesGastos element = (BeanCRComisionesGastos) iter.next();
-                String idComisionGastoXSolCred  = cbCorrelativoInterfaceLocal.GenerarCorrelativo(
-                        codigoEmpresa, "CRDSCCG", 15, usuario, host, ip);
-                
+                String idComisionGastoXSolCred = cbCorrelativoInterfaceLocal.GenerarCorrelativo(codigoEmpresa,
+                                                                                                "CRDSCCG",
+                                                                                                15,
+                                                                                                usuario,
+                                                                                                host,
+                                                                                                ip);
+
                 CRSolCredComisionesGastos crSolCredComisionesGastos = new CRSolCredComisionesGastos();
                 crSolCredComisionesGastos.setIdComisionGastoXSolCred(idComisionGastoXSolCred);
                 crSolCredComisionesGastos.setModalidadCredito(crSolicitudCredito.getTipoModalidadCredito());
@@ -4877,161 +4804,169 @@
                 crSolCredComisionesGastos.setPorcentajeAplicar(element.getPorcentajeAplicar());
                 crSolCredComisionesGastos.setIndResultadoMultiplicaPlazoCredito(element.getIndMultiplicaPlazo());
                 crSolCredComisionesGastos.setImporteComisionGasto(element.getImporteComisionGasto());
-                /*crSolCredComisionesGastos.setImporteComisionGasto(new Double(
-                                        new BigDecimal(element.getImporteComisionGasto().toString()).setScale(2, BigDecimal.ROUND_HALF_UP).doubleValue()));*/
+                /*
+                 * crSolCredComisionesGastos.setImporteComisionGasto(new Double( new BigDecimal(element.getImporteComisionGasto().toString()).setScale(2, BigDecimal.ROUND_HALF_UP).doubleValue()));
+                 */
                 crSolCredComisionesGastos.setIndPermiteModificarEnSolcred(element.getPermiteModificacion());
                 crSolCredComisionesGastos.setEstadoRegistro("S");
-                
+
                 crSolCredComisionesGastos.setAplicarPorcentajeA(element.getAplicarPorcentajeA());
                 crSolCredComisionesGastos.setIndPermiteFinanciarGasto(element.getIndPermiteFinanciarGasto());
                 crSolCredComisionesGastos.setIndModFinanciamiento(element.getIndModFinanciamiento());
-                
-                String pagarComisionA="EMP";
-                List lstComisones=crComisionesGastosXProductoInterfaceLocal.findByProductoOperacionSubconceptoEstado(crSolicitudCredito.getCrProductoByProductoAprobado().getCodigoProducto(),element.getCodigoOperacion(),element.getCodigoiSubConcepto(),"S");
-                if(lstComisones.size()>0){
-                    CRComisionesGastosXProducto crComisionesGastosXProducto=(CRComisionesGastosXProducto)lstComisones.get(0);
-                    if(crComisionesGastosXProducto.getPagarComisionA()!=null && !crComisionesGastosXProducto.getPagarComisionA().equals("")){
-                        pagarComisionA=crComisionesGastosXProducto.getPagarComisionA();
+
+                String pagarComisionA = "EMP";
+                List lstComisones = crComisionesGastosXProductoInterfaceLocal.findByProductoOperacionSubconceptoEstado(crSolicitudCredito.getCrProductoByProductoAprobado().getCodigoProducto(),
+                                                                                                                       element.getCodigoOperacion(),
+                                                                                                                       element.getCodigoiSubConcepto(),
+                                                                                                                       "S");
+                if (lstComisones.size() > 0) {
+                    CRComisionesGastosXProducto crComisionesGastosXProducto = (CRComisionesGastosXProducto) lstComisones.get(0);
+                    if (crComisionesGastosXProducto.getPagarComisionA() != null && !crComisionesGastosXProducto.getPagarComisionA().equals("")) {
+                        pagarComisionA = crComisionesGastosXProducto.getPagarComisionA();
                     }
                 }
                 crSolCredComisionesGastos.setPagarComisionA(pagarComisionA);
-                if(element.getPersonaAPagarComision()!=null && !element.getPersonaAPagarComision().equals("")){
-                    CLPersonas clPersonas=new CLPersonas();
+                if (element.getPersonaAPagarComision() != null && !element.getPersonaAPagarComision().equals("")) {
+                    CLPersonas clPersonas = new CLPersonas();
                     clPersonas.setCodigoPersona(element.getPersonaAPagarComision());
                     crSolCredComisionesGastos.setPersonaAPagarComision(clPersonas);
                 }
-                
+
                 crSolCredComisionesGastosInterfaceLocal.save(crSolCredComisionesGastos);
             }
         } catch (Exception e) {
             e.printStackTrace();
             throw e;
         }
-        return NO_ERROR;    
+        return NO_ERROR;
     }
-    
+
     /**
-     * @author 
-     * @since 20.12.2010 mnieves : Agregar campo "codigoPersonaRelaciona" para el filtro. 
+     * @author
+     * @since 20.12.2010 mnieves : Agregar campo "codigoPersonaRelaciona" para el filtro.
      * @since 12.12.2012 jcabello : Agregar otencion de la cantidad de registros totales de solicitudes
      */
-    public List<BeanObtenerSolicitud> obtenerSolicitudesAperturadas(
-                                                                String tipoBusqueda,
-                                                                String valorBusqueda,
-                                                                String usuario,
-                                                                String codigoEmpresa, 
-                                                                String tipoSolicitud, 
-                                                                String posicion, 
-                                                                String nroRegistros,
-                                                                String codigoAgencia,
-                                                                String codigoTipoCredito,
-                                                                String codigoSubTipoCredito)                                                                
-                                                                throws Exception{
-        
+    public List<BeanObtenerSolicitud> obtenerSolicitudesAperturadas(String tipoBusqueda,
+                                                                    String valorBusqueda,
+                                                                    String usuario,
+                                                                    String codigoEmpresa,
+                                                                    String tipoSolicitud,
+                                                                    String posicion,
+                                                                    String nroRegistros,
+                                                                    String codigoAgencia,
+                                                                    String codigoTipoCredito,
+                                                                    String codigoSubTipoCredito) throws Exception {
+
         List<BeanObtenerSolicitud> lObtenerDatos = new ArrayList<BeanObtenerSolicitud>();
         Iterator it = null;
-        boolean isAgenciaPrincipal=false;
+        boolean isAgenciaPrincipal = false;
         try {
             //Verificamos si es Agencia padre
             CBAgencia cbAgencia = cbAgenciaInterfaceLocal.findById(new CBAgenciaId(codigoEmpresa, codigoAgencia));
-            isAgenciaPrincipal = cbAgencia.getCbAgencia()==null?true:false;
-            
+            isAgenciaPrincipal = cbAgencia.getCbAgencia() == null ? true : false;
+
             //mnieves 20.12.2010 : Obtiene los datos del usuario por ID para luego mandar su codigo de persona relacionada. Para un filtro posterior
             CBUsuario cbUsuario = cbUsuarioInterfaceLocal.findById(usuario);
-            
+
             BeanObtenerSolicitud beanObtenerSolicitud = null;
             int countRegistros = 0;
-            
-            if ("NS".equals(tipoBusqueda)){
-                
-                    it = crSolicitudCreditoInterfaceLocal.findByNumeroSolicitudEstado(valorBusqueda,codigoEmpresa, posicion, nroRegistros).iterator();
-                
-            }else if ("NC".equals(tipoBusqueda)){
-                
-                    it = crSolicitudCreditoInterfaceLocal.findByNombreEstado(valorBusqueda+"%",codigoEmpresa, posicion, nroRegistros).iterator();
-                
-            }else if ("DC".equals(tipoBusqueda)){
-                
-                    it = crSolicitudCreditoInterfaceLocal.findSolicitudesAperturadas(
-                            valorBusqueda,
-                            codigoEmpresa,
-                            tipoSolicitud, 
-                            posicion, 
-                            nroRegistros,
-                            usuario, 
-                            isAgenciaPrincipal, 
-                            codigoAgencia,
-                            codigoTipoCredito,
-                            codigoSubTipoCredito,
-                            //mnieves 20.12.2010 : Campo agregado
-                            cbUsuario.getCodigoPersonaRelacionado()
-                    ).iterator();
-                    
-                    countRegistros = crSolicitudCreditoInterfaceLocal.countFindSolicitudesAperturadas(
-                            valorBusqueda, 
-                            codigoEmpresa, 
-                            tipoSolicitud, 
-                            posicion, 
-                            nroRegistros, 
-                            usuario, 
-                            isAgenciaPrincipal, 
-                            codigoAgencia, 
-                            codigoTipoCredito, 
-                            codigoSubTipoCredito, 
-                            cbUsuario.getCodigoPersonaRelacionado());
+
+            if ("NS".equals(tipoBusqueda)) {
+
+                it = crSolicitudCreditoInterfaceLocal.findByNumeroSolicitudEstado(valorBusqueda,
+                                                                                  codigoEmpresa,
+                                                                                  posicion,
+                                                                                  nroRegistros).iterator();
+
+            } else if ("NC".equals(tipoBusqueda)) {
+
+                it = crSolicitudCreditoInterfaceLocal.findByNombreEstado(valorBusqueda + "%",
+                                                                         codigoEmpresa,
+                                                                         posicion,
+                                                                         nroRegistros).iterator();
+
+            } else if ("DC".equals(tipoBusqueda)) {
+
+                it = crSolicitudCreditoInterfaceLocal.findSolicitudesAperturadas(valorBusqueda,
+                                                                                 codigoEmpresa,
+                                                                                 tipoSolicitud,
+                                                                                 posicion,
+                                                                                 nroRegistros,
+                                                                                 usuario,
+                                                                                 isAgenciaPrincipal,
+                                                                                 codigoAgencia,
+                                                                                 codigoTipoCredito,
+                                                                                 codigoSubTipoCredito,
+                                                                                 //mnieves 20.12.2010 : Campo agregado
+                                                                                 cbUsuario.getCodigoPersonaRelacionado()).iterator();
+
+                countRegistros = crSolicitudCreditoInterfaceLocal.countFindSolicitudesAperturadas(valorBusqueda,
+                                                                                                  codigoEmpresa,
+                                                                                                  tipoSolicitud,
+                                                                                                  posicion,
+                                                                                                  nroRegistros,
+                                                                                                  usuario,
+                                                                                                  isAgenciaPrincipal,
+                                                                                                  codigoAgencia,
+                                                                                                  codigoTipoCredito,
+                                                                                                  codigoSubTipoCredito,
+                                                                                                  cbUsuario.getCodigoPersonaRelacionado());
             }
-            
-            while(it.hasNext()){
+
+            while (it.hasNext()) {
                 CRSolicitudCredito crSolicitudCredito;
                 crSolicitudCredito = (CRSolicitudCredito) it.next();
-                beanObtenerSolicitud = setearBeanSolicitud(crSolicitudCredito); 
+                beanObtenerSolicitud = setearBeanSolicitud(crSolicitudCredito);
                 beanObtenerSolicitud.setCanreg(countRegistros);
                 lObtenerDatos.add(beanObtenerSolicitud);
             }
         } catch (Exception e) {
             e.printStackTrace();
-        } 
+        }
         return lObtenerDatos;
     }
-    
+
     public int countFindSolicitudesAperturadas(String codigoEmpresa, String codigoAgencia, String tipoSolicitud) {
         int cantidadRegistros = 0;
-        boolean isAgenciaPrincipal=false;
+        boolean isAgenciaPrincipal = false;
         try {
-//          Verificamos si es Agencia padre
+            //          Verificamos si es Agencia padre
             CBAgencia cbAgencia = cbAgenciaInterfaceLocal.findById(new CBAgenciaId(codigoEmpresa, codigoAgencia));
-            isAgenciaPrincipal = cbAgencia.getCbAgencia()==null?true:false;
-            
-            cantidadRegistros = crSolicitudCreditoInterfaceLocal.countFindSolicitudesAperturadas(codigoEmpresa,tipoSolicitud, isAgenciaPrincipal, codigoAgencia);
+            isAgenciaPrincipal = cbAgencia.getCbAgencia() == null ? true : false;
+
+            cantidadRegistros = crSolicitudCreditoInterfaceLocal.countFindSolicitudesAperturadas(codigoEmpresa,
+                                                                                                 tipoSolicitud,
+                                                                                                 isAgenciaPrincipal,
+                                                                                                 codigoAgencia);
         } catch (Exception e) {
             e.printStackTrace();
-            
-        } 
+
+        }
         return cantidadRegistros;
-     }
-    
-    public String obtenerIndicadorDatosTitulares(String numeroSolicitud){
-        
-        List lstTitularesSolicitud=crSolicitudTitularesInterfaceLocal.findByNumeroSolicitud(numeroSolicitud);
-        CLPersonas clPersonas=new CLPersonas();
-        CRSolicitudTitulares crSolicitudTitulares=new CRSolicitudTitulares();
-        String resultado="COMPLETO";
-        for(int i=0;i<lstTitularesSolicitud.size();i++){
-            crSolicitudTitulares=(CRSolicitudTitulares)lstTitularesSolicitud.get(i);
-            clPersonas=clPersonasInterfaceLocal.findById(crSolicitudTitulares.getClPersonas().getCodigoPersona());
-            if(clPersonas.getIndRegistroDatosCompletos().equals("N")){
-                resultado="INCOMPLETO";
+    }
+
+    public String obtenerIndicadorDatosTitulares(String numeroSolicitud) {
+
+        List lstTitularesSolicitud = crSolicitudTitularesInterfaceLocal.findByNumeroSolicitud(numeroSolicitud);
+        CLPersonas clPersonas = new CLPersonas();
+        CRSolicitudTitulares crSolicitudTitulares = new CRSolicitudTitulares();
+        String resultado = "COMPLETO";
+        for (int i = 0; i < lstTitularesSolicitud.size(); i++) {
+            crSolicitudTitulares = (CRSolicitudTitulares) lstTitularesSolicitud.get(i);
+            clPersonas = clPersonasInterfaceLocal.findById(crSolicitudTitulares.getClPersonas().getCodigoPersona());
+            if (clPersonas.getIndRegistroDatosCompletos().equals("N")) {
+                resultado = "INCOMPLETO";
             }
         }
-        
+
         return resultado;
     }
-    
+
     //[Req.16-043] gmeza 23.11.2016
     //Inicio [Req.16-022] gmeza 30.06.2016
     public Map<String, Object> obtenerIndicadorDatosTitularesAdicional(String numeroSolicitud,
-                                                       BeanGEAuditoria beanGEAuditoria,
-                                                       String strCodEmp) {
+                                                                       BeanGEAuditoria beanGEAuditoria,
+                                                                       String strCodEmp) {
         Map output = new HashMap();
         List lstFaltantes = new ArrayList();
         String resultado = "COMPLETO";
@@ -5089,7 +5024,7 @@
 
         return output;
     }
-    
+
     //Inicio [Req.16-043] gmeza 23.11.2016
     public Map<String, Object> obtenerIndicadorDatosTitularesPropuestaCredito(String numeroPropuestaCredito) {
         Map output = new HashMap();
@@ -5120,6 +5055,7 @@
 
         return output;
     }
+
     //Fin [Req.16-043]
 
     private String obtenerIndicadorDatosPersona(List lstFaltantes,
@@ -5129,294 +5065,296 @@
                                                 String indicadorTitular,
                                                 boolean validarEmail) {
 
-                CLPersonas clPersonas=clPersonasInterfaceLocal.findById(codigoPersona);
-                if(clPersonas.getIndRegistroDatosCompletos().equals("N")){
-                    resultado="INCOMPLETO";
-                    if("TI".equals(codigoTipoRelacion) && "S".equals(indicadorTitular)){
-                        if(Constante.CODIGO_TIPO_PERSONA_JURIDICA.equals(clPersonas.getClTipoPersona().getCodigoTipoPersona()) && _isEmpty(clPersonas.getLstCLVinculoFuncionarios())){
-                            lstFaltantes.add("No posee Vinculo Funcionarios");
-                        }else{
-                            lstFaltantes.add("Datos Incompletos de la persona titular");
-                        }
-                    }else{
-                        lstFaltantes.add("Datos Incompletos de la persona conyuge");
-                    }
+        CLPersonas clPersonas = clPersonasInterfaceLocal.findById(codigoPersona);
+        if (clPersonas.getIndRegistroDatosCompletos().equals("N")) {
+            resultado = "INCOMPLETO";
+            if ("TI".equals(codigoTipoRelacion) && "S".equals(indicadorTitular)) {
+                if (Constante.CODIGO_TIPO_PERSONA_JURIDICA.equals(clPersonas.getClTipoPersona().getCodigoTipoPersona()) && _isEmpty(clPersonas.getLstCLVinculoFuncionarios())) {
+                    lstFaltantes.add("No posee Vinculo Funcionarios");
+                } else {
+                    lstFaltantes.add("Datos Incompletos de la persona titular");
                 }
-                
-                //Titular Principal
-                if("TI".equals(codigoTipoRelacion) && "S".equals(indicadorTitular)){
-                    
-                    List<CLTelefonosPersonas> lstTelefonos =clTelefonosPersonasInterfaceLocal.findbyCodigoPersonaEstado(clPersonas.getCodigoPersona(), "S");
-                    if(lstTelefonos.size()==0){
-                        resultado="INCOMPLETO";
-                        lstFaltantes.add("No posee número telefónico");
-                    }else{
-                        //prios 20.09.11
-                        for(CLTelefonosPersonas objTel : lstTelefonos){
-                            if(objTel.getClEmpresaOperadoraTelefono()!=null){
-                                if("N".equals(objTel.getClEmpresaOperadoraTelefono().getEstadoRegistro())){
-                                    resultado="INCOMPLETO";
-                                    lstFaltantes.add("Teléfono no posee empresa operadora válida");
-                                    break;
-                                }
-                            }else{
-                                resultado="INCOMPLETO";
-                                lstFaltantes.add("Teléfono no posee empresa operadora");
-                                break;
-                            }
-                            
-                        }
-                    }
-                    
-                    List<CLDireccionPersonas> lstDireccionDomiciliaria=clDireccionPersonasInterfaceLocal.findDireccionesPorPersona(clPersonas.getCodigoPersona(), "01");
-                    if(lstDireccionDomiciliaria.size()==0){
-                        resultado="INCOMPLETO";
-                        lstFaltantes.add("No posee dirección domiciliaria");
-                    }else{
-                        //prios 20.09.11
-                        for(CLDireccionPersonas objDir : lstDireccionDomiciliaria){
-                            if(objDir.getClTipoVivienda()!=null){
-                                if("N".equals(objDir.getClTipoVivienda().getEstadoRegistro())){
-                                    resultado="INCOMPLETO";
-                                    lstFaltantes.add("Dirección no posee tipo de vivienda válida");
-                                    break;
-                                }
-                            }else{
-                                resultado="INCOMPLETO";
-                                lstFaltantes.add("Dirección no posee tipo de vivienda");
-                                break;
-                            }
-                            
-                        }
-                        
-                    }
-                    
-                    if(clPersonas.getClTipoPersona().getCodigoTipoPersona().equals(Constante.CODIGO_TIPO_PERSONA_NATURAL)){
-                       CLPersonasNaturales clPersonasNaturales= clPersonasNaturalesInterfaceLocal.findById(clPersonas.getCodigoPersona());
+            } else {
+                lstFaltantes.add("Datos Incompletos de la persona conyuge");
+            }
+        }
 
-                       if(_equiv(clPersonasNaturales.getRelacionLaboral(), "FO")){
-                           List lstVinculoLaboralFormal = clCentroLaboralPersonasInterfaceLocal.findByCodigoPersonaEstado(clPersonas.getCodigoPersona(),
-                                                                                                                          "S");
-                           if (lstVinculoLaboralFormal.size() > 0) {
-                               List lstDireccionLaboral = clDireccionPersonasInterfaceLocal.findDireccionesPorPersona(clPersonas.getCodigoPersona(),
-                                                                                                                      "02");
-                               if (lstDireccionLaboral.size() == 0) {
-                                   resultado = "INCOMPLETO";
-                                   lstFaltantes.add("No posee dirección laboral");
-                               }
-                           }else{
-                               resultado = "INCOMPLETO";
-                               lstFaltantes.add("No posee vínculo laboral Formal");   
-                           }
-                       }else if(_equiv(clPersonasNaturales.getRelacionLaboral(), "IN")){
-                           List lstVinculoLaboralInformal = clCentroLaboralInformalInterfaceLocal.findByCodigoPersonaEstado(clPersonas.getCodigoPersona(),
-                                                                                                                            "S");
-                           if ((lstVinculoLaboralInformal.size()) == 0) {
-                               resultado = "INCOMPLETO";
-                               lstFaltantes.add("No posee vínculo laboral Informal");
-                           }    
-                       }
-                        
-                        //Instruccion
-                        if(clPersonasNaturales.getClNivelEstudio()!=null){
-                            CLNivelEstudio clNivelEstudio = clNivelEstudioInterfaceLocal.findById(clPersonasNaturales.getClNivelEstudio().getCodigoNivelEstudio());
-                            if("N".equals(clNivelEstudio.getEstado())){
-                                resultado="INCOMPLETO";
-                                lstFaltantes.add("No posee Instrucción válida");
-                            }
-                        }else{
-                            resultado="INCOMPLETO";
-                            lstFaltantes.add("No posee Instrucción");
+        //Titular Principal
+        if ("TI".equals(codigoTipoRelacion) && "S".equals(indicadorTitular)) {
+
+            List<CLTelefonosPersonas> lstTelefonos = clTelefonosPersonasInterfaceLocal.findbyCodigoPersonaEstado(clPersonas.getCodigoPersona(),
+                                                                                                                 "S");
+            if (lstTelefonos.size() == 0) {
+                resultado = "INCOMPLETO";
+                lstFaltantes.add("No posee número telefónico");
+            } else {
+                //prios 20.09.11
+                for (CLTelefonosPersonas objTel : lstTelefonos) {
+                    if (objTel.getClEmpresaOperadoraTelefono() != null) {
+                        if ("N".equals(objTel.getClEmpresaOperadoraTelefono().getEstadoRegistro())) {
+                            resultado = "INCOMPLETO";
+                            lstFaltantes.add("Teléfono no posee empresa operadora válida");
+                            break;
                         }
-                        
-                        
-                        //Profesion
-                        if(clPersonasNaturales.getClProfesion()!=null){
-                            CLProfesion clProfesion = clProfesionInterfaceLocal.findById(clPersonasNaturales.getClProfesion().getCodigoProfesion());
-                            if("N".equals(clProfesion.getEstadoRegistro())){
-                                resultado="INCOMPLETO";
-                                lstFaltantes.add("No posee Profesión válida");
-                            }
-                        }else{
-                            resultado="INCOMPLETO";
-                            lstFaltantes.add("No posee Profesión");
+                    } else {
+                        resultado = "INCOMPLETO";
+                        lstFaltantes.add("Teléfono no posee empresa operadora");
+                        break;
+                    }
+
+                }
+            }
+
+            List<CLDireccionPersonas> lstDireccionDomiciliaria = clDireccionPersonasInterfaceLocal.findDireccionesPorPersona(clPersonas.getCodigoPersona(),
+                                                                                                                             "01");
+            if (lstDireccionDomiciliaria.size() == 0) {
+                resultado = "INCOMPLETO";
+                lstFaltantes.add("No posee dirección domiciliaria");
+            } else {
+                //prios 20.09.11
+                for (CLDireccionPersonas objDir : lstDireccionDomiciliaria) {
+                    if (objDir.getClTipoVivienda() != null) {
+                        if ("N".equals(objDir.getClTipoVivienda().getEstadoRegistro())) {
+                            resultado = "INCOMPLETO";
+                            lstFaltantes.add("Dirección no posee tipo de vivienda válida");
+                            break;
                         }
-                        
+                    } else {
+                        resultado = "INCOMPLETO";
+                        lstFaltantes.add("Dirección no posee tipo de vivienda");
+                        break;
+                    }
+
+                }
+
+            }
+
+            if (clPersonas.getClTipoPersona().getCodigoTipoPersona().equals(Constante.CODIGO_TIPO_PERSONA_NATURAL)) {
+                CLPersonasNaturales clPersonasNaturales = clPersonasNaturalesInterfaceLocal.findById(clPersonas.getCodigoPersona());
+
+                if (_equiv(clPersonasNaturales.getRelacionLaboral(), "FO")) {
+                    List lstVinculoLaboralFormal = clCentroLaboralPersonasInterfaceLocal.findByCodigoPersonaEstado(clPersonas.getCodigoPersona(),
+                                                                                                                   "S");
+                    if (lstVinculoLaboralFormal.size() > 0) {
+                        List lstDireccionLaboral = clDireccionPersonasInterfaceLocal.findDireccionesPorPersona(clPersonas.getCodigoPersona(),
+                                                                                                               "02");
+                        if (lstDireccionLaboral.size() == 0) {
+                            resultado = "INCOMPLETO";
+                            lstFaltantes.add("No posee dirección laboral");
+                        }
+                    } else {
+                        resultado = "INCOMPLETO";
+                        lstFaltantes.add("No posee vínculo laboral Formal");
+                    }
+                } else if (_equiv(clPersonasNaturales.getRelacionLaboral(), "IN")) {
+                    List lstVinculoLaboralInformal = clCentroLaboralInformalInterfaceLocal.findByCodigoPersonaEstado(clPersonas.getCodigoPersona(),
+                                                                                                                     "S");
+                    if ((lstVinculoLaboralInformal.size()) == 0) {
+                        resultado = "INCOMPLETO";
+                        lstFaltantes.add("No posee vínculo laboral Informal");
+                    }
+                }
+
+                //Instruccion
+                if (clPersonasNaturales.getClNivelEstudio() != null) {
+                    CLNivelEstudio clNivelEstudio = clNivelEstudioInterfaceLocal.findById(clPersonasNaturales.getClNivelEstudio().getCodigoNivelEstudio());
+                    if ("N".equals(clNivelEstudio.getEstado())) {
+                        resultado = "INCOMPLETO";
+                        lstFaltantes.add("No posee Instrucción válida");
+                    }
+                } else {
+                    resultado = "INCOMPLETO";
+                    lstFaltantes.add("No posee Instrucción");
+                }
+
+                //Profesion
+                if (clPersonasNaturales.getClProfesion() != null) {
+                    CLProfesion clProfesion = clProfesionInterfaceLocal.findById(clPersonasNaturales.getClProfesion().getCodigoProfesion());
+                    if ("N".equals(clProfesion.getEstadoRegistro())) {
+                        resultado = "INCOMPLETO";
+                        lstFaltantes.add("No posee Profesión válida");
+                    }
+                } else {
+                    resultado = "INCOMPLETO";
+                    lstFaltantes.add("No posee Profesión");
+                }
+
+                //gliceta 11.01.2011: Modificacion al Registro de CIIU
+                //Giro de Negocio
+                if (clPersonas.getClGiroNegocio() != null) {
+                    CLGiroNegocio clGiroNegocio = clGiroNegocioInterfaceLocal.findById(clPersonas.getClGiroNegocio().getCodigoGiroNegocio());
+                    if ("N".equals(clGiroNegocio.getEstadoRegistro())) {
+                        resultado = "INCOMPLETO";
                         //gliceta 11.01.2011: Modificacion al Registro de CIIU
-                        //Giro de Negocio
-                        if(clPersonas.getClGiroNegocio()!=null){
-                            CLGiroNegocio clGiroNegocio = clGiroNegocioInterfaceLocal.findById(clPersonas.getClGiroNegocio().getCodigoGiroNegocio());
-                            if("N".equals(clGiroNegocio.getEstadoRegistro())){
-                                resultado="INCOMPLETO";
-                                //gliceta 11.01.2011: Modificacion al Registro de CIIU
-                                lstFaltantes.add("No posee Giro de Negocio válido");
-                            } else {//gliceta 11.01.2011: Modificacion al Registro de CIIU
-                                //CIIU
-                                if(clPersonas.getClActividadEconomica()!=null){
-                                    CLActividadEconomica clActividadEconomica =clActividadEconomicaInterfaceLocal.findById(clPersonas.getClActividadEconomica().getCodigoActividadEconomica());
-                                    if("N".equals(clActividadEconomica.getEstado())){
-                                        resultado="INCOMPLETO";
-                                        lstFaltantes.add("No posee CIIU válido");
-                                    }
-                                    
-                                }else{
-                                    resultado="INCOMPLETO";
-                                    lstFaltantes.add("No posee CIIU");
-                                }
-                            }
-                        }else{
-                            resultado="INCOMPLETO";
-                            //gliceta 11.01.2011: Modificacion al Registro de CIIU
-                            lstFaltantes.add("No posee Giro de Negocio");
-                        }
-                        
-                        if (validarEmail) {
-                            List<CLEmailsPersonas> lstClEmailsPersonas = clEmailsPersonasInterfaceLocal.findCorreoByCodigoPersona(clPersonas.getCodigoPersona(),
-                                                                                                                                  "%",
-                                                                                                                                  Constante.ESTADO_REGISTRO_VIGENTE);
-                            if (_isEmpty(lstClEmailsPersonas)) {
+                        lstFaltantes.add("No posee Giro de Negocio válido");
+                    } else {//gliceta 11.01.2011: Modificacion al Registro de CIIU
+                        //CIIU
+                        if (clPersonas.getClActividadEconomica() != null) {
+                            CLActividadEconomica clActividadEconomica = clActividadEconomicaInterfaceLocal.findById(clPersonas.getClActividadEconomica().getCodigoActividadEconomica());
+                            if ("N".equals(clActividadEconomica.getEstado())) {
                                 resultado = "INCOMPLETO";
-                                lstFaltantes.add("No posee emails");
+                                lstFaltantes.add("No posee CIIU válido");
                             }
-                        }
-                        
-                    }else if(Constante.CODIGO_TIPO_PERSONA_JURIDICA.equals(clPersonas.getClTipoPersona().getCodigoTipoPersona())){
-                        CLPersonasJuridicas clPersonasJuridicas = clPersonasJuridicasInterfaceLocal.findById(clPersonas.getCodigoPersona());
-                        
-                        if(_isEmpty(clPersonas.getClActividadEconomica())||!_equiv(clPersonas.getClActividadEconomica().getEstado(),Constante.ESTADO_REGISTRO_VIGENTE)){
-                            resultado=Constante.COMPLETITUD_DATOS_INCOMPLETO;
-                            lstFaltantes.add("No posee CIIU válido");
-                        }
-                        
-                        if(_isEmpty(clPersonasJuridicas.getFechaInscripcionRegistrosPublicos())){
-                            resultado=Constante.COMPLETITUD_DATOS_INCOMPLETO;
-                            lstFaltantes.add("No posee información de Registros Públicos");
-                        }
-                        
-                        if(_isEmpty(clPersonasJuridicas.getClTamanioEmpresarialPJ()) || !_equiv(clPersonasJuridicas.getClTamanioEmpresarialPJ().getEstadoRegistro(), Constante.ESTADO_REGISTRO_VIGENTE)){
-                            resultado=Constante.COMPLETITUD_DATOS_INCOMPLETO;
-                            lstFaltantes.add("No posee tamaño empresarial");
+
+                        } else {
+                            resultado = "INCOMPLETO";
+                            lstFaltantes.add("No posee CIIU");
                         }
                     }
-            
+                } else {
+                    resultado = "INCOMPLETO";
+                    //gliceta 11.01.2011: Modificacion al Registro de CIIU
+                    lstFaltantes.add("No posee Giro de Negocio");
                 }
-                
-                return resultado;
+
+                if (validarEmail) {
+                    List<CLEmailsPersonas> lstClEmailsPersonas = clEmailsPersonasInterfaceLocal.findCorreoByCodigoPersona(clPersonas.getCodigoPersona(),
+                                                                                                                          "%",
+                                                                                                                          Constante.ESTADO_REGISTRO_VIGENTE);
+                    if (_isEmpty(lstClEmailsPersonas)) {
+                        resultado = "INCOMPLETO";
+                        lstFaltantes.add("No posee emails");
+                    }
+                }
+
+            } else if (Constante.CODIGO_TIPO_PERSONA_JURIDICA.equals(clPersonas.getClTipoPersona().getCodigoTipoPersona())) {
+                CLPersonasJuridicas clPersonasJuridicas = clPersonasJuridicasInterfaceLocal.findById(clPersonas.getCodigoPersona());
+
+                if (_isEmpty(clPersonas.getClActividadEconomica()) || !_equiv(clPersonas.getClActividadEconomica().getEstado(),
+                                                                              Constante.ESTADO_REGISTRO_VIGENTE)) {
+                    resultado = Constante.COMPLETITUD_DATOS_INCOMPLETO;
+                    lstFaltantes.add("No posee CIIU válido");
+                }
+
+                if (_isEmpty(clPersonasJuridicas.getFechaInscripcionRegistrosPublicos())) {
+                    resultado = Constante.COMPLETITUD_DATOS_INCOMPLETO;
+                    lstFaltantes.add("No posee información de Registros Públicos");
+                }
+
+                if (_isEmpty(clPersonasJuridicas.getClTamanioEmpresarialPJ()) || !_equiv(clPersonasJuridicas.getClTamanioEmpresarialPJ().getEstadoRegistro(),
+                                                                                         Constante.ESTADO_REGISTRO_VIGENTE)) {
+                    resultado = Constante.COMPLETITUD_DATOS_INCOMPLETO;
+                    lstFaltantes.add("No posee tamaño empresarial");
+                }
+            }
+
+        }
+
+        return resultado;
     }
+
     //Fin [Req.16-022]
-    
-    public Map  obtenerEjecutivo(String codigoEmpresa,String codigoAgencia)throws Exception{
+
+    public Map obtenerEjecutivo(String codigoEmpresa, String codigoAgencia) throws Exception {
         Map<String, String> output = new HashMap<String, String>();
-        String codigoEjecutivo="",nombreEjecutivo="";
-        
-        try{
-            CBAgenciaId cbAgenciaId=new CBAgenciaId();
+        String codigoEjecutivo = "", nombreEjecutivo = "";
+
+        try {
+            CBAgenciaId cbAgenciaId = new CBAgenciaId();
             cbAgenciaId.setCodigoEmpresa(codigoEmpresa);
             cbAgenciaId.setCodigoAgencia(codigoAgencia);
-            
-            CBAgencia cbAgencia=cbAgenciaInterfaceLocal.findById(cbAgenciaId);
-            if(cbAgencia!=null){
-                if(cbAgencia.getCbRegionesAgencia()!=null){
-                    CBRegionesAgencia cbRegionesAgencia=cbRegionesAgenciaInterfaceLocal.findById(cbAgencia.getCbRegionesAgencia().getIdRegionAgencia());
-                    codigoEjecutivo=cbRegionesAgencia.getCbUsuario().getCodigoUsuario();
-                    nombreEjecutivo=cbRegionesAgencia.getCbUsuario().getNombreCompleto();
-                }else{
-                    codigoEjecutivo=cbAgencia.getCbUsuario().getCodigoUsuario();
-                    nombreEjecutivo=cbAgencia.getCbUsuario().getNombreCompleto();
+
+            CBAgencia cbAgencia = cbAgenciaInterfaceLocal.findById(cbAgenciaId);
+            if (cbAgencia != null) {
+                if (cbAgencia.getCbRegionesAgencia() != null) {
+                    CBRegionesAgencia cbRegionesAgencia = cbRegionesAgenciaInterfaceLocal.findById(cbAgencia.getCbRegionesAgencia().getIdRegionAgencia());
+                    codigoEjecutivo = cbRegionesAgencia.getCbUsuario().getCodigoUsuario();
+                    nombreEjecutivo = cbRegionesAgencia.getCbUsuario().getNombreCompleto();
+                } else {
+                    codigoEjecutivo = cbAgencia.getCbUsuario().getCodigoUsuario();
+                    nombreEjecutivo = cbAgencia.getCbUsuario().getNombreCompleto();
                 }
-            }           
-        }catch (Exception e) {
-            e.printStackTrace();            
-        } 
-        
-        output.put("strError",NO_ERROR);
+            }
+        } catch (Exception e) {
+            e.printStackTrace();
+        }
+
+        output.put("strError", NO_ERROR);
         output.put("codigoEjecutivo", codigoEjecutivo);
         output.put("nombreEjecutivo", nombreEjecutivo);
-        
+
         return output;
     }
-    
-    public Map obtenerSolicitudesXEstado(
-            String usuario,
-            String codigoEmpresa, 
-            String codigoAgencia, 
-            Date fechaSolicitudInicio, 
-            Date fechaSolicitudFin, 
-            String estadoSolicitud, 
-            String estadoResolucion, 
-            String posicion, 
-            String paginaIni,
-            Hashtable<String, String> hstTiposSubtiposCredito
-    ) throws Exception{
-        
+
+    public Map obtenerSolicitudesXEstado(String usuario,
+                                         String codigoEmpresa,
+                                         String codigoAgencia,
+                                         Date fechaSolicitudInicio,
+                                         Date fechaSolicitudFin,
+                                         String estadoSolicitud,
+                                         String estadoResolucion,
+                                         String posicion,
+                                         String paginaIni,
+                                         Hashtable<String, String> hstTiposSubtiposCredito) throws Exception {
+
         List<BeanObtenerSolicitud> lObtenerDatos = new ArrayList<BeanObtenerSolicitud>();
         Iterator it = null;
         Map map = new HashMap();
         Long nroReg = new Long(0);
         String codigoError = "";
-        String tmpCodigoAgencia="";
+        String tmpCodigoAgencia = "";
         boolean isAgenciaPrincipal;
         try {
-            Map mapOficina = crBNGeneralesFacadeInterfaceLocal.codigoOficinaPrincipal(codigoEmpresa, codigoAgencia, usuario);
-            codigoError = (String)mapOficina.get("strError");
-            tmpCodigoAgencia = mapOficina.get("codigoAgencia") == null?"":(String)mapOficina.get("codigoAgencia");
-            if (codigoError.equals(NO_ERROR)){
-                isAgenciaPrincipal=true;
-            }else{
-                isAgenciaPrincipal=false;
+            Map mapOficina = crBNGeneralesFacadeInterfaceLocal.codigoOficinaPrincipal(codigoEmpresa,
+                                                                                      codigoAgencia,
+                                                                                      usuario);
+            codigoError = (String) mapOficina.get("strError");
+            tmpCodigoAgencia = mapOficina.get("codigoAgencia") == null ? "" : (String) mapOficina.get("codigoAgencia");
+            if (codigoError.equals(NO_ERROR)) {
+                isAgenciaPrincipal = true;
+            } else {
+                isAgenciaPrincipal = false;
             }
-            
-            nroReg = crSolicitudCreditoInterfaceLocal.findCountSolicitudEstados(
-                    usuario, 
-                    codigoEmpresa, 
-                    codigoAgencia, 
-                    fechaSolicitudInicio, 
-                    fechaSolicitudFin, 
-                    estadoSolicitud, 
-                    estadoResolucion,
-                    isAgenciaPrincipal,
-                    hstTiposSubtiposCredito);
-            
-            it = ((List)crSolicitudCreditoInterfaceLocal.findBySolicitudEstados(
-                    usuario, 
-                    codigoEmpresa, 
-                    codigoAgencia, 
-                    fechaSolicitudInicio, 
-                    fechaSolicitudFin, 
-                    estadoSolicitud, 
-                    estadoResolucion, 
-                    posicion,
-                    isAgenciaPrincipal,
-                    hstTiposSubtiposCredito)).iterator();
-            
-            while(it.hasNext()){
+
+            nroReg = crSolicitudCreditoInterfaceLocal.findCountSolicitudEstados(usuario,
+                                                                                codigoEmpresa,
+                                                                                codigoAgencia,
+                                                                                fechaSolicitudInicio,
+                                                                                fechaSolicitudFin,
+                                                                                estadoSolicitud,
+                                                                                estadoResolucion,
+                                                                                isAgenciaPrincipal,
+                                                                                hstTiposSubtiposCredito);
+
+            it = ((List) crSolicitudCreditoInterfaceLocal.findBySolicitudEstados(usuario,
+                                                                                 codigoEmpresa,
+                                                                                 codigoAgencia,
+                                                                                 fechaSolicitudInicio,
+                                                                                 fechaSolicitudFin,
+                                                                                 estadoSolicitud,
+                                                                                 estadoResolucion,
+                                                                                 posicion,
+                                                                                 isAgenciaPrincipal,
+                                                                                 hstTiposSubtiposCredito)).iterator();
+
+            while (it.hasNext()) {
                 CRSolicitudCredito crSolicitudCredito;
                 crSolicitudCredito = (CRSolicitudCredito) it.next();
                 lObtenerDatos.add(setearBeanSolicitud(crSolicitudCredito));
             }
         } catch (Exception e) {
             e.printStackTrace();
-        } 
-        map.put("lObtenerDatos",lObtenerDatos);
-        map.put("nroReg",nroReg);
+        }
+        map.put("lObtenerDatos", lObtenerDatos);
+        map.put("nroReg", nroReg);
         return map;
     }
-    
-    
-    
-    public Map actualizarInspeccionDiferida(String numeroSolicitudCredito, String indEnvioInspecciones, BeanParametrosAuditoria beanParametrosAuditoria) throws Exception{
+
+    public Map actualizarInspeccionDiferida(String numeroSolicitudCredito,
+                                            String indEnvioInspecciones,
+                                            BeanParametrosAuditoria beanParametrosAuditoria) throws Exception {
         Map map = new HashMap();
-        String strCodError="";
-        String sql ="";
-        String sql1="";
+        String strCodError = "";
+        String sql = "";
+        String sql1 = "";
         try {
-            sql1 = "update crmsocr model set model.c_insdif = '" + indEnvioInspecciones + "' where model.c_numsol = '"+ numeroSolicitudCredito + "'"; 
-            entityManager.createNativeQuery(sql1).executeUpdate();          
-            strCodError="000";
+            sql1 = "update crmsocr model set model.c_insdif = '" + indEnvioInspecciones + "' where model.c_numsol = '" + numeroSolicitudCredito + "'";
+            entityManager.createNativeQuery(sql1).executeUpdate();
+            strCodError = "000";
         } catch (Exception e) {
-            strCodError="1";    
+            strCodError = "1";
             e.printStackTrace();
-        } 
+        }
         map.put("strCodError", strCodError);
         return map;
     }
@@ -5427,70 +5365,65 @@
         BigDecimal nroTotReg = new BigDecimal(0);
         Map output = new HashMap();
         String error = "";
-        try{
+        try {
             //OBTENER CLIENTE DE CREDITO
             CRSolicitudCredito crSolicitudCredito = crSolicitudCreditoInterfaceLocal.findById(numeroSolicitud);
             //OBTENER LAS SOLICITUDES DE CREDITO DE PERSONA (CRMSOCR)
             List lstCRSolicitudCredito = crSolicitudCreditoInterfaceLocal.findByCodigoPersona(crSolicitudCredito.getClPersonasByCodigoPersona().getCodigoPersona());
-                        
+
             //VALIDA EL HISTORIAL NEGATIVO DE LAS INSPECCIONES POR CADA SOLICITUD DE CREDITO
-            for(int i=0; i<lstCRSolicitudCredito.size(); i++){
-                CRSolicitudCredito crSolicitudCreditoTMP = (CRSolicitudCredito) lstCRSolicitudCredito.get(i);               
-                sqlValidacion = " " +
-                  " SELECT COUNT(*) " +
-                  " FROM CRDSOIN T_SOIN, CRDVIIN T_VIIN, CRTREVI T_REVI " +
-                  " WHERE T_VIIN.C_NSOLIN = T_SOIN.C_NSOLIN " +
-                    " AND T_VIIN.C_RESVIS = T_REVI.C_CODRES " +
-                    " AND T_REVI.C_RESNEG = 'S' " +
-                    " AND T_SOIN.C_ESTSOL = 'C' " +
-                    " AND T_VIIN.C_ESTVIS != 'N' " +
-                    " AND T_SOIN.C_NUMSOL = '"+ crSolicitudCreditoTMP.getNumeroSolicitud().trim()+"' ";
-                
-                nroTotReg = (BigDecimal)entityManager.createNativeQuery(sqlValidacion).getSingleResult(); 
-                
-                if(Integer.parseInt(nroTotReg.toString())>0){
+            for (int i = 0; i < lstCRSolicitudCredito.size(); i++) {
+                CRSolicitudCredito crSolicitudCreditoTMP = (CRSolicitudCredito) lstCRSolicitudCredito.get(i);
+                sqlValidacion = " " + " SELECT COUNT(*) " + " FROM CRDSOIN T_SOIN, CRDVIIN T_VIIN, CRTREVI T_REVI " + " WHERE T_VIIN.C_NSOLIN = T_SOIN.C_NSOLIN " + " AND T_VIIN.C_RESVIS = T_REVI.C_CODRES " + " AND T_REVI.C_RESNEG = 'S' " + " AND T_SOIN.C_ESTSOL = 'C' " + " AND T_VIIN.C_ESTVIS != 'N' " + " AND T_SOIN.C_NUMSOL = '" + crSolicitudCreditoTMP.getNumeroSolicitud().trim() + "' ";
+
+                nroTotReg = (BigDecimal) entityManager.createNativeQuery(sqlValidacion).getSingleResult();
+
+                if (Integer.parseInt(nroTotReg.toString()) > 0) {
                     historialNegativo = "si";
                     break;
-                }                               
-            }   
+                }
+            }
             error = "000";
             output.put("historialNegativo", historialNegativo);
             output.put("error", error);
-        }catch (Exception e) {
+        } catch (Exception e) {
             e.printStackTrace();
             error = "1";
         }
-        
+
         return output;
     }
-    
-//  funciones para el modulo de EVALUACION NO FINANCIERA
+
+    //  funciones para el modulo de EVALUACION NO FINANCIERA
     @SuppressWarnings("unchecked")
-    public Map findByCodigoPersonaAndCodigoEmpresaEstadoGNV(String strCodPersona, String strCodEmp) throws Exception{
+    public Map findByCodigoPersonaAndCodigoEmpresaEstadoGNV(String strCodPersona, String strCodEmp) throws Exception {
         Map map = new HashMap();
         List lstSolicitud = null;
         try {
-            lstSolicitud = crSolicitudCreditoInterfaceLocal.findByCodigoPersonaAndCodigoEmpresaEstadoGNV(strCodPersona,strCodEmp);
+            lstSolicitud = crSolicitudCreditoInterfaceLocal.findByCodigoPersonaAndCodigoEmpresaEstadoGNV(strCodPersona,
+                                                                                                         strCodEmp);
             map.put("lstSolicitud", lstSolicitud);
-        }catch (Exception e) {
+        } catch (Exception e) {
             e.printStackTrace();
             throw e;
-        } 
+        }
         map.put("strCodError", "000");
         return map;
     }
-    
+
     @SuppressWarnings("unchecked")
-    public Map findByCodigoPersonaAndCodigoEmpresaEstado(String strCodPersona, String strCodEmp, String estados) throws Exception{
+    public Map findByCodigoPersonaAndCodigoEmpresaEstado(String strCodPersona, String strCodEmp, String estados) throws Exception {
         Map map = new HashMap();
         List lstSolicitud = null;
         try {
-            lstSolicitud = crSolicitudCreditoInterfaceLocal.findByCodigoPersonaAndCodigoEmpresaEstado(strCodPersona,strCodEmp, estados);
+            lstSolicitud = crSolicitudCreditoInterfaceLocal.findByCodigoPersonaAndCodigoEmpresaEstado(strCodPersona,
+                                                                                                      strCodEmp,
+                                                                                                      estados);
             map.put("lstSolicitud", lstSolicitud);
-        }catch (Exception e) {
+        } catch (Exception e) {
             e.printStackTrace();
             throw e;
-        } 
+        }
         map.put("strCodError", "000");
         return map;
     }
@@ -5613,9 +5546,9 @@
         map.put("strCodError", "000");
         return map;
     }
-    
+
     /**
-     * Se actualizan los creditos monocuota: la forma de cronograma (CRO) y el producto 
+     * Se actualizan los creditos monocuota: la forma de cronograma (CRO) y el producto
      * 
      * @author erios
      * @since 12.07.2010
@@ -5625,14 +5558,17 @@
      * @param usuarioModificacion
      * @param terminalModificacion
      * @param ipModificacion
-     * @throws Exception 
+     * @throws Exception
      */
-    public void modificaCreditoMonocuota(String codigoEmpresa, String strNumeroCredito, String usuarioModificacion, 
-            String terminalModificacion, String ipModificacion) throws Exception{
-        
+    public void modificaCreditoMonocuota(String codigoEmpresa,
+                                         String strNumeroCredito,
+                                         String usuarioModificacion,
+                                         String terminalModificacion,
+                                         String ipModificacion) throws Exception {
+
         CRCuentaCredito crCuentaCredito = crCuentaCreditoInterfaceLocal.findById(strNumeroCredito);
         String strNumeroSolicitud = crCuentaCredito.getCrSolicitudCredito().getNumeroSolicitud();
-        
+
         //1) Modificamos la forma de control de cronograma
         CRSolCredVehicular crSolCredVehicular = crSolCredVehicularInterfaceLocal.findById(strNumeroSolicitud);
         crSolCredVehicular.setFormaControlDeudaCronograma("CRO");
@@ -5641,26 +5577,30 @@
         crSolCredVehicular.setIpModificacion(ipModificacion);
         crSolCredVehicular.setUsuarioModificacion(usuarioModificacion);
         crSolCredVehicularInterfaceLocal.update(crSolCredVehicular);
-        
+
         //2) Se actualiza el producto, segun los parametros de constantes
         String strIndicadorCambioProducto;
         Map temporal;
-        
-        temporal = geGeneralesFacadeInterfaceLocal.valorConstante(codigoEmpresa, "CR_REF_MON_CMBPROD", usuarioModificacion);
+
+        temporal = geGeneralesFacadeInterfaceLocal.valorConstante(codigoEmpresa,
+                                                                  "CR_REF_MON_CMBPROD",
+                                                                  usuarioModificacion);
         strIndicadorCambioProducto = temporal.get("strConstante").toString();
-        
-        if(strIndicadorCambioProducto.equals("S")){
-        
+
+        if (strIndicadorCambioProducto.equals("S")) {
+
             String strCodigoProducto;
-            temporal = geGeneralesFacadeInterfaceLocal.valorConstante(codigoEmpresa, "CR_REF_MON_PROD_DEF", usuarioModificacion);
+            temporal = geGeneralesFacadeInterfaceLocal.valorConstante(codigoEmpresa,
+                                                                      "CR_REF_MON_PROD_DEF",
+                                                                      usuarioModificacion);
             strCodigoProducto = temporal.get("strConstante").toString();
-            
-            if(!strCodigoProducto.equals("")){
-                
+
+            if (!strCodigoProducto.equals("")) {
+
                 CRProducto crProducto = new CRProducto();
                 crProducto.setCodigoProducto(strCodigoProducto);
                 crCuentaCredito.setCrProducto(crProducto);
-                
+
                 crCuentaCredito.setFechaModificacion(new Date());
                 crCuentaCredito.setTerminalModificacion(terminalModificacion);
                 crCuentaCredito.setIpModificacion(ipModificacion);
@@ -5668,154 +5608,147 @@
                 crCuentaCreditoInterfaceLocal.update(crCuentaCredito);
             }
         }
-        
+
     }
 
-    
-    
-    public int countFindByCodigoPersonaCartaFianzaDesembolso(String codigoEmpresa, String codigoAgencia, String codigoPersona) throws Exception{
+    public int countFindByCodigoPersonaCartaFianzaDesembolso(String codigoEmpresa,
+                                                             String codigoAgencia,
+                                                             String codigoPersona) throws Exception {
         Long cantidadRegistros = new Long(0);
         try {
-            cantidadRegistros = crSolicitudCreditoInterfaceLocal.findByPersonaSolAprobCFCount(codigoEmpresa, codigoAgencia, codigoPersona);
+            cantidadRegistros = crSolicitudCreditoInterfaceLocal.findByPersonaSolAprobCFCount(codigoEmpresa,
+                                                                                              codigoAgencia,
+                                                                                              codigoPersona);
         } catch (Exception e) {
             e.printStackTrace();
-        } 
+        }
         return cantidadRegistros.intValue();
     }
-    
-    public List<BeanObtenerSolicitud> obtenerSolicitudesModalidadEmisionPagare(String codigoEmpresa, String codigoAgencia, String codigoPersona, String posicion, String nroRegistros)
-    throws Exception{
+
+    public List<BeanObtenerSolicitud> obtenerSolicitudesModalidadEmisionPagare(String codigoEmpresa,
+                                                                               String codigoAgencia,
+                                                                               String codigoPersona,
+                                                                               String posicion,
+                                                                               String nroRegistros) throws Exception {
         List<BeanObtenerSolicitud> lObtenerDatos = new ArrayList<BeanObtenerSolicitud>();
         Iterator it = null;
-        
+
         try {
-            it = crSolicitudCreditoInterfaceLocal.findByPersonaSolAprobCF(codigoEmpresa,codigoAgencia,codigoPersona, posicion, nroRegistros).iterator();
-            while(it.hasNext()){
+            it = crSolicitudCreditoInterfaceLocal.findByPersonaSolAprobCF(codigoEmpresa,
+                                                                          codigoAgencia,
+                                                                          codigoPersona,
+                                                                          posicion,
+                                                                          nroRegistros).iterator();
+            while (it.hasNext()) {
                 CRSolicitudCredito crSolicitudCredito;
                 crSolicitudCredito = (CRSolicitudCredito) it.next();
                 lObtenerDatos.add(setearBeanSolicitud(crSolicitudCredito));
             }
         } catch (Exception e) {
             e.printStackTrace();
-        } 
+        }
         return lObtenerDatos;
     }
-    
-    public int obtenerSolicitudesPagoComisionCartaFianzaCount(String codigoEmpresa, String codigoAgencia, String codigoPersona) throws Exception{
+
+    public int obtenerSolicitudesPagoComisionCartaFianzaCount(String codigoEmpresa,
+                                                              String codigoAgencia,
+                                                              String codigoPersona) throws Exception {
         Long cantidadRegistros = new Long(0);
         try {
-            cantidadRegistros = crSolicitudCreditoInterfaceLocal.findByPersonaSolPagarCFCount(codigoEmpresa, codigoAgencia, codigoPersona);
+            cantidadRegistros = crSolicitudCreditoInterfaceLocal.findByPersonaSolPagarCFCount(codigoEmpresa,
+                                                                                              codigoAgencia,
+                                                                                              codigoPersona);
         } catch (Exception e) {
             e.printStackTrace();
-        } 
+        }
         return cantidadRegistros.intValue();
     }
-    
-    public List<BeanObtenerSolicitud> obtenerSolicitudesPagoComisionCartaFianza(String codigoEmpresa, String codigoAgencia, String codigoPersona, String posicion, String nroRegistros)
-    throws Exception{
+
+    public List<BeanObtenerSolicitud> obtenerSolicitudesPagoComisionCartaFianza(String codigoEmpresa,
+                                                                                String codigoAgencia,
+                                                                                String codigoPersona,
+                                                                                String posicion,
+                                                                                String nroRegistros) throws Exception {
         List<BeanObtenerSolicitud> lObtenerDatos = new ArrayList<BeanObtenerSolicitud>();
         Iterator it = null;
-    
+
         try {
-            it = crSolicitudCreditoInterfaceLocal.findByPersonaSolPagarCF(codigoEmpresa,codigoAgencia,codigoPersona, posicion, nroRegistros).iterator();
-            while(it.hasNext()){
+            it = crSolicitudCreditoInterfaceLocal.findByPersonaSolPagarCF(codigoEmpresa,
+                                                                          codigoAgencia,
+                                                                          codigoPersona,
+                                                                          posicion,
+                                                                          nroRegistros).iterator();
+            while (it.hasNext()) {
                 CRSolicitudCredito crSolicitudCredito;
                 crSolicitudCredito = (CRSolicitudCredito) it.next();
                 lObtenerDatos.add(setearBeanSolicitud(crSolicitudCredito));
             }
         } catch (Exception e) {
             e.printStackTrace();
-        } 
+        }
         return lObtenerDatos;
     }
-    
-    public Long findByPersonaSolAprobCFCount(String codigoEmpresa, String codigoAgencia, String codigo){
-        try{
-        return (Long)entityManager.createQuery("SELECT count(a.numeroSolicitud) FROM CRSolicitudCredito a,CREstadoSolicitud b " +
-                  "WHERE a.clPersonasByCodigoPersona.codigoPersona=:codigoPersona AND " +
-                    "a.crEstadoSolicitud=b AND " +
-                    "a.tipoModalidadCredito='PRF' AND " +
-                    "a.tipoSolicitud='SC'and " +
-                    "a.codigoAgencia = :codigoAgencia and " +
-                    "a.codigoEmpresa = :codigoEmpresa and " +
-                    "b.codigoEstado in ('AR','DE')")
-                                        .setParameter("codigoPersona",codigo)
-                                        .setParameter("codigoAgencia", codigoAgencia)
-                                        .setParameter("codigoEmpresa", codigoEmpresa)
-                                        .getSingleResult();
-        }catch(RuntimeException re){
+
+    public Long findByPersonaSolAprobCFCount(String codigoEmpresa, String codigoAgencia, String codigo) {
+        try {
+            return (Long) entityManager.createQuery("SELECT count(a.numeroSolicitud) FROM CRSolicitudCredito a,CREstadoSolicitud b " + "WHERE a.clPersonasByCodigoPersona.codigoPersona=:codigoPersona AND " + "a.crEstadoSolicitud=b AND " + "a.tipoModalidadCredito='PRF' AND " + "a.tipoSolicitud='SC'and " + "a.codigoAgencia = :codigoAgencia and " + "a.codigoEmpresa = :codigoEmpresa and " + "b.codigoEstado in ('AR','DE')").setParameter("codigoPersona",
+                                                                                                                                                                                                                                                                                                                                                                                                                                                   codigo).setParameter("codigoAgencia",
+                                                                                                                                                                                                                                                                                                                                                                                                                                                                        codigoAgencia).setParameter("codigoEmpresa",
+                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                    codigoEmpresa).getSingleResult();
+        } catch (RuntimeException re) {
             throw re;
         }
     }
-    public List findByPersonaSolAprobCF(String codigoEmpresa, String codigoAgencia,String codigo,String posicionIni,String posicionFin){
-        try{        
-            int posIni = (Integer.parseInt(posicionIni)-1)*50;
-            List lstSolicitudCredito=entityManager.createQuery("SELECT a FROM CRSolicitudCredito a,CREstadoSolicitud b " +
-                      "WHERE a.clPersonasByCodigoPersona.codigoPersona=:codigoPersona AND " +
-                        "a.crEstadoSolicitud=b AND " +
-                        "a.tipoModalidadCredito='PRF' AND " +
-                        "a.tipoSolicitud='SC'and " +
-                        "a.codigoAgencia = :codigoAgencia and " +
-                        "a.codigoEmpresa = :codigoEmpresa and " +
-                        "b.codigoEstado in ('AR','DE') ORDER BY a.numeroSolicitud DESC")
-                                .setParameter("codigoPersona",codigo)
-                                .setParameter("codigoAgencia", codigoAgencia)
-                                .setParameter("codigoEmpresa", codigoEmpresa)
-                                .setFirstResult(posIni)
-                                .setMaxResults(50)
-                                .getResultList();
+
+    public List findByPersonaSolAprobCF(String codigoEmpresa,
+                                        String codigoAgencia,
+                                        String codigo,
+                                        String posicionIni,
+                                        String posicionFin) {
+        try {
+            int posIni = (Integer.parseInt(posicionIni) - 1) * 50;
+            List lstSolicitudCredito = entityManager.createQuery("SELECT a FROM CRSolicitudCredito a,CREstadoSolicitud b " + "WHERE a.clPersonasByCodigoPersona.codigoPersona=:codigoPersona AND " + "a.crEstadoSolicitud=b AND " + "a.tipoModalidadCredito='PRF' AND " + "a.tipoSolicitud='SC'and " + "a.codigoAgencia = :codigoAgencia and " + "a.codigoEmpresa = :codigoEmpresa and " + "b.codigoEstado in ('AR','DE') ORDER BY a.numeroSolicitud DESC").setParameter("codigoPersona",
+                                                                                                                                                                                                                                                                                                                                                                                                                                                                         codigo).setParameter("codigoAgencia",
+                                                                                                                                                                                                                                                                                                                                                                                                                                                                                              codigoAgencia).setParameter("codigoEmpresa",
codigoEmpresa).setFirstResult(posIni).setMaxResults(50).getResultList();
             return lstSolicitudCredito;
-        }catch(RuntimeException re){
+        } catch (RuntimeException re) {
             throw re;
         }
     }
-    
-    public Long findByPersonaSolPagarCFCount(String codigoEmpresa, String codigoAgencia, String codigo){
-        try{
-        return (Long)entityManager.createQuery("SELECT count(a.numeroSolicitud) FROM CRSolicitudCredito a,CREstadoSolicitud b " +
-                  "WHERE a.clPersonasByCodigoPersona.codigoPersona=:codigoPersona AND " +
-                    "a.crEstadoSolicitud=b AND " +
-                    "a.tipoModalidadCredito='PRF' AND " +
-                    "a.tipoSolicitud='SC'and " +
-                    "a.codigoAgencia = :codigoAgencia and " +
-                    "a.codigoEmpresa = :codigoEmpresa and " +
-                    "b.codigoEstado in ('DE')")
-                                        .setParameter("codigoPersona",codigo)
-                                        .setParameter("codigoAgencia", codigoAgencia)
-                                        .setParameter("codigoEmpresa", codigoEmpresa)
-                                        .getSingleResult();
-        }catch(RuntimeException re){
+
+    public Long findByPersonaSolPagarCFCount(String codigoEmpresa, String codigoAgencia, String codigo) {
+        try {
+            return (Long) entityManager.createQuery("SELECT count(a.numeroSolicitud) FROM CRSolicitudCredito a,CREstadoSolicitud b " + "WHERE a.clPersonasByCodigoPersona.codigoPersona=:codigoPersona AND " + "a.crEstadoSolicitud=b AND " + "a.tipoModalidadCredito='PRF' AND " + "a.tipoSolicitud='SC'and " + "a.codigoAgencia = :codigoAgencia and " + "a.codigoEmpresa = :codigoEmpresa and " + "b.codigoEstado in ('DE')").setParameter("codigoPersona",
+                                                                                                                                                                                                                                                                                                                                                                                                                                              codigo).setParameter("codigoAgencia",
+                                                                                                                                                                                                                                                                                                                                                                                                                                                                   codigoAgencia).setParameter("codigoEmpresa",
+                                                                                                                                                                                                                                                                                                                                                                                                                                                                                               codigoEmpresa).getSingleResult();
+        } catch (RuntimeException re) {
             throw re;
         }
     }
-    public List findByPersonaSolPagarCF(String codigoEmpresa, String codigoAgencia,String codigo,String posicionIni,String posicionFin){
-        try{        
-            int posIni = (Integer.parseInt(posicionIni)-1)*50;
-            List lstSolicitudCredito=entityManager.createQuery("SELECT count(a.numeroSolicitud) FROM CRSolicitudCredito a,CREstadoSolicitud b " +
-                      "WHERE a.clPersonasByCodigoPersona.codigoPersona=:codigoPersona AND " +
-                        "a.crEstadoSolicitud=b AND " +
-                        "a.tipoModalidadCredito='PRF' AND " +
-                        "a.tipoSolicitud='SC'and " +
-                        "a.codigoAgencia = :codigoAgencia and " +
-                        "a.codigoEmpresa = :codigoEmpresa and " +
-                        "b.codigoEstado in ('DE')")
-                                .setParameter("codigoPersona",codigo)
-                                .setParameter("codigoAgencia", codigoAgencia)
-                                .setParameter("codigoEmpresa", codigoEmpresa)
-                                .setFirstResult(posIni)
-                                .setMaxResults(50)
-                                .getResultList();
+
+    public List findByPersonaSolPagarCF(String codigoEmpresa,
+                                        String codigoAgencia,
+                                        String codigo,
+                                        String posicionIni,
+                                        String posicionFin) {
+        try {
+            int posIni = (Integer.parseInt(posicionIni) - 1) * 50;
+            List lstSolicitudCredito = entityManager.createQuery("SELECT count(a.numeroSolicitud) FROM CRSolicitudCredito a,CREstadoSolicitud b " + "WHERE a.clPersonasByCodigoPersona.codigoPersona=:codigoPersona AND " + "a.crEstadoSolicitud=b AND " + "a.tipoModalidadCredito='PRF' AND " + "a.tipoSolicitud='SC'and " + "a.codigoAgencia = :codigoAgencia and " + "a.codigoEmpresa = :codigoEmpresa and " + "b.codigoEstado in ('DE')").setParameter("codigoPersona",
+                                                                                                                                                                                                                                                                                                                                                                                                                                                           codigo).setParameter("codigoAgencia",
+                                                                                                                                                                                                                                                                                                                                                                                                                                                                                codigoAgencia).setParameter("codigoEmpresa",
+                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                            codigoEmpresa).setFirstResult(posIni).setMaxResults(50).getResultList();
             return lstSolicitudCredito;
-        }catch(RuntimeException re){
+        } catch (RuntimeException re) {
             throw re;
         }
     }
-    
-    
-    /** 
+
+    /**
      * Seguimiento de Riesgos: Obtencion de Supervisor Comercial de Concesion
      * 
-     * @author gliceta 
+     * @author gliceta
      * @since 28.09.2010
      * @param codAgencia
      * @return
@@ -5827,72 +5760,70 @@
         List lstSupRespConcesionFinal = new ArrayList();
         try {
             lstSupRespConcesion = crSolicitudCreditoInterfaceLocal.obtenerSupRespConcesion(codAgencia);
-            
+
             Iterator itr = lstSupRespConcesion.iterator();
-            while (itr.hasNext()) { 
-                Object[] fila = (Object[])itr.next();
-                BeanCRSupRespConcesion beanCRSupRespConcesion = new BeanCRSupRespConcesion(); 
-                beanCRSupRespConcesion.setCodUsuario((String)fila[0]);
-                beanCRSupRespConcesion.setNomUsuario((String)fila[1]);
+            while (itr.hasNext()) {
+                Object[] fila = (Object[]) itr.next();
+                BeanCRSupRespConcesion beanCRSupRespConcesion = new BeanCRSupRespConcesion();
+                beanCRSupRespConcesion.setCodUsuario((String) fila[0]);
+                beanCRSupRespConcesion.setNomUsuario((String) fila[1]);
                 lstSupRespConcesionFinal.add(beanCRSupRespConcesion);
             }
         } catch (Exception e) {
             e.printStackTrace();
             throw e;
-        } 
-        
+        }
+
         return lstSupRespConcesionFinal;
     }
 
     // [Ticket 6522] esalazar 15.08.2013: Validación en la asociación de aval a operación de crédito
-    public Map<String, String> validarTitularGarantia(String numeroSolicitud, 
-                                                      String codigoGarantia, 
-                                                      String usuario){
-        
+    public Map<String, String> validarTitularGarantia(String numeroSolicitud, String codigoGarantia, String usuario) {
+
         String modulo = "CRSolicitudCreditosFacade.validarTitularGarantia";
-        
+
         Map<String, String> mapRespuesta = new HashMap<String, String>();
-      
+
         try {
-          mapRespuesta.put("strRespuesta", "0");
+            mapRespuesta.put("strRespuesta", "0");
 
-          CRSolicitudCredito crSolicitudCredito = crSolicitudCreditoInterfaceLocal.findById(numeroSolicitud);        
-          if (crSolicitudCredito == null) {
-              throw new DelfinException("415");
-          }
-        
-          GAGarantia gaGarantia = gaGarantiaInterfaceLocal.findById(codigoGarantia);
-          if (gaGarantia == null) {
-              throw new DelfinException("762");
-          }
+            CRSolicitudCredito crSolicitudCredito = crSolicitudCreditoInterfaceLocal.findById(numeroSolicitud);
+            if (crSolicitudCredito == null) {
+                throw new DelfinException("415");
+            }
 
-          GASubTipoGarantia gaSubTipoGarantia = gaGarantia.getGaSubTipoGarantia();        
-          
-          if(EST_GENERAL_REG_S.equals(gaSubTipoGarantia.getIndSubTipoGarantiaEsAval())){
-              
-              CLPersonas clPersonasCredito = crSolicitudCredito.getClPersonasByCodigoPersona(); 
-              List<GATitularGarantia> listGaTitularGarantia = gaGarantia.getLstGATitularGarantia();
-    
-              for (GATitularGarantia gaTitularGarantia : listGaTitularGarantia) {
-                  CLPersonas clPersonasGarantia = gaTitularGarantia.getClPersonas();
-                  if (clPersonasCredito.getCodigoPersona().equals(clPersonasGarantia.getCodigoPersona())) {
-                      mapRespuesta.put("strRespuesta", "1");
-                      break;
-                  }
-              }
-          }
+            GAGarantia gaGarantia = gaGarantiaInterfaceLocal.findById(codigoGarantia);
+            if (gaGarantia == null) {
+                throw new DelfinException("762");
+            }
 
-          mapRespuesta.put("strError", NO_ERROR);
+            GASubTipoGarantia gaSubTipoGarantia = gaGarantia.getGaSubTipoGarantia();
+
+            if (EST_GENERAL_REG_S.equals(gaSubTipoGarantia.getIndSubTipoGarantiaEsAval())) {
+
+                CLPersonas clPersonasCredito = crSolicitudCredito.getClPersonasByCodigoPersona();
+                List<GATitularGarantia> listGaTitularGarantia = gaGarantia.getLstGATitularGarantia();
+
+                for (GATitularGarantia gaTitularGarantia : listGaTitularGarantia) {
+                    CLPersonas clPersonasGarantia = gaTitularGarantia.getClPersonas();
+                    if (clPersonasCredito.getCodigoPersona().equals(clPersonasGarantia.getCodigoPersona())) {
+                        mapRespuesta.put("strRespuesta", "1");
+                        break;
+                    }
+                }
+            }
+
+            mapRespuesta.put("strError", NO_ERROR);
         } catch (final Exception e) {
-          if(e instanceof DelfinException){
-              CBCatalogoErrores cbCatalogoErrores   = cbCatalogoErroresInterfaceLocal.findById(((DelfinException) e).getErrorCode());
-              mapRespuesta.put("strRespuesta", cbCatalogoErrores.getDescripcion());
-              mapRespuesta.put("strError", cbCatalogoErrores.getCodigoError());
-          } else {
-              cbControlErroresFacadeInterfaceLocal.crearLogErrores(usuario, modulo, e.getMessage());
-              mapRespuesta.put("strError", "1");
-              e.printStackTrace();
-          }
+            if (e instanceof DelfinException) {
+                CBCatalogoErrores cbCatalogoErrores = cbCatalogoErroresInterfaceLocal.findById(((DelfinException) e).getErrorCode());
+                mapRespuesta.put("strRespuesta", cbCatalogoErrores.getDescripcion());
+                mapRespuesta.put("strError", cbCatalogoErrores.getCodigoError());
+            } else {
+                cbControlErroresFacadeInterfaceLocal.crearLogErrores(usuario, modulo, e.getMessage());
+                mapRespuesta.put("strError", "1");
+                e.printStackTrace();
+            }
         }
         return mapRespuesta;
     }
@@ -5902,7 +5833,7 @@
                                                                                      String numeroCredito,
                                                                                      Date fechaProceso,
                                                                                      String estadoSolicitud) throws Exception {
-        
+
         List<CRSolicitudCambioCondiciones> ListCRSolicitudCambioCondiciones = new ArrayList<CRSolicitudCambioCondiciones>();
         ListCRSolicitudCambioCondiciones = crSolicitudCambioCondicionesInterfaceLocal.obtenerSolicitudbyPersonaCreditoEstado(codigoPersona,
                                                                                                                              numeroCredito,
@@ -5911,218 +5842,190 @@
         return ListCRSolicitudCambioCondiciones;
 
     }
-//fin [Req.S14-034] jjurado 13.10.2014
 
-
+    //fin [Req.S14-034] jjurado 13.10.2014
 
     //Req. S14-088 fbramirez 01.08.2014
-   public Integer countObtenerProductosCreditoGR(Object codigoEmpresa,
-                                                 Object codigoProducto,
-                                                 String strCriterio,
-                                                 Object fechaProceso) throws Exception {
-      // TODO Auto-generated method stub
-      int datos = 0;
-      try {
-         datos = ((List)(obtenerProductosCreditoGR(codigoEmpresa, codigoProducto, strCriterio, "", "",fechaProceso))).size();
-      } catch (Exception e) {
-         e.printStackTrace();
+    public Integer countObtenerProductosCreditoGR(Object codigoEmpresa,
+                                                  Object codigoProducto,
+                                                  String strCriterio,
+                                                  Object fechaProceso) throws Exception {
+        // TODO Auto-generated method stub
+        int datos = 0;
+        try {
+            datos = ((List) (obtenerProductosCreditoGR(codigoEmpresa, codigoProducto, strCriterio, "", "", fechaProceso))).size();
+        } catch (Exception e) {
+            e.printStackTrace();
         }
-      return datos;
-   }
+        return datos;
+    }
 
-   public List<Map> obtenerProductosCreditoGR(Object codigoEmpresa,
-                                              Object codigoProducto,
-                                              String strCriterio,
-                                              Object posicion,
-                                              Object nroRegistros,
-                                              Object fechaProceso) {
-      List<Map> lObtenerDatos = new ArrayList<Map>();
-      String codigoAgencia = null;
-      
-      try {
+    public List<Map> obtenerProductosCreditoGR(Object codigoEmpresa,
+                                               Object codigoProducto,
+                                               String strCriterio,
+                                               Object posicion,
+                                               Object nroRegistros,
+                                               Object fechaProceso) {
+        List<Map> lObtenerDatos = new ArrayList<Map>();
+        String codigoAgencia = null;
 
-         int posIni = 0;
-         boolean complete=true;
-         if (!posicion.toString().equals(""))
-            posIni = (Integer.parseInt(posicion.toString())-1)*(Integer.parseInt(nroRegistros.toString()));
+        try {
 
-         String queryString = "select" +
-         "       a.c_codpro codigoProducto, " +
-         "       a.c_descri descripcionProducto, " +
-         "       a.c_ticale tipoCalendario, " +
-         "       d.c_descri descripcionTipoCredito, " +
-         "       c.c_descri descripcionSubTipoCredito, " +
-         "       a.c_codfuf codigoFuenteFinanciamiento, " +
-         "       a.c_codlfi codigoLineaFinanciamiento, " +
-         "       b.c_descri abreviaturaMoneda, " +
-         "       a.c_modcre modalidadCredito, " +
-         "       e.C_TIPINT tipoInteres, " +
-         "       e.C_CODFRE codFrecuencia," +
-         "     e.C_INDDGR indicadorDesgravamen," +
-         "     e.C_INDSBI indicadorSeguroBien, " +
-         "       e.C_CALCAL verCalculadoraRecaudo, " +
-         "       e.C_INCREM creditoEmprendedor " +
-         //agregando campo para inspecciones de viviendas
-         "     , a.C_INDINS indicadorInspeccion" +
-         //gfernandez 21.10.2010 nuevo Campo, Inspeccion por Agencia
-         "     , a.C_INSAGE inspeccionAgencia" + 
-         //jpantoja 31.08.2011 nuevo Campo, Indicador Arbol Decisional
-         "     , e.C_INDAAD indicadorArbolDecisional" + 
-         //gliceta 26.01.2012: Req. 11-206: Solicitudes Gestionadas
-         "     , e.N_MTOMIN montoMinimoProducto, e.N_MTOMAX montoMaximoProducto " +
-         //gfernandez 06.06.2013 nuevo Campo, Indicador de Inspeccion obligatoria  
-         "     , a.C_ININOB indicadorInspeccionObligatorio"+         
-         " from " +
-         "       CRTPROD a, CBTTMON b, CRTSTCR c, CRTTICR d, CRTPRCU e " +
-         " WHERE " +
-         "     a.c_modcre = 'PRC' " +
-         " and a.c_codpro = e.c_codpro " +
-         //" and a.c_tipcre = '"+tipoCredito+"' "+
-         //" and a.c_sticre = '"+subTipoCredito+"' "+
-         " and b.c_codmon = a.c_codmon " +
-         " and c.c_tipcre = a.c_tipcre " +
-         " and c.c_sticre = a.c_sticre " +
-         " and d.c_tipcre = a.c_tipcre " +
-         " and a.d_inivig <=to_date('"+fechaProceso+"','dd/mm/yyyy')" +
-         " and ((a.d_finvig is null) or (a.d_finvig is not null and a.d_finvig>=to_date('"+fechaProceso+"','dd/mm/yyyy')) ) " +
-         " and a.c_codemp = " + codigoEmpresa + 
-         " and a.c_estreg = 'S' ";
-         if(!complete){
-            queryString=queryString+" and (SELECT count(f.c_idprof) FROM CRDPROF f WHERE f.c_codpro = a.c_codpro and f.c_estreg='S' and f.c_codemp = a.c_codemp and f.c_codage = '"+codigoAgencia+"') >0 ";
-         }
-         
-         
-         if("Codigo".equals(strCriterio)){
-            queryString+=" and a.c_codpro like '" + codigoProducto + "' ";
-         }else if("Descripcion".equals(strCriterio)){
-            codigoProducto = "%" + codigoProducto + "%";
-            queryString+=" and a.c_descri like '" + codigoProducto + "' ";
-         }
-         queryString=queryString+" order by a.c_descri";       
-         Query query = entityManager.createNativeQuery(queryString);
-         
-         if (!posicion.toString().equals(""))
-            query.setFirstResult(posIni).setMaxResults((Integer.parseInt(nroRegistros.toString())));
-         
-         List lst = query.getResultList();
+            int posIni = 0;
+            boolean complete = true;
+            if (!posicion.toString().equals(""))
+                posIni = (Integer.parseInt(posicion.toString()) - 1) * (Integer.parseInt(nroRegistros.toString()));
 
-         Iterator iter = lst.iterator();
-
-         while (iter.hasNext()) {
-            Object[] fila = (Object[])iter.next();
-
-            Map<Object, Object> ahorro = new HashMap<Object, Object>();//gliceta 26.01.2012: Req. 11-206: Solicitudes Gestionadas
-            ahorro.put("codigoProducto", (String)fila[0]);
-            ahorro.put("descripcionProducto", (String)fila[1]);
-            ahorro.put("tipoCalendario", (String)fila[2]);
-            ahorro.put("descripcionTipoCredito", (String)fila[3]);
-            ahorro.put("descripcionSubTipoCredito", (String)fila[4]);
-            ahorro.put("codigoFuenteFinanciamiento", (String)fila[5]);
-            ahorro.put("codigoLineaFinanciamiento", (String)fila[6]);
-            ahorro.put("abreviaturaMoneda", (String)fila[7]);
-            ahorro.put("modalidadCredito", (String)fila[8]);
-            ahorro.put("tipoInteres", (String)fila[9]);
-            ahorro.put("codigoTipoFrecuencia", (String)fila[10]);
-            ahorro.put("codigoTipoCuota", "");
-            ahorro.put("tipoTasa", "");
-            ahorro.put("indicadorDesgravamen", (String)fila[11]);
-            ahorro.put("indicadorSeguroBien", (String)fila[12]);
-            ahorro.put("verCalculadoraRecaudo", (String)fila[13]);   
-            ahorro.put("creditoEmprendedor", (String)fila[14]);
+            String queryString = "select" + "       a.c_codpro codigoProducto, " + "       a.c_descri descripcionProducto, " + "       a.c_ticale tipoCalendario, " + "       d.c_descri descripcionTipoCredito, " + "       c.c_descri descripcionSubTipoCredito, " + "       a.c_codfuf codigoFuenteFinanciamiento, " + "       a.c_codlfi codigoLineaFinanciamiento, " + "       b.c_descri abreviaturaMoneda, " + "       a.c_modcre modalidadCredito, " + "       e.C_TIPINT tipoInteres, " + "       e.C_CODFRE codFrecuencia," + "     e.C_INDDGR indicadorDesgravamen," + "     e.C_INDSBI indicadorSeguroBien, " + "       e.C_CALCAL verCalculadoraRecaudo, " + "       e.C_INCREM creditoEmprendedor " +
             //agregando campo para inspecciones de viviendas
-            ahorro.put("indicadorInspeccion", (String)fila[15]);
+            "     , a.C_INDINS indicadorInspeccion" +
             //gfernandez 21.10.2010 nuevo Campo, Inspeccion por Agencia
-            ahorro.put("inspeccionAgencia", (String)fila[16]);
-            //jpantoja  31.08.2011 indicador de Arbol Decisional
-            ahorro.put("indicadorArbolDecisional", (String)fila[17]);
+            "     , a.C_INSAGE inspeccionAgencia" +
+            //jpantoja 31.08.2011 nuevo Campo, Indicador Arbol Decisional
+            "     , e.C_INDAAD indicadorArbolDecisional" +
             //gliceta 26.01.2012: Req. 11-206: Solicitudes Gestionadas
-            ahorro.put("montoMinimoProducto", (BigDecimal)fila[18]);
-            ahorro.put("montoMaximoProducto", (BigDecimal)fila[19]);
-            //gfernandez 06.06.2013 nuevo Campo, Indicador de Inspeccion obligatoria 
-            ahorro.put("indicadorInspeccionObligatorio", (String)fila[20]);
-            
-            lObtenerDatos.add(ahorro);
-         }  
+            "     , e.N_MTOMIN montoMinimoProducto, e.N_MTOMAX montoMaximoProducto " +
+            //gfernandez 06.06.2013 nuevo Campo, Indicador de Inspeccion obligatoria  
+            "     , a.C_ININOB indicadorInspeccionObligatorio" + " from " + "       CRTPROD a, CBTTMON b, CRTSTCR c, CRTTICR d, CRTPRCU e " + " WHERE " + "     a.c_modcre = 'PRC' " + " and a.c_codpro = e.c_codpro " +
+            //" and a.c_tipcre = '"+tipoCredito+"' "+
+            //" and a.c_sticre = '"+subTipoCredito+"' "+
+            " and b.c_codmon = a.c_codmon " + " and c.c_tipcre = a.c_tipcre " + " and c.c_sticre = a.c_sticre " + " and d.c_tipcre = a.c_tipcre " + " and a.d_inivig <=to_date('" + fechaProceso + "','dd/mm/yyyy')" + " and ((a.d_finvig is null) or (a.d_finvig is not null and a.d_finvig>=to_date('" + fechaProceso + "','dd/mm/yyyy')) ) " + " and a.c_codemp = " + codigoEmpresa + " and a.c_estreg = 'S' ";
+            if (!complete) {
+                queryString = queryString + " and (SELECT count(f.c_idprof) FROM CRDPROF f WHERE f.c_codpro = a.c_codpro and f.c_estreg='S' and f.c_codemp = a.c_codemp and f.c_codage = '" + codigoAgencia + "') >0 ";
+            }
 
-      } catch (Exception e) {
-         e.printStackTrace();
-       }
-      
-      return lObtenerDatos;
-   }
+            if ("Codigo".equals(strCriterio)) {
+                queryString += " and a.c_codpro like '" + codigoProducto + "' ";
+            } else if ("Descripcion".equals(strCriterio)) {
+                codigoProducto = "%" + codigoProducto + "%";
+                queryString += " and a.c_descri like '" + codigoProducto + "' ";
+            }
+            queryString = queryString + " order by a.c_descri";
+            Query query = entityManager.createNativeQuery(queryString);
 
-   // Inicio [Req. 14-115 Fase IV] galmerco 10.06.2015: Genera la resolución de crédito hipotecario.
-   public Map<String, String> resolucionCreditoHipotecario(String estadoresolucion,
-                                                           String motivoEstadoResolucion,
-                                                           String fundamentos,
-                                                           String montoAprobado,
-                                                           String fechaDesembolso,
-                                                           String tipoResolucion,
-                                                           BeanObtenerSolicitud beanSolicitud,
-                                                           BeanParametrosAuditoria beanParametrosAuditoria) throws Exception {
-      
-      Map<String, String> outMap = new HashMap<String, String>();
-      String codigoError;
-      String modulo = "CRSolicitudCreditosFacade.resolucionCreditoHipotecario()";
+            if (!posicion.toString().equals(""))
+                query.setFirstResult(posIni).setMaxResults((Integer.parseInt(nroRegistros.toString())));
 
-      try {
-         crbnSolicitudCreditoFacadeInterfaceLocal.actualizarSolicitudCredito(beanSolicitud,
-                                                                             beanParametrosAuditoria);
+            List lst = query.getResultList();
 
-         outMap = registraResolucion(beanParametrosAuditoria.getCodigoEmpresa(),
-                                     beanParametrosAuditoria.getCodigoAgencia(),
-                                     beanParametrosAuditoria.getFechaProceso(),
-                                     beanSolicitud.getNumeroSolicitud(),
-                                     beanParametrosAuditoria.getUsuarioInsercion(),
-                                     estadoresolucion,
-                                     motivoEstadoResolucion,
-                                     fundamentos,
-                                     montoAprobado,
-                                     fechaDesembolso,
-                                     beanParametrosAuditoria.getTerminalInsercion(),
-                                     beanParametrosAuditoria.getIpInsercion(),
-                                     tipoResolucion,
-                                     beanSolicitud.getCodigoNivelAprobacion() // [Req. S16-041] agarcia 05.12.2016
-                                     );
+            Iterator iter = lst.iterator();
 
-         codigoError = (String) outMap.get("strError");
+            while (iter.hasNext()) {
+                Object[] fila = (Object[]) iter.next();
 
-         if (!_equiv(codigoError, NO_ERROR)) {
-            throw new ErrorControladoException(codigoError);
-         }
+                Map<Object, Object> ahorro = new HashMap<Object, Object>();//gliceta 26.01.2012: Req. 11-206: Solicitudes Gestionadas
+                ahorro.put("codigoProducto", (String) fila[0]);
+                ahorro.put("descripcionProducto", (String) fila[1]);
+                ahorro.put("tipoCalendario", (String) fila[2]);
+                ahorro.put("descripcionTipoCredito", (String) fila[3]);
+                ahorro.put("descripcionSubTipoCredito", (String) fila[4]);
+                ahorro.put("codigoFuenteFinanciamiento", (String) fila[5]);
+                ahorro.put("codigoLineaFinanciamiento", (String) fila[6]);
+                ahorro.put("abreviaturaMoneda", (String) fila[7]);
+                ahorro.put("modalidadCredito", (String) fila[8]);
+                ahorro.put("tipoInteres", (String) fila[9]);
+                ahorro.put("codigoTipoFrecuencia", (String) fila[10]);
+                ahorro.put("codigoTipoCuota", "");
+                ahorro.put("tipoTasa", "");
+                ahorro.put("indicadorDesgravamen", (String) fila[11]);
+                ahorro.put("indicadorSeguroBien", (String) fila[12]);
+                ahorro.put("verCalculadoraRecaudo", (String) fila[13]);
+                ahorro.put("creditoEmprendedor", (String) fila[14]);
+                //agregando campo para inspecciones de viviendas
+                ahorro.put("indicadorInspeccion", (String) fila[15]);
+                //gfernandez 21.10.2010 nuevo Campo, Inspeccion por Agencia
+                ahorro.put("inspeccionAgencia", (String) fila[16]);
+                //jpantoja  31.08.2011 indicador de Arbol Decisional
+                ahorro.put("indicadorArbolDecisional", (String) fila[17]);
+                //gliceta 26.01.2012: Req. 11-206: Solicitudes Gestionadas
+                ahorro.put("montoMinimoProducto", (BigDecimal) fila[18]);
+                ahorro.put("montoMaximoProducto", (BigDecimal) fila[19]);
+                //gfernandez 06.06.2013 nuevo Campo, Indicador de Inspeccion obligatoria 
+                ahorro.put("indicadorInspeccionObligatorio", (String) fila[20]);
 
-      } catch (Exception e) {
-         throw handlerError(e, beanParametrosAuditoria.getUsuarioInsercion(), modulo);
-      }
-      return outMap;
-   }
-   // Fin [Req. 14-115 Fase IV] galmerco
-   
-// Inicio [Req 14-055] jvilcapaza 18.02.2016
-   public Map<String, Object> obtenerProductosCredito(BeanCRProductoCreditoBusqueda beanCRProductoCreditoBusqueda,
-                                                      BeanParametrosAuditoria beanParametrosAuditoria,
-                                                      String posicion,
-                                                      String nroRegistros) throws Exception {
-      String modulo = "CRSolicitudCreditosFacade.obtenerProductosCredito";
-      Map<String, Object> mapRespuesta = new HashMap<String, Object>();
-      try {
+                lObtenerDatos.add(ahorro);
+            }
 
-         List<Map<String, Object>> listaProductoCredito = crSolicitudCreditoInterfaceLocal.obtenerProductosCredito(beanCRProductoCreditoBusqueda,
-                                                                                                                   beanParametrosAuditoria,
-                                                                                                                   posicion,
-                                                                                                                   nroRegistros);
+        } catch (Exception e) {
+            e.printStackTrace();
+        }
 
-         Long cantidadTotal = crSolicitudCreditoInterfaceLocal.obtenerCantidadProductosCredito(beanCRProductoCreditoBusqueda,
-                                                                                               beanParametrosAuditoria);
-         mapRespuesta.put("listaProductoCredito", listaProductoCredito);
-         mapRespuesta.put("cantidad", cantidadTotal);
+        return lObtenerDatos;
+    }
 
-      } catch (Exception e) {
-         throw handlerError(e, beanParametrosAuditoria.getUsuarioInsercion(), modulo);
-      }
-      return mapRespuesta;
-   }
-   // Fin [Req 14-055]
+    // Inicio [Req. 14-115 Fase IV] galmerco 10.06.2015: Genera la resolución de crédito hipotecario.
+    public Map<String, String> resolucionCreditoHipotecario(String estadoresolucion,
+                                                            String motivoEstadoResolucion,
+                                                            String fundamentos,
+                                                            String montoAprobado,
+                                                            String fechaDesembolso,
+                                                            String tipoResolucion,
+                                                            BeanObtenerSolicitud beanSolicitud,
+                                                            BeanParametrosAuditoria beanParametrosAuditoria) throws Exception {
+
+        Map<String, String> outMap = new HashMap<String, String>();
+        String codigoError;
+        String modulo = "CRSolicitudCreditosFacade.resolucionCreditoHipotecario()";
+
+        try {
+            crbnSolicitudCreditoFacadeInterfaceLocal.actualizarSolicitudCredito(beanSolicitud, beanParametrosAuditoria);
+
+            outMap = registraResolucion(beanParametrosAuditoria.getCodigoEmpresa(),
+                                        beanParametrosAuditoria.getCodigoAgencia(),
+                                        beanParametrosAuditoria.getFechaProceso(),
+                                        beanSolicitud.getNumeroSolicitud(),
+                                        beanParametrosAuditoria.getUsuarioInsercion(),
+                                        estadoresolucion,
+                                        motivoEstadoResolucion,
+                                        fundamentos,
+                                        montoAprobado,
+                                        fechaDesembolso,
+                                        beanParametrosAuditoria.getTerminalInsercion(),
+                                        beanParametrosAuditoria.getIpInsercion(),
+                                        tipoResolucion,
+                                        beanSolicitud.getCodigoNivelAprobacion() // [Req. S16-041] agarcia 05.12.2016
+            );
+
+            codigoError = (String) outMap.get("strError");
+
+            if (!_equiv(codigoError, NO_ERROR)) {
+                throw new ErrorControladoException(codigoError);
+            }
+
+        } catch (Exception e) {
+            throw handlerError(e, beanParametrosAuditoria.getUsuarioInsercion(), modulo);
+        }
+        return outMap;
+    }
+
+    // Fin [Req. 14-115 Fase IV] galmerco
+
+    // Inicio [Req 14-055] jvilcapaza 18.02.2016
+    public Map<String, Object> obtenerProductosCredito(BeanCRProductoCreditoBusqueda beanCRProductoCreditoBusqueda,
+                                                       BeanParametrosAuditoria beanParametrosAuditoria,
+                                                       String posicion,
+                                                       String nroRegistros) throws Exception {
+        String modulo = "CRSolicitudCreditosFacade.obtenerProductosCredito";
+        Map<String, Object> mapRespuesta = new HashMap<String, Object>();
+        try {
+
+            List<Map<String, Object>> listaProductoCredito = crSolicitudCreditoInterfaceLocal.obtenerProductosCredito(beanCRProductoCreditoBusqueda,
+                                                                                                                      beanParametrosAuditoria,
+                                                                                                                      posicion,
+                                                                                                                      nroRegistros);
+
+            Long cantidadTotal = crSolicitudCreditoInterfaceLocal.obtenerCantidadProductosCredito(beanCRProductoCreditoBusqueda,
+                                                                                                  beanParametrosAuditoria);
+            mapRespuesta.put("listaProductoCredito", listaProductoCredito);
+            mapRespuesta.put("cantidad", cantidadTotal);
+
+        } catch (Exception e) {
+            throw handlerError(e, beanParametrosAuditoria.getUsuarioInsercion(), modulo);
+        }
+        return mapRespuesta;
+    }
+
+    // Fin [Req 14-055]
 
     //Inicio [Req.S16-026] kdelacruz 15.09.2016
     public BeanCRSolicitudCredito obtenerEstadoSolicitud(String idSolicitud,
@@ -6274,6 +6177,107 @@
         map.put("strCodError", NO_ERROR);
         return map;
     }
-    //Fin [Req. S16-039] 
+
+    //Fin [Req. S16-039]
+
+    public List<BeanObtenerSolicitud> findByCodigoPersona(String codigoPersona,
+                                                          BeanParametrosAuditoria beanParametrosAuditoria) throws Exception {
+        String modulo = "CRSolicitudCreditosFacade.findByCodigoPersona()";
+        String usuarioInsercion = beanParametrosAuditoria.getUsuarioInsercion();
+        List<BeanObtenerSolicitud> lstBeanObtenerSolicituds = new ArrayList<BeanObtenerSolicitud>();
+        List<CRSolicitudCredito> lstCRCrSolicitudCreditos;
+        PropertyParams propertyParams;
+        try {
+            lstCRCrSolicitudCreditos = crSolicitudCreditoInterfaceLocal.findByCodigoPersona(codigoPersona);
+
+            for (CRSolicitudCredito crSolicitudCredito : lstCRCrSolicitudCreditos) {
+                lstBeanObtenerSolicituds.add(setBeanObtenerSolicitud(crSolicitudCredito));
+            }
+
+        } catch (Exception e) {
+            throw handlerError(e, usuarioInsercion, modulo);
+        }
+        return lstBeanObtenerSolicituds;
+    }
+
+    private BeanObtenerSolicitud setBeanObtenerSolicitud(CRSolicitudCredito crSolicitudCredito) {
+        BeanObtenerSolicitud beanObtenerSolicitud = new BeanObtenerSolicitud();
+        if (_isEmpty(crSolicitudCredito)) {
+            return beanObtenerSolicitud;
+        }
+
+        beanObtenerSolicitud.setNumeroSolicitud(crSolicitudCredito.getNumeroSolicitud());
+        beanObtenerSolicitud.setCodigoProducto(crSolicitudCredito.getCrProductoByProductoAprobado().getCodigoProducto());
+        beanObtenerSolicitud.setProductoNombre(crSolicitudCredito.getCrProductoByProductoAprobado().getDescripcion());
+        beanObtenerSolicitud.setCodigoMonedaAprobado(crSolicitudCredito.getCodigoMonedaAprobado());
+        CBMoneda cbMoneda = cbMonedaInterfaceLocal.findById(crSolicitudCredito.getCodigoMonedaAprobado());
+        if (!_isEmpty(cbMoneda)) {
+            beanObtenerSolicitud.setMonedaDescripcion(cbMoneda.getDescripcion());
+        }
+        beanObtenerSolicitud.setMontoSolicitado(crSolicitudCredito.getMontoSolicitado());
+        beanObtenerSolicitud.setFechaSolicitud(crSolicitudCredito.getFechaSolicitud());
+        beanObtenerSolicitud.setCodigoEstadoSolicitud(crSolicitudCredito.getCrEstadoSolicitud().getCodigoEstado());
+        beanObtenerSolicitud.setEstadoSolicitud(crSolicitudCredito.getCrEstadoSolicitud().getDescripcion());
+
+        CBCatalogoCheckConstraintId cbCatalogoCheckConstraintId = new CBCatalogoCheckConstraintId("CRTPROD", "C_MODCRE", crSolicitudCredito.getCrProductoByProductoAprobado().getModalidadCredito());
+        CBCatalogoCheckConstraint cbCatalogoCheckConstraint = cbCatalogoCheckConstraintInterfaceLocal.findById(cbCatalogoCheckConstraintId);
+        if (!_isEmpty(cbCatalogoCheckConstraint)) {
+            beanObtenerSolicitud.setCondicionSolicitud(cbCatalogoCheckConstraint.getAbreviatura());
+            beanObtenerSolicitud.setDescripcionCondicionSolicitud(cbCatalogoCheckConstraint.getDescripcion());
+        }
+        beanObtenerSolicitud.setCodigoAnalistaResponsable(crSolicitudCredito.getPromotor());
+        CBUsuario cbUsuario = cbUsuarioInterfaceLocal.findById(crSolicitudCredito.getPromotor());
+        if (!_isEmpty(cbUsuario)) {
+            beanObtenerSolicitud.setNombreAnalistaResponsable(cbUsuario.getNombreCompleto());
+        }
+        //[Req.S17-007] kdelacruz 27.03.2017
+        beanObtenerSolicitud.setTipoOperacion(Constante.WF_TIPO_OPERACION_DELFIN);
+
+        return beanObtenerSolicitud;
+    }
+
+    public BeanObtenerSolicitud buscarSolicitudCreditoExterno(final String numeroSolicitud,
+                                                              final BeanParametrosAuditoria beanParametrosAuditoria) throws Exception {
+        String modulo = "CRSolicitudCreditosFacade.fbuscarSolicitudCreditoExterno()";
+        String usuarioInsercion = beanParametrosAuditoria.getUsuarioInsercion();
+        List<BeanObtenerSolicitud> lstBeanObtenerSolicituds = new ArrayList<BeanObtenerSolicitud>();
+        List<CRSolicitudCredito> lstCRCrSolicitudCreditos;
+        PropertyParams propertyParams;
+        CRSolicitudCredito crSolicitudCredito;
+        BeanObtenerSolicitud beanObtenerSolicitud;
+        try {
+            crSolicitudCredito = crSolicitudCreditoInterfaceLocal.findById(numeroSolicitud);
+            beanObtenerSolicitud = new BeanObtenerSolicitud();
+            if (_isEmpty(crSolicitudCredito)) {
+                return beanObtenerSolicitud;
+            }
+            beanObtenerSolicitud.setCodigoPersona(crSolicitudCredito.getClPersonasByCodigoPersona().getCodigoPersona());
+            beanObtenerSolicitud.setNombreRazonSocial(crSolicitudCredito.getClPersonasByCodigoPersona().getNombreoRazonSocial());
+            beanObtenerSolicitud.setNumeroSolicitud(crSolicitudCredito.getNumeroSolicitud());
+            beanObtenerSolicitud.setCodigoProducto(crSolicitudCredito.getCrProductoByProductoAprobado().getCodigoProducto());
+            beanObtenerSolicitud.setProductoNombre(crSolicitudCredito.getCrProductoByProductoAprobado().getDescripcion());
+            beanObtenerSolicitud.setCodigoMonedaAprobado(crSolicitudCredito.getCodigoMonedaAprobado());
+            CBMoneda cbMoneda = cbMonedaInterfaceLocal.findById(crSolicitudCredito.getCodigoMonedaAprobado());
+            if (!_isEmpty(cbMoneda)) {
+                beanObtenerSolicitud.setMonedaDescripcion(cbMoneda.getDescripcion());
+            }
+            beanObtenerSolicitud.setMontoSolicitado(crSolicitudCredito.getMontoSolicitado());
+            beanObtenerSolicitud.setCodigoAnalistaResponsable(crSolicitudCredito.getPromotor());
+            CBUsuario cbUsuario = cbUsuarioInterfaceLocal.findById(crSolicitudCredito.getPromotor());
+            if (!_isEmpty(cbUsuario)) {
+                beanObtenerSolicitud.setNombreAnalistaResponsable(cbUsuario.getNombreCompleto());
+            }
+            CRSolCredInformacionHipotecario crSolCredInformacionHipotecario = crSolCredInformacionHipotecarioInterfaceLocal.findById(numeroSolicitud);
+            if (!_isEmpty(crSolCredInformacionHipotecario) && !_isEmpty(crSolCredInformacionHipotecario.getCrTipoBien())) {
+                beanObtenerSolicitud.setCodigoTipoBien(crSolCredInformacionHipotecario.getCrTipoBien().getCodigoTipoBien());
+            }
+            CBAgencia cbAgencia = cbAgenciaInterfaceLocal.findById(new CBAgenciaId(beanParametrosAuditoria.getCodigoEmpresa(), crSolicitudCredito.getCodigoAgencia()));
+            CBUbigeo cbUbigeo = cbAgencia.getCbUbigeo();
+            beanObtenerSolicitud.setDescripcionAgencia(cbAgencia.getDescripcion());
+        } catch (Exception e) {
+            throw handlerError(e, usuarioInsercion, modulo);
+        }
+        return beanObtenerSolicitud;
+    }
 
 }
\ No newline at end of file
diff --git a/FINANCIERONEW/src/financ/creditos/local/CRSolicitudCreditoInterfaceLocal.java b/FINANCIERONEW/src/financ/creditos/local/CRSolicitudCreditoInterfaceLocal.java
index 737d149..1e1ae2c 100644
--- a/FINANCIERONEW/src/financ/creditos/local/CRSolicitudCreditoInterfaceLocal.java
+++ b/FINANCIERONEW/src/financ/creditos/local/CRSolicitudCreditoInterfaceLocal.java
@@ -668,4 +668,12 @@
     public Long countCodigoPersonaAndCodigoEmpresaEstadoTipoCredito(String codigoPersona,
                                                                     String codigoEmpresa,
                                                                     String codigoEstado) throws Exception;
+    
+    /**
+     * @author kdelacruz
+     * @since [Req.S17-007] 27.03.2017
+     * @param codigoPersona
+     * @return List<CRSolicitudCredito>
+     */
+    public List<CRSolicitudCredito> findByCodigoPersona(String codigoPersona);
 }
\ No newline at end of file
diff --git a/FINANCIERONEW/src/financ/creditos/local/CRSolicitudCreditosFacadeInterfaceLocal.java b/FINANCIERONEW/src/financ/creditos/local/CRSolicitudCreditosFacadeInterfaceLocal.java
index 54c873b..457dffc 100644
--- a/FINANCIERONEW/src/financ/creditos/local/CRSolicitudCreditosFacadeInterfaceLocal.java
+++ b/FINANCIERONEW/src/financ/creditos/local/CRSolicitudCreditosFacadeInterfaceLocal.java
@@ -517,4 +517,19 @@
     * @throws Exception
     */
     public Map findByCodigoPersonaEvaluacionDependiente(String strCodPersona, String strCodEmp) throws Exception;
+    
+    public List<BeanObtenerSolicitud> findByCodigoPersona(String codigoPersona,
+                                                          BeanParametrosAuditoria beanParametrosAuditoria) throws Exception;
+    
+    /**
+     * @author kdelacruz
+     * @since [Req.S17-007] 10.03.2017
+     * @param numeroSolicitud
+     * @param beanParametrosAuditoria
+     * @return BeanObtenerSolicitud
+     * @throws Exception
+     */
+    public BeanObtenerSolicitud buscarSolicitudCreditoExterno(final String numeroSolicitud,
+                                                              final BeanParametrosAuditoria beanParametrosAuditoria) throws Exception;
+    
 }
diff --git a/FINANCIERONEW/src/financ/creditos/session/CRSolicitudCreditoSession.java b/FINANCIERONEW/src/financ/creditos/session/CRSolicitudCreditoSession.java
index 53ebef3..1469c4d 100644
--- a/FINANCIERONEW/src/financ/creditos/session/CRSolicitudCreditoSession.java
+++ b/FINANCIERONEW/src/financ/creditos/session/CRSolicitudCreditoSession.java
@@ -41,7 +41,6 @@
 import financ.creditos.local.CRSolicitudCreditoInterfaceLocal;
 import financ.creditos.local.CRSolicitudResolucionInterfaceLocal;
 import financ.creditos.remote.CRSolicitudCreditoInterfaceRemote;
-import financ.propuestaCredito.entity.CRPropuestaCredito;
 import financ.util.Constante;
 import financ.util.FormatoFecha;
 import financ.util.Paginacion;
@@ -3767,4 +3766,23 @@
 
     }
     // Fin [Ticket #9674] stacanga
+    
+    // Inicio [Req.S17-007] kdelacruz 27.03.2017
+    public List<CRSolicitudCredito> findByCodigoPersona(String codigoPersona) {
+        StringBuilder sb = new StringBuilder();
+        sb.append(" SELECT a ");
+        sb.append("   FROM CRSolicitudCredito a ");
+        sb.append("  WHERE a.clPersonasByCodigoPersona.codigoPersona = :codigoPersona ");
+        sb.append("    AND a.crEstadoSolicitud.codigoEstado = :codigoEstado ");
+        sb.append("    AND a.tipoSolicitud = :tipoSolicitud ");
+        sb.append("    and a.tipoModalidadCredito = :tipoModalidadCredito ");
+        
+        Query query = entityManager.createQuery(sb.toString());
+        query.setParameter("codigoPersona", codigoPersona);
+        query.setParameter("codigoEstado", Constante.SOLICITUD_ESTADO_APROBADO);
+        query.setParameter("tipoSolicitud", Constante.CODIGO_TIPO_SOLICITUD);
+        query.setParameter("tipoModalidadCredito", Constante.TIPO_MODALIDAD_CREDITO_PRESTAMOS_CUOTA);
+        return (List<CRSolicitudCredito>) query.getResultList();
+    }
+    // Fin [Req.S17-007]
 }
\ No newline at end of file
diff --git a/FINANCIERONEW/src/financ/email/facade/GEMailSenderFacade.java b/FINANCIERONEW/src/financ/email/facade/GEMailSenderFacade.java
index 7f41e5c..46ec0d1 100644
--- a/FINANCIERONEW/src/financ/email/facade/GEMailSenderFacade.java
+++ b/FINANCIERONEW/src/financ/email/facade/GEMailSenderFacade.java
@@ -1,32 +1,45 @@
 package financ.email.facade;
 
 import java.util.ArrayList;
-import java.util.Date;
 import java.util.List;
 
 import javax.ejb.EJB;
 import javax.ejb.Stateless;
 
+import pe.com.tfc.utils.AbstractFacade;
+import pe.com.tfc.utils.Auditable;
+import pe.com.tfc.utils.GenericBean;
+import pe.com.tfc.utils.PropertyParams;
 import admin.contab.beans.BeanParametrosAuditoria;
+import admin.contab.entity.CBUsuario;
+import admin.contab.local.CBUsuarioInterfaceLocal;
 import admin.email.beans.BeanCBMailSend;
-import admin.email.beans.BeanCBMailTemplate;
 import admin.email.beans.BeanCBMailSend.CBMailConfig;
+import admin.email.beans.BeanCBMailTemplate;
 import admin.email.local.CBMailSenderFacadeInterfaceLocal;
 import admin.email.utils.MailHTML;
 import financ.cierre.beans.BeanCIVencimientosAdeudos;
 import financ.clientes.local.CLEmailsPersonasFacadeInterfaceLocal;
 import financ.creditos.entity.CREstadoResolucionCredito;
 import financ.creditos.entity.CRMotivoXEstadoResolucionCredito;
-import financ.creditos.entity.CRObservacionEncontradas;
 import financ.creditos.entity.CRSolicitudCredito;
 import financ.creditos.local.CREstadoResolucionCreditoInterfaceLocal;
 import financ.creditos.local.CRMotivoXEstadoResolucionCreditoInterfaceLocal;
 import financ.creditos.local.CRSolicitudCreditoInterfaceLocal;
 import financ.email.local.GEMailSenderFacadeInterfaceLocal;
 import financ.util.Constante;
-import pe.com.tfc.utils.AbstractFacade;
-import pe.com.tfc.utils.Auditable;
-import pe.com.tfc.utils.GenericBean;
+import financ.workflow.bean.BeanWFMaestra;
+import financ.workflow.entity.WFDocumentos;
+import financ.workflow.entity.WFEstado;
+import financ.workflow.entity.WFEtapa;
+import financ.workflow.entity.WFLegal;
+import financ.workflow.entity.WFTipoDocumento;
+import financ.workflow.local.WFDetalleMailPorRutaFacadeInterfaceLocal;
+import financ.workflow.local.WFDocumentosInterfaceLocal;
+import financ.workflow.local.WFEstadoInterfaceLocal;
+import financ.workflow.local.WFEtapaInterfaceLocal;
+import financ.workflow.local.WFLegalInterfaceLocal;
+import financ.workflow.local.WFTipoDocumentoInterfaceLocal;
 
 /**
  * GEMailSenderFacade
@@ -53,6 +66,20 @@
     private CREstadoResolucionCreditoInterfaceLocal crEstadoResolucionCreditoInterfaceLocal;
     @EJB
     private CRMotivoXEstadoResolucionCreditoInterfaceLocal crMotivoXEstadoResolucionCreditoInterfaceLocal;
+    @EJB
+    private WFEtapaInterfaceLocal wfEtapaInterfaceLocal;
+    @EJB
+    private WFEstadoInterfaceLocal wfEstadoInterfaceLocal;
+    @EJB
+    private WFDetalleMailPorRutaFacadeInterfaceLocal wfDetalleMailPorRutaFacadeInterfaceLocal;
+    @EJB
+    private WFLegalInterfaceLocal wfLegalInterfaceLocal;
+    @EJB
+    private CBUsuarioInterfaceLocal cbUsuarioInterfaceLocal;
+    @EJB
+    private WFDocumentosInterfaceLocal wfDocumentosInterfaceLocal;
+    @EJB
+    private WFTipoDocumentoInterfaceLocal wfTipoDocumentoInterfaceLocal;
 
     public void enviarMailResolucionSolicitudCredito(String numeroSolicitud,
                                                      String estadoResolucion,
@@ -134,7 +161,9 @@
         String modulo = "GEMailSenderFacade.enviarMailReporteVencAdeudos()";
         String usuarioInsercion = beanParametrosAuditoria.getUsuarioInsercion();
         try {
-            enviarMailReporteVencAdeudosInterno(listaDestinatarios, lstBeanCIVencimientosAdeudos, beanParametrosAuditoria);
+            enviarMailReporteVencAdeudosInterno(listaDestinatarios,
+                                                lstBeanCIVencimientosAdeudos,
+                                                beanParametrosAuditoria);
         } catch (Exception e) {
             handlerError(e, usuarioInsercion, modulo);
         }
@@ -145,7 +174,8 @@
                                                      BeanParametrosAuditoria beanParametrosAuditoria) throws Exception {
 
         BeanCBMailTemplate beanCBMailTemplate = cbMailSenderFacadeInterfaceLocal.obtenerConfiguracionEnvioPorCodigoModuloReferencia(Constante.CODIGO_MODULO_ENVIO_REPORTE_VENCIMIENTO_ADEUDO);
-        if (_isEmpty(beanCBMailTemplate) || !_equiv(beanCBMailTemplate.getEstadoRegistro(),Constante.ESTADO_REGISTRO_VIGENTE)) {
+        if (_isEmpty(beanCBMailTemplate) || !_equiv(beanCBMailTemplate.getEstadoRegistro(),
+                                                    Constante.ESTADO_REGISTRO_VIGENTE)) {
             return;
         }
         CBMailConfig cbMailConfig = cbMailSenderFacadeInterfaceLocal.obtenerDatosConfiguracion(beanParametrosAuditoria);
@@ -154,23 +184,21 @@
         cbMailConfig.setPasswordCorreoEnvio(beanCBMailTemplate.getPasswordEnvio());
         cbMailConfig.setIncluirCopiaASiMismo(false);
         cbMailConfig.setIncluyeAdjunto(true);
-        
+
         String tablaBloqueos = CADENA_VACIA;
-        
 
-            List<GenericBean> listColumnas = new ArrayList<GenericBean>(0);
-            MailHTML mailHTML = new MailHTML();
-            listColumnas.add(mailHTML.addColumna("codigoCofide", "Codigo COFIDE"));
-            listColumnas.add(mailHTML.addColumna("fechaVencimiento", "Fecha de Vencimiento"));
-            listColumnas.add(mailHTML.addColumna("codigoCliente", "Codigo Cliente"));
-            listColumnas.add(mailHTML.addColumna("nombreCliente", "Nombre Cliente"));
-            listColumnas.add(mailHTML.addColumna("importeAPagar", "Importe a Pagar"));
+        List<GenericBean> listColumnas = new ArrayList<GenericBean>(0);
+        MailHTML mailHTML = new MailHTML();
+        listColumnas.add(mailHTML.addColumna("codigoCofide", "Codigo COFIDE"));
+        listColumnas.add(mailHTML.addColumna("fechaVencimiento", "Fecha de Vencimiento"));
+        listColumnas.add(mailHTML.addColumna("codigoCliente", "Codigo Cliente"));
+        listColumnas.add(mailHTML.addColumna("nombreCliente", "Nombre Cliente"));
+        listColumnas.add(mailHTML.addColumna("importeAPagar", "Importe a Pagar"));
 
-
-            tablaBloqueos = mailHTML.getHTMLTable(lstBeanCIVencimientosAdeudos,
-                                                  true,
-                                                  Constante.ORIENTACION_TABLA_HTML_HORIZONTAL,
-                                                  listColumnas);
+        tablaBloqueos = mailHTML.getHTMLTable(lstBeanCIVencimientosAdeudos,
+                                              true,
+                                              Constante.ORIENTACION_TABLA_HTML_HORIZONTAL,
+                                              listColumnas);
 
         String asunto = beanCBMailTemplate.getAsunto();
 
@@ -192,5 +220,128 @@
 
         cbMailSenderFacadeInterfaceLocal.enviarMail(beanCBMailSend, beanParametrosAuditoria);
     }
+
     //Fin [Req.S17-003]
+
+    //Inicio [Req.17-007] kdelacruz 22.03.2017 Implementación WorkFlow Legal
+    public void enviarMailWorkFlowLegal(String idMaestra,
+                                        String idEtapa,
+                                        String idEstado,
+                                        String textoComentario,
+                                        String idRuta,
+                                        String codigoModuloReferencia,
+                                        BeanParametrosAuditoria beanParametrosAuditoria) throws Exception {
+        String modulo = "GEMailSenderFacade.enviarMailWorkFlowLegal()";
+        String usuarioInsercion = beanParametrosAuditoria.getUsuarioInsercion();
+        WFEstado wfEstado;
+        WFEtapa wfEtapa;
+        try {
+            wfEstado = new WFEstado();
+            wfEtapa = new WFEtapa();
+            List<String> listaCorreoDestinatario = wfDetalleMailPorRutaFacadeInterfaceLocal.buscarCorreosPorRuta(idRuta,
+                                                                                                                 beanParametrosAuditoria);
+            wfEstado = wfEstadoInterfaceLocal.findById(idEstado);
+            wfEtapa = wfEtapaInterfaceLocal.findById(idEtapa);
+            enviarMailWorkFlowLegalInterno(idMaestra,
+                                           wfEstado.getDescripcionEstado(),
+                                           wfEtapa.getDescripcionEtapa(),
+                                           textoComentario,
+                                           listaCorreoDestinatario,
+                                           codigoModuloReferencia,
+                                           beanParametrosAuditoria);
+        } catch (Exception e) {
+            throw handlerError(e, usuarioInsercion, modulo);
+        }
+    }
+
+    private void enviarMailWorkFlowLegalInterno(String idMaestra,
+                                                String descripcionEstado,
+                                                String descripcionEtapa,
+                                                String textoComentario,
+                                                List<String> listaCorreoDestinatario,
+                                                String codigoModuloReferencia,
+                                                BeanParametrosAuditoria beanParametrosAuditoria) throws Exception {
+        BeanCBMailTemplate beanCBMailTemplate = cbMailSenderFacadeInterfaceLocal.obtenerConfiguracionEnvioPorCodigoModuloReferencia(codigoModuloReferencia);
+        String usuarioAsignado = CADENA_VACIA;
+        String listaDocumentos = CADENA_VACIA;
+        if (_isEmpty(beanCBMailTemplate) || !_equiv(beanCBMailTemplate.getEstadoRegistro(),
+                                                    Constante.ESTADO_REGISTRO_VIGENTE)) {
+            return;
+        }
+
+        WFLegal wfLegal = wfLegalInterfaceLocal.findById(idMaestra);
+
+        CBMailConfig cbMailConfig = cbMailSenderFacadeInterfaceLocal.obtenerDatosConfiguracion(beanParametrosAuditoria);
+        cbMailConfig.setNombreModulo(beanCBMailTemplate.getCodigoModuloReferencia());
+        cbMailConfig.setCorreoDeEnvio(beanCBMailTemplate.getMailEnvio());
+        cbMailConfig.setPasswordCorreoEnvio(beanCBMailTemplate.getPasswordEnvio());
+        cbMailConfig.setIncluirCopiaASiMismo(false);
+        cbMailConfig.setIncluyeAdjunto(true);
+
+        String asunto = beanCBMailTemplate.getAsunto();
+        asunto = asunto.replace("NOMBRE_CLIENTE", wfLegal.getClPersonas().getNombreoRazonSocial());
+        asunto = asunto.replace("TIPO_BIEN", wfLegal.getCrTipoBien().getDescripcion());
+        asunto = asunto.replace("NOMBRE_ETAPA", wfLegal.getWfMaestra().getWfEtapa().getDescripcionEtapa());
+        if (!_isEmpty(wfLegal.getWfMaestra().getUsuarioAtiende())) {
+            CBUsuario cbUsuario = cbUsuarioInterfaceLocal.findByCodigoUsuarioEstado(wfLegal.getWfMaestra().getUsuarioAtiende(), Constante.ESTADO_REGISTRO_VIGENTE);
+            usuarioAsignado = cbUsuario.getNombreCompleto();
+        }
+        String listaDoc = listarDocumentosPorEtapaHTML(wfLegal.getWfMaestra().getWfEtapa().getIdEtapa(),
+                                                       idMaestra,
+                                                       beanParametrosAuditoria);
+        if (!_isEmpty(listaDoc)) {
+            listaDocumentos = "La lista de Documentos Adjuntos es la siguiente:</br><ul>" + listaDoc + "</ul>";
+        }
+
+        
+        String mensaje = beanCBMailTemplate.getMensaje().replace("WF_ESTADO", descripcionEstado).replace("NOMBRE_CLIENTE", wfLegal.getClPersonas().getNombreoRazonSocial())
+                        .replace("DNI_CLIENTE", wfLegal.getClPersonas().getNumeroDocumentoIdentidad())
+                        .replace("WF_COMENTARIOS", textoComentario)
+                        .replace("WF_ABOGADO", usuarioAsignado)
+                        .replace("DOCUMENTOS_ENVIADOS", listaDocumentos);
+
+        BeanCBMailSend.CBMailBody cbMailBody;
+        cbMailBody = new BeanCBMailSend.CBMailBody();
+        cbMailBody.setFechaEnvio(beanParametrosAuditoria.getFechaProceso());
+        cbMailBody.setAsunto(asunto);
+        cbMailBody.setMensaje(mensaje);
+        cbMailBody.addCorreoDestino(listaCorreoDestinatario);
+
+        BeanCBMailSend beanCBMailSend = new BeanCBMailSend();
+        beanCBMailSend.setCbMailConfig(cbMailConfig);
+        beanCBMailSend.setCbMailBody(cbMailBody);
+        beanCBMailSend.setBeanParametrosAuditoria(beanParametrosAuditoria);
+
+        cbMailSenderFacadeInterfaceLocal.enviarMail(beanCBMailSend, beanParametrosAuditoria);
+    }
+
+    //Fin [Req.17-007]
+
+    private String listarDocumentosPorEtapaHTML(String idEtapa,
+                                                String idMaestra,
+                                                BeanParametrosAuditoria beanParametrosAuditoria) throws Exception {
+        String modulo = "WFMaestraFacade.listarDocumentosPorEtapaHTML()";
+        String usuario = beanParametrosAuditoria.getUsuarioInsercion();
+        PropertyParams propertyParams;
+        List<WFDocumentos> listWFDocumentos = new ArrayList<WFDocumentos>(0);
+        WFTipoDocumento wfTipoDocumento;
+        String listDocumentosHTML = "";
+        propertyParams = new PropertyParams();
+        try {
+            propertyParams.addProperty("wfMaestra.idMaestra", idMaestra);
+            propertyParams.addProperty("wfEtapa.idEtapa", idEtapa);
+            listWFDocumentos = wfDocumentosInterfaceLocal.findByProperties(propertyParams);
+
+            for (final WFDocumentos wfDocumentos : listWFDocumentos) {
+                wfTipoDocumento = new WFTipoDocumento();
+                wfTipoDocumento = wfTipoDocumentoInterfaceLocal.findById(wfDocumentos.getWfTipoDocumento().getIdTipoDocumento());
+                if (!_isEmpty(wfTipoDocumento.getDescripcionTipoDocumento())) {
+                    listDocumentosHTML = listDocumentosHTML + "<li>" + wfTipoDocumento.getDescripcionTipoDocumento() + "</li>";
+                }
+            }
+        } catch (Exception e) {
+            throw handlerError(e, usuario, modulo);
+        }
+        return listDocumentosHTML;
+    }
 }
diff --git a/FINANCIERONEW/src/financ/email/local/GEMailSenderFacadeInterfaceLocal.java b/FINANCIERONEW/src/financ/email/local/GEMailSenderFacadeInterfaceLocal.java
index 2f45b7b..3b9dc05 100644
--- a/FINANCIERONEW/src/financ/email/local/GEMailSenderFacadeInterfaceLocal.java
+++ b/FINANCIERONEW/src/financ/email/local/GEMailSenderFacadeInterfaceLocal.java
@@ -5,6 +5,7 @@
 import javax.ejb.Local;
 
 import financ.cierre.beans.BeanCIVencimientosAdeudos;
+import financ.workflow.bean.BeanWFMaestra;
 import admin.contab.beans.BeanParametrosAuditoria;
 
 /**
@@ -32,7 +33,7 @@
                                                      String estadoResolucion,
                                                      String motivoResolucion,
                                                      String fundamentos,
-                                                     BeanParametrosAuditoria beanParametrosAuditoria);
+                                                     BeanParametrosAuditoria beanParametrosAuditoria) throws Exception;
 
     /**
      * Implementación de operativa de COFIDE en módulo de adeudados
@@ -46,6 +47,25 @@
      */
     public void enviarMailReporteVencAdeudos(List<String> listaDestinatarios,
                                              List<BeanCIVencimientosAdeudos> lstBeanCIVencimientosAdeudos,
-                                             BeanParametrosAuditoria beanParametrosAuditoria);
+                                             BeanParametrosAuditoria beanParametrosAuditoria) throws Exception;
+
+    /**
+     * @author kdelacruz
+     * @since [Req.S17-007] 22.03.2017
+     * @param beanWFMaestra
+     * @param idEtapa
+     * @param idEstado
+     * @param textoComentario
+     * @param idRuta
+     * @param codigoModuloReferencia
+     * @param beanParametrosAuditoria
+     */
+    public void enviarMailWorkFlowLegal(String idMaestra,
+                                        String idEtapa,
+                                        String idEstado,
+                                        String textoComentario,
+                                        String idRuta,
+                                        String codigoModuloReferencia,
+                                        BeanParametrosAuditoria beanParametrosAuditoria) throws Exception ;
 
 }
diff --git a/FINANCIERONEW/src/financ/util/Constante.java b/FINANCIERONEW/src/financ/util/Constante.java
index 3177262..102ce5e 100644
--- a/FINANCIERONEW/src/financ/util/Constante.java
+++ b/FINANCIERONEW/src/financ/util/Constante.java
@@ -2292,12 +2292,12 @@
     public static final String TIPO_MODALIDAD_CREDITO_PRESTAMOS_CUOTA = "PRC";
     public static final String COD_ROLES_APROBAR_CRONOGRAMA_MANUAL = "COD_ROLES_APROBAR_CRONOGRAMA_MANUAL";
     // Fin [S17-006]  
-    
+
     //Inicio [CC17-012] gmeza 31.01.2017
-    public static final String CODIGO_TIPO_CARGA_TOTAL= "T";
-    public static final String CODIGO_TIPO_CARGA_PARCIAL= "P";
-    public static final String TIPO_CARGA_TOTAL= "TOTAL";
-    public static final String TIPO_CARGA_PARCIAL= "PARCIAL";
+    public static final String CODIGO_TIPO_CARGA_TOTAL = "T";
+    public static final String CODIGO_TIPO_CARGA_PARCIAL = "P";
+    public static final String TIPO_CARGA_TOTAL = "TOTAL";
+    public static final String TIPO_CARGA_PARCIAL = "PARCIAL";
     public static final String NOMBRE_COMBO_CAMPANIA = "CAMPANICOB";
     public static final String NOMBRE_COMBO_CAMPANIA_DETALLE = "CAMPDETCOB";
     public static final String NOMBRE_COMBO_PRIORIDAD_GESTION_COBRANZAS = "PRIOGESCOB";
@@ -2309,14 +2309,50 @@
     public static final String TIPO_COBRO_COMISION_PORCENTAJE = "P";
     public static final String TIPO_COBRO_COMISION_FIJO = "F";
     // Fin [T-9696]
-    
-  //Inicio [CC17-020] kdelacruz 17.02.2017
+
+    //Inicio [CC17-020] kdelacruz 17.02.2017
     public static final String CODIGO_OPERACION = "143001";
     //Fin [CC17-020] kdelacruz 17.02.2017
     //[CC17-026] gmeza 28.02.2017
     public static final String DESCRIPCION_CASTIGO = "CASTIGO";
-    
+
     // [T-9730] DLAZO 02.03.2017 Error al mostrar movimiento CTS
     public static final String NOTA_DE_ABONO_INT = "CE033";
-}
 
+    // Inicio [Req.S17-007] kdelacruz 07.03.2017
+    public static final String TIPO_OPERACION_EXTERNA = "E";
+    public static final String RUTA_WORKFLOW = "FINANCIERO/workflow/";
+    public static final String WF_ESTADO_SOLICITUD_ENVIADO = "143002";
+    public static final String WF_ESTADO_SOLICITUD_OBSERVADO = "143003";
+    public static final String WF_ESTADO_SOLICITUD_RECHAZADO = "143004";
+
+    public static final String WF_COMPORTAMIENTO_TRANSACCIONAL = "T";
+
+    public static final String WF_ETAPA_SOLICITUD_ESTUDIO_TITULO = "143002";
+    public static final String WF_ETAPA_EMISION_DE_CONTRATOS = "143003";
+    public static final String WF_ETAPA_TOMA_DE_FIRMAS = "143004";
+    public static final String WF_ETAPA_REVISION_DE_DOCUMENTOS = "143005";
+    public static final String WF_ETAPA_INGRESO_DE_DOCUMENTOS_A_NOTARIA = "1430056";
+    public static final String WF_ETAPA_BLOQUEO_REGISTRAL = "143007";
+    public static final String WF_ETAPA_ESCRITURA_PUBLICA = "143008";
+    public static final String WF_ETAPA_CONFORMIDAD_LEGAL_PARA_DESEMBOLSO = "143009";
+    public static final String WF_ETAPA_CONFIRMACION_DE_DESEMBOLSO = "143010";
+    public static final String WF_ETAPA_FIRMA_DE_VENDEDOR = "143011";
+    public static final String WF_ETAPA_FIRMA_DE_TFC = "143012";
+    public static final String WF_ETAPA_INSCRIPCION_DEFINITIVA = "143013";
+    public static final String WF_ETAPA_TESTIMONIO = "143014";
+
+    public static final String WF_RUTA_PROVINCIA = "P";
+    public static final String WF_RUTA_LIMA = "L";
+    
+    public static final String WF_MODULO_WORKFLOW_LEGAL = "143001";
+    
+    public static final String WF_TIPO_OPERACION_DELFIN = "D";
+    public static final String WF_TIPO_OPERACION_BANTIQ = "B";
+    
+    public static final String WF_TIPO_BIEN_FUTURO = "143001";
+    public static final String WF_TIPO_BIEN_TERMINADO = "143002";
+    
+    public static final String TIPO_ARCHIVO_REPORTE_WORD  = "WORD";
+    // Fin [Req.S17-007]
+}
diff --git a/FINANCIERONEW/src/financ/util/FormatoFecha.java b/FINANCIERONEW/src/financ/util/FormatoFecha.java
index 3b1b13d..0e4ce28 100644
--- a/FINANCIERONEW/src/financ/util/FormatoFecha.java
+++ b/FINANCIERONEW/src/financ/util/FormatoFecha.java
@@ -180,6 +180,21 @@
 
 		return new SimpleDateFormat("dd/MM/yyyy hh:mm:ss").format(date);
 	}
+	
+	//[Req.S17-007] kdelacruz 21.03.2017
+    public static String longToStringHHMMSS(Long milliseconds) {
+        if (milliseconds == null)
+            return null;
+
+        Long dias = milliseconds / 86400000L;
+        Long restoDias = milliseconds % 86400000L;
+        Long hora = restoDias / 3600000L;
+        Long restohora = milliseconds % 3600000L;
+        Long minuto = restohora / 60000;
+
+        String tiempo = dias + " dia(s) " + hora + " hora(s) " + minuto + "minuto(s)";
+        return tiempo;
+    }
 
 	//fvalle 08.11.2010 Nuevo formato de fecha con 24 horas
 	public static String dateToStringDDMMYYYY24HHMMSS(Date date){
diff --git a/FINANCIERONEW/src/financ/util/file/bean/BeanCBFile.java b/FINANCIERONEW/src/financ/util/file/bean/BeanCBFile.java
new file mode 100644
index 0000000..e5d0b85
--- /dev/null
+++ b/FINANCIERONEW/src/financ/util/file/bean/BeanCBFile.java
@@ -0,0 +1,70 @@
+package financ.util.file.bean;
+
+import java.io.Serializable;
+
+/**
+ * BeanCBFile
+ * 
+ * @autor kdelacruz
+ * @since [Req.17-007] 06.03.2017 Implementación WorkFlow Legal
+ */
+
+public class BeanCBFile implements Serializable {
+
+    private static final long serialVersionUID = 4293399706481001501L;
+    private String idFile;
+    private String nombre;
+    private byte[] contenido;
+    private String extension;
+    private String contentType;
+    private Long size;
+
+    public String getIdFile() {
+        return idFile;
+    }
+
+    public void setIdFile(String idFile) {
+        this.idFile = idFile;
+    }
+
+    public String getNombre() {
+        return nombre;
+    }
+
+    public void setNombre(String nombre) {
+        this.nombre = nombre;
+    }
+
+    public byte[] getContenido() {
+        return contenido;
+    }
+
+    public void setContenido(byte[] contenido) {
+        this.contenido = contenido;
+    }
+
+    public String getExtension() {
+        return extension;
+    }
+
+    public void setExtension(String extension) {
+        this.extension = extension;
+    }
+
+    public String getContentType() {
+        return contentType;
+    }
+
+    public void setContentType(String contentType) {
+        this.contentType = contentType;
+    }
+
+    public Long getSize() {
+        return size;
+    }
+
+    public void setSize(Long size) {
+        this.size = size;
+    }
+
+}
diff --git a/FINANCIERONEW/src/financ/util/file/bean/BeanCBFileTemporal.java b/FINANCIERONEW/src/financ/util/file/bean/BeanCBFileTemporal.java
new file mode 100644
index 0000000..3181259
--- /dev/null
+++ b/FINANCIERONEW/src/financ/util/file/bean/BeanCBFileTemporal.java
@@ -0,0 +1,70 @@
+package financ.util.file.bean;
+
+import java.io.Serializable;
+
+/**
+ * BeanCBFileTemporal
+ * 
+ * @autor kdelacruz
+ * @since [Req.17-007] 06.03.2017 Implementación WorkFlow Legal
+ */
+
+public class BeanCBFileTemporal implements Serializable {
+
+    private static final long serialVersionUID = 3013132412555085373L;
+    private String idFile;
+    private String nombre;
+    private byte[] contenido;
+    private String extension;
+    private String contentType;
+    private Long size;
+
+    public String getIdFile() {
+        return idFile;
+    }
+
+    public void setIdFile(String idFile) {
+        this.idFile = idFile;
+    }
+
+    public String getNombre() {
+        return nombre;
+    }
+
+    public void setNombre(String nombre) {
+        this.nombre = nombre;
+    }
+
+    public byte[] getContenido() {
+        return contenido;
+    }
+
+    public void setContenido(byte[] contenido) {
+        this.contenido = contenido;
+    }
+
+    public String getExtension() {
+        return extension;
+    }
+
+    public void setExtension(String extension) {
+        this.extension = extension;
+    }
+
+    public String getContentType() {
+        return contentType;
+    }
+
+    public void setContentType(String contentType) {
+        this.contentType = contentType;
+    }
+
+    public Long getSize() {
+        return size;
+    }
+
+    public void setSize(Long size) {
+        this.size = size;
+    }
+
+}
diff --git a/FINANCIERONEW/src/financ/util/file/entity/CBFile.java b/FINANCIERONEW/src/financ/util/file/entity/CBFile.java
new file mode 100644
index 0000000..cddc6bb
--- /dev/null
+++ b/FINANCIERONEW/src/financ/util/file/entity/CBFile.java
@@ -0,0 +1,97 @@
+package financ.util.file.entity;
+
+import javax.persistence.Column;
+import javax.persistence.Entity;
+import javax.persistence.Id;
+import javax.persistence.Table;
+
+import pe.com.tfc.utils.Auditable;
+
+/**
+ * CBFile
+ * 
+ * @author kdelacruz
+ * @since [Req.17-007] 06.03.2017 Implementación WorkFlow Legal
+ */
+
+@Entity
+@Table(name = "CBDFILE", schema = "DFIN")
+public class CBFile extends Auditable {
+
+    /**
+     * 
+     */
+    private static final long serialVersionUID = 6806668131354077298L;
+    private String idFile;
+    private String codigoEmpresa;
+    private String nombre;
+    private byte[] contenido;
+    private String contentType;
+    private String extension;
+    private Long size;
+
+    @Id
+    @Column(name = "C_IDFILE", nullable = false, length = 15)
+    public String getIdFile() {
+        return idFile;
+    }
+
+    public void setIdFile(String idFile) {
+        this.idFile = idFile;
+    }
+
+    @Column(name = "C_CODEMP", nullable = false, length = 3)
+    public String getCodigoEmpresa() {
+        return codigoEmpresa;
+    }
+
+    public void setCodigoEmpresa(String codigoEmpresa) {
+        this.codigoEmpresa = codigoEmpresa;
+    }
+
+    @Column(name = "C_NOMBRE", nullable = false, length = 200)
+    public String getNombre() {
+        return nombre;
+    }
+
+    public void setNombre(String nombre) {
+        this.nombre = nombre;
+    }
+
+    @Column(name = "B_CONTEN", nullable = false, length = 4000)
+    public byte[] getContenido() {
+        return contenido;
+    }
+
+    public void setContenido(byte[] contenido) {
+        this.contenido = contenido;
+    }
+
+    @Column(name = "C_EXTENS", nullable = false, length = 100)
+    public String getExtension() {
+        return extension;
+    }
+
+    public void setExtension(String extension) {
+        this.extension = extension;
+    }
+
+    @Column(name = "C_CONTYP", nullable = false, length = 100)
+    public String getContentType() {
+        return contentType;
+    }
+
+    public void setContentType(String contentType) {
+        this.contentType = contentType;
+    }
+
+    @Column(name = "N_SIZEAR", nullable = false, length = 9)
+    public Long getSize() {
+        return size;
+    }
+
+    public void setSize(Long size) {
+        this.size = size;
+    }
+
+}
diff --git a/FINANCIERONEW/src/financ/util/file/entity/CBFileTemporal.java b/FINANCIERONEW/src/financ/util/file/entity/CBFileTemporal.java
new file mode 100644
index 0000000..fd5d5bf
--- /dev/null
+++ b/FINANCIERONEW/src/financ/util/file/entity/CBFileTemporal.java
@@ -0,0 +1,97 @@
+package financ.util.file.entity;
+
+import javax.persistence.Column;
+import javax.persistence.Entity;
+import javax.persistence.Id;
+import javax.persistence.Table;
+
+import pe.com.tfc.utils.Auditable;
+
+/**
+ * CBFileTemporal
+ * 
+ * @author kdelacruz
+ * @since [Req.17-007] 06.03.2017
+ */
+
+@Entity
+@Table(name = "CBDFILE_TMP", schema = "DFIN")
+public class CBFileTemporal extends Auditable {
+
+    /**
+     * 
+     */
+    private static final long serialVersionUID = 6806668131354077298L;
+    private String idFile;
+    private String codigoEmpresa;
+    private String nombre;
+    private byte[] contenido;
+    private String extension;
+    private String contentType;
+    private Long size;
+
+    @Id
+    @Column(name = "C_IDFILE", nullable = false, length = 15)
+    public String getIdFile() {
+        return idFile;
+    }
+
+    public void setIdFile(String idFile) {
+        this.idFile = idFile;
+    }
+
+    @Column(name = "C_CODEMP", nullable = false, length = 3)
+    public String getCodigoEmpresa() {
+        return codigoEmpresa;
+    }
+
+    public void setCodigoEmpresa(String codigoEmpresa) {
+        this.codigoEmpresa = codigoEmpresa;
+    }
+
+    @Column(name = "C_NOMBRE", nullable = false, length = 200)
+    public String getNombre() {
+        return nombre;
+    }
+
+    public void setNombre(String nombre) {
+        this.nombre = nombre;
+    }
+
+    @Column(name = "B_CONTEN", nullable = false, length = 4000)
+    public byte[] getContenido() {
+        return contenido;
+    }
+
+    public void setContenido(byte[] contenido) {
+        this.contenido = contenido;
+    }
+
+    @Column(name = "C_EXTENS", nullable = false, length = 100)
+    public String getExtension() {
+        return extension;
+    }
+
+    public void setExtension(String extension) {
+        this.extension = extension;
+    }
+
+    @Column(name = "C_CONTYP", nullable = false, length = 100)
+    public String getContentType() {
+        return contentType;
+    }
+
+    public void setContentType(String contentType) {
+        this.contentType = contentType;
+    }
+
+    @Column(name = "N_SIZEAR", nullable = false, length = 9)
+    public Long getSize() {
+        return size;
+    }
+
+    public void setSize(Long size) {
+        this.size = size;
+    }
+
+}
diff --git a/FINANCIERONEW/src/financ/util/file/facade/CBFileFacade.java b/FINANCIERONEW/src/financ/util/file/facade/CBFileFacade.java
new file mode 100644
index 0000000..c06adb0
--- /dev/null
+++ b/FINANCIERONEW/src/financ/util/file/facade/CBFileFacade.java
@@ -0,0 +1,102 @@
+package financ.util.file.facade;
+
+import javax.ejb.EJB;
+import javax.ejb.Stateless;
+
+import pe.com.tfc.utils.AbstractFacade;
+import pe.com.tfc.utils.ErrorControladoException;
+import admin.contab.beans.BeanParametrosAuditoria;
+import admin.util.ConstantesErrores;
+import financ.util.Constante;
+import financ.util.file.bean.BeanCBFile;
+import financ.util.file.entity.CBFile;
+import financ.util.file.entity.CBFileTemporal;
+import financ.util.file.local.CBFileFacadeInterfaceLocal;
+import financ.util.file.local.CBFileInterfaceLocal;
+import financ.util.file.local.CBFileTemporalInterfaceLocal;
+
+/**
+ * CBFileFacade
+ * 
+ * @author kdelacruz
+ * @since [Req.17-007] 06.03.2017
+ */
+
+@Stateless
+public class CBFileFacade extends AbstractFacade<CBFile> implements CBFileFacadeInterfaceLocal {
+
+    public static final String LocalJNDIName = CBFileFacade.class.getSimpleName() + "/local";
+
+    @EJB
+    private CBFileInterfaceLocal cbFileInterfaceLocal;
+    @EJB
+    private CBFileTemporalInterfaceLocal cbFileTemporalInterfaceLocal;
+
+    public String guardarFromTemporal(String idFileTemporal, BeanParametrosAuditoria beanParametrosAuditoria) throws Exception {
+        String modulo = "CBFileFacade.guardarFromTemporal()";
+        String usuario = beanParametrosAuditoria.getUsuarioInsercion();
+        String correlativo;
+        try {
+            CBFileTemporal cbFileTemporal = cbFileTemporalInterfaceLocal.findById(idFileTemporal);
+
+            if (_isEmpty(cbFileTemporal)) {
+                throw new ErrorControladoException(ConstantesErrores.ERROR_11143);
+            }
+
+            CBFile cbFile = new CBFile();
+
+            correlativo = generarCorrelativo("CBFILE", 15, beanParametrosAuditoria);
+
+            cbFile.setIdFile(correlativo);
+            cbFile.setContenido(cbFileTemporal.getContenido());
+            cbFile.setNombre(cbFileTemporal.getNombre());
+            cbFile.setExtension(cbFileTemporal.getExtension());
+            cbFile.setContentType(cbFileTemporal.getContentType());
+            cbFile.setSize(cbFileTemporal.getSize());
+
+            cbFile.setEstadoRegistro(Constante.INDICADOR_ESTADO_ACTIVO);
+            cbFile.setCodigoEmpresa(beanParametrosAuditoria.getCodigoEmpresa());
+            cbFile.setUsuarioInsercion(beanParametrosAuditoria.getUsuarioInsercion());
+            cbFile.setFechaInsercion(beanParametrosAuditoria.getFechaInsercion());
+            cbFile.setTerminalInsercion(beanParametrosAuditoria.getTerminalInsercion());
+            cbFile.setIpInsercion(beanParametrosAuditoria.getIpInsercion());
+
+            cbFileInterfaceLocal.save(cbFile);
+
+            cbFileTemporalInterfaceLocal.delete(cbFileTemporal.getIdFile());
+        } catch (Exception e) {
+            throw handlerError(e, usuario, modulo);
+        }
+        return correlativo;
+    }
+
+    public BeanCBFile get(String idFile, BeanParametrosAuditoria beanParametrosAuditoria) throws Exception {
+        String modulo = "CBFileFacade.get()";
+        String usuario = beanParametrosAuditoria.getUsuarioInsercion();
+        BeanCBFile beanCBFile = null;
+        try {
+            CBFile CBFile = cbFileInterfaceLocal.findById(idFile);
+            beanCBFile = getBeanCBFile(CBFile);
+        } catch (Exception e) {
+            throw handlerError(e, usuario, modulo);
+        }
+        return beanCBFile;
+    }
+
+    private BeanCBFile getBeanCBFile(CBFile CBFile) {
+        BeanCBFile beanCBFile = new BeanCBFile();
+        if (_isEmpty(CBFile)) {
+            return beanCBFile;
+        }
+
+        beanCBFile.setIdFile(CBFile.getIdFile());
+        beanCBFile.setNombre(CBFile.getNombre());
+        beanCBFile.setContenido(CBFile.getContenido());
+        beanCBFile.setExtension(CBFile.getExtension());
+        beanCBFile.setContentType(CBFile.getContentType());
+        beanCBFile.setSize(CBFile.getSize());
+
+        return beanCBFile;
+    }
+
+}
diff --git a/FINANCIERONEW/src/financ/util/file/facade/CBFileTemporalFacade.java b/FINANCIERONEW/src/financ/util/file/facade/CBFileTemporalFacade.java
new file mode 100644
index 0000000..cfe654c
--- /dev/null
+++ b/FINANCIERONEW/src/financ/util/file/facade/CBFileTemporalFacade.java
@@ -0,0 +1,106 @@
+package financ.util.file.facade;
+
+import javax.ejb.EJB;
+import javax.ejb.Stateless;
+
+import pe.com.tfc.utils.AbstractFacade;
+import pe.com.tfc.utils.FormFile;
+import admin.contab.beans.BeanParametrosAuditoria;
+import financ.util.Constante;
+import financ.util.file.bean.BeanCBFileTemporal;
+import financ.util.file.entity.CBFile;
+import financ.util.file.entity.CBFileTemporal;
+import financ.util.file.local.CBFileTemporalFacadeInterfaceLocal;
+import financ.util.file.local.CBFileTemporalInterfaceLocal;
+
+/**
+ * CBFileTemporalFacade
+ * 
+ * @author kdelacruz
+ * @since [Req.17-007] 06.03.2017 Implementación WorkFlow Legal
+ */
+
+@Stateless
+public class CBFileTemporalFacade extends AbstractFacade<CBFileTemporal> implements CBFileTemporalFacadeInterfaceLocal {
+
+    public static final String LocalJNDIName = CBFileTemporalFacade.class.getSimpleName() + "/local";
+
+    @EJB
+    private CBFileTemporalInterfaceLocal cbFileTemporalInterfaceLocal;
+
+    public String guardar(FormFile formFile, BeanParametrosAuditoria beanParametrosAuditoria) throws Exception {
+        String modulo = "CBFileTemporalFacade.guardar()";
+        String usuario = beanParametrosAuditoria.getUsuarioInsercion();
+        String correlativo;
+        try {
+            CBFileTemporal cbFileTemporal = new CBFileTemporal();
+
+            correlativo = generarCorrelativo("CBFILE_TMP", 15, beanParametrosAuditoria);
+
+            cbFileTemporal.setIdFile(correlativo);
+            cbFileTemporal.setContenido(formFile.getBytes());
+            cbFileTemporal.setNombre(formFile.getName());
+            cbFileTemporal.setExtension(formFile.getExtension());
+            cbFileTemporal.setContentType(formFile.getContentType());
+            cbFileTemporal.setSize(formFile.getSize());
+
+            cbFileTemporal.setEstadoRegistro(Constante.INDICADOR_ESTADO_ACTIVO);
+            cbFileTemporal.setCodigoEmpresa(beanParametrosAuditoria.getCodigoEmpresa());
+            cbFileTemporal.setUsuarioInsercion(beanParametrosAuditoria.getUsuarioInsercion());
+            cbFileTemporal.setFechaInsercion(beanParametrosAuditoria.getFechaInsercion());
+            cbFileTemporal.setTerminalInsercion(beanParametrosAuditoria.getTerminalInsercion());
+            cbFileTemporal.setIpInsercion(beanParametrosAuditoria.getIpInsercion());
+
+            cbFileTemporalInterfaceLocal.save(cbFileTemporal);
+        } catch (Exception e) {
+            throw handlerError(e, usuario, modulo);
+        }
+        return correlativo;
+    }
+
+    public BeanCBFileTemporal get(String idFile, BeanParametrosAuditoria beanParametrosAuditoria) throws Exception {
+        String modulo = "CBFileTemporalFacade.get()";
+        String usuario = beanParametrosAuditoria.getUsuarioInsercion();
+        BeanCBFileTemporal beanCBFileTemporal = null;
+        try {
+            CBFileTemporal cbFileTemporal = cbFileTemporalInterfaceLocal.findById(idFile);
+            beanCBFileTemporal = getBeanCBFileTemporal(cbFileTemporal);
+        } catch (Exception e) {
+            throw handlerError(e, usuario, modulo);
+        }
+        return beanCBFileTemporal;
+    }
+
+    public CBFile getCBFile(CBFileTemporal cbFileTemporal) {
+        CBFile cbFile = new CBFile();
+        if (_isEmpty(cbFileTemporal)) {
+            return cbFile;
+        }
+
+        cbFile.setIdFile(cbFileTemporal.getIdFile());
+        cbFile.setNombre(cbFileTemporal.getNombre());
+        cbFile.setContenido(cbFileTemporal.getContenido());
+        cbFile.setExtension(cbFileTemporal.getExtension());
+        cbFile.setContentType(cbFileTemporal.getContentType());
+        cbFile.setSize(cbFileTemporal.getSize());
+
+        return cbFile;
+    }
+
+    private BeanCBFileTemporal getBeanCBFileTemporal(CBFileTemporal cbFileTemporal) {
+        BeanCBFileTemporal beanCBFileTemporal = new BeanCBFileTemporal();
+        if (_isEmpty(cbFileTemporal)) {
+            return beanCBFileTemporal;
+        }
+
+        beanCBFileTemporal.setIdFile(cbFileTemporal.getIdFile());
+        beanCBFileTemporal.setNombre(cbFileTemporal.getNombre());
+        beanCBFileTemporal.setContenido(cbFileTemporal.getContenido());
+        beanCBFileTemporal.setExtension(cbFileTemporal.getExtension());
+        beanCBFileTemporal.setContentType(cbFileTemporal.getContentType());
+        beanCBFileTemporal.setSize(cbFileTemporal.getSize());
+
+        return beanCBFileTemporal;
+    }
+
+}
diff --git a/FINANCIERONEW/src/financ/util/file/local/CBFileFacadeInterfaceLocal.java b/FINANCIERONEW/src/financ/util/file/local/CBFileFacadeInterfaceLocal.java
new file mode 100644
index 0000000..9fbedce
--- /dev/null
+++ b/FINANCIERONEW/src/financ/util/file/local/CBFileFacadeInterfaceLocal.java
@@ -0,0 +1,22 @@
+package financ.util.file.local;
+
+import javax.ejb.Local;
+
+import admin.contab.beans.BeanParametrosAuditoria;
+import financ.util.file.bean.BeanCBFile;
+
+/**
+ * CBFileFacadeInterfaceLocal
+ * 
+ * @autor kdelacruz
+ * @since [Req.17-007] 06.03.2017 Implementación WorkFlow Legal
+ */
+
+@Local
+public interface CBFileFacadeInterfaceLocal {
+
+    public String guardarFromTemporal(String idFileTemporal, BeanParametrosAuditoria beanParametrosAuditoria) throws Exception;
+
+    public BeanCBFile get(String idFile, BeanParametrosAuditoria beanParametrosAuditoria) throws Exception;
+
+}
diff --git a/FINANCIERONEW/src/financ/util/file/local/CBFileInterfaceLocal.java b/FINANCIERONEW/src/financ/util/file/local/CBFileInterfaceLocal.java
new file mode 100644
index 0000000..7561b5b
--- /dev/null
+++ b/FINANCIERONEW/src/financ/util/file/local/CBFileInterfaceLocal.java
@@ -0,0 +1,18 @@
+package financ.util.file.local;
+
+import javax.ejb.Local;
+
+import pe.com.tfc.utils.GenericInterface;
+import financ.util.file.entity.CBFile;
+
+/**
+ * CBFileInterfaceLocal
+ *
+ * @author kdelacruz
+ * @since [Req.17-007] 06.03.2017 Implementación WorkFlow Legal
+ */
+
+@Local
+public interface CBFileInterfaceLocal extends GenericInterface<CBFile, String>{
+
+}
diff --git a/FINANCIERONEW/src/financ/util/file/local/CBFileTemporalFacadeInterfaceLocal.java b/FINANCIERONEW/src/financ/util/file/local/CBFileTemporalFacadeInterfaceLocal.java
new file mode 100644
index 0000000..45793ec
--- /dev/null
+++ b/FINANCIERONEW/src/financ/util/file/local/CBFileTemporalFacadeInterfaceLocal.java
@@ -0,0 +1,27 @@
+package financ.util.file.local;
+
+import javax.ejb.Local;
+
+import pe.com.tfc.utils.FormFile;
+import admin.contab.beans.BeanParametrosAuditoria;
+import financ.util.file.bean.BeanCBFileTemporal;
+import financ.util.file.entity.CBFile;
+import financ.util.file.entity.CBFileTemporal;
+
+/**
+ * CBFileTemporalFacadeInterfaceLocal
+ * 
+ * @autor kdelacruz
+ * @since [Req.17-007] 06.03.2017 Implementación WorkFlow Legal
+ */
+
+@Local
+public interface CBFileTemporalFacadeInterfaceLocal {
+
+    public String guardar(FormFile formFile, BeanParametrosAuditoria beanParametrosAuditoria) throws Exception;
+
+    public BeanCBFileTemporal get(String idFile, BeanParametrosAuditoria beanParametrosAuditoria) throws Exception;
+
+    public CBFile getCBFile(CBFileTemporal cbFileTemporal);
+
+}
diff --git a/FINANCIERONEW/src/financ/util/file/local/CBFileTemporalInterfaceLocal.java b/FINANCIERONEW/src/financ/util/file/local/CBFileTemporalInterfaceLocal.java
new file mode 100644
index 0000000..8016294
--- /dev/null
+++ b/FINANCIERONEW/src/financ/util/file/local/CBFileTemporalInterfaceLocal.java
@@ -0,0 +1,18 @@
+package financ.util.file.local;
+
+import javax.ejb.Local;
+
+import pe.com.tfc.utils.GenericInterface;
+import financ.util.file.entity.CBFileTemporal;
+
+/**
+ * CBFileTemporalInterfaceLocal
+ * 
+ * @author kdelacruz
+ * @since [Req.17-007] 06.03.2017 Implementación WorkFlow Legal
+ */
+
+@Local
+public interface CBFileTemporalInterfaceLocal extends GenericInterface<CBFileTemporal, String> {
+
+}
diff --git a/FINANCIERONEW/src/financ/util/file/session/CBFileSession.java b/FINANCIERONEW/src/financ/util/file/session/CBFileSession.java
new file mode 100644
index 0000000..677301f
--- /dev/null
+++ b/FINANCIERONEW/src/financ/util/file/session/CBFileSession.java
@@ -0,0 +1,23 @@
+package financ.util.file.session;
+
+import javax.ejb.Stateless;
+
+import pe.com.tfc.utils.AbstractSession;
+import financ.util.file.entity.CBFile;
+import financ.util.file.local.CBFileInterfaceLocal;
+
+/**
+ * CBFileSession
+ *
+ * @autor kdelacruz
+ * @since [Req.17-007] 06.03.2017 Implementación WorkFlow Legal
+ */
+
+@Stateless
+public class CBFileSession extends AbstractSession<CBFile, String> implements CBFileInterfaceLocal {
+
+    private CBFileSession() {
+        super(CBFile.class);
+    }
+
+}
diff --git a/FINANCIERONEW/src/financ/util/file/session/CBFileTemporalSession.java b/FINANCIERONEW/src/financ/util/file/session/CBFileTemporalSession.java
new file mode 100644
index 0000000..5f1b083
--- /dev/null
+++ b/FINANCIERONEW/src/financ/util/file/session/CBFileTemporalSession.java
@@ -0,0 +1,23 @@
+package financ.util.file.session;
+
+import javax.ejb.Stateless;
+
+import pe.com.tfc.utils.AbstractSession;
+import financ.util.file.entity.CBFileTemporal;
+import financ.util.file.local.CBFileTemporalInterfaceLocal;
+
+/**
+ * CBFileTemporalSession
+ * 
+ * @autor kdelacruz
+ * @since [Req.17-007] 06.03.2017 Implementación WorkFlow Legal
+ */
+
+@Stateless
+public class CBFileTemporalSession extends AbstractSession<CBFileTemporal, String> implements CBFileTemporalInterfaceLocal {
+
+    private CBFileTemporalSession() {
+        super(CBFileTemporal.class);
+    }
+
+}
diff --git a/FINANCIERONEW/src/financ/workflow/bean/BeanWFDetalleComentario.java b/FINANCIERONEW/src/financ/workflow/bean/BeanWFDetalleComentario.java
new file mode 100644
index 0000000..04ea240
--- /dev/null
+++ b/FINANCIERONEW/src/financ/workflow/bean/BeanWFDetalleComentario.java
@@ -0,0 +1,66 @@
+package financ.workflow.bean;
+
+import java.io.Serializable;
+
+/**
+ * BeanWFDetalleComentario
+ * 
+ * @autor kdelacruz
+ * @since [Req.17-007] 14.03.2017 Implementación WorkFlow Legal
+ */
+
+public class BeanWFDetalleComentario implements Serializable {
+
+    /**
+     * 
+     */
+    private static final long serialVersionUID = -3961880780600680440L;
+    /**/
+
+    private String idCorrelativo;
+    private String idMaestra;
+    private String codigoEmpresa;
+    private String idEtapa;
+    private String textoComentario;
+
+    public String getIdCorrelativo() {
+        return idCorrelativo;
+    }
+
+    public void setIdCorrelativo(String idCorrelativo) {
+        this.idCorrelativo = idCorrelativo;
+    }
+
+    public String getIdMaestra() {
+        return idMaestra;
+    }
+
+    public void setIdMaestra(String idMaestra) {
+        this.idMaestra = idMaestra;
+    }
+
+    public String getCodigoEmpresa() {
+        return codigoEmpresa;
+    }
+
+    public void setCodigoEmpresa(String codigoEmpresa) {
+        this.codigoEmpresa = codigoEmpresa;
+    }
+
+    public String getIdEtapa() {
+        return idEtapa;
+    }
+
+    public void setIdEtapa(String idEtapa) {
+        this.idEtapa = idEtapa;
+    }
+
+    public String getTextoComentario() {
+        return textoComentario;
+    }
+
+    public void setTextoComentario(String textoComentario) {
+        this.textoComentario = textoComentario;
+    }
+
+}
diff --git a/FINANCIERONEW/src/financ/workflow/bean/BeanWFDetalleMailPorRuta.java b/FINANCIERONEW/src/financ/workflow/bean/BeanWFDetalleMailPorRuta.java
new file mode 100644
index 0000000..65e9cc5
--- /dev/null
+++ b/FINANCIERONEW/src/financ/workflow/bean/BeanWFDetalleMailPorRuta.java
@@ -0,0 +1,55 @@
+package financ.workflow.bean;
+
+import java.io.Serializable;
+
+/**
+ * BeanWFDetalleMailPorRuta
+ * 
+ * @autor kdelacruz
+ * @since [S17-007] 22.03.2017 Implementación WorkFlow Legal
+ */
+
+public class BeanWFDetalleMailPorRuta implements Serializable {
+
+    /**
+     * 
+     */
+    private static final long serialVersionUID = -3222752163563962139L;
+    private String idMail;
+    private String codigoEmpresa;
+    private String usuarioMail;
+    private String idRuta;
+
+    public String getIdMail() {
+        return idMail;
+    }
+
+    public void setIdMail(String idMail) {
+        this.idMail = idMail;
+    }
+
+    public String getCodigoEmpresa() {
+        return codigoEmpresa;
+    }
+
+    public void setCodigoEmpresa(String codigoEmpresa) {
+        this.codigoEmpresa = codigoEmpresa;
+    }
+
+    public String getUsuarioMail() {
+        return usuarioMail;
+    }
+
+    public void setUsuarioMail(String usuarioMail) {
+        this.usuarioMail = usuarioMail;
+    }
+
+    public String getIdRuta() {
+        return idRuta;
+    }
+
+    public void setIdRuta(String idRuta) {
+        this.idRuta = idRuta;
+    }
+
+}
diff --git a/FINANCIERONEW/src/financ/workflow/bean/BeanWFDocumentoPorEtapa.java b/FINANCIERONEW/src/financ/workflow/bean/BeanWFDocumentoPorEtapa.java
new file mode 100644
index 0000000..5a0fc27
--- /dev/null
+++ b/FINANCIERONEW/src/financ/workflow/bean/BeanWFDocumentoPorEtapa.java
@@ -0,0 +1,65 @@
+package financ.workflow.bean;
+
+import java.io.Serializable;
+
+/**
+ * BeanWFDocumentoPorEtapa
+ * 
+ * @autor kdelacruz
+ * @since [Req.17-007] 06.03.2017 Implementación WorkFlow Legal
+ */
+
+public class BeanWFDocumentoPorEtapa implements Serializable {
+
+    /**
+     * 
+     */
+    private static final long serialVersionUID = -2940346479944940148L;
+
+    private String idDocumentoXEtapa;
+    private String codigoEmpresa;
+    private String idTipoDocumento;
+    private String idEtapa;
+    private Integer numeroOrden;
+
+    public String getIdDocumentoXEtapa() {
+        return idDocumentoXEtapa;
+    }
+
+    public void setIdDocumentoXEtapa(String idDocumentoXEtapa) {
+        this.idDocumentoXEtapa = idDocumentoXEtapa;
+    }
+
+    public String getCodigoEmpresa() {
+        return codigoEmpresa;
+    }
+
+    public void setCodigoEmpresa(String codigoEmpresa) {
+        this.codigoEmpresa = codigoEmpresa;
+    }
+
+    public String getIdTipoDocumento() {
+        return idTipoDocumento;
+    }
+
+    public void setIdTipoDocumento(String idTipoDocumento) {
+        this.idTipoDocumento = idTipoDocumento;
+    }
+
+    public String getIdEtapa() {
+        return idEtapa;
+    }
+
+    public void setIdEtapa(String idEtapa) {
+        this.idEtapa = idEtapa;
+    }
+
+    public Integer getNumeroOrden() {
+        return numeroOrden;
+    }
+
+    public void setNumeroOrden(Integer numeroOrden) {
+        this.numeroOrden = numeroOrden;
+    }
+
+}
diff --git a/FINANCIERONEW/src/financ/workflow/bean/BeanWFDocumentos.java b/FINANCIERONEW/src/financ/workflow/bean/BeanWFDocumentos.java
new file mode 100644
index 0000000..28cbaff
--- /dev/null
+++ b/FINANCIERONEW/src/financ/workflow/bean/BeanWFDocumentos.java
@@ -0,0 +1,99 @@
+package financ.workflow.bean;
+
+import java.io.Serializable;
+import java.util.Date;
+
+/**
+ * BeanWFDocumentos
+ * 
+ * @autor kdelacruz
+ * @since [Req.17-007] 06.03.2017 Implementación WorkFlow Legal
+ */
+
+public class BeanWFDocumentos implements Serializable {
+
+    private static final long serialVersionUID = -8719991274637722965L;
+    private String idDocumento;
+    private String codigoEmpresa;
+    private String idMaestra;
+    private String idTipoDocumento;
+    private String idEtapa;
+    private String idArchivo;
+
+    private Date fechaInsercion;
+    private String usuarioInsercion;
+    private String descripcionTipoDocumento;
+
+    public String getIdDocumento() {
+        return idDocumento;
+    }
+
+    public void setIdDocumento(String idDocumento) {
+        this.idDocumento = idDocumento;
+    }
+
+    public String getCodigoEmpresa() {
+        return codigoEmpresa;
+    }
+
+    public void setCodigoEmpresa(String codigoEmpresa) {
+        this.codigoEmpresa = codigoEmpresa;
+    }
+
+    public String getIdMaestra() {
+        return idMaestra;
+    }
+
+    public void setIdMaestra(String idMaestra) {
+        this.idMaestra = idMaestra;
+    }
+
+    public String getIdTipoDocumento() {
+        return idTipoDocumento;
+    }
+
+    public void setIdTipoDocumento(String idTipoDocumento) {
+        this.idTipoDocumento = idTipoDocumento;
+    }
+
+    public String getIdEtapa() {
+        return idEtapa;
+    }
+
+    public void setIdEtapa(String idEtapa) {
+        this.idEtapa = idEtapa;
+    }
+
+    public String getIdArchivo() {
+        return idArchivo;
+    }
+
+    public void setIdArchivo(String idArchivo) {
+        this.idArchivo = idArchivo;
+    }
+
+    public String getUsuarioInsercion() {
+        return usuarioInsercion;
+    }
+
+    public void setUsuarioInsercion(String usuarioInsercion) {
+        this.usuarioInsercion = usuarioInsercion;
+    }
+
+    public String getDescripcionTipoDocumento() {
+        return descripcionTipoDocumento;
+    }
+
+    public void setDescripcionTipoDocumento(String descripcionTipoDocumento) {
+        this.descripcionTipoDocumento = descripcionTipoDocumento;
+    }
+
+    public Date getFechaInsercion() {
+        return fechaInsercion;
+    }
+
+    public void setFechaInsercion(Date fechaInsercion) {
+        this.fechaInsercion = fechaInsercion;
+    }
+
+}
diff --git a/FINANCIERONEW/src/financ/workflow/bean/BeanWFEstado.java b/FINANCIERONEW/src/financ/workflow/bean/BeanWFEstado.java
new file mode 100644
index 0000000..53e1b62
--- /dev/null
+++ b/FINANCIERONEW/src/financ/workflow/bean/BeanWFEstado.java
@@ -0,0 +1,56 @@
+package financ.workflow.bean;
+
+import java.io.Serializable;
+
+/**
+ * BeanWFEstadoWorkflow
+ * 
+ * @autor kdelacruz
+ * @since [Req.17-007] 06.03.2017 Implementación WorkFlow Legal
+ */
+
+public class BeanWFEstado implements Serializable {
+
+    /**
+     * 
+     */
+    private static final long serialVersionUID = -5274026347625679479L;
+
+    private String idEstado;
+    private String codigoEmpresa;
+    private String descripcionEstado;
+    private String idModulo;
+
+    public String getIdEstado() {
+        return idEstado;
+    }
+
+    public void setIdEstado(String idEstado) {
+        this.idEstado = idEstado;
+    }
+
+    public String getCodigoEmpresa() {
+        return codigoEmpresa;
+    }
+
+    public void setCodigoEmpresa(String codigoEmpresa) {
+        this.codigoEmpresa = codigoEmpresa;
+    }
+
+    public String getDescripcionEstado() {
+        return descripcionEstado;
+    }
+
+    public void setDescripcionEstado(String descripcionEstado) {
+        this.descripcionEstado = descripcionEstado;
+    }
+
+    public String getIdModulo() {
+        return idModulo;
+    }
+
+    public void setIdModulo(String idModulo) {
+        this.idModulo = idModulo;
+    }
+
+}
diff --git a/FINANCIERONEW/src/financ/workflow/bean/BeanWFEtapa.java b/FINANCIERONEW/src/financ/workflow/bean/BeanWFEtapa.java
new file mode 100644
index 0000000..8715e06
--- /dev/null
+++ b/FINANCIERONEW/src/financ/workflow/bean/BeanWFEtapa.java
@@ -0,0 +1,64 @@
+package financ.workflow.bean;
+
+import java.io.Serializable;
+
+/**
+ * BeanWFEtapaWorkflow
+ * 
+ * @autor kdelacruz
+ * @since [Req.17-007] 06.03.2017 Implementación WorkFlow Legal
+ */
+
+public class BeanWFEtapa implements Serializable {
+
+    /**
+     * 
+     */
+    private static final long serialVersionUID = -7255711331341481381L;
+    private String idEtapa;
+    private String codigoEmpresa;
+    private String descripcionEtapa;
+    private String accionServlet;
+    private String idModulo;
+
+    public String getIdEtapa() {
+        return idEtapa;
+    }
+
+    public void setIdEtapa(String idEtapa) {
+        this.idEtapa = idEtapa;
+    }
+
+    public String getCodigoEmpresa() {
+        return codigoEmpresa;
+    }
+
+    public void setCodigoEmpresa(String codigoEmpresa) {
+        this.codigoEmpresa = codigoEmpresa;
+    }
+
+    public String getDescripcionEtapa() {
+        return descripcionEtapa;
+    }
+
+    public void setDescripcionEtapa(String descripcionEtapa) {
+        this.descripcionEtapa = descripcionEtapa;
+    }
+
+    public String getAccionServlet() {
+        return accionServlet;
+    }
+
+    public void setAccionServlet(String accionServlet) {
+        this.accionServlet = accionServlet;
+    }
+
+    public String getIdModulo() {
+        return idModulo;
+    }
+
+    public void setIdModulo(String idModulo) {
+        this.idModulo = idModulo;
+    }
+
+}
diff --git a/FINANCIERONEW/src/financ/workflow/bean/BeanWFEtapasPorRol.java b/FINANCIERONEW/src/financ/workflow/bean/BeanWFEtapasPorRol.java
new file mode 100644
index 0000000..433f553
--- /dev/null
+++ b/FINANCIERONEW/src/financ/workflow/bean/BeanWFEtapasPorRol.java
@@ -0,0 +1,55 @@
+package financ.workflow.bean;
+
+import java.io.Serializable;
+
+/**
+ * BeanWFEtapasPorRol
+ * 
+ * @autor kdelacruz
+ * @since [Req.17-007] 16.03.2017 Implementación WorkFlow Legal
+ */
+
+public class BeanWFEtapasPorRol implements Serializable {
+
+    /**
+     * 
+     */
+    private static final long serialVersionUID = -3436196615466181977L;
+    private String idEtapaRol;
+    private String codigoEmpresa;
+    private String idEtapa;
+    private String idRol;
+
+    public String getIdEtapaRol() {
+        return idEtapaRol;
+    }
+
+    public void setIdEtapaRol(String idEtapaRol) {
+        this.idEtapaRol = idEtapaRol;
+    }
+
+    public String getCodigoEmpresa() {
+        return codigoEmpresa;
+    }
+
+    public void setCodigoEmpresa(String codigoEmpresa) {
+        this.codigoEmpresa = codigoEmpresa;
+    }
+
+    public String getIdEtapa() {
+        return idEtapa;
+    }
+
+    public void setIdEtapa(String idEtapa) {
+        this.idEtapa = idEtapa;
+    }
+
+    public String getIdRol() {
+        return idRol;
+    }
+
+    public void setIdRol(String idRol) {
+        this.idRol = idRol;
+    }
+
+}
diff --git a/FINANCIERONEW/src/financ/workflow/bean/BeanWFEvento.java b/FINANCIERONEW/src/financ/workflow/bean/BeanWFEvento.java
new file mode 100644
index 0000000..a673b27
--- /dev/null
+++ b/FINANCIERONEW/src/financ/workflow/bean/BeanWFEvento.java
@@ -0,0 +1,80 @@
+package financ.workflow.bean;
+
+import java.io.Serializable;
+
+/**
+ * BeanWFEventoWorkflow
+ * 
+ * @autor kdelacruz
+ * @since [Req.17-007] 06.03.2017 Implementación WorkFlow Legal
+ */
+
+public class BeanWFEvento implements Serializable {
+
+    private static final long serialVersionUID = -7387309116823536699L;
+
+    private String idEvento;
+    private String codigoEmpresa;
+    private String nombreBoton;
+    private String nombrePrograma;
+    private String indicadorInvocar;
+    private String idModulo;
+    private Integer numeroOrden;
+
+    public String getIdEvento() {
+        return idEvento;
+    }
+
+    public void setIdEvento(String idEvento) {
+        this.idEvento = idEvento;
+    }
+
+    public String getCodigoEmpresa() {
+        return codigoEmpresa;
+    }
+
+    public void setCodigoEmpresa(String codigoEmpresa) {
+        this.codigoEmpresa = codigoEmpresa;
+    }
+
+    public String getNombreBoton() {
+        return nombreBoton;
+    }
+
+    public void setNombreBoton(String nombreBoton) {
+        this.nombreBoton = nombreBoton;
+    }
+
+    public String getIndicadorInvocar() {
+        return indicadorInvocar;
+    }
+
+    public void setIndicadorInvocar(String indicadorInvocar) {
+        this.indicadorInvocar = indicadorInvocar;
+    }
+
+    public String getNombrePrograma() {
+        return nombrePrograma;
+    }
+
+    public void setNombrePrograma(String nombrePrograma) {
+        this.nombrePrograma = nombrePrograma;
+    }
+
+    public String getIdModulo() {
+        return idModulo;
+    }
+
+    public void setIdModulo(String idModulo) {
+        this.idModulo = idModulo;
+    }
+
+    public Integer getNumeroOrden() {
+        return numeroOrden;
+    }
+
+    public void setNumeroOrden(Integer numeroOrden) {
+        this.numeroOrden = numeroOrden;
+    }
+
+}
diff --git a/FINANCIERONEW/src/financ/workflow/bean/BeanWFEventoPorEtapa.java b/FINANCIERONEW/src/financ/workflow/bean/BeanWFEventoPorEtapa.java
new file mode 100644
index 0000000..19da341
--- /dev/null
+++ b/FINANCIERONEW/src/financ/workflow/bean/BeanWFEventoPorEtapa.java
@@ -0,0 +1,74 @@
+package financ.workflow.bean;
+
+import java.io.Serializable;
+
+/**
+ * BeanWFEventoPorEtapa
+ * 
+ * @autor kdelacruz
+ * @since [Req.17-007] 06.03.2017 Implementación WorkFlow Legal
+ */
+
+public class BeanWFEventoPorEtapa implements Serializable {
+
+    /**
+     * 
+     */
+    private static final long serialVersionUID = 3989710681441089577L;
+
+    private String idEventoPorEtapa;
+    private String codigoEmpresa;
+    private String idEvento;
+    private String idEtapa;
+    private String idEstado;
+    private String codigoModuloReferenciaMail;
+
+    public String getIdEventoPorEtapa() {
+        return idEventoPorEtapa;
+    }
+
+    public void setIdEventoPorEtapa(String idEventoPorEtapa) {
+        this.idEventoPorEtapa = idEventoPorEtapa;
+    }
+
+    public String getCodigoEmpresa() {
+        return codigoEmpresa;
+    }
+
+    public void setCodigoEmpresa(String codigoEmpresa) {
+        this.codigoEmpresa = codigoEmpresa;
+    }
+
+    public String getIdEvento() {
+        return idEvento;
+    }
+
+    public void setIdEvento(String idEvento) {
+        this.idEvento = idEvento;
+    }
+
+    public String getIdEtapa() {
+        return idEtapa;
+    }
+
+    public void setIdEtapa(String idEtapa) {
+        this.idEtapa = idEtapa;
+    }
+
+    public String getIdEstado() {
+        return idEstado;
+    }
+
+    public void setIdEstado(String idEstado) {
+        this.idEstado = idEstado;
+    }
+
+    public String getCodigoModuloReferenciaMail() {
+        return codigoModuloReferenciaMail;
+    }
+
+    public void setCodigoModuloReferenciaMail(String codigoModuloReferenciaMail) {
+        this.codigoModuloReferenciaMail = codigoModuloReferenciaMail;
+    }
+
+}
diff --git a/FINANCIERONEW/src/financ/workflow/bean/BeanWFFlujoPorRuta.java b/FINANCIERONEW/src/financ/workflow/bean/BeanWFFlujoPorRuta.java
new file mode 100644
index 0000000..104c4e9
--- /dev/null
+++ b/FINANCIERONEW/src/financ/workflow/bean/BeanWFFlujoPorRuta.java
@@ -0,0 +1,65 @@
+package financ.workflow.bean;
+
+import java.io.Serializable;
+
+/**
+ * BeanWFFlujoPorRuta
+ * 
+ * @autor kdelacruz
+ * @since [Req.17-007] 06.03.2017 Implementación WorkFlow Legal
+ */
+
+public class BeanWFFlujoPorRuta implements Serializable {
+
+    /**
+     * 
+     */
+    private static final long serialVersionUID = 5046705843754847561L;
+
+    private String idFlujo;
+    private String codigoEmpresa;
+    private String idRuta;
+    private String idEtapa;
+    private Integer numeroOrden;
+
+    public String getIdFlujo() {
+        return idFlujo;
+    }
+
+    public void setIdFlujo(String idFlujo) {
+        this.idFlujo = idFlujo;
+    }
+
+    public String getCodigoEmpresa() {
+        return codigoEmpresa;
+    }
+
+    public void setCodigoEmpresa(String codigoEmpresa) {
+        this.codigoEmpresa = codigoEmpresa;
+    }
+
+    public String getIdRuta() {
+        return idRuta;
+    }
+
+    public void setIdRuta(String idRuta) {
+        this.idRuta = idRuta;
+    }
+
+    public String getIdEtapa() {
+        return idEtapa;
+    }
+
+    public void setIdEtapa(String idEtapa) {
+        this.idEtapa = idEtapa;
+    }
+
+    public Integer getNumeroOrden() {
+        return numeroOrden;
+    }
+
+    public void setNumeroOrden(Integer numeroOrden) {
+        this.numeroOrden = numeroOrden;
+    }
+
+}
diff --git a/FINANCIERONEW/src/financ/workflow/bean/BeanWFLegal.java b/FINANCIERONEW/src/financ/workflow/bean/BeanWFLegal.java
new file mode 100644
index 0000000..2715eaa
--- /dev/null
+++ b/FINANCIERONEW/src/financ/workflow/bean/BeanWFLegal.java
@@ -0,0 +1,246 @@
+package financ.workflow.bean;
+
+import java.io.Serializable;
+
+import financ.clientes.entity.CLPersonas;
+
+/**
+ * BeanWFLegal
+ * 
+ * @autor kdelacruz
+ * @since [Req.17-007] 06.03.2017 Implementación WorkFlow Legal
+ */
+
+public class BeanWFLegal implements Serializable {
+
+    private static final long serialVersionUID = -7880074418106645567L;
+    private String idMaestra;
+    private String codigoEmpresa;
+    private String fechaFirma;
+    private String fechaDocumento;
+    private String fechaBloqueo;
+    private String asientoBloqueo;
+    private String numeroPartidaBloqueo;
+    private String oficinaRegistral;
+    private String fechaEscritura;
+    private String fechaInscripcion;
+    private String asientoInscripcion;
+    private String codigoNotaria;
+    private String nombreNotaria;
+    private String numeroKardex;
+    private Double gastosNotariales;
+    private Double gastosRegistrales;
+    private String indicadorCancelacion;
+    private String tipoDocumentoComprobante;
+    private String idFileComprobantePago;
+    private String codigoTipoBien;
+    private String indicadorFinanciamiento;
+
+    private String tipoOperacion;
+    private String numeroOperacion;
+
+    private String codigoPersona;
+
+    private BeanWFMaestra beanWFMaestra;
+
+    public String getIdMaestra() {
+        return idMaestra;
+    }
+
+    public void setIdMaestra(String idMaestra) {
+        this.idMaestra = idMaestra;
+    }
+
+    public String getCodigoEmpresa() {
+        return codigoEmpresa;
+    }
+
+    public void setCodigoEmpresa(String codigoEmpresa) {
+        this.codigoEmpresa = codigoEmpresa;
+    }
+
+    public String getAsientoBloqueo() {
+        return asientoBloqueo;
+    }
+
+    public void setAsientoBloqueo(String asientoBloqueo) {
+        this.asientoBloqueo = asientoBloqueo;
+    }
+
+    public String getOficinaRegistral() {
+        return oficinaRegistral;
+    }
+
+    public void setOficinaRegistral(String oficinaRegistral) {
+        this.oficinaRegistral = oficinaRegistral;
+    }
+
+    public String getAsientoInscripcion() {
+        return asientoInscripcion;
+    }
+
+    public void setAsientoInscripcion(String asientoInscripcion) {
+        this.asientoInscripcion = asientoInscripcion;
+    }
+
+    public String getCodigoNotaria() {
+        return codigoNotaria;
+    }
+
+    public void setCodigoNotaria(String codigoNotaria) {
+        this.codigoNotaria = codigoNotaria;
+    }
+
+    public String getNombreNotaria() {
+        return nombreNotaria;
+    }
+
+    public void setNombreNotaria(String nombreNotaria) {
+        this.nombreNotaria = nombreNotaria;
+    }
+
+    public String getNumeroKardex() {
+        return numeroKardex;
+    }
+
+    public void setNumeroKardex(String numeroKardex) {
+        this.numeroKardex = numeroKardex;
+    }
+
+    public Double getGastosNotariales() {
+        return gastosNotariales;
+    }
+
+    public void setGastosNotariales(Double gastosNotariales) {
+        this.gastosNotariales = gastosNotariales;
+    }
+
+    public Double getGastosRegistrales() {
+        return gastosRegistrales;
+    }
+
+    public void setGastosRegistrales(Double gastosRegistrales) {
+        this.gastosRegistrales = gastosRegistrales;
+    }
+
+    public String getIndicadorCancelacion() {
+        return indicadorCancelacion;
+    }
+
+    public void setIndicadorCancelacion(String indicadorCancelacion) {
+        this.indicadorCancelacion = indicadorCancelacion;
+    }
+
+    public String getTipoDocumentoComprobante() {
+        return tipoDocumentoComprobante;
+    }
+
+    public void setTipoDocumentoComprobante(String tipoDocumentoComprobante) {
+        this.tipoDocumentoComprobante = tipoDocumentoComprobante;
+    }
+
+    public String getIdFileComprobantePago() {
+        return idFileComprobantePago;
+    }
+
+    public void setIdFileComprobantePago(String idFileComprobantePago) {
+        this.idFileComprobantePago = idFileComprobantePago;
+    }
+
+    public BeanWFMaestra getBeanWFMaestra() {
+        return beanWFMaestra;
+    }
+
+    public void setBeanWFMaestra(BeanWFMaestra beanWFMaestra) {
+        this.beanWFMaestra = beanWFMaestra;
+    }
+
+    public String getFechaEscritura() {
+        return fechaEscritura;
+    }
+
+    public void setFechaEscritura(String fechaEscritura) {
+        this.fechaEscritura = fechaEscritura;
+    }
+
+    public String getFechaInscripcion() {
+        return fechaInscripcion;
+    }
+
+    public void setFechaInscripcion(String fechaInscripcion) {
+        this.fechaInscripcion = fechaInscripcion;
+    }
+
+    public String getFechaFirma() {
+        return fechaFirma;
+    }
+
+    public void setFechaFirma(String fechaFirma) {
+        this.fechaFirma = fechaFirma;
+    }
+
+    public String getFechaDocumento() {
+        return fechaDocumento;
+    }
+
+    public void setFechaDocumento(String fechaDocumento) {
+        this.fechaDocumento = fechaDocumento;
+    }
+
+    public String getFechaBloqueo() {
+        return fechaBloqueo;
+    }
+
+    public void setFechaBloqueo(String fechaBloqueo) {
+        this.fechaBloqueo = fechaBloqueo;
+    }
+
+    public String getNumeroPartidaBloqueo() {
+        return numeroPartidaBloqueo;
+    }
+
+    public void setNumeroPartidaBloqueo(String numeroPartidaBloqueo) {
+        this.numeroPartidaBloqueo = numeroPartidaBloqueo;
+    }
+
+    public String getCodigoTipoBien() {
+        return codigoTipoBien;
+    }
+
+    public void setCodigoTipoBien(String codigoTipoBien) {
+        this.codigoTipoBien = codigoTipoBien;
+    }
+
+    public String getIndicadorFinanciamiento() {
+        return indicadorFinanciamiento;
+    }
+
+    public void setIndicadorFinanciamiento(String indicadorFinanciamiento) {
+        this.indicadorFinanciamiento = indicadorFinanciamiento;
+    }
+
+    public String getTipoOperacion() {
+        return tipoOperacion;
+    }
+
+    public void setTipoOperacion(String tipoOperacion) {
+        this.tipoOperacion = tipoOperacion;
+    }
+
+    public String getNumeroOperacion() {
+        return numeroOperacion;
+    }
+
+    public void setNumeroOperacion(String numeroOperacion) {
+        this.numeroOperacion = numeroOperacion;
+    }
+
+    public String getCodigoPersona() {
+        return codigoPersona;
+    }
+
+    public void setCodigoPersona(String codigoPersona) {
+        this.codigoPersona = codigoPersona;
+    }
+
+}
diff --git a/FINANCIERONEW/src/financ/workflow/bean/BeanWFMaestra.java b/FINANCIERONEW/src/financ/workflow/bean/BeanWFMaestra.java
new file mode 100644
index 0000000..7602b1a
--- /dev/null
+++ b/FINANCIERONEW/src/financ/workflow/bean/BeanWFMaestra.java
@@ -0,0 +1,156 @@
+package financ.workflow.bean;
+
+import java.io.Serializable;
+
+/**
+ * BeanWFMaestro
+ * 
+ * @autor kdelacruz
+ * @since [Req.17-007] 06.03.2017 Implementación WorkFlow Legal
+ */
+
+public class BeanWFMaestra implements Serializable {
+
+    /**
+     * 
+     */
+    private static final long serialVersionUID = -1114831998002604788L;
+
+    private String idMaestra;
+    private String codigoEmpresa;
+    private String idModulo;
+    private String idRuta;
+    private String idEstado;
+    private String idEtapa;
+    private String tipoOperacion;
+    private String numeroOperacion;
+    private String codigoPersona;
+    private String usuarioSolicitante;
+    private String usuarioAtiende;
+
+    private String tipoCredito;
+    private String nombreCliente;
+    private String descripcionEstado;
+    private String descripcionEtapa;
+
+    public String getIdMaestra() {
+        return idMaestra;
+    }
+
+    public void setIdMaestra(String idMaestra) {
+        this.idMaestra = idMaestra;
+    }
+
+    public String getCodigoEmpresa() {
+        return codigoEmpresa;
+    }
+
+    public void setCodigoEmpresa(String codigoEmpresa) {
+        this.codigoEmpresa = codigoEmpresa;
+    }
+
+    public String getIdModulo() {
+        return idModulo;
+    }
+
+    public void setIdModulo(String idModulo) {
+        this.idModulo = idModulo;
+    }
+
+    public String getIdRuta() {
+        return idRuta;
+    }
+
+    public void setIdRuta(String idRuta) {
+        this.idRuta = idRuta;
+    }
+
+    public String getIdEstado() {
+        return idEstado;
+    }
+
+    public void setIdEstado(String idEstado) {
+        this.idEstado = idEstado;
+    }
+
+    public String getIdEtapa() {
+        return idEtapa;
+    }
+
+    public void setIdEtapa(String idEtapa) {
+        this.idEtapa = idEtapa;
+    }
+
+    public String getTipoOperacion() {
+        return tipoOperacion;
+    }
+
+    public void setTipoOperacion(String tipoOperacion) {
+        this.tipoOperacion = tipoOperacion;
+    }
+
+    public String getNumeroOperacion() {
+        return numeroOperacion;
+    }
+
+    public void setNumeroOperacion(String numeroOperacion) {
+        this.numeroOperacion = numeroOperacion;
+    }
+
+    public String getCodigoPersona() {
+        return codigoPersona;
+    }
+
+    public void setCodigoPersona(String codigoPersona) {
+        this.codigoPersona = codigoPersona;
+    }
+
+    public String getUsuarioSolicitante() {
+        return usuarioSolicitante;
+    }
+
+    public void setUsuarioSolicitante(String usuarioSolicitante) {
+        this.usuarioSolicitante = usuarioSolicitante;
+    }
+
+    public String getUsuarioAtiende() {
+        return usuarioAtiende;
+    }
+
+    public void setUsuarioAtiende(String usuarioAtiende) {
+        this.usuarioAtiende = usuarioAtiende;
+    }
+
+    public String getTipoCredito() {
+        return tipoCredito;
+    }
+
+    public void setTipoCredito(String tipoCredito) {
+        this.tipoCredito = tipoCredito;
+    }
+
+    public String getNombreCliente() {
+        return nombreCliente;
+    }
+
+    public void setNombreCliente(String nombreCliente) {
+        this.nombreCliente = nombreCliente;
+    }
+
+    public String getDescripcionEstado() {
+        return descripcionEstado;
+    }
+
+    public void setDescripcionEstado(String descripcionEstado) {
+        this.descripcionEstado = descripcionEstado;
+    }
+
+    public String getDescripcionEtapa() {
+        return descripcionEtapa;
+    }
+
+    public void setDescripcionEtapa(String descripcionEtapa) {
+        this.descripcionEtapa = descripcionEtapa;
+    }
+
+}
diff --git a/FINANCIERONEW/src/financ/workflow/bean/BeanWFModulo.java b/FINANCIERONEW/src/financ/workflow/bean/BeanWFModulo.java
new file mode 100644
index 0000000..fda8d5b
--- /dev/null
+++ b/FINANCIERONEW/src/financ/workflow/bean/BeanWFModulo.java
@@ -0,0 +1,46 @@
+package financ.workflow.bean;
+
+import java.io.Serializable;
+
+/**
+ * BeanWFModulo
+ * 
+ * @autor kdelacruz
+ * @since [Req.17-007] 06.03.2017 Implementación WorkFlow Legal
+ */
+
+public class BeanWFModulo implements Serializable {
+
+    /**
+     * 
+     */
+    private static final long serialVersionUID = -6719170670496212487L;
+    private String idModulo;
+    private String codigoEmpresa;
+    private String descripcionModulo;
+
+    public String getIdModulo() {
+        return idModulo;
+    }
+
+    public void setIdModulo(String idModulo) {
+        this.idModulo = idModulo;
+    }
+
+    public String getCodigoEmpresa() {
+        return codigoEmpresa;
+    }
+
+    public void setCodigoEmpresa(String codigoEmpresa) {
+        this.codigoEmpresa = codigoEmpresa;
+    }
+
+    public String getDescripcionModulo() {
+        return descripcionModulo;
+    }
+
+    public void setDescripcionModulo(String descripcionModulo) {
+        this.descripcionModulo = descripcionModulo;
+    }
+
+}
diff --git a/FINANCIERONEW/src/financ/workflow/bean/BeanWFMovimientos.java b/FINANCIERONEW/src/financ/workflow/bean/BeanWFMovimientos.java
new file mode 100644
index 0000000..9e8f65a
--- /dev/null
+++ b/FINANCIERONEW/src/financ/workflow/bean/BeanWFMovimientos.java
@@ -0,0 +1,162 @@
+package financ.workflow.bean;
+
+import java.io.Serializable;
+import java.util.Date;
+
+/**
+ * BeanWFMovimientos
+ * 
+ * @autor kdelacruz
+ * @since [Req.17-007] 06.03.2017 Implementación WorkFlow Legal
+ */
+
+public class BeanWFMovimientos implements Serializable {
+
+    private static final long serialVersionUID = -7098558258350587764L;
+
+    private String idMovimiento;
+    private String codigoEmpresa;
+    private String idMaestra;
+    private String idEtapaInicial;
+    private String descripcionEtapaInicial;
+    private String idEtapaFinal;
+    private String descripcionEtapaFinal;
+    private String idEstadoInicial;
+    private String descripcionEstadoInicial;
+    private String idEstadoFinal;
+    private String descripcionEstadoFinal;
+    private Date fechaProceso;
+    private String horaProceso;
+    private String tiempoTranscurrido;
+    private String usuarioInsercion;
+    private String usuarioProceso;
+
+    public String getIdMovimiento() {
+        return idMovimiento;
+    }
+
+    public void setIdMovimiento(String idMovimiento) {
+        this.idMovimiento = idMovimiento;
+    }
+
+    public String getCodigoEmpresa() {
+        return codigoEmpresa;
+    }
+
+    public void setCodigoEmpresa(String codigoEmpresa) {
+        this.codigoEmpresa = codigoEmpresa;
+    }
+
+    public String getIdMaestra() {
+        return idMaestra;
+    }
+
+    public void setIdMaestra(String idMaestra) {
+        this.idMaestra = idMaestra;
+    }
+
+    public String getIdEtapaInicial() {
+        return idEtapaInicial;
+    }
+
+    public void setIdEtapaInicial(String idEtapaInicial) {
+        this.idEtapaInicial = idEtapaInicial;
+    }
+
+    public String getDescripcionEtapaInicial() {
+        return descripcionEtapaInicial;
+    }
+
+    public void setDescripcionEtapaInicial(String descripcionEtapaInicial) {
+        this.descripcionEtapaInicial = descripcionEtapaInicial;
+    }
+
+    public String getIdEtapaFinal() {
+        return idEtapaFinal;
+    }
+
+    public void setIdEtapaFinal(String idEtapaFinal) {
+        this.idEtapaFinal = idEtapaFinal;
+    }
+
+    public String getDescripcionEtapaFinal() {
+        return descripcionEtapaFinal;
+    }
+
+    public void setDescripcionEtapaFinal(String descripcionEtapaFinal) {
+        this.descripcionEtapaFinal = descripcionEtapaFinal;
+    }
+
+    public String getIdEstadoInicial() {
+        return idEstadoInicial;
+    }
+
+    public void setIdEstadoInicial(String idEstadoInicial) {
+        this.idEstadoInicial = idEstadoInicial;
+    }
+
+    public String getDescripcionEstadoInicial() {
+        return descripcionEstadoInicial;
+    }
+
+    public void setDescripcionEstadoInicial(String descripcionEstadoInicial) {
+        this.descripcionEstadoInicial = descripcionEstadoInicial;
+    }
+
+    public String getIdEstadoFinal() {
+        return idEstadoFinal;
+    }
+
+    public void setIdEstadoFinal(String idEstadoFinal) {
+        this.idEstadoFinal = idEstadoFinal;
+    }
+
+    public String getDescripcionEstadoFinal() {
+        return descripcionEstadoFinal;
+    }
+
+    public void setDescripcionEstadoFinal(String descripcionEstadoFinal) {
+        this.descripcionEstadoFinal = descripcionEstadoFinal;
+    }
+
+    public Date getFechaProceso() {
+        return fechaProceso;
+    }
+
+    public void setFechaProceso(Date fechaProceso) {
+        this.fechaProceso = fechaProceso;
+    }
+
+    public String getHoraProceso() {
+        return horaProceso;
+    }
+
+    public void setHoraProceso(String horaProceso) {
+        this.horaProceso = horaProceso;
+    }
+
+    public String getTiempoTranscurrido() {
+        return tiempoTranscurrido;
+    }
+
+    public void setTiempoTranscurrido(String tiempoTranscurrido) {
+        this.tiempoTranscurrido = tiempoTranscurrido;
+    }
+
+    public String getUsuarioInsercion() {
+        return usuarioInsercion;
+    }
+
+    public void setUsuarioInsercion(String usuarioInsercion) {
+        this.usuarioInsercion = usuarioInsercion;
+    }
+
+    public String getUsuarioProceso() {
+        return usuarioProceso;
+    }
+
+    public void setUsuarioProceso(String usuarioProceso) {
+        this.usuarioProceso = usuarioProceso;
+    }
+
+}
diff --git a/FINANCIERONEW/src/financ/workflow/bean/BeanWFRuta.java b/FINANCIERONEW/src/financ/workflow/bean/BeanWFRuta.java
new file mode 100644
index 0000000..70b1a47
--- /dev/null
+++ b/FINANCIERONEW/src/financ/workflow/bean/BeanWFRuta.java
@@ -0,0 +1,65 @@
+package financ.workflow.bean;
+
+import java.io.Serializable;
+
+/**
+ * BeanWFRutaWorkflow
+ * 
+ * @autor kdelacruz
+ * @since [Req.17-007] 06.03.2017 Implementación WorkFlow Legal
+ */
+
+public class BeanWFRuta implements Serializable {
+
+    /**
+     * 
+     */
+    private static final long serialVersionUID = -8452879827549774387L;
+
+    private String idRuta;
+    private String codigoEmpresa;
+    private String descripcionRuta;
+    private String key001;
+    private String key002;
+
+    public String getIdRuta() {
+        return idRuta;
+    }
+
+    public void setIdRuta(String idRuta) {
+        this.idRuta = idRuta;
+    }
+
+    public String getCodigoEmpresa() {
+        return codigoEmpresa;
+    }
+
+    public void setCodigoEmpresa(String codigoEmpresa) {
+        this.codigoEmpresa = codigoEmpresa;
+    }
+
+    public String getDescripcionRuta() {
+        return descripcionRuta;
+    }
+
+    public void setDescripcionRuta(String descripcionRuta) {
+        this.descripcionRuta = descripcionRuta;
+    }
+
+    public String getKey001() {
+        return key001;
+    }
+
+    public void setKey001(String key001) {
+        this.key001 = key001;
+    }
+
+    public String getKey002() {
+        return key002;
+    }
+
+    public void setKey002(String key002) {
+        this.key002 = key002;
+    }
+
+}
diff --git a/FINANCIERONEW/src/financ/workflow/bean/BeanWFTipoDocumento.java b/FINANCIERONEW/src/financ/workflow/bean/BeanWFTipoDocumento.java
new file mode 100644
index 0000000..1930f43
--- /dev/null
+++ b/FINANCIERONEW/src/financ/workflow/bean/BeanWFTipoDocumento.java
@@ -0,0 +1,66 @@
+package financ.workflow.bean;
+
+import java.io.Serializable;
+
+/**
+ * BeanWFTipoDocumento
+ * 
+ * @autor kdelacruz
+ * @since [Req.17-007] 06.03.2017 Implementación WorkFlow Legal
+ */
+
+public class BeanWFTipoDocumento implements Serializable {
+
+    /**
+     * 
+     */
+    private static final long serialVersionUID = -1266272358158964582L;
+
+    private String idTipoDocumento;
+    private String codigoEmpresa;
+    private String descripcionTipoDocumento;
+    private String keyTipoDocumento;
+
+    private String indicadorSeleccionado;
+
+    public String getIdTipoDocumento() {
+        return idTipoDocumento;
+    }
+
+    public void setIdTipoDocumento(String idTipoDocumento) {
+        this.idTipoDocumento = idTipoDocumento;
+    }
+
+    public String getCodigoEmpresa() {
+        return codigoEmpresa;
+    }
+
+    public void setCodigoEmpresa(String codigoEmpresa) {
+        this.codigoEmpresa = codigoEmpresa;
+    }
+
+    public String getDescripcionTipoDocumento() {
+        return descripcionTipoDocumento;
+    }
+
+    public void setDescripcionTipoDocumento(String descripcionTipoDocumento) {
+        this.descripcionTipoDocumento = descripcionTipoDocumento;
+    }
+
+    public String getKeyTipoDocumento() {
+        return keyTipoDocumento;
+    }
+
+    public void setKeyTipoDocumento(String keyTipoDocumento) {
+        this.keyTipoDocumento = keyTipoDocumento;
+    }
+
+    public String getIndicadorSeleccionado() {
+        return indicadorSeleccionado;
+    }
+
+    public void setIndicadorSeleccionado(String indicadorSeleccionado) {
+        this.indicadorSeleccionado = indicadorSeleccionado;
+    }
+
+}
diff --git a/FINANCIERONEW/src/financ/workflow/entity/WFDetalleComentario.java b/FINANCIERONEW/src/financ/workflow/entity/WFDetalleComentario.java
new file mode 100644
index 0000000..f683f59
--- /dev/null
+++ b/FINANCIERONEW/src/financ/workflow/entity/WFDetalleComentario.java
@@ -0,0 +1,82 @@
+package financ.workflow.entity;
+
+import javax.persistence.Column;
+import javax.persistence.Entity;
+import javax.persistence.FetchType;
+import javax.persistence.Id;
+import javax.persistence.JoinColumn;
+import javax.persistence.ManyToOne;
+import javax.persistence.Table;
+
+import pe.com.tfc.utils.Auditable;
+
+/**
+ * WFDetalleComentario
+ * 
+ * @author kdelacruz
+ * @since [Req.17-007] 14.03.2017 Implementación WorkFlow Legal
+ */
+
+@Entity
+@Table(name = "WFDCOMT", schema = "DFIN")
+public class WFDetalleComentario extends Auditable {
+
+    /**
+     * 
+     */
+    private static final long serialVersionUID = 700817995659382715L;
+    private String idCorrelativo;
+    private String codigoEmpresa;
+    private String textoComentario;
+    private WFEtapa wfEtapa;
+    private WFMaestra wfMaestra;
+
+    @Id
+    @Column(name = "C_IDCORR", nullable = false, length = 15)
+    public String getIdCorrelativo() {
+        return idCorrelativo;
+    }
+
+    public void setIdCorrelativo(String idCorrelativo) {
+        this.idCorrelativo = idCorrelativo;
+    }
+
+    @Column(name = "C_CODEMP", nullable = false, length = 3)
+    public String getCodigoEmpresa() {
+        return codigoEmpresa;
+    }
+
+    public void setCodigoEmpresa(String codigoEmpresa) {
+        this.codigoEmpresa = codigoEmpresa;
+    }
+
+    @Column(name = "C_TXTCOM", length = 500)
+    public String getTextoComentario() {
+        return textoComentario;
+    }
+
+    public void setTextoComentario(String textoComentario) {
+        this.textoComentario = textoComentario;
+    }
+
+    @ManyToOne(cascade = {}, fetch = FetchType.LAZY)
+    @JoinColumn(name = "C_IDWORK", unique = false, nullable = false)
+    public WFMaestra getWfMaestra() {
+        return wfMaestra;
+    }
+
+    public void setWfMaestra(WFMaestra wfMaestra) {
+        this.wfMaestra = wfMaestra;
+    }
+
+    @ManyToOne(cascade = {}, fetch = FetchType.LAZY)
+    @JoinColumn(name = "C_IDETAP", unique = false, nullable = false)
+    public WFEtapa getWfEtapa() {
+        return wfEtapa;
+    }
+
+    public void setWfEtapa(WFEtapa wfEtapa) {
+        this.wfEtapa = wfEtapa;
+    }
+
+}
diff --git a/FINANCIERONEW/src/financ/workflow/entity/WFDetalleMailPorRuta.java b/FINANCIERONEW/src/financ/workflow/entity/WFDetalleMailPorRuta.java
new file mode 100644
index 0000000..9f227e1
--- /dev/null
+++ b/FINANCIERONEW/src/financ/workflow/entity/WFDetalleMailPorRuta.java
@@ -0,0 +1,71 @@
+package financ.workflow.entity;
+
+import javax.persistence.Column;
+import javax.persistence.Entity;
+import javax.persistence.FetchType;
+import javax.persistence.Id;
+import javax.persistence.JoinColumn;
+import javax.persistence.ManyToOne;
+import javax.persistence.Table;
+
+import pe.com.tfc.utils.Auditable;
+
+/**
+ * WFDetalleMailPorRuta
+ * 
+ * @author kdelacruz
+ * @since [S17-007] 22.03.2017 Implementación WorkFlow Legal
+ */
+
+@Entity
+@Table(name = "WFDMARU", schema = "DFIN")
+public class WFDetalleMailPorRuta extends Auditable {
+
+    /**
+     * 
+     */
+    private static final long serialVersionUID = 61025272781344407L;
+    private String idMail;
+    private String codigoEmpresa;
+    private String usuarioCorreo;
+    private WFRuta wfRuta;
+
+    @Id
+    @Column(name = "C_IDMAIL", nullable = false, length = 15)
+    public String getIdMail() {
+        return idMail;
+    }
+
+    public void setIdMail(String idMail) {
+        this.idMail = idMail;
+    }
+
+    @Column(name = "C_CODEMP", nullable = false, length = 3)
+    public String getCodigoEmpresa() {
+        return codigoEmpresa;
+    }
+
+    public void setCodigoEmpresa(String codigoEmpresa) {
+        this.codigoEmpresa = codigoEmpresa;
+    }
+
+    @Column(name = "C_USUMAI", nullable = false, length = 50)
+    public String getUsuarioCorreo() {
+        return usuarioCorreo;
+    }
+
+    public void setUsuarioCorreo(String usuarioCorreo) {
+        this.usuarioCorreo = usuarioCorreo;
+    }
+
+    @ManyToOne(cascade = {}, fetch = FetchType.LAZY)
+    @JoinColumn(name = "C_IDRUTA", unique = false, nullable = false)
+    public WFRuta getWfRuta() {
+        return wfRuta;
+    }
+
+    public void setWfRuta(WFRuta wfRuta) {
+        this.wfRuta = wfRuta;
+    }
+
+}
diff --git a/FINANCIERONEW/src/financ/workflow/entity/WFDocumentoPorEtapa.java b/FINANCIERONEW/src/financ/workflow/entity/WFDocumentoPorEtapa.java
new file mode 100644
index 0000000..4241457
--- /dev/null
+++ b/FINANCIERONEW/src/financ/workflow/entity/WFDocumentoPorEtapa.java
@@ -0,0 +1,83 @@
+package financ.workflow.entity;
+
+import javax.persistence.Column;
+import javax.persistence.Entity;
+import javax.persistence.FetchType;
+import javax.persistence.Id;
+import javax.persistence.JoinColumn;
+import javax.persistence.ManyToOne;
+import javax.persistence.Table;
+
+import pe.com.tfc.utils.Auditable;
+
+/**
+ * WFDocumentoPorEtapa
+ * 
+ * @author kdelacruz
+ * @since [Req.17-007] 06.03.2017 Implementación WorkFlow Legal
+ */
+
+@Entity
+@Table(name = "WFTDOET", schema = "DFIN")
+public class WFDocumentoPorEtapa extends Auditable {
+
+    /**
+     * 
+     */
+    private static final long serialVersionUID = -1379237779531741631L;
+    private String idDocumentoXEtapa;
+    private String codigoEmpresa;
+    private Integer numeroOrden;
+
+    private WFTipoDocumento wfTipoDocumento;
+    private WFEtapa wfEtapa;
+
+    @Id
+    @Column(name = "C_IDDOET", nullable = false, length = 15)
+    public String getIdDocumentoXEtapa() {
+        return idDocumentoXEtapa;
+    }
+
+    public void setIdDocumentoXEtapa(String idDocumentoXEtapa) {
+        this.idDocumentoXEtapa = idDocumentoXEtapa;
+    }
+
+    @ManyToOne(cascade = {}, fetch = FetchType.LAZY)
+    @JoinColumn(name = "C_IDTIDO", unique = false, nullable = false)
+    public WFTipoDocumento getWfTipoDocumento() {
+        return wfTipoDocumento;
+    }
+
+    public void setWfTipoDocumento(WFTipoDocumento wfTipoDocumento) {
+        this.wfTipoDocumento = wfTipoDocumento;
+    }
+
+    @ManyToOne(cascade = {}, fetch = FetchType.LAZY)
+    @JoinColumn(name = "C_IDETAP", unique = false, nullable = false)
+    public WFEtapa getWfEtapa() {
+        return wfEtapa;
+    }
+
+    public void setWfEtapa(WFEtapa wfEtapa) {
+        this.wfEtapa = wfEtapa;
+    }
+
+    @Column(name = "N_ORDENN", nullable = false, precision = 2, scale = 0)
+    public Integer getNumeroOrden() {
+        return numeroOrden;
+    }
+
+    public void setNumeroOrden(Integer numeroOrden) {
+        this.numeroOrden = numeroOrden;
+    }
+
+    @Column(name = "C_CODEMP", nullable = false, length = 3)
+    public String getCodigoEmpresa() {
+        return codigoEmpresa;
+    }
+
+    public void setCodigoEmpresa(String codigoEmpresa) {
+        this.codigoEmpresa = codigoEmpresa;
+    }
+
+}
diff --git a/FINANCIERONEW/src/financ/workflow/entity/WFDocumentos.java b/FINANCIERONEW/src/financ/workflow/entity/WFDocumentos.java
new file mode 100644
index 0000000..330601f
--- /dev/null
+++ b/FINANCIERONEW/src/financ/workflow/entity/WFDocumentos.java
@@ -0,0 +1,94 @@
+package financ.workflow.entity;
+
+import javax.persistence.Column;
+import javax.persistence.Entity;
+import javax.persistence.FetchType;
+import javax.persistence.Id;
+import javax.persistence.JoinColumn;
+import javax.persistence.ManyToOne;
+import javax.persistence.OneToOne;
+import javax.persistence.Table;
+
+import pe.com.tfc.utils.Auditable;
+import financ.util.file.entity.CBFile;
+
+/**
+ * WFDocumentos
+ * 
+ * @author kdelacruz
+ * @since [Req.17-007] 06.03.2017 Implementación WorkFlow Legal
+ */
+
+@Entity
+@Table(name = "WFDDOCU", schema = "DFIN")
+public class WFDocumentos extends Auditable {
+
+    private static final long serialVersionUID = 4541791935290362478L;
+    private String idDocumento;
+    private String codigoEmpresa;
+
+    private WFMaestra wfMaestra;
+    private WFEtapa wfEtapa;
+    private WFTipoDocumento wfTipoDocumento;
+    private CBFile cbFile;
+
+    @Id
+    @Column(name = "C_IDDOCU", nullable = false, length = 15)
+    public String getIdDocumento() {
+        return idDocumento;
+    }
+
+    public void setIdDocumento(String idDocumento) {
+        this.idDocumento = idDocumento;
+    }
+
+    @Column(name = "C_CODEMP", nullable = false, length = 3)
+    public String getCodigoEmpresa() {
+        return codigoEmpresa;
+    }
+
+    public void setCodigoEmpresa(String codigoEmpresa) {
+        this.codigoEmpresa = codigoEmpresa;
+    }
+
+    @OneToOne(cascade = {}, fetch = FetchType.LAZY)
+    @JoinColumn(name = "C_IDFILE", unique = false)
+    public CBFile getCbFile() {
+        return cbFile;
+    }
+
+    public void setCbFile(CBFile cbFile) {
+        this.cbFile = cbFile;
+    }
+
+    @ManyToOne(cascade = {}, fetch = FetchType.LAZY)
+    @JoinColumn(name = "C_IDWORK", unique = false, nullable = false)
+    public WFMaestra getwfMaestra() {
+        return wfMaestra;
+    }
+
+    public void setwfMaestra(WFMaestra wfMaestra) {
+        this.wfMaestra = wfMaestra;
+    }
+
+    @ManyToOne(cascade = {}, fetch = FetchType.LAZY)
+    @JoinColumn(name = "C_IDETAP", unique = false)
+    public WFEtapa getWfEtapa() {
+        return wfEtapa;
+    }
+
+    public void setWfEtapa(WFEtapa wfEtapa) {
+        this.wfEtapa = wfEtapa;
+    }
+
+    @ManyToOne(cascade = {}, fetch = FetchType.LAZY)
+    @JoinColumn(name = "C_IDTIDO", unique = false, nullable = false)
+    public WFTipoDocumento getWfTipoDocumento() {
+        return wfTipoDocumento;
+    }
+
+    public void setWfTipoDocumento(WFTipoDocumento wfTipoDocumento) {
+        this.wfTipoDocumento = wfTipoDocumento;
+    }
+
+}
diff --git a/FINANCIERONEW/src/financ/workflow/entity/WFEstado.java b/FINANCIERONEW/src/financ/workflow/entity/WFEstado.java
new file mode 100644
index 0000000..2de5529
--- /dev/null
+++ b/FINANCIERONEW/src/financ/workflow/entity/WFEstado.java
@@ -0,0 +1,93 @@
+package financ.workflow.entity;
+
+import java.util.ArrayList;
+import java.util.List;
+
+import javax.persistence.CascadeType;
+import javax.persistence.Column;
+import javax.persistence.Entity;
+import javax.persistence.FetchType;
+import javax.persistence.Id;
+import javax.persistence.JoinColumn;
+import javax.persistence.ManyToOne;
+import javax.persistence.OneToMany;
+import javax.persistence.Table;
+
+import pe.com.tfc.utils.Auditable;
+
+/**
+ * WFEstado
+ * 
+ * @author kdelacruz
+ * @since [Req.17-007] 06.03.2017 Implementación WorkFlow Legal
+ */
+
+@Entity
+@Table(name = "WFTESTA", schema = "DFIN")
+public class WFEstado extends Auditable {
+
+    /**
+     * 
+     */
+    private static final long serialVersionUID = 655151483205405996L;
+    private String idEstado;
+    private String codigoEmpresa;
+    private String descripcionEstado;
+    private WFModulo wfModulo;
+    private List<WFMaestra> lsistwfMaestros = new ArrayList<WFMaestra>(0);
+
+    public WFEstado() {
+    }
+
+    public WFEstado(String idEstado) {
+        this.idEstado = idEstado;
+    }
+
+    @Id
+    @Column(name = "C_IDESTA", nullable = false, length = 6)
+    public String getIdEstado() {
+        return idEstado;
+    }
+
+    public void setIdEstado(String idEstado) {
+        this.idEstado = idEstado;
+    }
+
+    @Column(name = "C_DESCRI", nullable = false, length = 50)
+    public String getDescripcionEstado() {
+        return descripcionEstado;
+    }
+
+    public void setDescripcionEstado(String descripcionEstado) {
+        this.descripcionEstado = descripcionEstado;
+    }
+
+    @Column(name = "C_CODEMP", nullable = false, length = 3)
+    public String getCodigoEmpresa() {
+        return codigoEmpresa;
+    }
+
+    public void setCodigoEmpresa(String codigoEmpresa) {
+        this.codigoEmpresa = codigoEmpresa;
+    }
+
+    @ManyToOne(cascade = {}, fetch = FetchType.LAZY)
+    @JoinColumn(name = "C_IDMODU", unique = false, nullable = false)
+    public WFModulo getWfModulo() {
+        return wfModulo;
+    }
+
+    public void setWfModulo(WFModulo wfModulo) {
+        this.wfModulo = wfModulo;
+    }
+
+    @OneToMany(cascade = { CascadeType.ALL }, fetch = FetchType.LAZY, mappedBy = "wfEstado")
+    public List<WFMaestra> getLsistwfMaestros() {
+        return lsistwfMaestros;
+    }
+
+    public void setLsistwfMaestros(List<WFMaestra> lsistwfMaestros) {
+        this.lsistwfMaestros = lsistwfMaestros;
+    }
+
+}
diff --git a/FINANCIERONEW/src/financ/workflow/entity/WFEtapa.java b/FINANCIERONEW/src/financ/workflow/entity/WFEtapa.java
new file mode 100644
index 0000000..41879fc
--- /dev/null
+++ b/FINANCIERONEW/src/financ/workflow/entity/WFEtapa.java
@@ -0,0 +1,153 @@
+package financ.workflow.entity;
+
+import java.util.ArrayList;
+import java.util.List;
+
+import javax.persistence.CascadeType;
+import javax.persistence.Column;
+import javax.persistence.Entity;
+import javax.persistence.FetchType;
+import javax.persistence.Id;
+import javax.persistence.JoinColumn;
+import javax.persistence.ManyToOne;
+import javax.persistence.OneToMany;
+import javax.persistence.Table;
+
+import pe.com.tfc.utils.Auditable;
+
+/**
+ * WFEtapa
+ * 
+ * @author kdelacruz
+ * @since [Req.17-007] 06.03.2017 Implementación WorkFlow Legal
+ */
+
+@Entity
+@Table(name = "WFTETAP", schema = "DFIN")
+public class WFEtapa extends Auditable {
+
+    /**
+     * 
+     */
+    private static final long serialVersionUID = -5923280912472700115L;
+    private String idEtapa;
+    private String codigoEmpresa;
+    private String descripcionEtapa;
+    private String accionServlet;
+    private String indInicio;
+    private WFModulo wfModulo;
+    private List<WFDocumentoPorEtapa> listwfDocumentoPorEtapa = new ArrayList<WFDocumentoPorEtapa>(0);
+    private List<WFEventoPorEtapa> listwfEventoPorEtapa = new ArrayList<WFEventoPorEtapa>(0);
+    private List<WFFlujoPorRuta> listwfFlujoPorRuta = new ArrayList<WFFlujoPorRuta>(0);
+    private List<WFDocumentos> listwfDocumentos = new ArrayList<WFDocumentos>(0);
+    private List<WFEtapasPorRol> listEtapasPorRol = new ArrayList<WFEtapasPorRol>(0);
+
+    public WFEtapa() {
+    }
+
+    public WFEtapa(String idEtapa) {
+        this.idEtapa = idEtapa;
+    }
+
+    @Id
+    @Column(name = "C_IDETAP", nullable = false, length = 6)
+    public String getIdEtapa() {
+        return idEtapa;
+    }
+
+    public void setIdEtapa(String idEtapa) {
+        this.idEtapa = idEtapa;
+    }
+
+    @Column(name = "C_DESCRI", nullable = false, length = 50)
+    public String getDescripcionEtapa() {
+        return descripcionEtapa;
+    }
+
+    public void setDescripcionEtapa(String descripcionEtapa) {
+        this.descripcionEtapa = descripcionEtapa;
+    }
+
+    @Column(name = "C_EJECUT", nullable = false, length = 100)
+    public String getAccionServlet() {
+        return accionServlet;
+    }
+
+    public void setAccionServlet(String accionServlet) {
+        this.accionServlet = accionServlet;
+    }
+
+    @ManyToOne(cascade = {}, fetch = FetchType.LAZY)
+    @JoinColumn(name = "C_IDMODU", unique = false, nullable = false)
+    public WFModulo getWfModulo() {
+        return wfModulo;
+    }
+
+    public void setWfModulo(WFModulo wfModulo) {
+        this.wfModulo = wfModulo;
+    }
+
+    @OneToMany(cascade = { CascadeType.ALL }, fetch = FetchType.LAZY, mappedBy = "wfEtapa")
+    public List<WFDocumentoPorEtapa> getListwfDocumentoPorEtapa() {
+        return listwfDocumentoPorEtapa;
+    }
+
+    public void setListwfDocumentoPorEtapa(List<WFDocumentoPorEtapa> listwfDocumentoPorEtapa) {
+        this.listwfDocumentoPorEtapa = listwfDocumentoPorEtapa;
+    }
+
+    @OneToMany(cascade = { CascadeType.ALL }, fetch = FetchType.LAZY, mappedBy = "wfEtapa")
+    public List<WFEventoPorEtapa> getListwfEventoPorEtapa() {
+        return listwfEventoPorEtapa;
+    }
+
+    public void setListwfEventoPorEtapa(List<WFEventoPorEtapa> listwfEventoPorEtapa) {
+        this.listwfEventoPorEtapa = listwfEventoPorEtapa;
+    }
+
+    @OneToMany(cascade = { CascadeType.ALL }, fetch = FetchType.LAZY, mappedBy = "wfEtapa")
+    public List<WFFlujoPorRuta> getListwfFlujoPorRuta() {
+        return listwfFlujoPorRuta;
+    }
+
+    public void setListwfFlujoPorRuta(List<WFFlujoPorRuta> listwfFlujoPorRuta) {
+        this.listwfFlujoPorRuta = listwfFlujoPorRuta;
+    }
+
+    @Column(name = "C_CODEMP", nullable = false, length = 3)
+    public String getCodigoEmpresa() {
+        return codigoEmpresa;
+    }
+
+    public void setCodigoEmpresa(String codigoEmpresa) {
+        this.codigoEmpresa = codigoEmpresa;
+    }
+
+    @OneToMany(cascade = { CascadeType.ALL }, fetch = FetchType.LAZY, mappedBy = "wfEtapa")
+    public List<WFDocumentos> getListwfDocumentos() {
+        return listwfDocumentos;
+    }
+
+    public void setListwfDocumentos(List<WFDocumentos> listwfDocumentos) {
+        this.listwfDocumentos = listwfDocumentos;
+    }
+
+    @Column(name = "C_INDINI", nullable = true, length = 1)
+    public String getIndInicio() {
+        return indInicio;
+    }
+
+    public void setIndInicio(String indInicio) {
+        this.indInicio = indInicio;
+    }
+
+    @OneToMany(cascade = { CascadeType.ALL }, fetch = FetchType.LAZY, mappedBy = "wfEtapa")
+    public List<WFEtapasPorRol> getListEtapasPorRol() {
+        return listEtapasPorRol;
+    }
+
+    public void setListEtapasPorRol(List<WFEtapasPorRol> listEtapasPorRol) {
+        this.listEtapasPorRol = listEtapasPorRol;
+    }
+
+}
diff --git a/FINANCIERONEW/src/financ/workflow/entity/WFEtapasPorRol.java b/FINANCIERONEW/src/financ/workflow/entity/WFEtapasPorRol.java
new file mode 100644
index 0000000..1fa7db2
--- /dev/null
+++ b/FINANCIERONEW/src/financ/workflow/entity/WFEtapasPorRol.java
@@ -0,0 +1,71 @@
+package financ.workflow.entity;
+
+import javax.persistence.Column;
+import javax.persistence.Entity;
+import javax.persistence.FetchType;
+import javax.persistence.Id;
+import javax.persistence.JoinColumn;
+import javax.persistence.ManyToOne;
+import javax.persistence.Table;
+
+import pe.com.tfc.utils.Auditable;
+
+/**
+ * WFEtapasPorRol
+ * 
+ * @author kdelacruz
+ * @since [Req.17-007] 16.03.2017 Implementación WorkFlow Legal
+ */
+
+@Entity
+@Table(name = "WFTETRO", schema = "DFIN")
+public class WFEtapasPorRol extends Auditable {
+
+    /**
+     * 
+     */
+    private static final long serialVersionUID = -2090147177745992188L;
+    private String idEtapaRol;
+    private String codigoEmpresa;
+    private WFEtapa wfEtapa;
+    private String idRol;
+
+    @Id
+    @Column(name = "C_IDETRO", nullable = false, length = 15)
+    public String getIdEtapaRol() {
+        return idEtapaRol;
+    }
+
+    public void setIdEtapaRol(String idEtapaRol) {
+        this.idEtapaRol = idEtapaRol;
+    }
+
+    @Column(name = "C_CODEMP", nullable = false, length = 3)
+    public String getCodigoEmpresa() {
+        return codigoEmpresa;
+    }
+
+    public void setCodigoEmpresa(String codigoEmpresa) {
+        this.codigoEmpresa = codigoEmpresa;
+    }
+
+    @ManyToOne(cascade = {}, fetch = FetchType.LAZY)
+    @JoinColumn(name = "C_IDETAP", unique = false, nullable = false)
+    public WFEtapa getWfEtapa() {
+        return wfEtapa;
+    }
+
+    public void setWfEtapa(WFEtapa wfEtapa) {
+        this.wfEtapa = wfEtapa;
+    }
+
+    @Column(name = "C_IDEROL", nullable = false, length = 15)
+    public String getIdRol() {
+        return idRol;
+    }
+
+    public void setIdRol(String idRol) {
+        this.idRol = idRol;
+    }
+
+}
diff --git a/FINANCIERONEW/src/financ/workflow/entity/WFEvento.java b/FINANCIERONEW/src/financ/workflow/entity/WFEvento.java
new file mode 100644
index 0000000..d79b741
--- /dev/null
+++ b/FINANCIERONEW/src/financ/workflow/entity/WFEvento.java
@@ -0,0 +1,114 @@
+package financ.workflow.entity;
+
+import java.util.ArrayList;
+import java.util.List;
+
+import javax.persistence.CascadeType;
+import javax.persistence.Column;
+import javax.persistence.Entity;
+import javax.persistence.FetchType;
+import javax.persistence.Id;
+import javax.persistence.JoinColumn;
+import javax.persistence.ManyToOne;
+import javax.persistence.OneToMany;
+import javax.persistence.Table;
+
+import pe.com.tfc.utils.Auditable;
+
+/**
+ * WFEvento
+ * 
+ * @author kdelacruz
+ * @since [Req.17-007] 06.03.2017 Implementación WorkFlow Legal
+ */
+
+@Entity
+@Table(name = "WFTEVEN", schema = "DFIN")
+public class WFEvento extends Auditable {
+
+    private static final long serialVersionUID = -8086023662258791581L;
+    private String idEvento;
+    private String codigoEmpresa;
+    private String nombreBoton;
+    private String nombrePrograma;
+    private String indicadorInvocar;
+    private Integer numeroOrden;
+
+    private WFModulo wfModulo;
+    private List<WFEventoPorEtapa> listwfeventoporEtapa = new ArrayList<WFEventoPorEtapa>(0);
+
+    @Id
+    @Column(name = "C_IDEVEN", nullable = false, length = 6)
+    public String getIdEvento() {
+        return idEvento;
+    }
+
+    public void setIdEvento(String idEvento) {
+        this.idEvento = idEvento;
+    }
+
+    @Column(name = "C_CODEMP", nullable = false, length = 3)
+    public String getCodigoEmpresa() {
+        return codigoEmpresa;
+    }
+
+    public void setCodigoEmpresa(String codigoEmpresa) {
+        this.codigoEmpresa = codigoEmpresa;
+    }
+
+    @Column(name = "C_NOMBOT", nullable = false, length = 50)
+    public String getNombreBoton() {
+        return nombreBoton;
+    }
+
+    public void setNombreBoton(String nombreBoton) {
+        this.nombreBoton = nombreBoton;
+    }
+
+    @Column(name = "C_NOMPRG", length = 50)
+    public String getNombrePrograma() {
+        return nombrePrograma;
+    }
+
+    public void setNombrePrograma(String nombrePrograma) {
+        this.nombrePrograma = nombrePrograma;
+    }
+
+    @Column(name = "C_INVOCA", length = 50)
+    public String getIndicadorInvocar() {
+        return indicadorInvocar;
+    }
+
+    public void setIndicadorInvocar(String indicadorInvocar) {
+        this.indicadorInvocar = indicadorInvocar;
+    }
+
+    @ManyToOne(cascade = {}, fetch = FetchType.LAZY)
+    @JoinColumn(name = "C_IDMODU", unique = false, nullable = false)
+    public WFModulo getWfModulo() {
+        return wfModulo;
+    }
+
+    public void setWfModulo(WFModulo wfModulo) {
+        this.wfModulo = wfModulo;
+    }
+
+    @Column(name = "N_ORDENN", nullable = false, precision = 2, scale = 0)
+    public Integer getNumeroOrden() {
+        return numeroOrden;
+    }
+
+    public void setNumeroOrden(Integer numeroOrden) {
+        this.numeroOrden = numeroOrden;
+    }
+
+    @OneToMany(cascade = { CascadeType.ALL }, fetch = FetchType.LAZY, mappedBy = "wfEvento")
+    public List<WFEventoPorEtapa> getListwfeventoporEtapa() {
+        return listwfeventoporEtapa;
+    }
+
+    public void setListwfeventoporEtapa(List<WFEventoPorEtapa> listwfeventoporEtapa) {
+        this.listwfeventoporEtapa = listwfeventoporEtapa;
+    }
+
+}
diff --git a/FINANCIERONEW/src/financ/workflow/entity/WFEventoPorEtapa.java b/FINANCIERONEW/src/financ/workflow/entity/WFEventoPorEtapa.java
new file mode 100644
index 0000000..3a49af6
--- /dev/null
+++ b/FINANCIERONEW/src/financ/workflow/entity/WFEventoPorEtapa.java
@@ -0,0 +1,91 @@
+package financ.workflow.entity;
+
+import javax.persistence.Column;
+import javax.persistence.Entity;
+import javax.persistence.FetchType;
+import javax.persistence.Id;
+import javax.persistence.JoinColumn;
+import javax.persistence.ManyToOne;
+import javax.persistence.Table;
+
+import pe.com.tfc.utils.Auditable;
+
+/**
+ * WFEventoPorEtapa
+ * 
+ * @author kdelacruz
+ * @since [Req.17-007] 06.03.2017 Implementación WorkFlow Legal
+ */
+
+@Entity
+@Table(name = "WFTEVET", schema = "DFIN")
+public class WFEventoPorEtapa extends Auditable {
+
+    private static final long serialVersionUID = -7563107806716478702L;
+    private String idEventoPorEtapa;
+    private String codigoEmpresa;
+    private String codigoModuloReferenciaMail;
+
+    private WFEvento wfEvento;
+    private WFEtapa wfEtapa;
+    private WFEstado wfEstado;
+
+    @Id
+    @Column(name = "C_IDEVET", nullable = false, length = 15)
+    public String getIdEventoPorEtapa() {
+        return idEventoPorEtapa;
+    }
+
+    public void setIdEventoPorEtapa(String idEventoPorEtapa) {
+        this.idEventoPorEtapa = idEventoPorEtapa;
+    }
+
+    @Column(name = "C_CODEMP", nullable = false, length = 3)
+    public String getCodigoEmpresa() {
+        return codigoEmpresa;
+    }
+
+    public void setCodigoEmpresa(String codigoEmpresa) {
+        this.codigoEmpresa = codigoEmpresa;
+    }
+
+    @ManyToOne(cascade = {}, fetch = FetchType.LAZY)
+    @JoinColumn(name = "C_IDEVEN", unique = false, nullable = false)
+    public WFEvento getWfEvento() {
+        return wfEvento;
+    }
+
+    public void setWfEvento(WFEvento wfEvento) {
+        this.wfEvento = wfEvento;
+    }
+
+    @ManyToOne(cascade = {}, fetch = FetchType.LAZY)
+    @JoinColumn(name = "C_IDETAP", unique = false, nullable = false)
+    public WFEtapa getWfEtapa() {
+        return wfEtapa;
+    }
+
+    public void setWfEtapa(WFEtapa wfEtapa) {
+        this.wfEtapa = wfEtapa;
+    }
+
+    @Column(name = "C_MODMAI", length = 8)
+    public String getCodigoModuloReferenciaMail() {
+        return codigoModuloReferenciaMail;
+    }
+
+    public void setCodigoModuloReferenciaMail(String codigoModuloReferenciaMail) {
+        this.codigoModuloReferenciaMail = codigoModuloReferenciaMail;
+    }
+
+    @ManyToOne(cascade = {}, fetch = FetchType.LAZY)
+    @JoinColumn(name = "C_IDESTA", unique = false, nullable = false)
+    public WFEstado getWfEstado() {
+        return wfEstado;
+    }
+
+    public void setWfEstado(WFEstado wfEstado) {
+        this.wfEstado = wfEstado;
+    }
+
+}
diff --git a/FINANCIERONEW/src/financ/workflow/entity/WFFlujoPorRuta.java b/FINANCIERONEW/src/financ/workflow/entity/WFFlujoPorRuta.java
new file mode 100644
index 0000000..8b24329
--- /dev/null
+++ b/FINANCIERONEW/src/financ/workflow/entity/WFFlujoPorRuta.java
@@ -0,0 +1,93 @@
+package financ.workflow.entity;
+
+import javax.persistence.Column;
+import javax.persistence.Entity;
+import javax.persistence.FetchType;
+import javax.persistence.Id;
+import javax.persistence.JoinColumn;
+import javax.persistence.ManyToOne;
+import javax.persistence.Table;
+
+import pe.com.tfc.utils.Auditable;
+
+/**
+ * WFFlujoPorRuta
+ * 
+ * @author kdelacruz
+ * @since [Req.17-007] 06.03.2017 Implementación WorkFlow Legal
+ */
+
+@Entity
+@Table(name = "WFTFLUJ", schema = "DFIN")
+public class WFFlujoPorRuta extends Auditable {
+
+    /**
+     * 
+     */
+    private static final long serialVersionUID = 4866083195060377244L;
+    private String idFlujo;
+    private String codigoEmpresa;
+    private Integer numeroOrden;
+    private String indicadorFlujo;
+
+    private WFRuta wfRuta;
+    private WFEtapa wfEtapa;
+
+    @Id
+    @Column(name = "C_IDFLUJ", nullable = false, length = 15)
+    public String getIdFlujo() {
+        return idFlujo;
+    }
+
+    public void setIdFlujo(String idFlujo) {
+        this.idFlujo = idFlujo;
+    }
+
+    @Column(name = "N_ORDENN", nullable = false, precision = 2, scale = 0)
+    public Integer getNumeroOrden() {
+        return numeroOrden;
+    }
+
+    public void setNumeroOrden(Integer numeroOrden) {
+        this.numeroOrden = numeroOrden;
+    }
+
+    @Column(name = "C_INDFLU", nullable = false, length = 1)
+    public String getIndicadorFlujo() {
+        return indicadorFlujo;
+    }
+
+    public void setIndicadorFlujo(String indicadorFlujo) {
+        this.indicadorFlujo = indicadorFlujo;
+    }
+
+    @ManyToOne(cascade = {}, fetch = FetchType.LAZY)
+    @JoinColumn(name = "C_IDRUTA", unique = false, nullable = false)
+    public WFRuta getWfRuta() {
+        return wfRuta;
+    }
+
+    public void setWfRuta(WFRuta wfRuta) {
+        this.wfRuta = wfRuta;
+    }
+
+    @ManyToOne(cascade = {}, fetch = FetchType.LAZY)
+    @JoinColumn(name = "C_IDETAP", unique = false, nullable = false)
+    public WFEtapa getWfEtapa() {
+        return wfEtapa;
+    }
+
+    public void setWfEtapa(WFEtapa wfEtapa) {
+        this.wfEtapa = wfEtapa;
+    }
+
+    @Column(name = "C_CODEMP", nullable = false, length = 3)
+    public String getCodigoEmpresa() {
+        return codigoEmpresa;
+    }
+
+    public void setCodigoEmpresa(String codigoEmpresa) {
+        this.codigoEmpresa = codigoEmpresa;
+    }
+
+}
\ No newline at end of file
diff --git a/FINANCIERONEW/src/financ/workflow/entity/WFLegal.java b/FINANCIERONEW/src/financ/workflow/entity/WFLegal.java
new file mode 100644
index 0000000..c80854e
--- /dev/null
+++ b/FINANCIERONEW/src/financ/workflow/entity/WFLegal.java
@@ -0,0 +1,261 @@
+package financ.workflow.entity;
+
+import java.util.Date;
+
+import javax.persistence.Column;
+import javax.persistence.Entity;
+import javax.persistence.FetchType;
+import javax.persistence.Id;
+import javax.persistence.JoinColumn;
+import javax.persistence.ManyToOne;
+import javax.persistence.OneToOne;
+import javax.persistence.Table;
+
+import pe.com.tfc.utils.Auditable;
+import financ.clientes.entity.CLNotarios;
+import financ.clientes.entity.CLPersonas;
+import financ.creditos.entity.CRTipoBien;
+
+/**
+ * WFLegal
+ * 
+ * @author kdelacruz
+ * @since [Req.17-007] 06.03.2017 Implementación WorkFlow Legal
+ */
+
+@Entity
+@Table(name = "WFDLEGA", schema = "DFIN")
+public class WFLegal extends Auditable {
+
+    /**
+     * 
+     */
+    private static final long serialVersionUID = -7765195563438262935L;
+    private String idMaestra;
+    private String codigoEmpresa;
+    private Date fechaFirma;
+    private Date fechaDocumento;
+    private Date fechaBloqueo;
+    private String asientoBloqueo;
+    private String NumeroPartidaBloqueo;
+    private String oficinaRegistral;
+    private Date fechaEscritura;
+    private Date fechaInscripcion;
+    private String asientoInscripcion;
+    private String numeroKardex;
+    private Double gastosNotariales;
+    private Double gastosRegistrales;
+    private String indicadorCancelacion;
+    private String indicadorFinanciamiento;
+    private String tipoOperacion;
+    private String numeroOperacion;
+
+    private CLPersonas clPersonas;
+    private WFMaestra wfMaestra;
+    private CLNotarios clNotarios;
+    private CRTipoBien crTipoBien;
+
+    @Id
+    @Column(name = "C_IDWORK", nullable = false, length = 15)
+    public String getIdMaestra() {
+        return idMaestra;
+    }
+
+    public void setIdMaestra(String idMaestra) {
+        this.idMaestra = idMaestra;
+    }
+
+    @Column(name = "C_CODEMP", nullable = false, length = 3)
+    public String getCodigoEmpresa() {
+        return codigoEmpresa;
+    }
+
+    public void setCodigoEmpresa(String codigoEmpresa) {
+        this.codigoEmpresa = codigoEmpresa;
+    }
+
+    @Column(name = "D_FECFIR", length = 7)
+    public Date getFechaFirma() {
+        return fechaFirma;
+    }
+
+    public void setFechaFirma(Date fechaFirma) {
+        this.fechaFirma = fechaFirma;
+    }
+
+    @Column(name = "D_FECDOC", length = 7)
+    public Date getFechaDocumento() {
+        return fechaDocumento;
+    }
+
+    public void setFechaDocumento(Date fechaDocumento) {
+        this.fechaDocumento = fechaDocumento;
+    }
+
+    @Column(name = "D_FECBLO", length = 7)
+    public Date getFechaBloqueo() {
+        return fechaBloqueo;
+    }
+
+    public void setFechaBloqueo(Date fechaBloqueo) {
+        this.fechaBloqueo = fechaBloqueo;
+    }
+
+    @Column(name = "C_ASIBLO", length = 50)
+    public String getAsientoBloqueo() {
+        return asientoBloqueo;
+    }
+
+    public void setAsientoBloqueo(String asientoBloqueo) {
+        this.asientoBloqueo = asientoBloqueo;
+    }
+
+    @Column(name = "C_NUMPAR", length = 50)
+    public String getNumeroPartidaBloqueo() {
+        return NumeroPartidaBloqueo;
+    }
+
+    public void setNumeroPartidaBloqueo(String NumeroPartidaBloqueo) {
+        this.NumeroPartidaBloqueo = NumeroPartidaBloqueo;
+    }
+
+    @Column(name = "C_OFIREG", length = 100)
+    public String getOficinaRegistral() {
+        return oficinaRegistral;
+    }
+
+    public void setOficinaRegistral(String oficinaRegistral) {
+        this.oficinaRegistral = oficinaRegistral;
+    }
+
+    @Column(name = "D_FECESC", length = 7)
+    public Date getFechaEscritura() {
+        return fechaEscritura;
+    }
+
+    public void setFechaEscritura(Date fechaEscritura) {
+        this.fechaEscritura = fechaEscritura;
+    }
+
+    @Column(name = "D_FECINS", length = 7)
+    public Date getFechaInscripcion() {
+        return fechaInscripcion;
+    }
+
+    public void setFechaInscripcion(Date fechaInscripcion) {
+        this.fechaInscripcion = fechaInscripcion;
+    }
+
+    @Column(name = "C_ASIINS", length = 50)
+    public String getAsientoInscripcion() {
+        return asientoInscripcion;
+    }
+
+    public void setAsientoInscripcion(String asientoInscripcion) {
+        this.asientoInscripcion = asientoInscripcion;
+    }
+
+    @Column(name = "C_KARDEX", length = 50)
+    public String getNumeroKardex() {
+        return numeroKardex;
+    }
+
+    public void setNumeroKardex(String numeroKardex) {
+        this.numeroKardex = numeroKardex;
+    }
+
+    @Column(name = "N_GASNOT", precision = 12, scale = 2)
+    public Double getGastosNotariales() {
+        return gastosNotariales;
+    }
+
+    public void setGastosNotariales(Double gastosNotariales) {
+        this.gastosNotariales = gastosNotariales;
+    }
+
+    @Column(name = "N_GASREG", precision = 12, scale = 2)
+    public Double getGastosRegistrales() {
+        return gastosRegistrales;
+    }
+
+    public void setGastosRegistrales(Double gastosRegistrales) {
+        this.gastosRegistrales = gastosRegistrales;
+    }
+
+    @Column(name = "C_INDCAN", length = 1)
+    public String getIndicadorCancelacion() {
+        return indicadorCancelacion;
+    }
+
+    public void setIndicadorCancelacion(String indicadorCancelacion) {
+        this.indicadorCancelacion = indicadorCancelacion;
+    }
+
+    @OneToOne(cascade = {}, fetch = FetchType.LAZY)
+    @JoinColumn(name = "C_IDWORK", unique = false, nullable = false)
+    public WFMaestra getWfMaestra() {
+        return wfMaestra;
+    }
+
+    public void setWfMaestra(WFMaestra wfMaestra) {
+        this.wfMaestra = wfMaestra;
+    }
+
+    @ManyToOne(cascade = {}, fetch = FetchType.LAZY)
+    @JoinColumn(name = "C_NOTARI", unique = false)
+    public CLNotarios getClNotarios() {
+        return clNotarios;
+    }
+
+    public void setClNotarios(CLNotarios clNotarios) {
+        this.clNotarios = clNotarios;
+    }
+
+    @Column(name = "C_INDFIN", length = 1)
+    public String getIndicadorFinanciamiento() {
+        return indicadorFinanciamiento;
+    }
+
+    public void setIndicadorFinanciamiento(String indicadorFinanciamiento) {
+        this.indicadorFinanciamiento = indicadorFinanciamiento;
+    }
+
+    @ManyToOne(cascade = {}, fetch = FetchType.LAZY)
+    @JoinColumn(name = "C_IDTIBI", unique = false)
+    public CRTipoBien getCrTipoBien() {
+        return crTipoBien;
+    }
+
+    public void setCrTipoBien(CRTipoBien crTipoBien) {
+        this.crTipoBien = crTipoBien;
+    }
+
+    @Column(name = "C_TIPOPE", length = 2)
+    public String getTipoOperacion() {
+        return tipoOperacion;
+    }
+
+    public void setTipoOperacion(String tipoOperacion) {
+        this.tipoOperacion = tipoOperacion;
+    }
+
+    @Column(name = "C_NUMOPE", length = 15)
+    public String getNumeroOperacion() {
+        return numeroOperacion;
+    }
+
+    public void setNumeroOperacion(String numeroOperacion) {
+        this.numeroOperacion = numeroOperacion;
+    }
+
+    @ManyToOne(fetch = FetchType.LAZY)
+    @JoinColumn(name = "C_CODPER", nullable = false)
+    public CLPersonas getClPersonas() {
+        return this.clPersonas;
+    }
+
+    public void setClPersonas(CLPersonas clPersonas) {
+        this.clPersonas = clPersonas;
+    }
+
+}
diff --git a/FINANCIERONEW/src/financ/workflow/entity/WFMaestra.java b/FINANCIERONEW/src/financ/workflow/entity/WFMaestra.java
new file mode 100644
index 0000000..6f58d38
--- /dev/null
+++ b/FINANCIERONEW/src/financ/workflow/entity/WFMaestra.java
@@ -0,0 +1,162 @@
+package financ.workflow.entity;
+
+import java.util.ArrayList;
+import java.util.Date;
+import java.util.List;
+
+import javax.persistence.CascadeType;
+import javax.persistence.Column;
+import javax.persistence.Entity;
+import javax.persistence.FetchType;
+import javax.persistence.Id;
+import javax.persistence.JoinColumn;
+import javax.persistence.ManyToOne;
+import javax.persistence.OneToMany;
+import javax.persistence.Table;
+import javax.persistence.Temporal;
+import javax.persistence.TemporalType;
+
+import financ.clientes.entity.CLPersonas;
+import pe.com.tfc.utils.Auditable;
+
+/**
+ * WFMaestro
+ * 
+ * @author kdelacruz
+ * @since [Req.17-007] 06.03.2017 Implementación WorkFlow Legal
+ */
+
+@Entity
+@Table(name = "WFMWORK", schema = "DFIN")
+public class WFMaestra extends Auditable {
+
+    /**
+     * 
+     */
+    private static final long serialVersionUID = -2890902638179516319L;
+    private String idMaestra;
+    private String codigoEmpresa;
+    private String usuarioSolicitante;
+    private String usuarioAtiende;
+    private Date fechaProceso;
+
+    private WFModulo wfModulo;
+    private WFRuta wfRuta;
+    private WFEstado wfEstado;
+    private WFEtapa wfEtapa;
+    private List<WFMovimientos> listwfMovimientos = new ArrayList<WFMovimientos>(0);
+    private List<WFDocumentos> listwfDocumentos = new ArrayList<WFDocumentos>(0);
+
+    public WFMaestra() {
+    }
+
+    public WFMaestra(String idMaestra) {
+        this.idMaestra = idMaestra;
+    }
+
+    @Id
+    @Column(name = "C_IDWORK", nullable = false, length = 15)
+    public String getIdMaestra() {
+        return idMaestra;
+    }
+
+    public void setIdMaestra(String idMaestra) {
+        this.idMaestra = idMaestra;
+    }
+
+    @Column(name = "C_USUSOL", length = 15)
+    public String getUsuarioSolicitante() {
+        return usuarioSolicitante;
+    }
+
+    public void setUsuarioSolicitante(String usuarioSolicitante) {
+        this.usuarioSolicitante = usuarioSolicitante;
+    }
+
+    @Column(name = "C_USUATI", length = 15)
+    public String getUsuarioAtiende() {
+        return usuarioAtiende;
+    }
+
+    public void setUsuarioAtiende(String usuarioAtiende) {
+        this.usuarioAtiende = usuarioAtiende;
+    }
+
+    @ManyToOne(cascade = {}, fetch = FetchType.LAZY)
+    @JoinColumn(name = "C_IDMODU", unique = false, nullable = false)
+    public WFModulo getWfModulo() {
+        return wfModulo;
+    }
+
+    public void setWfModulo(WFModulo wfModulo) {
+        this.wfModulo = wfModulo;
+    }
+
+    @Column(name = "C_CODEMP", nullable = false, length = 3)
+    public String getCodigoEmpresa() {
+        return codigoEmpresa;
+    }
+
+    public void setCodigoEmpresa(String codigoEmpresa) {
+        this.codigoEmpresa = codigoEmpresa;
+    }
+
+    @OneToMany(cascade = { CascadeType.ALL }, fetch = FetchType.LAZY, mappedBy = "wfMaestra")
+    public List<WFDocumentos> getListwfDocumentos() {
+        return listwfDocumentos;
+    }
+
+    public void setListwfDocumentos(List<WFDocumentos> listwfDocumentos) {
+        this.listwfDocumentos = listwfDocumentos;
+    }
+
+    @Temporal(TemporalType.DATE)
+    @Column(name = "D_FECPRO", nullable = false, length = 7)
+    public Date getFechaProceso() {
+        return fechaProceso;
+    }
+
+    public void setFechaProceso(Date fechaProceso) {
+        this.fechaProceso = fechaProceso;
+    }
+
+    @ManyToOne(cascade = {}, fetch = FetchType.LAZY)
+    @JoinColumn(name = "C_IDESTA", unique = false, nullable = false)
+    public WFEstado getWfEstado() {
+        return wfEstado;
+    }
+
+    public void setWfEstado(WFEstado wfEstado) {
+        this.wfEstado = wfEstado;
+    }
+
+    @ManyToOne(cascade = {}, fetch = FetchType.LAZY)
+    @JoinColumn(name = "C_IDRUTA", unique = false, nullable = false)
+    public WFRuta getWfRuta() {
+        return wfRuta;
+    }
+
+    public void setWfRuta(WFRuta wfRuta) {
+        this.wfRuta = wfRuta;
+    }
+
+    @OneToMany(cascade = { CascadeType.ALL }, fetch = FetchType.LAZY, mappedBy = "wfMaestra")
+    public List<WFMovimientos> getListwfMovimientos() {
+        return listwfMovimientos;
+    }
+
+    public void setListwfMovimientos(List<WFMovimientos> listwfMovimientos) {
+        this.listwfMovimientos = listwfMovimientos;
+    }
+
+    @ManyToOne(cascade = {}, fetch = FetchType.LAZY)
+    @JoinColumn(name = "C_IDETAP", unique = false, nullable = false)
+    public WFEtapa getWfEtapa() {
+        return wfEtapa;
+    }
+
+    public void setWfEtapa(WFEtapa wfEtapa) {
+        this.wfEtapa = wfEtapa;
+    }
+
+}
diff --git a/FINANCIERONEW/src/financ/workflow/entity/WFModulo.java b/FINANCIERONEW/src/financ/workflow/entity/WFModulo.java
new file mode 100644
index 0000000..789160b
--- /dev/null
+++ b/FINANCIERONEW/src/financ/workflow/entity/WFModulo.java
@@ -0,0 +1,84 @@
+package financ.workflow.entity;
+
+import java.util.ArrayList;
+import java.util.List;
+
+import javax.persistence.CascadeType;
+import javax.persistence.Column;
+import javax.persistence.Entity;
+import javax.persistence.FetchType;
+import javax.persistence.Id;
+import javax.persistence.OneToMany;
+import javax.persistence.Table;
+
+import pe.com.tfc.utils.Auditable;
+
+/**
+ * WFModulo
+ * 
+ * @author kdelacruz
+ * @since [Req.17-007] 06.03.2017 Implementación WorkFlow Legal
+ */
+
+@Entity
+@Table(name = "WFTMODU", schema = "DFIN")
+public class WFModulo extends Auditable {
+
+    /**
+     * 
+     */
+    private static final long serialVersionUID = 6760629002216841996L;
+    private String idModulo;
+    private String codigoEmpresa;
+    private String descripcionModulo;
+
+    private List<WFEtapa> listWFEtapa = new ArrayList<WFEtapa>(0);
+    private List<WFMaestra> listWFMaestro = new ArrayList<WFMaestra>(0);
+
+    @Id
+    @Column(name = "C_IDMODU", nullable = false, length = 6)
+    public String getIdModulo() {
+        return idModulo;
+    }
+
+    public void setIdModulo(String idModulo) {
+        this.idModulo = idModulo;
+    }
+
+    @Column(name = "C_DESCRI", nullable = false, length = 50)
+    public String getDescripcionModulo() {
+        return descripcionModulo;
+    }
+
+    public void setDescripcionModulo(String descripcionModulo) {
+        this.descripcionModulo = descripcionModulo;
+    }
+
+    @Column(name = "C_CODEMP", nullable = false, length = 3)
+    public String getCodigoEmpresa() {
+        return codigoEmpresa;
+    }
+
+    public void setCodigoEmpresa(String codigoEmpresa) {
+        this.codigoEmpresa = codigoEmpresa;
+    }
+
+    @OneToMany(cascade = { CascadeType.ALL }, fetch = FetchType.LAZY, mappedBy = "wfModulo")
+    public List<WFEtapa> getListWFEtapa() {
+        return listWFEtapa;
+    }
+
+    public void setListWFEtapa(List<WFEtapa> listWFEtapa) {
+        this.listWFEtapa = listWFEtapa;
+    }
+
+    @OneToMany(cascade = { CascadeType.ALL }, fetch = FetchType.LAZY, mappedBy = "wfModulo")
+    public List<WFMaestra> getListWFMaestro() {
+        return listWFMaestro;
+    }
+
+    public void setListWFMaestro(List<WFMaestra> listWFMaestro) {
+        this.listWFMaestro = listWFMaestro;
+    }
+
+}
diff --git a/FINANCIERONEW/src/financ/workflow/entity/WFMovimientos.java b/FINANCIERONEW/src/financ/workflow/entity/WFMovimientos.java
new file mode 100644
index 0000000..a223551
--- /dev/null
+++ b/FINANCIERONEW/src/financ/workflow/entity/WFMovimientos.java
@@ -0,0 +1,138 @@
+package financ.workflow.entity;
+
+import java.util.Date;
+
+import javax.persistence.Column;
+import javax.persistence.Entity;
+import javax.persistence.FetchType;
+import javax.persistence.Id;
+import javax.persistence.JoinColumn;
+import javax.persistence.ManyToOne;
+import javax.persistence.Table;
+
+import pe.com.tfc.utils.Auditable;
+
+/**
+ * WFMovimientos
+ * 
+ * @author kdelacruz
+ * @since [Req.17-007] 06.03.2017 Implementación WorkFlow Legal
+ */
+
+@Entity
+@Table(name = "WFDMOVI", schema = "DFIN")
+public class WFMovimientos extends Auditable {
+
+    /**
+     * 
+     */
+    private static final long serialVersionUID = 2007782884806085372L;
+    private String idMovimiento;
+    private String codigoEmpresa;
+    private Date fechaProceso;
+    private String horaProceso;
+    private String usuarioProceso;
+
+    private WFMaestra wfMaestra;
+    private WFEtapa wfEtapaInicial;
+    private WFEtapa wfEtapaFinal;
+    private WFEstado wfEstadoInicial;
+    private WFEstado wfEstadoFinal;
+
+    @Id
+    @Column(name = "C_IDMOVI", nullable = false, length = 15)
+    public String getIdMovimiento() {
+        return idMovimiento;
+    }
+
+    public void setIdMovimiento(String idMovimiento) {
+        this.idMovimiento = idMovimiento;
+    }
+
+    @Column(name = "C_CODEMP", nullable = false, length = 3)
+    public String getCodigoEmpresa() {
+        return codigoEmpresa;
+    }
+
+    public void setCodigoEmpresa(String codigoEmpresa) {
+        this.codigoEmpresa = codigoEmpresa;
+    }
+
+    @Column(name = "D_FECPRO", nullable = false, length = 7)
+    public Date getFechaProceso() {
+        return fechaProceso;
+    }
+
+    public void setFechaProceso(Date fechaProceso) {
+        this.fechaProceso = fechaProceso;
+    }
+
+    @Column(name = "C_HORPRO", length = 15)
+    public String getHoraProceso() {
+        return horaProceso;
+    }
+
+    public void setHoraProceso(String horaProceso) {
+        this.horaProceso = horaProceso;
+    }
+
+    @ManyToOne(cascade = {}, fetch = FetchType.LAZY)
+    @JoinColumn(name = "C_IDWORK", unique = false, nullable = false)
+    public WFMaestra getWfMaestra() {
+        return wfMaestra;
+    }
+
+    public void setWfMaestra(WFMaestra wfMaestra) {
+        this.wfMaestra = wfMaestra;
+    }
+
+    @ManyToOne(cascade = {}, fetch = FetchType.LAZY)
+    @JoinColumn(name = "C_ETAINI", unique = false)
+    public WFEtapa getWfEtapaInicial() {
+        return wfEtapaInicial;
+    }
+
+    public void setWfEtapaInicial(WFEtapa wfEtapaInicial) {
+        this.wfEtapaInicial = wfEtapaInicial;
+    }
+
+    @ManyToOne(cascade = {}, fetch = FetchType.LAZY)
+    @JoinColumn(name = "C_ETAFIN", unique = false, nullable = false)
+    public WFEtapa getWfEtapaFinal() {
+        return wfEtapaFinal;
+    }
+
+    public void setWfEtapaFinal(WFEtapa wfEtapaFinal) {
+        this.wfEtapaFinal = wfEtapaFinal;
+    }
+
+    @ManyToOne(cascade = {}, fetch = FetchType.LAZY)
+    @JoinColumn(name = "C_ESTINI", unique = false)
+    public WFEstado getWfEstadoInicial() {
+        return wfEstadoInicial;
+    }
+
+    public void setWfEstadoInicial(WFEstado wfEstadoInicial) {
+        this.wfEstadoInicial = wfEstadoInicial;
+    }
+
+    @ManyToOne(cascade = {}, fetch = FetchType.LAZY)
+    @JoinColumn(name = "C_ESTFIN", unique = false, nullable = false)
+    public WFEstado getWfEstadoFinal() {
+        return wfEstadoFinal;
+    }
+
+    public void setWfEstadoFinal(WFEstado wfEstadoFinal) {
+        this.wfEstadoFinal = wfEstadoFinal;
+    }
+
+    @Column(name = "C_USUPRO", nullable = false, length = 15)
+    public String getUsuarioProceso() {
+        return usuarioProceso;
+    }
+
+    public void setUsuarioProceso(String usuarioProceso) {
+        this.usuarioProceso = usuarioProceso;
+    }
+
+}
diff --git a/FINANCIERONEW/src/financ/workflow/entity/WFRuta.java b/FINANCIERONEW/src/financ/workflow/entity/WFRuta.java
new file mode 100644
index 0000000..d3693b7
--- /dev/null
+++ b/FINANCIERONEW/src/financ/workflow/entity/WFRuta.java
@@ -0,0 +1,103 @@
+package financ.workflow.entity;
+
+import java.util.ArrayList;
+import java.util.List;
+
+import javax.persistence.CascadeType;
+import javax.persistence.Column;
+import javax.persistence.Entity;
+import javax.persistence.FetchType;
+import javax.persistence.Id;
+import javax.persistence.OneToMany;
+import javax.persistence.Table;
+
+import pe.com.tfc.utils.Auditable;
+
+/**
+ * WFRuta
+ * 
+ * @author kdelacruz
+ * @since [Req.17-007] 06.03.2017 Implementación WorkFlow Legal
+ */
+
+@Entity
+@Table(name = "WFTRUTA", schema = "DFIN")
+public class WFRuta extends Auditable {
+
+    /**
+     * 
+     */
+    private static final long serialVersionUID = -1281334327459022692L;
+    private String idRuta;
+    private String codigoEmpresa;
+    private String descripcionRuta;
+    private String key001;
+    private String key002;
+    private List<WFFlujoPorRuta> listwfFlujoPorRuta = new ArrayList<WFFlujoPorRuta>(0);
+    private List<WFMaestra> lisstwfMaestro = new ArrayList<WFMaestra>(0);
+
+    @Id
+    @Column(name = "C_IDRUTA", nullable = false, length = 6)
+    public String getIdRuta() {
+        return idRuta;
+    }
+
+    public void setIdRuta(String idRuta) {
+        this.idRuta = idRuta;
+    }
+
+    @Column(name = "C_DESCRI", nullable = false, length = 50)
+    public String getDescripcionRuta() {
+        return descripcionRuta;
+    }
+
+    public void setDescripcionRuta(String descripcionRuta) {
+        this.descripcionRuta = descripcionRuta;
+    }
+
+    @Column(name = "C_KEY001", nullable = false, length = 50)
+    public String getKey001() {
+        return key001;
+    }
+
+    public void setKey001(String key001) {
+        this.key001 = key001;
+    }
+
+    @Column(name = "C_KEY002", nullable = false, length = 50)
+    public String getKey002() {
+        return key002;
+    }
+
+    public void setKey002(String key002) {
+        this.key002 = key002;
+    }
+
+    @OneToMany(cascade = { CascadeType.ALL }, fetch = FetchType.LAZY, mappedBy = "wfRuta")
+    public List<WFFlujoPorRuta> getListwfFlujoPorRuta() {
+        return listwfFlujoPorRuta;
+    }
+
+    public void setListwfFlujoPorRuta(List<WFFlujoPorRuta> listwfFlujoPorRuta) {
+        this.listwfFlujoPorRuta = listwfFlujoPorRuta;
+    }
+
+    @Column(name = "C_CODEMP", nullable = false, length = 3)
+    public String getCodigoEmpresa() {
+        return codigoEmpresa;
+    }
+
+    public void setCodigoEmpresa(String codigoEmpresa) {
+        this.codigoEmpresa = codigoEmpresa;
+    }
+
+    @OneToMany(cascade = { CascadeType.ALL }, fetch = FetchType.LAZY, mappedBy = "wfRuta")
+    public List<WFMaestra> getLisstwfMaestro() {
+        return lisstwfMaestro;
+    }
+
+    public void setLisstwfMaestro(List<WFMaestra> lisstwfMaestro) {
+        this.lisstwfMaestro = lisstwfMaestro;
+    }
+
+}
diff --git a/FINANCIERONEW/src/financ/workflow/entity/WFTipoDocumento.java b/FINANCIERONEW/src/financ/workflow/entity/WFTipoDocumento.java
new file mode 100644
index 0000000..f9b0a62
--- /dev/null
+++ b/FINANCIERONEW/src/financ/workflow/entity/WFTipoDocumento.java
@@ -0,0 +1,94 @@
+package financ.workflow.entity;
+
+import java.util.ArrayList;
+import java.util.List;
+
+import javax.persistence.CascadeType;
+import javax.persistence.Column;
+import javax.persistence.Entity;
+import javax.persistence.FetchType;
+import javax.persistence.Id;
+import javax.persistence.OneToMany;
+import javax.persistence.Table;
+
+import pe.com.tfc.utils.Auditable;
+
+/**
+ * WFTipoDocumento
+ * 
+ * @author kdelacruz
+ * @since [Req.17-007] 06.03.2017 Implementación WorkFlow Legal
+ */
+
+@Entity
+@Table(name = "WFTTIDO", schema = "DFIN")
+public class WFTipoDocumento extends Auditable {
+
+    /**
+     * 
+     */
+    private static final long serialVersionUID = 8827617304147329332L;
+    private String idTipoDocumento;
+    private String codigoEmpresa;
+    private String descripcionTipoDocumento;
+    private String keyTipoDocumento;
+
+    private List<WFDocumentoPorEtapa> listwfDocumentoPorEtapa = new ArrayList<WFDocumentoPorEtapa>(0);
+    private List<WFDocumentos> lsistwfDocumentos = new ArrayList<WFDocumentos>(0);
+
+    @Id
+    @Column(name = "C_IDTIDO", nullable = false, length = 15)
+    public String getIdTipoDocumento() {
+        return idTipoDocumento;
+    }
+
+    public void setIdTipoDocumento(String idTipoDocumento) {
+        this.idTipoDocumento = idTipoDocumento;
+    }
+
+    @Column(name = "C_DESCRI", nullable = false, length = 100)
+    public String getDescripcionTipoDocumento() {
+        return descripcionTipoDocumento;
+    }
+
+    public void setDescripcionTipoDocumento(String descripcionTipoDocumento) {
+        this.descripcionTipoDocumento = descripcionTipoDocumento;
+    }
+
+    @Column(name = "C_KEYDOC", nullable = false, length = 50)
+    public String getKeyTipoDocumento() {
+        return keyTipoDocumento;
+    }
+
+    public void setKeyTipoDocumento(String keyTipoDocumento) {
+        this.keyTipoDocumento = keyTipoDocumento;
+    }
+
+    @Column(name = "C_CODEMP", nullable = false, length = 3)
+    public String getCodigoEmpresa() {
+        return codigoEmpresa;
+    }
+
+    public void setCodigoEmpresa(String codigoEmpresa) {
+        this.codigoEmpresa = codigoEmpresa;
+    }
+
+    @OneToMany(cascade = { CascadeType.ALL }, fetch = FetchType.LAZY, mappedBy = "wfTipoDocumento")
+    public List<WFDocumentoPorEtapa> getListwfDocumentoPorEtapa() {
+        return listwfDocumentoPorEtapa;
+    }
+
+    public void setListwfDocumentoPorEtapa(List<WFDocumentoPorEtapa> listwfDocumentoPorEtapa) {
+        this.listwfDocumentoPorEtapa = listwfDocumentoPorEtapa;
+    }
+
+    @OneToMany(cascade = { CascadeType.ALL }, fetch = FetchType.LAZY, mappedBy = "wfTipoDocumento")
+    public List<WFDocumentos> getLsistwfDocumentos() {
+        return lsistwfDocumentos;
+    }
+
+    public void setLsistwfDocumentos(List<WFDocumentos> lsistwfDocumentos) {
+        this.lsistwfDocumentos = lsistwfDocumentos;
+    }
+
+}
diff --git a/FINANCIERONEW/src/financ/workflow/facade/WFDetalleComentarioFacade.java b/FINANCIERONEW/src/financ/workflow/facade/WFDetalleComentarioFacade.java
new file mode 100644
index 0000000..cb47c9d
--- /dev/null
+++ b/FINANCIERONEW/src/financ/workflow/facade/WFDetalleComentarioFacade.java
@@ -0,0 +1,113 @@
+package financ.workflow.facade;
+
+import java.util.List;
+
+import javax.ejb.EJB;
+import javax.ejb.Stateless;
+
+import pe.com.tfc.utils.AbstractFacade;
+import pe.com.tfc.utils.PropertyParams;
+import admin.contab.beans.BeanParametrosAuditoria;
+import financ.util.Constante;
+import financ.workflow.bean.BeanWFDetalleComentario;
+import financ.workflow.entity.WFDetalleComentario;
+import financ.workflow.entity.WFEtapa;
+import financ.workflow.entity.WFMaestra;
+import financ.workflow.local.WFDetalleComentarioFacadeInterfaceLocal;
+import financ.workflow.local.WFDetalleComentarioInterfaceLocal;
+
+/**
+ * WFDetalleComentarioFacade
+ * 
+ * @author kdelacruz
+ * @since [Req.17-007] 14.03.2017 Implementación WorkFlow Legal
+ */
+
+@Stateless
+public class WFDetalleComentarioFacade extends AbstractFacade<WFDetalleComentario> implements WFDetalleComentarioFacadeInterfaceLocal {
+
+    public static final String LocalJNDIName = WFDetalleComentarioFacade.class.getSimpleName() + "/local";
+
+    @EJB
+    private WFDetalleComentarioInterfaceLocal wfDetalleComentarioInterfaceLocal;
+
+    public void guardar(String idMaestra,
+                        String idEtapa,
+                        String textoComentario,
+                        BeanParametrosAuditoria beanParametrosAuditoria) throws Exception {
+        String modulo = "WFDetalleComentarioFacade.guardar()";
+        String usuario = beanParametrosAuditoria.getUsuarioInsercion();
+        WFDetalleComentario wfDetalleComentario;
+        String correlativo;
+        PropertyParams propertyParams;
+        try {
+            propertyParams = new PropertyParams();
+            propertyParams.addProperty("wfMaestra.idMaestra", idMaestra);
+            propertyParams.addProperty("wfEtapa.idEtapa", idEtapa);
+
+            List<WFDetalleComentario> lstWFDetalleComentarios = wfDetalleComentarioInterfaceLocal.findByProperties(propertyParams);
+            if (!_isEmpty(lstWFDetalleComentarios)) {
+                wfDetalleComentario = lstWFDetalleComentarios.get(0);
+                wfDetalleComentario.setTextoComentario(textoComentario);
+                setModificacionAuditoria(wfDetalleComentario, beanParametrosAuditoria);
+
+                wfDetalleComentarioInterfaceLocal.update(wfDetalleComentario);
+            } else {
+
+                correlativo = generarCorrelativo("WFDCOMT", 15, beanParametrosAuditoria);
+
+                wfDetalleComentario = new WFDetalleComentario();
+                wfDetalleComentario.setIdCorrelativo(correlativo);
+                wfDetalleComentario.setTextoComentario(textoComentario);
+                wfDetalleComentario.setWfEtapa(new WFEtapa(idEtapa));
+                wfDetalleComentario.setWfMaestra(new WFMaestra(idMaestra));
+
+                wfDetalleComentario.setCodigoEmpresa(beanParametrosAuditoria.getCodigoEmpresa());
+                wfDetalleComentario.setEstadoRegistro(Constante.ESTADO_REGISTRO_VIGENTE);
+                setInsercionAuditoria(wfDetalleComentario, beanParametrosAuditoria);
+
+                wfDetalleComentarioInterfaceLocal.save(wfDetalleComentario);
+            }
+        } catch (Exception e) {
+            throw handlerError(e, usuario, modulo);
+        }
+    }
+
+    public BeanWFDetalleComentario get(String idMaestra, String idEtapa, BeanParametrosAuditoria beanParametrosAuditoria) throws Exception {
+        String modulo = "WFDetalleComentarioFacade.get()";
+        String usuario = beanParametrosAuditoria.getUsuarioInsercion();
+        BeanWFDetalleComentario beanWFDetalleComentario = null;
+        PropertyParams propertyParams;
+        try {
+            propertyParams = new PropertyParams();
+            propertyParams.addProperty("wfMaestra.idMaestra", idMaestra);
+            propertyParams.addProperty("wfEtapa.idEtapa", idEtapa);
+
+            List<WFDetalleComentario> lstWFDetalleComentarios = wfDetalleComentarioInterfaceLocal.findByProperties(propertyParams);
+            if (!_isEmpty(lstWFDetalleComentarios)) {
+                WFDetalleComentario wfDetalleComentario = lstWFDetalleComentarios.get(0);
+                beanWFDetalleComentario = getBeanWFDetalleComentario(wfDetalleComentario);
+            }
+        } catch (Exception e) {
+            throw handlerError(e, usuario, modulo);
+        }
+
+        return beanWFDetalleComentario;
+    }
+
+    private BeanWFDetalleComentario getBeanWFDetalleComentario(WFDetalleComentario wfDetalleComentario) {
+        BeanWFDetalleComentario beanWFDetalleComentario = new BeanWFDetalleComentario();
+        if (_isEmpty(wfDetalleComentario)) {
+            return beanWFDetalleComentario;
+        }
+
+        beanWFDetalleComentario.setIdCorrelativo(wfDetalleComentario.getIdCorrelativo());
+        beanWFDetalleComentario.setCodigoEmpresa(wfDetalleComentario.getCodigoEmpresa());
+        beanWFDetalleComentario.setTextoComentario(wfDetalleComentario.getTextoComentario());
+        beanWFDetalleComentario.setIdMaestra(wfDetalleComentario.getWfMaestra().getIdMaestra());
+        beanWFDetalleComentario.setIdEtapa(wfDetalleComentario.getWfEtapa().getIdEtapa());
+
+        return beanWFDetalleComentario;
+    }
+
+}
diff --git a/FINANCIERONEW/src/financ/workflow/facade/WFDetalleMailPorRutaFacade.java b/FINANCIERONEW/src/financ/workflow/facade/WFDetalleMailPorRutaFacade.java
new file mode 100644
index 0000000..ec7d658
--- /dev/null
+++ b/FINANCIERONEW/src/financ/workflow/facade/WFDetalleMailPorRutaFacade.java
@@ -0,0 +1,51 @@
+package financ.workflow.facade;
+
+import java.util.ArrayList;
+import java.util.List;
+
+import javax.ejb.EJB;
+import javax.ejb.Stateless;
+
+import pe.com.tfc.utils.AbstractFacade;
+import pe.com.tfc.utils.PropertyParams;
+import admin.contab.beans.BeanParametrosAuditoria;
+import financ.workflow.entity.WFDetalleMailPorRuta;
+import financ.workflow.local.WFDetalleMailPorRutaFacadeInterfaceLocal;
+import financ.workflow.local.WFDetalleMailPorRutaInterfaceLocal;
+
+/**
+ * WFDetalleMailPorRutaFacade
+ * 
+ * @author kdelacruz
+ * @since [S17-007] 22.03.2017 Implementación WorkFlow Legal
+ */
+
+@Stateless
+public class WFDetalleMailPorRutaFacade extends AbstractFacade<WFDetalleMailPorRuta> implements WFDetalleMailPorRutaFacadeInterfaceLocal {
+
+    public static final String LocalJNDIName = WFDetalleMailPorRutaFacade.class.getSimpleName() + "/local";
+
+    @EJB
+    private WFDetalleMailPorRutaInterfaceLocal wfDetalleMailPorRutaInterfaceLocal;
+
+    public List<String> buscarCorreosPorRuta(String idRuta, BeanParametrosAuditoria beanParametrosAuditoria) throws Exception {
+        String modulo = "WFDetalleMailPorRutaFacade.buscarCorreosPorRuta()";
+        String usuario = beanParametrosAuditoria.getUsuarioInsercion();
+        List<WFDetalleMailPorRuta> listaWFDetalleMailPorRuta = new ArrayList<WFDetalleMailPorRuta>(0);
+        List<String> listCorreosDestinatarios = new ArrayList<String>(0);
+        PropertyParams propertyParams;
+        try {
+            propertyParams = new PropertyParams();
+            if (!_isEmpty(idRuta)) {
+                propertyParams.addProperty("wfRuta.idRuta", idRuta);
+            }
+            listaWFDetalleMailPorRuta = wfDetalleMailPorRutaInterfaceLocal.findByProperties(propertyParams);
+            for (WFDetalleMailPorRuta wfDetalleMailPorRuta : listaWFDetalleMailPorRuta) {
+                listCorreosDestinatarios.add(wfDetalleMailPorRuta.getUsuarioCorreo());
+            }
+        } catch (Exception e) {
+            throw handlerError(e, usuario, modulo);
+        }
+        return listCorreosDestinatarios;
+    }
+}
diff --git a/FINANCIERONEW/src/financ/workflow/facade/WFDocumentoPorEtapaFacade.java b/FINANCIERONEW/src/financ/workflow/facade/WFDocumentoPorEtapaFacade.java
new file mode 100644
index 0000000..202da5d
--- /dev/null
+++ b/FINANCIERONEW/src/financ/workflow/facade/WFDocumentoPorEtapaFacade.java
@@ -0,0 +1,73 @@
+package financ.workflow.facade;
+
+import java.util.ArrayList;
+import java.util.List;
+
+import javax.ejb.EJB;
+import javax.ejb.Stateless;
+
+import pe.com.tfc.utils.AbstractFacade;
+import pe.com.tfc.utils.PropertyParams;
+import admin.contab.beans.BeanParametrosAuditoria;
+import financ.workflow.bean.BeanWFTipoDocumento;
+import financ.workflow.entity.WFDocumentoPorEtapa;
+import financ.workflow.entity.WFDocumentos;
+import financ.workflow.local.WFDocumentoPorEtapaFacadeInterfaceLocal;
+import financ.workflow.local.WFDocumentoPorEtapaInterfaceLocal;
+import financ.workflow.local.WFDocumentosInterfaceLocal;
+import financ.workflow.local.WFTipoDocumentoFacadeInterfaceLocal;
+import financ.workflow.local.WFTipoDocumentoInterfaceLocal;
+
+/**
+ * WFDocumentoPorEtapaFacade
+ * 
+ * @author kdelacruz
+ * @since [Req.17-007] 06.03.2017 Implementación WorkFlow Legal
+ */
+
+@Stateless
+public class WFDocumentoPorEtapaFacade extends AbstractFacade<WFDocumentoPorEtapa> implements WFDocumentoPorEtapaFacadeInterfaceLocal {
+
+    public static final String LocalJNDIName = WFDocumentoPorEtapaFacade.class.getSimpleName() + "/local";
+
+    @EJB
+    private WFDocumentoPorEtapaInterfaceLocal wfDocumentoPorEtapaInterfaceLocal;
+    @EJB
+    private WFTipoDocumentoInterfaceLocal wfTipoDocumentoInterfaceLocal;
+    @EJB
+    private WFTipoDocumentoFacadeInterfaceLocal wfTipoDocumentoFacadeInterfaceLocal;
+
+    public List<BeanWFTipoDocumento> listarDetalleDocumento(final String idMaestra,
+                                                            final String idEtapa,
+                                                            final BeanParametrosAuditoria beanParametrosAuditoria) throws Exception {
+
+        final String modulo = "WFDocumentoPorEtapaFacade.listarDetalleDocumento()";
+        final List<BeanWFTipoDocumento> listBeanWFTipoDocumento = new ArrayList<BeanWFTipoDocumento>(0);
+        List<WFDocumentoPorEtapa> listWFDocumentoPorEtapa = new ArrayList<WFDocumentoPorEtapa>(0);
+        BeanWFTipoDocumento beanWFTipoDocumento;
+        PropertyParams propertyParams;
+
+        try {
+            propertyParams = new PropertyParams();
+            propertyParams.addPropertyOrder("id", false);
+
+            if (!_isEmpty(idEtapa)) {
+                propertyParams.addProperty("wfEtapa.idEtapa", idEtapa);
+            }
+
+            listWFDocumentoPorEtapa = wfDocumentoPorEtapaInterfaceLocal.findByProperties(propertyParams);
+
+            for (final WFDocumentoPorEtapa wfDocumentoPorEtapa : listWFDocumentoPorEtapa) {
+                beanWFTipoDocumento = wfTipoDocumentoFacadeInterfaceLocal.getBeanWFTipoDocumento(idMaestra,
+                                                                                                 idEtapa,
+                                                                                                 wfDocumentoPorEtapa.getWfTipoDocumento(),
+                                                                                                 beanParametrosAuditoria);
+                listBeanWFTipoDocumento.add(beanWFTipoDocumento);
+            }
+        } catch (final Exception e) {
+            throw handlerError(e, beanParametrosAuditoria.getUsuarioInsercion(), modulo);
+        }
+        return listBeanWFTipoDocumento;
+    }
+
+}
diff --git a/FINANCIERONEW/src/financ/workflow/facade/WFDocumentosFacade.java b/FINANCIERONEW/src/financ/workflow/facade/WFDocumentosFacade.java
new file mode 100644
index 0000000..b1df589
--- /dev/null
+++ b/FINANCIERONEW/src/financ/workflow/facade/WFDocumentosFacade.java
@@ -0,0 +1,234 @@
+package financ.workflow.facade;
+
+import java.util.ArrayList;
+import java.util.List;
+
+import javax.ejb.EJB;
+import javax.ejb.Stateless;
+
+import pe.com.tfc.utils.AbstractFacade;
+import pe.com.tfc.utils.ErrorControladoException;
+import pe.com.tfc.utils.PropertyParams;
+import admin.contab.beans.BeanParametrosAuditoria;
+import admin.util.Constante;
+import financ.util.file.entity.CBFile;
+import financ.util.file.local.CBFileFacadeInterfaceLocal;
+import financ.util.file.local.CBFileInterfaceLocal;
+import financ.workflow.bean.BeanWFDocumentos;
+import financ.workflow.entity.WFDocumentos;
+import financ.workflow.entity.WFEtapa;
+import financ.workflow.entity.WFMaestra;
+import financ.workflow.entity.WFTipoDocumento;
+import financ.workflow.local.WFDocumentosFacadeInterfaceLocal;
+import financ.workflow.local.WFDocumentosInterfaceLocal;
+import financ.workflow.local.WFEtapaInterfaceLocal;
+import financ.workflow.local.WFEventoPorEtapaFacadeInterfaceLocal;
+import financ.workflow.local.WFMaestraFacadeInterfaceLocal;
+import financ.workflow.local.WFMaestraInterfaceLocal;
+import financ.workflow.local.WFTipoDocumentoInterfaceLocal;
+
+/**
+ * WFDocumentosFacade
+ * 
+ * @author kdelacruz
+ * @since [Req.17-007] 06.03.2017 Implementación WorkFlow Legal
+ */
+
+@Stateless
+public class WFDocumentosFacade extends AbstractFacade<WFDocumentos> implements WFDocumentosFacadeInterfaceLocal {
+
+    public static final String LocalJNDIName = WFDocumentosFacade.class.getSimpleName() + "/local";
+
+    @EJB
+    private WFDocumentosInterfaceLocal wfDocumentosInterfaceLocal;
+    @EJB
+    private WFMaestraInterfaceLocal wfMaestraInterfaceLocal;
+    @EJB
+    private WFEtapaInterfaceLocal wfEtapaInterfaceLocal;
+    @EJB
+    private WFTipoDocumentoInterfaceLocal wfTipoDocumentoInterfaceLocal;
+    @EJB
+    private CBFileInterfaceLocal cbFileInterfaceLocal;
+    @EJB
+    private CBFileFacadeInterfaceLocal cbFileFacadeInterfaceLocal;
+    @EJB
+    private WFDocumentosFacadeInterfaceLocal wfDocumentosFacadeInterfaceLocal;
+    @EJB
+    private WFMaestraFacadeInterfaceLocal wfMaestraFacadeInterfaceLocal;
+    @EJB
+    private WFEventoPorEtapaFacadeInterfaceLocal wfEventoPorEtapaFacadeInterfaceLocal;
+
+    @EJB
+    public void guardarUltimoDocumento(String idMaestra,
+                                       String idTipoDocumento,
+                                       String idFile,
+                                       String idEtapa,
+                                       BeanParametrosAuditoria beanParametrosAuditoria) throws Exception {
+        String modulo = "WFDocumentosFacade.guardarUltimoDocumento()";
+        String usuario = beanParametrosAuditoria.getUsuarioInsercion();
+        PropertyParams propertyParams;
+        String correlativo;
+        try {
+            //DESCHEACKER
+            propertyParams = new PropertyParams();
+            propertyParams.addProperty("wfMaestra.idMaestra", idMaestra);
+            //propertyParams.addProperty("wfTipoDocumento.idTipoDocumento", idTipoDocumento);
+            if (!_isEmpty(idEtapa)) {
+                propertyParams.addProperty("wfEtapa.idEtapa", idEtapa);
+            } else {
+                propertyParams.addPropertyISNULL("wfEtapa.idEtapa");
+            }
+            propertyParams.addProperty("estadoRegistro", Constante.ESTADO_REGISTRO_VIGENTE);
+
+            List<WFDocumentos> lstWFDocumentos = wfDocumentosInterfaceLocal.findByProperties(propertyParams);
+            for (WFDocumentos wfDocumentos : lstWFDocumentos) {
+                wfDocumentos.setEstadoRegistro(Constante.ESTADO_REGISTRO_NO_VIGENTE);
+                wfDocumentos.setUsuarioModificacion(beanParametrosAuditoria.getUsuarioModificacion());
+                wfDocumentos.setFechaModificacion(beanParametrosAuditoria.getFechaModificacion());
+                wfDocumentos.setTerminalModificacion(beanParametrosAuditoria.getTerminalModificacion());
+                wfDocumentos.setIpModificacion(beanParametrosAuditoria.getIpModificacion());
+
+                wfDocumentosInterfaceLocal.update(wfDocumentos);
+            }
+            //
+
+            WFDocumentos wfDocumentos = new WFDocumentos();
+
+            correlativo = generarCorrelativo("WFDDOCU", 15, beanParametrosAuditoria);
+
+            wfDocumentos.setIdDocumento(correlativo);
+
+            WFMaestra wfMaestra = wfMaestraInterfaceLocal.findById(idMaestra);
+            wfDocumentos.setwfMaestra(wfMaestra);
+
+            WFTipoDocumento wfTipoDocumento = wfTipoDocumentoInterfaceLocal.findById(idTipoDocumento);
+            wfDocumentos.setWfTipoDocumento(wfTipoDocumento);
+
+            CBFile cbFile = cbFileInterfaceLocal.findById(idFile);
+            wfDocumentos.setCbFile(cbFile);
+
+            if (!_isEmpty(idEtapa)) {
+                WFEtapa wfEtapa = wfEtapaInterfaceLocal.findById(idEtapa);
+                wfDocumentos.setWfEtapa(wfEtapa);
+            }
+
+            wfDocumentos.setEstadoRegistro(Constante.ESTADO_REGISTRO_VIGENTE);
+            wfDocumentos.setCodigoEmpresa(beanParametrosAuditoria.getCodigoEmpresa());
+            wfDocumentos.setUsuarioInsercion(beanParametrosAuditoria.getUsuarioInsercion());
+            wfDocumentos.setFechaInsercion(beanParametrosAuditoria.getFechaInsercion());
+            wfDocumentos.setTerminalInsercion(beanParametrosAuditoria.getTerminalInsercion());
+            wfDocumentos.setIpInsercion(beanParametrosAuditoria.getIpInsercion());
+
+            wfDocumentosInterfaceLocal.save(wfDocumentos);
+
+        } catch (Exception e) {
+            throw handlerError(e, usuario, modulo);
+        }
+    }
+
+    public List<BeanWFDocumentos> buscar(String idEtapa,
+                                         String idTipoDocumento,
+                                         String idMaestra,
+                                         BeanParametrosAuditoria beanParametrosAuditoria) throws Exception {
+        String modulo = "WFDocumentosFacade.buscar()";
+        String usuario = beanParametrosAuditoria.getUsuarioInsercion();
+        List<BeanWFDocumentos> lstBeanWFDocumentos = new ArrayList<BeanWFDocumentos>();
+        List<WFDocumentos> lstWfDocumentos;
+        PropertyParams propertyParams;
+        try {
+            propertyParams = new PropertyParams();
+            if (_isEmpty(idEtapa)) {
+                propertyParams.addPropertyISNULL("wfEtapa.idEtapa");
+            } else {
+                propertyParams.addProperty("wfEtapa.idEtapa", idEtapa);
+            }
+            propertyParams.addProperty("wfTipoDocumento.idTipoDocumento", idTipoDocumento);
+            propertyParams.addProperty("wfMaestra.idMaestra", idMaestra);
+            propertyParams.addPropertyOrder("fechaInsercion", true);
+
+            lstWfDocumentos = wfDocumentosInterfaceLocal.findByProperties(propertyParams);
+
+            for (WFDocumentos wfDocumentos : lstWfDocumentos) {
+                lstBeanWFDocumentos.add(getBeanWFDocumentos(wfDocumentos));
+            }
+
+        } catch (Exception e) {
+            throw handlerError(e, usuario, modulo);
+        }
+        return lstBeanWFDocumentos;
+    }
+
+    public List<BeanWFDocumentos> mapear(String lista) throws ErrorControladoException {
+        String[] filas = null;
+        String[] columnas = null;
+        List<BeanWFDocumentos> lstBeanWFDocumentos = new ArrayList<BeanWFDocumentos>();
+        BeanWFDocumentos beanWFDocumentos;
+        if (!_isEmpty(lista)) {
+            filas = lista.split("-/-");
+            for (String fila : filas) {
+                columnas = fila.split("---");
+
+                beanWFDocumentos = new BeanWFDocumentos();
+                beanWFDocumentos.setIdTipoDocumento(columnas[1]);
+                beanWFDocumentos.setIdArchivo(columnas[2]);
+
+                lstBeanWFDocumentos.add(beanWFDocumentos);
+            }
+        }
+        return lstBeanWFDocumentos;
+    }
+
+    private BeanWFDocumentos getBeanWFDocumentos(WFDocumentos wfDocumentos) {
+        BeanWFDocumentos beanWFDocumentos = new BeanWFDocumentos();
+        if (_isEmpty(wfDocumentos)) {
+            return beanWFDocumentos;
+        }
+
+        beanWFDocumentos.setIdDocumento(wfDocumentos.getIdDocumento());
+        beanWFDocumentos.setIdMaestra(wfDocumentos.getwfMaestra().getIdMaestra());
+        beanWFDocumentos.setIdTipoDocumento(wfDocumentos.getWfTipoDocumento().getIdTipoDocumento());
+        beanWFDocumentos.setDescripcionTipoDocumento(wfDocumentos.getWfTipoDocumento().getDescripcionTipoDocumento());
+        if (!_isEmpty(wfDocumentos.getWfEtapa())) {
+            beanWFDocumentos.setIdEtapa(wfDocumentos.getWfEtapa().getIdEtapa());
+        }
+        if (!_isEmpty(wfDocumentos.getCbFile())) {
+            beanWFDocumentos.setIdArchivo(wfDocumentos.getCbFile().getIdFile());
+        }
+        beanWFDocumentos.setFechaInsercion(wfDocumentos.getFechaInsercion());
+        beanWFDocumentos.setUsuarioInsercion(wfDocumentos.getUsuarioInsercion());
+
+        return beanWFDocumentos;
+    }
+
+    public void darDeBajaTodosDocumentos(String idMaestra,
+                                         String idEtapa,
+                                         BeanParametrosAuditoria beanParametrosAuditoria) throws Exception {
+        String modulo = "WFDocumentosFacade.darDeBajaTodosDocumentos()";
+        String usuario = beanParametrosAuditoria.getUsuarioInsercion();
+        PropertyParams propertyParams;
+        try {
+            propertyParams = new PropertyParams();
+            propertyParams.addProperty("wfMaestra.idMaestra", idMaestra);
+            if (!_isEmpty(idEtapa)) {
+                propertyParams.addProperty("wfEtapa.idEtapa", idEtapa);
+            } else {
+                propertyParams.addPropertyISNULL("wfEtapa.idEtapa");
+            }
+            propertyParams.addProperty("estadoRegistro", Constante.ESTADO_REGISTRO_VIGENTE);
+
+            List<WFDocumentos> lstWFDocumentos = wfDocumentosInterfaceLocal.findByProperties(propertyParams);
+            for (WFDocumentos wfDocumentos : lstWFDocumentos) {
+                wfDocumentos.setEstadoRegistro(Constante.ESTADO_REGISTRO_NO_VIGENTE);
+                wfDocumentos.setUsuarioModificacion(beanParametrosAuditoria.getUsuarioModificacion());
+                wfDocumentos.setFechaModificacion(beanParametrosAuditoria.getFechaModificacion());
+                wfDocumentos.setTerminalModificacion(beanParametrosAuditoria.getTerminalModificacion());
+                wfDocumentos.setIpModificacion(beanParametrosAuditoria.getIpModificacion());
+
+                wfDocumentosInterfaceLocal.update(wfDocumentos);
+            }
+        } catch (Exception e) {
+            throw handlerError(e, usuario, modulo);
+        }
+    }
+
+}
diff --git a/FINANCIERONEW/src/financ/workflow/facade/WFEstadoFacade.java b/FINANCIERONEW/src/financ/workflow/facade/WFEstadoFacade.java
new file mode 100644
index 0000000..870c922
--- /dev/null
+++ b/FINANCIERONEW/src/financ/workflow/facade/WFEstadoFacade.java
@@ -0,0 +1,66 @@
+package financ.workflow.facade;
+
+import java.util.ArrayList;
+import java.util.List;
+
+import javax.ejb.EJB;
+import javax.ejb.Stateless;
+
+import pe.com.tfc.utils.AbstractFacade;
+import pe.com.tfc.utils.PropertyParams;
+import admin.contab.beans.BeanParametrosAuditoria;
+import financ.util.Constante;
+import financ.workflow.bean.BeanWFEstado;
+import financ.workflow.entity.WFEstado;
+import financ.workflow.local.WFEstadoFacadeInterfaceLocal;
+import financ.workflow.local.WFEstadoInterfaceLocal;
+
+/**
+ * WFEstadoWorkflowFacade
+ * 
+ * @author kdelacruz
+ * @since [Req.17-007] 06.03.2017 Implementación WorkFlow Legal
+ */
+
+@Stateless
+public class WFEstadoFacade extends AbstractFacade<WFEstado> implements WFEstadoFacadeInterfaceLocal {
+
+    public static final String LocalJNDIName = WFEstadoFacade.class.getSimpleName() + "/local";
+
+    @EJB
+    private WFEstadoInterfaceLocal wfEstadoInterfaceLocal;
+
+    public List<BeanWFEstado> listarCboEstado(final String idModulo,
+                                              final BeanParametrosAuditoria beanParametrosAuditoria) throws Exception {
+
+        final String modulo = "WFEstadoFacade.listarCboEstado()";
+        final List<BeanWFEstado> listBeanWFEstado = new ArrayList<BeanWFEstado>(0);
+        List<WFEstado> listWFEstado = new ArrayList<WFEstado>(0);
+        BeanWFEstado beanWFEstado = new BeanWFEstado();
+        PropertyParams propertyParams;
+
+        try {
+            propertyParams = new PropertyParams();
+            propertyParams.addProperty("wfModulo.idModulo", idModulo);
+            propertyParams.addProperty("estadoRegistro", Constante.ESTADO_REGISTRO_VIGENTE);
+            propertyParams.addPropertyOrder("idEstado");
+            listWFEstado = wfEstadoInterfaceLocal.findByProperties(propertyParams);
+
+            beanWFEstado.setIdEstado("");
+            beanWFEstado.setDescripcionEstado("TODOS");
+            listBeanWFEstado.add(beanWFEstado);
+
+            for (final WFEstado wfEstado : listWFEstado) {
+
+                beanWFEstado = new BeanWFEstado();
+                beanWFEstado.setIdEstado(wfEstado.getIdEstado());
+                beanWFEstado.setDescripcionEstado(wfEstado.getDescripcionEstado());
+                listBeanWFEstado.add(beanWFEstado);
+            }
+        } catch (final Exception e) {
+            throw handlerError(e, beanParametrosAuditoria.getUsuarioInsercion(), modulo);
+        }
+        return listBeanWFEstado;
+    }
+
+}
diff --git a/FINANCIERONEW/src/financ/workflow/facade/WFEtapaFacade.java b/FINANCIERONEW/src/financ/workflow/facade/WFEtapaFacade.java
new file mode 100644
index 0000000..3699117
--- /dev/null
+++ b/FINANCIERONEW/src/financ/workflow/facade/WFEtapaFacade.java
@@ -0,0 +1,215 @@
+package financ.workflow.facade;
+
+import java.util.ArrayList;
+import java.util.List;
+
+import javax.ejb.EJB;
+import javax.ejb.Stateless;
+
+import pe.com.tfc.utils.AbstractFacade;
+import pe.com.tfc.utils.PropertyParams;
+import admin.contab.beans.BeanParametrosAuditoria;
+import admin.contab.entity.CBRolAplicacion;
+import admin.contab.local.CBRolXUsuariosInterfaceLocal;
+import financ.util.Constante;
+import financ.workflow.bean.BeanWFEtapa;
+import financ.workflow.entity.WFEtapa;
+import financ.workflow.entity.WFEtapasPorRol;
+import financ.workflow.entity.WFFlujoPorRuta;
+import financ.workflow.entity.WFMaestra;
+import financ.workflow.local.WFEtapaFacadeInterfaceLocal;
+import financ.workflow.local.WFEtapaInterfaceLocal;
+import financ.workflow.local.WFEtapasPorRolInterfaceLocal;
+import financ.workflow.local.WFFlujoPorRutaInterfaceLocal;
+import financ.workflow.local.WFMaestraInterfaceLocal;
+
+/**
+ * WFEtapaWorkflowFacade
+ * 
+ * @author kdelacruz
+ * @since [Req.17-007] 06.03.2017 Implementación WorkFlow Legal
+ */
+
+@Stateless
+public class WFEtapaFacade extends AbstractFacade<WFEtapa> implements WFEtapaFacadeInterfaceLocal {
+
+    public static final String LocalJNDIName = WFEtapaFacade.class.getSimpleName() + "/local";
+
+    @EJB
+    private WFEtapaInterfaceLocal wfEtapaInterfaceLocal;
+    @EJB
+    private WFMaestraInterfaceLocal wfMaestraInterfaceLocal;
+    @EJB
+    private WFFlujoPorRutaInterfaceLocal wfFlujoPorRutaInterfaceLocal;
+    @EJB
+    private WFEtapasPorRolInterfaceLocal wfEtapasPorRolInterfaceLocal;
+    @EJB
+    private CBRolXUsuariosInterfaceLocal cbRolXUsuariosInterfaceLocal;
+
+    public List<BeanWFEtapa> listarEtapa(final String idModulo,
+                                         final String indInicio,
+                                         final String idMaestra,
+                                         final BeanParametrosAuditoria beanParametrosAuditoria) throws Exception {
+
+        final String modulo = "WFEtapaFacade.listarEtapa()";
+        final List<BeanWFEtapa> listBeanWFEtapa = new ArrayList<BeanWFEtapa>(0);
+        List<WFEtapa> listWFEtapa = new ArrayList<WFEtapa>(0);
+        List<WFFlujoPorRuta> listWFFlujoPorRuta = new ArrayList<WFFlujoPorRuta>(0);
+        BeanWFEtapa beanWFEtapa;
+        WFMaestra wfMaestra;
+        PropertyParams propertyParams;
+
+        try {
+            if (_isEmpty(idMaestra)) {
+                propertyParams = new PropertyParams();
+                propertyParams.addProperty("indInicio", indInicio);
+                listWFEtapa = wfEtapaInterfaceLocal.findByProperties(propertyParams);
+
+                for (final WFEtapa wfEtapa : listWFEtapa) {
+                    beanWFEtapa = getBeanWFEtapa(wfEtapa);
+                    listBeanWFEtapa.add(beanWFEtapa);
+                }
+            } else {
+                propertyParams = new PropertyParams();
+                propertyParams.addPropertyOrder("numeroOrden", false);
+                wfMaestra = wfMaestraInterfaceLocal.findById(idMaestra);
+                propertyParams.addProperty("wfRuta.idRuta", wfMaestra.getWfRuta().getIdRuta());
+
+                listWFFlujoPorRuta = wfFlujoPorRutaInterfaceLocal.findByProperties(propertyParams);
+
+                for (final WFFlujoPorRuta wfFlujoPorRuta : listWFFlujoPorRuta) {
+                    beanWFEtapa = getBeanWFEtapa(wfFlujoPorRuta.getWfEtapa());
+                    listBeanWFEtapa.add(beanWFEtapa);
+                }
+            }
+
+        } catch (final Exception e) {
+            throw handlerError(e, beanParametrosAuditoria.getUsuarioInsercion(), modulo);
+        }
+        return listBeanWFEtapa;
+    }
+
+    public String validarEtapaEdicion(final String idMaestra,
+                                      final String idEtapaValidar,
+                                      final BeanParametrosAuditoria beanParametrosAuditoria) throws Exception {
+        final String modulo = "WFEtapaFacade.validarEtapaEdicion()";
+        String codigoEdicion = null;
+        PropertyParams propertyParams;
+        try {
+            if (_isEmpty(idMaestra)) {
+                return Constante.WF_COMPORTAMIENTO_TRANSACCIONAL;
+            }
+
+            String idEtapaPendiente = obtenerEtapaPendiente(idMaestra, beanParametrosAuditoria);
+
+            List<String> lstRoles = obtenerRoles(beanParametrosAuditoria);
+
+            propertyParams = new PropertyParams();
+            propertyParams.addProperty("wfEtapa.idEtapa", idEtapaPendiente);
+            propertyParams.addProperty("idRol", lstRoles, PropertyParams.OPERADOR_IN);
+            propertyParams.addProperty("estadoRegistro", Constante.ESTADO_REGISTRO_VIGENTE);
+            List<WFEtapasPorRol> lstEtapasPorRols = wfEtapasPorRolInterfaceLocal.findByProperties(propertyParams);
+
+            if (_equiv(idEtapaPendiente, idEtapaValidar) && !_isEmpty(lstEtapasPorRols)) {
+                return Constante.WF_COMPORTAMIENTO_TRANSACCIONAL;
+            }
+
+        } catch (final Exception e) {
+            throw handlerError(e, beanParametrosAuditoria.getUsuarioInsercion(), modulo);
+        }
+        return codigoEdicion;
+    }
+
+    private List<String> obtenerRoles(BeanParametrosAuditoria beanParametrosAuditoria) {
+        List<String> lstRoles = new ArrayList<String>();
+        List<CBRolAplicacion> lstCbRolAplicacions = cbRolXUsuariosInterfaceLocal.findRolByCodigoUsuario(beanParametrosAuditoria.getUsuarioInsercion(),
+                                                                                                        beanParametrosAuditoria.getCodigoEmpresa());
+        for (CBRolAplicacion cbRolAplicacion : lstCbRolAplicacions) {
+            lstRoles.add(cbRolAplicacion.getIdRolAplicacion());
+        }
+        return lstRoles;
+    }
+
+    public String obtenerEtapaPendiente(final String idMaestra, BeanParametrosAuditoria beanParametrosAuditoria) throws Exception {
+        String modulo = "WFEtapaFacade.obtenerEtapaPendiente()";
+        String idEtapaPendiente = null;
+        PropertyParams propertyParams;
+        List<WFFlujoPorRuta> lstWFLFlujoPorRutas;
+        int avanzar = 0;
+        try {
+
+            WFMaestra wfMaestra = wfMaestraInterfaceLocal.findById(idMaestra);
+            if (_equiv(wfMaestra.getWfEstado().getIdEstado(), Constante.WF_ESTADO_SOLICITUD_RECHAZADO)) {
+                return idEtapaPendiente;
+            } else if (_equiv(wfMaestra.getWfEstado().getIdEstado(), Constante.WF_ESTADO_SOLICITUD_ENVIADO)) {
+                avanzar = 1;
+            } else if (_equiv(wfMaestra.getWfEstado().getIdEstado(), Constante.WF_ESTADO_SOLICITUD_OBSERVADO)) {
+                avanzar = -1;
+            }
+
+            propertyParams = new PropertyParams();
+            propertyParams.addProperty("wfRuta.idRuta", wfMaestra.getWfRuta().getIdRuta());
+            propertyParams.addProperty("wfEtapa.idEtapa", wfMaestra.getWfEtapa().getIdEtapa());
+            propertyParams.addProperty("estadoRegistro", Constante.ESTADO_REGISTRO_VIGENTE);
+            lstWFLFlujoPorRutas = wfFlujoPorRutaInterfaceLocal.findByProperties(propertyParams);
+            if (_isEmpty(lstWFLFlujoPorRutas)) {
+                return idEtapaPendiente;
+            }
+
+            propertyParams = new PropertyParams();
+            propertyParams.addProperty("wfRuta.idRuta", wfMaestra.getWfRuta().getIdRuta());
+            propertyParams.addProperty("numeroOrden", lstWFLFlujoPorRutas.get(0).getNumeroOrden() + avanzar);
+            propertyParams.addProperty("estadoRegistro", Constante.ESTADO_REGISTRO_VIGENTE);
+            lstWFLFlujoPorRutas = wfFlujoPorRutaInterfaceLocal.findByProperties(propertyParams);
+
+            if (!_isEmpty(lstWFLFlujoPorRutas)) {
+                return lstWFLFlujoPorRutas.get(0).getWfEtapa().getIdEtapa();
+            }
+        } catch (final Exception e) {
+            throw handlerError(e, beanParametrosAuditoria.getUsuarioInsercion(), modulo);
+        }
+
+        return idEtapaPendiente;
+    }
+
+    private BeanWFEtapa getBeanWFEtapa(WFEtapa wfEtapa) {
+        BeanWFEtapa beanWFEtapa = new BeanWFEtapa();
+        if (_isEmpty(wfEtapa)) {
+            return beanWFEtapa;
+        }
+
+        beanWFEtapa.setIdEtapa(wfEtapa.getIdEtapa());
+        beanWFEtapa.setDescripcionEtapa(wfEtapa.getDescripcionEtapa());
+        beanWFEtapa.setAccionServlet(wfEtapa.getAccionServlet());
+
+        return beanWFEtapa;
+    }
+
+    public List<BeanWFEtapa> listarTodasEtapa(final BeanParametrosAuditoria beanParametrosAuditoria) throws Exception {
+
+        final String modulo = "WFEtapaFacade.listarTodasEtapa()";
+        final List<BeanWFEtapa> listBeanWFEtapa = new ArrayList<BeanWFEtapa>(0);
+        List<WFEtapa> listWFEtapa = new ArrayList<WFEtapa>(0);
+        BeanWFEtapa beanWFEtapa = new BeanWFEtapa();
+        ;
+        PropertyParams propertyParams;
+
+        try {
+            propertyParams = new PropertyParams();
+            listWFEtapa = wfEtapaInterfaceLocal.findByProperties(propertyParams);
+
+            beanWFEtapa.setIdEtapa("");
+            beanWFEtapa.setDescripcionEtapa("TODOS");
+            listBeanWFEtapa.add(beanWFEtapa);
+
+            for (final WFEtapa wfEtapa : listWFEtapa) {
+                beanWFEtapa = getBeanWFEtapa(wfEtapa);
+                listBeanWFEtapa.add(beanWFEtapa);
+            }
+        } catch (final Exception e) {
+            throw handlerError(e, beanParametrosAuditoria.getUsuarioInsercion(), modulo);
+        }
+        return listBeanWFEtapa;
+    }
+
+}
diff --git a/FINANCIERONEW/src/financ/workflow/facade/WFEtapasPorRolFacade.java b/FINANCIERONEW/src/financ/workflow/facade/WFEtapasPorRolFacade.java
new file mode 100644
index 0000000..528eb8d
--- /dev/null
+++ b/FINANCIERONEW/src/financ/workflow/facade/WFEtapasPorRolFacade.java
@@ -0,0 +1,26 @@
+package financ.workflow.facade;
+
+import javax.ejb.EJB;
+import javax.ejb.Stateless;
+
+import pe.com.tfc.utils.AbstractFacade;
+import financ.workflow.entity.WFEtapasPorRol;
+import financ.workflow.local.WFEtapasPorRolFacadeInterfaceLocal;
+import financ.workflow.local.WFEtapasPorRolInterfaceLocal;
+
+/**
+ * WFEtapasPorRolFacade
+ * 
+ * @author kdelacruz
+ * @since [Req.17-007] 16.03.2017 Implementación WorkFlow Legal
+ */
+
+@Stateless
+public class WFEtapasPorRolFacade extends AbstractFacade<WFEtapasPorRol> implements WFEtapasPorRolFacadeInterfaceLocal {
+
+    public static final String LocalJNDIName = WFEtapasPorRolFacade.class.getSimpleName() + "/local";
+
+    @EJB
+    private WFEtapasPorRolInterfaceLocal wfEtapasPorRolInterfaceLocal;
+
+}
diff --git a/FINANCIERONEW/src/financ/workflow/facade/WFEventoFacade.java b/FINANCIERONEW/src/financ/workflow/facade/WFEventoFacade.java
new file mode 100644
index 0000000..0526260
--- /dev/null
+++ b/FINANCIERONEW/src/financ/workflow/facade/WFEventoFacade.java
@@ -0,0 +1,68 @@
+package financ.workflow.facade;
+
+import java.util.ArrayList;
+import java.util.List;
+import javax.ejb.EJB;
+import javax.ejb.Stateless;
+import admin.contab.beans.BeanParametrosAuditoria;
+import financ.workflow.bean.BeanWFEvento;
+import financ.workflow.entity.WFEvento;
+import financ.workflow.local.WFEventoFacadeInterfaceLocal;
+import financ.workflow.local.WFEventoInterfaceLocal;
+import pe.com.tfc.utils.AbstractFacade;
+import pe.com.tfc.utils.PropertyParams;
+
+/**
+ * WFEventoWorkflowFacade
+ * 
+ * @author kdelacruz
+ * @since [Req.17-007] 06.03.2017
+ */
+
+@Stateless
+public class WFEventoFacade extends AbstractFacade<WFEvento> implements WFEventoFacadeInterfaceLocal {
+
+    public static final String LocalJNDIName = WFEventoFacade.class.getSimpleName() + "/local";
+
+    @EJB
+    private WFEventoInterfaceLocal wfEventoWorkflowInterfaceLocal;
+
+    public List<BeanWFEvento> listar(final String idModulo, final BeanParametrosAuditoria beanParametrosAuditoria) throws Exception {
+        final String modulo = "WFEventoFacade.listar()";
+        final List<BeanWFEvento> lstBeanWFEventos = new ArrayList<BeanWFEvento>(0);
+        List<WFEvento> lstWfEventos;
+        PropertyParams propertyParams;
+        try {
+
+            propertyParams = new PropertyParams();
+            propertyParams.addProperty("wfModulo.idModulo", idModulo);
+            propertyParams.addPropertyOrder("numeroOrden");
+
+            lstWfEventos = wfEventoWorkflowInterfaceLocal.findByProperties(propertyParams);
+
+            for (final WFEvento wfEvento : lstWfEventos) {
+                lstBeanWFEventos.add(getBeanWFEvento(wfEvento));
+            }
+        } catch (final Exception e) {
+            throw handlerError(e, beanParametrosAuditoria.getUsuarioInsercion(), modulo);
+        }
+        return lstBeanWFEventos;
+    }
+
+    private BeanWFEvento getBeanWFEvento(WFEvento wfEvento) {
+        BeanWFEvento beanWFEvento = new BeanWFEvento();
+        if (_isEmpty(wfEvento)) {
+            return beanWFEvento;
+        }
+
+        beanWFEvento.setIdEvento(wfEvento.getIdEvento());
+        beanWFEvento.setCodigoEmpresa(wfEvento.getCodigoEmpresa());
+        beanWFEvento.setNombreBoton(wfEvento.getNombreBoton());
+        beanWFEvento.setNombrePrograma(wfEvento.getNombrePrograma());
+        beanWFEvento.setIndicadorInvocar(wfEvento.getIndicadorInvocar());
+        beanWFEvento.setIdModulo(wfEvento.getWfModulo().getIdModulo());
+        beanWFEvento.setNumeroOrden(wfEvento.getNumeroOrden());
+
+        return beanWFEvento;
+    }
+}
diff --git a/FINANCIERONEW/src/financ/workflow/facade/WFEventoPorEtapaFacade.java b/FINANCIERONEW/src/financ/workflow/facade/WFEventoPorEtapaFacade.java
new file mode 100644
index 0000000..435d1ed
--- /dev/null
+++ b/FINANCIERONEW/src/financ/workflow/facade/WFEventoPorEtapaFacade.java
@@ -0,0 +1,96 @@
+package financ.workflow.facade;
+
+import java.util.ArrayList;
+import java.util.List;
+
+import javax.ejb.EJB;
+import javax.ejb.Stateless;
+
+import pe.com.tfc.utils.AbstractFacade;
+import pe.com.tfc.utils.PropertyParams;
+import admin.contab.beans.BeanParametrosAuditoria;
+import financ.workflow.bean.BeanWFEventoPorEtapa;
+import financ.workflow.entity.WFEventoPorEtapa;
+import financ.workflow.local.WFEventoPorEtapaFacadeInterfaceLocal;
+import financ.workflow.local.WFEventoPorEtapaInterfaceLocal;
+
+/**
+ * WFEventoPorEtapaFacade
+ * 
+ * @author kdelacruz
+ * @since [Req.17-007] 06.03.2017 Implementación WorkFlow Legal
+ */
+
+@Stateless
+public class WFEventoPorEtapaFacade extends AbstractFacade<WFEventoPorEtapa> implements WFEventoPorEtapaFacadeInterfaceLocal {
+
+    public static final String LocalJNDIName = WFEventoPorEtapaFacade.class.getSimpleName() + "/local";
+
+    @EJB
+    private WFEventoPorEtapaInterfaceLocal wfEventoPorEtapaInterfaceLocal;
+
+    public List<BeanWFEventoPorEtapa> listar(final String idEtapa, final BeanParametrosAuditoria beanParametrosAuditoria) throws Exception {
+        final String modulo = "WFEventoPorEtapaFacade.listar()";
+        final List<BeanWFEventoPorEtapa> lstBeanWFEventoPorEtapas = new ArrayList<BeanWFEventoPorEtapa>(0);
+        List<WFEventoPorEtapa> lstWfEventoPorEtapas;
+        PropertyParams propertyParams;
+        try {
+
+            propertyParams = new PropertyParams();
+            propertyParams.addProperty("wfEtapa.idEtapa", idEtapa);
+
+            lstWfEventoPorEtapas = wfEventoPorEtapaInterfaceLocal.findByProperties(propertyParams);
+
+            for (final WFEventoPorEtapa wfEventoPorEtapa : lstWfEventoPorEtapas) {
+                lstBeanWFEventoPorEtapas.add(getBeanWFEventoPorEtapa(wfEventoPorEtapa));
+            }
+        } catch (final Exception e) {
+            throw handlerError(e, beanParametrosAuditoria.getUsuarioInsercion(), modulo);
+        }
+        return lstBeanWFEventoPorEtapas;
+    }
+
+    public BeanWFEventoPorEtapa get(final String idEtapa,
+                                    final String idEvento,
+                                    final BeanParametrosAuditoria beanParametrosAuditoria) throws Exception {
+        final String modulo = "WFEventoPorEtapaFacade.get()";
+        BeanWFEventoPorEtapa beanWFEventoPorEtapa = null;
+        List<WFEventoPorEtapa> lstWfEventoPorEtapas;
+        PropertyParams propertyParams;
+        try {
+
+            propertyParams = new PropertyParams();
+            propertyParams.addProperty("wfEtapa.idEtapa", idEtapa);
+            propertyParams.addProperty("wfEvento.idEvento", idEvento);
+
+            lstWfEventoPorEtapas = wfEventoPorEtapaInterfaceLocal.findByProperties(propertyParams);
+
+            for (final WFEventoPorEtapa wfEventoPorEtapa : lstWfEventoPorEtapas) {
+                beanWFEventoPorEtapa = getBeanWFEventoPorEtapa(wfEventoPorEtapa);
+                return beanWFEventoPorEtapa;
+            }
+        } catch (final Exception e) {
+            throw handlerError(e, beanParametrosAuditoria.getUsuarioInsercion(), modulo);
+        }
+        return beanWFEventoPorEtapa;
+    }
+
+    private BeanWFEventoPorEtapa getBeanWFEventoPorEtapa(WFEventoPorEtapa wfEventoPorEtapa) {
+        BeanWFEventoPorEtapa beanWFEventoPorEtapa = new BeanWFEventoPorEtapa();
+        if (_isEmpty(wfEventoPorEtapa)) {
+            return beanWFEventoPorEtapa;
+        }
+
+        beanWFEventoPorEtapa.setIdEventoPorEtapa(wfEventoPorEtapa.getIdEventoPorEtapa());
+        beanWFEventoPorEtapa.setCodigoEmpresa(wfEventoPorEtapa.getCodigoEmpresa());
+        beanWFEventoPorEtapa.setIdEvento(wfEventoPorEtapa.getWfEvento().getIdEvento());
+        beanWFEventoPorEtapa.setIdEtapa(wfEventoPorEtapa.getWfEtapa().getIdEtapa());
+        beanWFEventoPorEtapa.setCodigoModuloReferenciaMail(wfEventoPorEtapa.getCodigoModuloReferenciaMail());
+        if (!_isEmpty(wfEventoPorEtapa.getWfEstado())) {
+            beanWFEventoPorEtapa.setIdEstado(wfEventoPorEtapa.getWfEstado().getIdEstado());
+        }
+
+        return beanWFEventoPorEtapa;
+    }
+
+}
diff --git a/FINANCIERONEW/src/financ/workflow/facade/WFFlujoPorRutaFacade.java b/FINANCIERONEW/src/financ/workflow/facade/WFFlujoPorRutaFacade.java
new file mode 100644
index 0000000..95dea92
--- /dev/null
+++ b/FINANCIERONEW/src/financ/workflow/facade/WFFlujoPorRutaFacade.java
@@ -0,0 +1,26 @@
+package financ.workflow.facade;
+
+import javax.ejb.EJB;
+import javax.ejb.Stateless;
+
+import pe.com.tfc.utils.AbstractFacade;
+import financ.workflow.entity.WFFlujoPorRuta;
+import financ.workflow.local.WFFlujoPorRutaFacadeInterfaceLocal;
+import financ.workflow.local.WFFlujoPorRutaInterfaceLocal;
+
+/**
+ * WFFlujoPorRutaFacade
+ *
+ * @author kdelacruz
+ * @since [Req.17-007] 06.03.2017 Implementación WorkFlow Legal
+ */
+
+@Stateless
+public class WFFlujoPorRutaFacade extends AbstractFacade<WFFlujoPorRuta> implements WFFlujoPorRutaFacadeInterfaceLocal {
+
+        public static final String LocalJNDIName = WFFlujoPorRutaFacade.class.getSimpleName() + "/local";
+
+        @EJB
+        private WFFlujoPorRutaInterfaceLocal wfFlujoPorRutaInterfaceLocal;
+
+}
diff --git a/FINANCIERONEW/src/financ/workflow/facade/WFLegalFacade.java b/FINANCIERONEW/src/financ/workflow/facade/WFLegalFacade.java
new file mode 100644
index 0000000..2098929
--- /dev/null
+++ b/FINANCIERONEW/src/financ/workflow/facade/WFLegalFacade.java
@@ -0,0 +1,514 @@
+package financ.workflow.facade;
+
+import java.util.List;
+
+import javax.ejb.EJB;
+import javax.ejb.Stateless;
+
+import pe.com.tfc.utils.AbstractFacade;
+import pe.com.tfc.utils.ErrorControladoException;
+import admin.contab.beans.BeanParametrosAuditoria;
+import admin.util.Constante;
+import admin.util.ConstantesErrores;
+import financ.clientes.entity.CLNotarios;
+import financ.clientes.entity.CLPersonas;
+import financ.clientes.local.CLNotariosInterfaceLocal;
+import financ.clientes.local.CLPersonasInterfaceLocal;
+import financ.creditos.entity.CRTipoBien;
+import financ.creditos.local.CRTipoBienInterfaceLocal;
+import financ.util.FormatoFecha;
+import financ.util.file.local.CBFileFacadeInterfaceLocal;
+import financ.workflow.bean.BeanWFDocumentos;
+import financ.workflow.bean.BeanWFEventoPorEtapa;
+import financ.workflow.bean.BeanWFLegal;
+import financ.workflow.bean.BeanWFMaestra;
+import financ.workflow.entity.WFLegal;
+import financ.workflow.local.WFDetalleComentarioFacadeInterfaceLocal;
+import financ.workflow.local.WFDocumentosFacadeInterfaceLocal;
+import financ.workflow.local.WFEventoPorEtapaFacadeInterfaceLocal;
+import financ.workflow.local.WFLegalFacadeInterfaceLocal;
+import financ.workflow.local.WFLegalInterfaceLocal;
+import financ.workflow.local.WFMaestraFacadeInterfaceLocal;
+import financ.workflow.local.WFMaestraInterfaceLocal;
+import financ.workflow.local.WFMovimientosFacadeInterfaceLocal;
+import financ.workflow.local.WFRutaFacadeInterfaceLocal;
+
+/**
+ * WFLegalFacade
+ * 
+ * @author kdelacruz
+ * @since [Req.17-007] 06.03.2017 Implementación WorkFlow Legal
+ */
+
+@Stateless
+public class WFLegalFacade extends AbstractFacade<WFLegal> implements WFLegalFacadeInterfaceLocal {
+
+    public static final String LocalJNDIName = WFLegalFacade.class.getSimpleName() + "/local";
+
+    @EJB
+    private WFLegalInterfaceLocal wfLegalInterfaceLocal;
+    @EJB
+    private CLNotariosInterfaceLocal clNotariosInterfaceLocal;
+    @EJB
+    private CBFileFacadeInterfaceLocal cbFileFacadeInterfaceLocal;
+    @EJB
+    private WFDocumentosFacadeInterfaceLocal wfDocumentosFacadeInterfaceLocal;
+    @EJB
+    private WFMaestraFacadeInterfaceLocal wfMaestraFacadeInterfaceLocal;
+    @EJB
+    private WFMaestraInterfaceLocal wfMaestraInterfaceLocal;
+    @EJB
+    private WFRutaFacadeInterfaceLocal wfRutaFacadeInterfaceLocal;
+    @EJB
+    private WFMovimientosFacadeInterfaceLocal wfMovimientosFacadeInterfaceLocal;
+    @EJB
+    private WFDetalleComentarioFacadeInterfaceLocal wfDetalleComentarioFacadeInterfaceLocal;
+    @EJB
+    private WFEventoPorEtapaFacadeInterfaceLocal wfEventoPorEtapaFacadeInterfaceLocal;
+    @EJB
+    private CRTipoBienInterfaceLocal crTipoBienInterfaceLocal;
+    @EJB
+    private CLPersonasInterfaceLocal clPersonasInterfaceLocal;
+
+    public BeanWFLegal get(String idMaestra, BeanParametrosAuditoria beanParametrosAuditoria) throws Exception {
+        String modulo = "WFLegalFacade.get()";
+        String usuario = beanParametrosAuditoria.getUsuarioInsercion();
+        BeanWFLegal beanWFLegal = null;
+        WFLegal wfLegal;
+        try {
+            wfLegal = wfLegalInterfaceLocal.findById(idMaestra);
+            beanWFLegal = getBeanWFLegal(wfLegal);
+        } catch (Exception e) {
+            throw handlerError(e, usuario, modulo);
+        }
+        return beanWFLegal;
+    }
+
+    public void guardarDatosNotaria(BeanWFLegal beanWFLegal,
+                                    List<BeanWFDocumentos> listBeanWFDocumentos,
+                                    BeanParametrosAuditoria beanParametrosAuditoria) throws Exception {
+        String modulo = "WFLegalFacade.guardarDatosNotaria()";
+        String usuario = beanParametrosAuditoria.getUsuarioInsercion();
+        WFLegal wfLegal;
+        String idFile = null;
+        try {
+            wfLegal = wfLegalInterfaceLocal.findById(beanWFLegal.getIdMaestra());
+
+            CLNotarios clNotarios = clNotariosInterfaceLocal.findById(beanWFLegal.getCodigoNotaria());
+            if (_isEmpty(clNotarios)) {
+                throw new ErrorControladoException(ConstantesErrores.ERROR_11158);
+            }
+
+            wfLegal.setClNotarios(clNotarios);
+            wfLegal.setNumeroKardex(beanWFLegal.getNumeroKardex());
+            wfLegal.setGastosNotariales(beanWFLegal.getGastosNotariales());
+            wfLegal.setGastosRegistrales(beanWFLegal.getGastosRegistrales());
+            wfLegal.setIndicadorCancelacion(beanWFLegal.getIndicadorCancelacion());
+            wfLegal.setIndicadorFinanciamiento(beanWFLegal.getIndicadorFinanciamiento());
+
+            wfLegal.setFechaModificacion(beanParametrosAuditoria.getFechaModificacion());
+            wfLegal.setUsuarioModificacion(beanParametrosAuditoria.getUsuarioModificacion());
+            wfLegal.setTerminalInsercion(beanParametrosAuditoria.getTerminalModificacion());
+            wfLegal.setIpModificacion(beanParametrosAuditoria.getIpModificacion());
+
+            for (final BeanWFDocumentos beanWFDocumentos : listBeanWFDocumentos) {
+                if (!_isEmpty(beanWFDocumentos.getIdArchivo())) {
+                    idFile = cbFileFacadeInterfaceLocal.guardarFromTemporal(beanWFDocumentos.getIdArchivo(),
+                                                                            beanParametrosAuditoria);
+                }
+
+                wfDocumentosFacadeInterfaceLocal.guardarUltimoDocumento(beanWFLegal.getIdMaestra(),
+                                                                        beanWFDocumentos.getIdTipoDocumento(),
+                                                                        idFile,
+                                                                        null,
+                                                                        beanParametrosAuditoria);
+            }
+
+            wfLegalInterfaceLocal.update(wfLegal);
+        } catch (Exception e) {
+            throw handlerError(e, usuario, modulo);
+        }
+    }
+
+    private BeanWFLegal getBeanWFLegal(WFLegal wfLegal) {
+        BeanWFLegal beanWFLegal = new BeanWFLegal();
+        if (_isEmpty(wfLegal)) {
+            return beanWFLegal;
+        }
+
+        beanWFLegal.setIdMaestra(wfLegal.getIdMaestra());
+        beanWFLegal.setCodigoEmpresa(wfLegal.getCodigoEmpresa());
+        beanWFLegal.setFechaFirma(FormatoFecha.dateToStringDDMMYYYYY(wfLegal.getFechaFirma()));
+        beanWFLegal.setFechaDocumento(FormatoFecha.dateToStringDDMMYYYYY(wfLegal.getFechaDocumento()));
+        beanWFLegal.setFechaBloqueo(FormatoFecha.dateToStringDDMMYYYYY(wfLegal.getFechaBloqueo()));
+        beanWFLegal.setAsientoBloqueo(wfLegal.getAsientoBloqueo());
+        beanWFLegal.setNumeroPartidaBloqueo(wfLegal.getNumeroPartidaBloqueo());
+        beanWFLegal.setOficinaRegistral(wfLegal.getOficinaRegistral());
+        beanWFLegal.setFechaEscritura(FormatoFecha.dateToStringDDMMYYYYY(wfLegal.getFechaEscritura()));
+        beanWFLegal.setFechaInscripcion(FormatoFecha.dateToStringDDMMYYYYY(wfLegal.getFechaInscripcion()));
+        beanWFLegal.setAsientoInscripcion(wfLegal.getAsientoInscripcion());
+        if (!_isEmpty(wfLegal.getClNotarios())) {
+            beanWFLegal.setCodigoNotaria(wfLegal.getClNotarios().getCodigoNotario());
+            beanWFLegal.setNombreNotaria(wfLegal.getClNotarios().getClPersonas().getNombreoRazonSocial());
+        }
+        beanWFLegal.setNumeroKardex(wfLegal.getNumeroKardex());
+        beanWFLegal.setGastosNotariales(wfLegal.getGastosNotariales());
+        beanWFLegal.setGastosRegistrales(wfLegal.getGastosRegistrales());
+        beanWFLegal.setIndicadorFinanciamiento(wfLegal.getIndicadorFinanciamiento());
+        beanWFLegal.setIndicadorCancelacion(wfLegal.getIndicadorCancelacion());
+        beanWFLegal.setCodigoTipoBien(wfLegal.getCrTipoBien().getCodigoTipoBien());
+        beanWFLegal.setTipoOperacion(wfLegal.getTipoOperacion());
+        beanWFLegal.setNumeroOperacion(wfLegal.getNumeroOperacion());
+        beanWFLegal.setCodigoPersona(wfLegal.getClPersonas().getCodigoPersona());
+
+        beanWFLegal.setBeanWFMaestra(wfMaestraFacadeInterfaceLocal.getBeanWFMaestra(wfLegal.getWfMaestra()));
+
+        return beanWFLegal;
+    }
+
+    public String enviarDatosSolicitud(String idEvento,
+                                       BeanWFMaestra beanWFMaestra,
+                                       BeanWFLegal beanWFLegal,
+                                       String comentario,
+                                       String codigoTipoOperacion,
+                                       List<BeanWFDocumentos> lstBeanWFDocumentos,
+                                       BeanParametrosAuditoria beanParametrosAuditoria) throws Exception {
+
+        String modulo = "WFLegalFacade.enviarDatosSolicitud()";
+        String usuario = beanParametrosAuditoria.getUsuarioInsercion();
+        WFLegal wfLegal;
+        String idFile = null;
+        String idRuta;
+        String idMaestra;
+        try {
+
+            idMaestra = beanWFMaestra.getIdMaestra();
+            BeanWFEventoPorEtapa beanWFEventoPorEtapa = wfEventoPorEtapaFacadeInterfaceLocal.get(beanWFMaestra.getIdEtapa(),
+                                                                                                 idEvento,
+                                                                                                 beanParametrosAuditoria);
+
+            if (_isEmpty(idMaestra)) {
+
+                idRuta = wfRutaFacadeInterfaceLocal.obtenerRuta(beanWFMaestra.getIdModulo(),
+                                                                beanWFMaestra.getNumeroOperacion(),
+                                                                beanWFLegal.getCodigoTipoBien(),
+                                                                null,
+                                                                beanParametrosAuditoria);
+
+                idMaestra = wfMaestraFacadeInterfaceLocal.guardar(beanWFMaestra.getIdModulo(),
+                                                                  idRuta,
+                                                                  beanWFMaestra.getIdEtapa(),
+                                                                  beanWFEventoPorEtapa.getIdEstado(),
+                                                                  beanParametrosAuditoria);
+
+                wfLegal = new WFLegal();
+                wfLegal.setIdMaestra(idMaestra);
+
+                CRTipoBien crTipoBien = crTipoBienInterfaceLocal.findById(beanWFLegal.getCodigoTipoBien());
+                wfLegal.setNumeroOperacion(beanWFMaestra.getNumeroOperacion());
+
+                CLPersonas clPersonas = clPersonasInterfaceLocal.findById(beanWFMaestra.getCodigoPersona());
+                wfLegal.setClPersonas(clPersonas);
+
+                wfLegal.setTipoOperacion(codigoTipoOperacion);
+                wfLegal.setCrTipoBien(crTipoBien);
+                wfLegal.setCodigoEmpresa(beanParametrosAuditoria.getCodigoEmpresa());
+                wfLegal.setEstadoRegistro(Constante.ESTADO_REGISTRO_VIGENTE);
+                setInsercionAuditoria(wfLegal, beanParametrosAuditoria);
+
+                wfLegalInterfaceLocal.save(wfLegal);
+                entityManager.flush();
+                entityManager.refresh(wfLegal);
+            }
+
+            wfDocumentosFacadeInterfaceLocal.darDeBajaTodosDocumentos(idMaestra,
+                                                                      beanWFMaestra.getIdEtapa(),
+                                                                      beanParametrosAuditoria);
+
+            for (final BeanWFDocumentos beanWFDocumentos : lstBeanWFDocumentos) {
+                if (!_isEmpty(beanWFDocumentos.getIdArchivo())) {
+                    idFile = cbFileFacadeInterfaceLocal.guardarFromTemporal(beanWFDocumentos.getIdArchivo(),
+                                                                            beanParametrosAuditoria);
+                }
+                wfDocumentosFacadeInterfaceLocal.guardarUltimoDocumento(idMaestra,
+                                                                        beanWFDocumentos.getIdTipoDocumento(),
+                                                                        idFile,
+                                                                        beanWFMaestra.getIdEtapa(),
+                                                                        beanParametrosAuditoria);
+            }
+
+            wfMaestraFacadeInterfaceLocal.procesarEvento(idMaestra,
+                                                         beanWFMaestra.getIdEtapa(),
+                                                         beanWFEventoPorEtapa.getIdEventoPorEtapa(),
+                                                         comentario,
+                                                         beanParametrosAuditoria);
+
+        } catch (Exception e) {
+            throw handlerError(e, usuario, modulo);
+        }
+        return idMaestra;
+    }
+
+    public void enviarTomaFirma(BeanWFMaestra beanWFMaestra,
+                                BeanWFLegal beanWFLegal,
+                                String idEvento,
+                                String comentario,
+                                BeanParametrosAuditoria beanParametrosAuditoria) throws Exception {
+
+        String modulo = "WFLegalFacade.enviarTomaFirma()";
+        String usuario = beanParametrosAuditoria.getUsuarioInsercion();
+        WFLegal wfLegal;
+        try {
+            wfLegal = new WFLegal();
+            wfLegal = wfLegalInterfaceLocal.findById(beanWFMaestra.getIdMaestra());
+            wfLegal.setFechaFirma(FormatoFecha.stringToDateddMMyyyy(beanWFLegal.getFechaFirma()));
+            setModificacionAuditoria(wfLegal, beanParametrosAuditoria);
+
+            wfLegalInterfaceLocal.update(wfLegal);
+
+            BeanWFEventoPorEtapa beanWFEventoPorEtapa = wfEventoPorEtapaFacadeInterfaceLocal.get(beanWFMaestra.getIdEtapa(),
+                                                                                                 idEvento,
+                                                                                                 beanParametrosAuditoria);
+
+            wfMaestraFacadeInterfaceLocal.procesarEvento(beanWFMaestra.getIdMaestra(),
+                                                         beanWFMaestra.getIdEtapa(),
+                                                         beanWFEventoPorEtapa.getIdEventoPorEtapa(),
+                                                         comentario,
+                                                         beanParametrosAuditoria);
+        } catch (Exception e) {
+            throw handlerError(e, usuario, modulo);
+        }
+    }
+
+    public void enviarEscrituraPublica(BeanWFMaestra beanWFMaestra,
+                                       BeanWFLegal beanWFLegal,
+                                       String idEvento,
+                                       String comentario,
+                                       BeanParametrosAuditoria beanParametrosAuditoria) throws Exception {
+
+        String modulo = "WFLegalFacade.enviarEscrituraPublica()";
+        String usuario = beanParametrosAuditoria.getUsuarioInsercion();
+        WFLegal wfLegal;
+        try {
+            wfLegal = new WFLegal();
+            wfLegal = wfLegalInterfaceLocal.findById(beanWFMaestra.getIdMaestra());
+            wfLegal.setFechaEscritura(FormatoFecha.stringToDateddMMyyyy(beanWFLegal.getFechaEscritura()));
+            setModificacionAuditoria(wfLegal, beanParametrosAuditoria);
+
+            wfLegalInterfaceLocal.update(wfLegal);
+
+            BeanWFEventoPorEtapa beanWFEventoPorEtapa = wfEventoPorEtapaFacadeInterfaceLocal.get(beanWFMaestra.getIdEtapa(),
+                                                                                                 idEvento,
+                                                                                                 beanParametrosAuditoria);
+
+            wfMaestraFacadeInterfaceLocal.procesarEvento(beanWFMaestra.getIdMaestra(),
+                                                         beanWFMaestra.getIdEtapa(),
+                                                         beanWFEventoPorEtapa.getIdEventoPorEtapa(),
+                                                         comentario,
+                                                         beanParametrosAuditoria);
+        } catch (Exception e) {
+            throw handlerError(e, usuario, modulo);
+        }
+    }
+
+    public void enviarRevisionDocumento(BeanWFMaestra beanWFMaestra,
+                                        BeanWFLegal beanWFLegal,
+                                        String idEvento,
+                                        String comentario,
+                                        List<BeanWFDocumentos> lstBeanWFDocumentos,
+                                        BeanParametrosAuditoria beanParametrosAuditoria) throws Exception {
+
+        String modulo = "WFLegalFacade.enviarRevisionDocumento()";
+        String usuario = beanParametrosAuditoria.getUsuarioInsercion();
+        WFLegal wfLegal;
+        String idFile = null;
+        try {
+
+            wfLegal = new WFLegal();
+            wfLegal = wfLegalInterfaceLocal.findById(beanWFMaestra.getIdMaestra());
+            wfLegal.setFechaDocumento(FormatoFecha.stringToDateddMMyyyy(beanWFLegal.getFechaDocumento()));
+            setModificacionAuditoria(wfLegal, beanParametrosAuditoria);
+
+            wfLegalInterfaceLocal.update(wfLegal);
+
+            for (final BeanWFDocumentos beanWFDocumentos : lstBeanWFDocumentos) {
+                if (!_isEmpty(beanWFDocumentos.getIdArchivo())) {
+                    idFile = cbFileFacadeInterfaceLocal.guardarFromTemporal(beanWFDocumentos.getIdArchivo(),
+                                                                            beanParametrosAuditoria);
+                }
+                wfDocumentosFacadeInterfaceLocal.guardarUltimoDocumento(beanWFMaestra.getIdMaestra(),
+                                                                        beanWFDocumentos.getIdTipoDocumento().toString(),
+                                                                        idFile,
+                                                                        beanWFMaestra.getIdEtapa(),
+                                                                        beanParametrosAuditoria);
+            }
+            BeanWFEventoPorEtapa beanWFEventoPorEtapa = wfEventoPorEtapaFacadeInterfaceLocal.get(beanWFMaestra.getIdEtapa(),
+                                                                                                 idEvento,
+                                                                                                 beanParametrosAuditoria);
+
+            wfMaestraFacadeInterfaceLocal.procesarEvento(beanWFMaestra.getIdMaestra(),
+                                                         beanWFMaestra.getIdEtapa(),
+                                                         beanWFEventoPorEtapa.getIdEventoPorEtapa(),
+                                                         comentario,
+                                                         beanParametrosAuditoria);
+
+        } catch (Exception e) {
+            throw handlerError(e, usuario, modulo);
+        }
+    }
+
+    public void enviaBloqueRegistral(BeanWFMaestra beanWFMaestra,
+                                     BeanWFLegal beanWFLegal,
+                                     String idEvento,
+                                     String comentario,
+                                     List<BeanWFDocumentos> lstBeanWFDocumentos,
+                                     BeanParametrosAuditoria beanParametrosAuditoria) throws Exception {
+
+        String modulo = "WFLegalFacade.enviaBloqueRegistral()";
+        String usuario = beanParametrosAuditoria.getUsuarioInsercion();
+        WFLegal wfLegal;
+        String idFile = null;
+        try {
+
+            wfLegal = new WFLegal();
+            wfLegal = wfLegalInterfaceLocal.findById(beanWFMaestra.getIdMaestra());
+            wfLegal.setFechaBloqueo(FormatoFecha.stringToDateddMMyyyy(beanWFLegal.getFechaBloqueo()));
+            wfLegal.setAsientoBloqueo(beanWFLegal.getAsientoBloqueo());
+            wfLegal.setNumeroPartidaBloqueo(beanWFLegal.getNumeroPartidaBloqueo());
+            wfLegal.setOficinaRegistral(beanWFLegal.getOficinaRegistral());
+            setModificacionAuditoria(wfLegal, beanParametrosAuditoria);
+
+            wfLegalInterfaceLocal.update(wfLegal);
+
+            for (final BeanWFDocumentos beanWFDocumentos : lstBeanWFDocumentos) {
+                if (!_isEmpty(beanWFDocumentos.getIdArchivo())) {
+                    idFile = cbFileFacadeInterfaceLocal.guardarFromTemporal(beanWFDocumentos.getIdArchivo(),
+                                                                            beanParametrosAuditoria);
+                }
+                wfDocumentosFacadeInterfaceLocal.guardarUltimoDocumento(beanWFMaestra.getIdMaestra(),
+                                                                        beanWFDocumentos.getIdTipoDocumento().toString(),
+                                                                        idFile,
+                                                                        beanWFMaestra.getIdEtapa(),
+                                                                        beanParametrosAuditoria);
+            }
+            BeanWFEventoPorEtapa beanWFEventoPorEtapa = wfEventoPorEtapaFacadeInterfaceLocal.get(beanWFMaestra.getIdEtapa(),
+                                                                                                 idEvento,
+                                                                                                 beanParametrosAuditoria);
+            wfMaestraFacadeInterfaceLocal.procesarEvento(beanWFMaestra.getIdMaestra(),
+                                                         beanWFMaestra.getIdEtapa(),
+                                                         beanWFEventoPorEtapa.getIdEventoPorEtapa(),
+                                                         comentario,
+                                                         beanParametrosAuditoria);
+        } catch (Exception e) {
+            throw handlerError(e, usuario, modulo);
+        }
+    }
+
+    public void enviarGenericoDocumentoComentario(BeanWFMaestra beanWFMaestra,
+                                                  String idEvento,
+                                                  String comentario,
+                                                  List<BeanWFDocumentos> lstBeanWFDocumentos,
+                                                  BeanParametrosAuditoria beanParametrosAuditoria) throws Exception {
+
+        String modulo = "WFLegalFacade.enviarGenericoDocumentoComentario()";
+        String usuario = beanParametrosAuditoria.getUsuarioInsercion();
+        String idFile = null;
+        try {
+            if (!_equiv(lstBeanWFDocumentos.size(), 0)) {
+                for (final BeanWFDocumentos beanWFDocumentos : lstBeanWFDocumentos) {
+                    if (_isEmpty(beanWFDocumentos)) {
+                        continue;
+                    }
+                    if (!_isEmpty(beanWFDocumentos.getIdArchivo())) {
+                        idFile = cbFileFacadeInterfaceLocal.guardarFromTemporal(beanWFDocumentos.getIdArchivo(),
+                                                                                beanParametrosAuditoria);
+                    }
+                    wfDocumentosFacadeInterfaceLocal.guardarUltimoDocumento(beanWFMaestra.getIdMaestra(),
+                                                                            beanWFDocumentos.getIdTipoDocumento().toString(),
+                                                                            idFile,
+                                                                            beanWFMaestra.getIdEtapa(),
+                                                                            beanParametrosAuditoria);
+                }
+            }
+            BeanWFEventoPorEtapa beanWFEventoPorEtapa = wfEventoPorEtapaFacadeInterfaceLocal.get(beanWFMaestra.getIdEtapa(),
+                                                                                                 idEvento,
+                                                                                                 beanParametrosAuditoria);
+            wfMaestraFacadeInterfaceLocal.procesarEvento(beanWFMaestra.getIdMaestra(),
+                                                         beanWFMaestra.getIdEtapa(),
+                                                         beanWFEventoPorEtapa.getIdEventoPorEtapa(),
+                                                         comentario,
+                                                         beanParametrosAuditoria);
+        } catch (Exception e) {
+            throw handlerError(e, usuario, modulo);
+        }
+    }
+
+    public void enviarInscripcionDefinitiva(BeanWFMaestra beanWFMaestra,
+                                            BeanWFLegal beanWFLegal,
+                                            String idEvento,
+                                            String comentario,
+                                            List<BeanWFDocumentos> lstBeanWFDocumentos,
+                                            BeanParametrosAuditoria beanParametrosAuditoria) throws Exception {
+
+        String modulo = "WFLegalFacade.enviarInscripcionDefinitiva()";
+        String usuario = beanParametrosAuditoria.getUsuarioInsercion();
+        WFLegal wfLegal;
+        String idFile = null;
+        try {
+
+            wfLegal = new WFLegal();
+            wfLegal = wfLegalInterfaceLocal.findById(beanWFMaestra.getIdMaestra());
+            wfLegal.setAsientoInscripcion(beanWFLegal.getAsientoInscripcion());
+            wfLegal.setFechaInscripcion(FormatoFecha.stringToDateddMMyyyy(beanWFLegal.getFechaInscripcion()));
+            setModificacionAuditoria(wfLegal, beanParametrosAuditoria);
+
+            wfLegalInterfaceLocal.update(wfLegal);
+
+            if (!_equiv(lstBeanWFDocumentos.size(), 0)) {
+                for (final BeanWFDocumentos beanWFDocumentos : lstBeanWFDocumentos) {
+                    if (!_isEmpty(beanWFDocumentos.getIdArchivo())) {
+                        idFile = cbFileFacadeInterfaceLocal.guardarFromTemporal(beanWFDocumentos.getIdArchivo(),
+                                                                                beanParametrosAuditoria);
+                    }
+                    wfDocumentosFacadeInterfaceLocal.guardarUltimoDocumento(beanWFMaestra.getIdMaestra(),
+                                                                            beanWFDocumentos.getIdTipoDocumento().toString(),
+                                                                            idFile,
+                                                                            beanWFMaestra.getIdEtapa(),
+                                                                            beanParametrosAuditoria);
+                }
+            }
+            BeanWFEventoPorEtapa beanWFEventoPorEtapa = wfEventoPorEtapaFacadeInterfaceLocal.get(beanWFMaestra.getIdEtapa(),
+                                                                                                 idEvento,
+                                                                                                 beanParametrosAuditoria);
+
+            wfMaestraFacadeInterfaceLocal.procesarEvento(beanWFMaestra.getIdMaestra(),
+                                                         beanWFMaestra.getIdEtapa(),
+                                                         beanWFEventoPorEtapa.getIdEventoPorEtapa(),
+                                                         comentario,
+                                                         beanParametrosAuditoria);
+        } catch (Exception e) {
+            throw handlerError(e, usuario, modulo);
+        }
+    }
+
+    public void devolverRechazarSolicitud(BeanWFMaestra beanWFMaestra,
+                                          String idEvento,
+                                          BeanParametrosAuditoria beanParametrosAuditoria) throws Exception {
+
+        String modulo = "WFLegalFacade.devolverRechazarSolicitud()";
+        String usuario = beanParametrosAuditoria.getUsuarioInsercion();
+        try {
+            BeanWFEventoPorEtapa beanWFEventoPorEtapa = wfEventoPorEtapaFacadeInterfaceLocal.get(beanWFMaestra.getIdEtapa(),
+                                                                                                 idEvento,
+                                                                                                 beanParametrosAuditoria);
+
+            wfMaestraFacadeInterfaceLocal.procesarEvento(beanWFMaestra.getIdMaestra(),
+                                                         beanWFMaestra.getIdEtapa(),
+                                                         beanWFEventoPorEtapa.getIdEventoPorEtapa(),
+                                                         "",
+                                                         beanParametrosAuditoria);
+        } catch (Exception e) {
+            throw handlerError(e, usuario, modulo);
+        }
+    }
+}
diff --git a/FINANCIERONEW/src/financ/workflow/facade/WFMaestraFacade.java b/FINANCIERONEW/src/financ/workflow/facade/WFMaestraFacade.java
new file mode 100644
index 0000000..584ec1a
--- /dev/null
+++ b/FINANCIERONEW/src/financ/workflow/facade/WFMaestraFacade.java
@@ -0,0 +1,315 @@
+package financ.workflow.facade;
+
+import java.util.ArrayList;
+import java.util.Arrays;
+import java.util.HashMap;
+import java.util.List;
+import java.util.Map;
+
+import javax.ejb.EJB;
+import javax.ejb.Stateless;
+
+import pe.com.tfc.utils.AbstractFacade;
+import pe.com.tfc.utils.ErrorControladoException;
+import pe.com.tfc.utils.PropertyParams;
+import admin.contab.beans.BeanParametrosAuditoria;
+import admin.util.Constante;
+import admin.util.ConstantesErrores;
+import financ.clientes.entity.CLPersonas;
+import financ.clientes.local.CLPersonasInterfaceLocal;
+import financ.creditos.entity.CRSolicitudCredito;
+import financ.creditos.entity.CRSubTipoCredito;
+import financ.creditos.entity.CRSubTipoCreditoId;
+import financ.creditos.local.CRSolicitudCreditoInterfaceLocal;
+import financ.creditos.local.CRSubTipoCreditoInterfaceLocal;
+import financ.email.local.GEMailSenderFacadeInterfaceLocal;
+import financ.util.FormatoFecha;
+import financ.util.Paginacion;
+import financ.workflow.bean.BeanWFMaestra;
+import financ.workflow.entity.WFEstado;
+import financ.workflow.entity.WFEtapa;
+import financ.workflow.entity.WFEventoPorEtapa;
+import financ.workflow.entity.WFLegal;
+import financ.workflow.entity.WFMaestra;
+import financ.workflow.entity.WFModulo;
+import financ.workflow.entity.WFRuta;
+import financ.workflow.local.WFDetalleComentarioFacadeInterfaceLocal;
+import financ.workflow.local.WFEstadoInterfaceLocal;
+import financ.workflow.local.WFEtapaInterfaceLocal;
+import financ.workflow.local.WFEventoPorEtapaInterfaceLocal;
+import financ.workflow.local.WFFlujoPorRutaInterfaceLocal;
+import financ.workflow.local.WFLegalInterfaceLocal;
+import financ.workflow.local.WFMaestraFacadeInterfaceLocal;
+import financ.workflow.local.WFMaestraInterfaceLocal;
+import financ.workflow.local.WFModuloInterfaceLocal;
+import financ.workflow.local.WFMovimientosFacadeInterfaceLocal;
+import financ.workflow.local.WFRutaInterfaceLocal;
+
+/**
+ * WFMaestroFacade
+ * 
+ * @author kdelacruz
+ * @since [Req.17-007] 06.03.2017 Implementación WorkFlow Legal
+ */
+
+@Stateless
+public class WFMaestraFacade extends AbstractFacade<WFMaestra> implements WFMaestraFacadeInterfaceLocal {
+
+    public static final String LocalJNDIName = WFMaestraFacade.class.getSimpleName() + "/local";
+
+    @EJB
+    private WFMaestraInterfaceLocal wfMaestraInterfaceLocal;
+    @EJB
+    private CRSolicitudCreditoInterfaceLocal crSolicitudCreditoInterfaceLocal;
+    @EJB
+    private CRSubTipoCreditoInterfaceLocal crSubTipoCreditoInterfaceLocal;
+    @EJB
+    private CLPersonasInterfaceLocal clPersonasInterfaceLocal;
+    @EJB
+    private WFEtapaInterfaceLocal wfEtapaInterfaceLocal;
+    @EJB
+    private WFModuloInterfaceLocal wfModuloInterfaceLocal;
+    @EJB
+    private WFFlujoPorRutaInterfaceLocal wfFlujoPorRutaInterfaceLocal;
+    @EJB
+    private WFRutaInterfaceLocal wfRutaInterfaceLocal;
+    @EJB
+    private WFEstadoInterfaceLocal wfEstadoInterfaceLocal;
+    @EJB
+    private WFDetalleComentarioFacadeInterfaceLocal wfDetalleComentarioFacadeInterfaceLocal;
+    @EJB
+    private WFMovimientosFacadeInterfaceLocal wfMovimientosFacadeInterfaceLocal;
+    @EJB
+    private WFEventoPorEtapaInterfaceLocal wfEventoPorEtapaInterfaceLocal;
+    @EJB
+    private GEMailSenderFacadeInterfaceLocal geMailSenderFacadeInterfaceLocal;
+    @EJB
+    private WFLegalInterfaceLocal wfLegalInterfaceLocal;
+
+    public Map<String, Object> buscarDetalleLegal(final String codigoPersona,
+                                                  final String fechaSolicitud,
+                                                  final String estado,
+                                                  final String usuarioSolicitante,
+                                                  final String etapaSolicitud,
+                                                  final String usuarioLegal,
+                                                  final Integer pagina,
+                                                  final BeanParametrosAuditoria beanParametrosAuditoria) throws Exception {
+
+        int inicio;
+        Long cantReg = 0L;
+
+        final String modulo = "WFMaestroFacade.buscarDetalleLegal()";
+        final List<BeanWFMaestra> listbeanWFMaestra = new ArrayList<BeanWFMaestra>(0);
+        final Map<String, Object> mapRespuesta = new HashMap<String, Object>(0);
+        List<WFMaestra> listWFMaestro = new ArrayList<WFMaestra>(0);
+        BeanWFMaestra beanWFMaestra;
+        CRSubTipoCredito crSubTipoCredito;
+        CRSolicitudCredito crSolicitudCredito;
+        PropertyParams propertyParams;
+
+        try {
+            inicio = (pagina - 1) * Paginacion.NUM_REG;
+
+            propertyParams = new PropertyParams();
+            propertyParams.addPropertyOrder("idMaestra", true);
+            propertyParams.setFirstResult(inicio);
+            propertyParams.setMaxResults(Paginacion.NUM_REG);
+
+            if (!_isEmpty(codigoPersona)) {
+                propertyParams.addProperty("wfLegal.clPersonas.codigoPersona", codigoPersona);
+            }
+            if (!_isEmpty(fechaSolicitud)) {
+                propertyParams.addProperty("fechaProceso", FormatoFecha.stringToDateddMMyyyy(fechaSolicitud));
+            }
+            if (!_isEmpty(estado)) {
+                propertyParams.addProperty("wfEstado.idEstado", estado);
+            }
+            if (!_isEmpty(usuarioSolicitante)) {
+                propertyParams.addProperty("usuarioSolicitante", usuarioSolicitante);
+            }
+            if (!_isEmpty(etapaSolicitud)) {
+                propertyParams.addProperty("wfEtapa.idEtapa", etapaSolicitud);
+            }
+            if (!_isEmpty(usuarioLegal)) {
+                propertyParams.addProperty("usuarioAtiende", usuarioLegal);
+            }
+            cantReg = wfMaestraInterfaceLocal.countByProperties(propertyParams);
+            listWFMaestro = wfMaestraInterfaceLocal.findByProperties(propertyParams);
+
+            for (final WFMaestra wfMaestro : listWFMaestro) {
+                CRSubTipoCreditoId id = new CRSubTipoCreditoId();
+
+                beanWFMaestra = new BeanWFMaestra();
+                beanWFMaestra.setIdMaestra(wfMaestro.getIdMaestra());
+
+                WFLegal wfLegal = wfLegalInterfaceLocal.findById(wfMaestro.getIdMaestra());
+                if (!_isEmpty(wfLegal.getClPersonas())) {
+                    beanWFMaestra.setNombreCliente(wfLegal.getClPersonas().getNombreoRazonSocial());
+                }
+                beanWFMaestra.setNumeroOperacion(wfLegal.getNumeroOperacion());
+                crSolicitudCredito = crSolicitudCreditoInterfaceLocal.findById(wfLegal.getNumeroOperacion());
+                id.setCodigoTipoCredito(crSolicitudCredito.getCrSubTipoCreditoByReCRSolicitudCredito06().getId().getCodigoTipoCredito());
+                id.setCodigoSubTipoCredito(crSolicitudCredito.getCrSubTipoCreditoByReCRSolicitudCredito06().getId().getCodigoSubTipoCredito());
+                crSubTipoCredito = crSubTipoCreditoInterfaceLocal.findById(id);
+                beanWFMaestra.setTipoCredito(crSubTipoCredito.getDescripcion());
+
+                beanWFMaestra.setUsuarioSolicitante(wfMaestro.getUsuarioSolicitante());
+                beanWFMaestra.setUsuarioAtiende(wfMaestro.getUsuarioAtiende());
+
+                beanWFMaestra.setIdEstado(wfMaestro.getWfEstado().getIdEstado());
+                beanWFMaestra.setDescripcionEstado(wfMaestro.getWfEstado().getDescripcionEstado());
+                beanWFMaestra.setIdEtapa(wfMaestro.getWfEtapa().getIdEtapa());
+                beanWFMaestra.setDescripcionEtapa(wfMaestro.getWfEtapa().getDescripcionEtapa());
+
+                listbeanWFMaestra.add(beanWFMaestra);
+            }
+            mapRespuesta.put("listbeanWFMaestra", listbeanWFMaestra);
+            mapRespuesta.put("cantReg", cantReg);
+        } catch (final Exception e) {
+            throw handlerError(e, beanParametrosAuditoria.getUsuarioInsercion(), modulo);
+        }
+        return mapRespuesta;
+    }
+
+    public void grabarAsignarSolicitud(final String codigoFuncionario,
+                                       final List<String> vIdsUsuarioLegalSeleccionados,
+                                       final BeanParametrosAuditoria beanParametrosAuditoria) throws Exception {
+        final String modulo = "WFMaestroFacade.asignarSolicitud()";
+        String id;
+        List<String> vUsuarioSeleccionados;
+        WFMaestra wfMaestro;
+        try {
+            for (final String identificadorRegistro : vIdsUsuarioLegalSeleccionados) {
+                if (_isEmpty(identificadorRegistro)) {
+                    continue;
+                }
+                vUsuarioSeleccionados = Arrays.asList(identificadorRegistro.split(","));
+                id = vUsuarioSeleccionados.get(0);
+                wfMaestro = new WFMaestra();
+                wfMaestro = wfMaestraInterfaceLocal.findById(id);
+                if (!_isEmpty(wfMaestro.getUsuarioAtiende())) {
+                    continue;
+                }
+                wfMaestro.setUsuarioAtiende(codigoFuncionario);
+                setModificacionAuditoria(wfMaestro, beanParametrosAuditoria);
+                wfMaestraInterfaceLocal.update(wfMaestro);
+            }
+        } catch (final Exception e) {
+            throw handlerError(e, beanParametrosAuditoria.getUsuarioModificacion(), modulo);
+        }
+    }
+
+    public String guardar(String idModulo,
+                          String idRuta,
+                          String idEtapa,
+                          String idEstado,
+                          BeanParametrosAuditoria beanParametrosAuditoria) throws Exception {
+
+        String modulo = "WFMaestraFacade.guardar()";
+        String usuario = beanParametrosAuditoria.getUsuarioInsercion();
+        WFMaestra wfMaestra;
+        String correlativo;
+        try {
+            correlativo = generarCorrelativo("WFMWORK", 15, beanParametrosAuditoria);
+
+            wfMaestra = new WFMaestra();
+            wfMaestra.setIdMaestra(correlativo);
+
+            WFModulo wfModulo = wfModuloInterfaceLocal.findById(idModulo);
+            wfMaestra.setWfModulo(wfModulo);
+
+            WFRuta wfRuta = wfRutaInterfaceLocal.findById(idRuta);
+            if (_isEmpty(wfRuta)) {
+                throw new ErrorControladoException(ConstantesErrores.ERROR_11159);
+            }
+            wfMaestra.setWfRuta(wfRuta);
+
+            WFEtapa wfEtapa = wfEtapaInterfaceLocal.findById(idEtapa);
+            wfMaestra.setWfEtapa(wfEtapa);
+
+            WFEstado wfEstado = wfEstadoInterfaceLocal.findById(idEstado);
+            wfMaestra.setWfEstado(wfEstado);
+
+            wfMaestra.setUsuarioSolicitante(beanParametrosAuditoria.getUsuarioInsercion());
+            wfMaestra.setFechaProceso(beanParametrosAuditoria.getFechaProceso());
+            wfMaestra.setEstadoRegistro(Constante.ESTADO_REGISTRO_VIGENTE);
+            wfMaestra.setCodigoEmpresa(beanParametrosAuditoria.getCodigoEmpresa());
+            setInsercionAuditoria(wfMaestra, beanParametrosAuditoria);
+
+            wfMaestraInterfaceLocal.save(wfMaestra);
+
+            entityManager.flush();
+            entityManager.refresh(wfMaestra);
+
+        } catch (Exception e) {
+            throw handlerError(e, usuario, modulo);
+        }
+        return correlativo;
+    }
+
+    public void procesarEvento(String idMaestra,
+                               String idEtapa,
+                               String idEventoPorEtapa,
+                               String textoComentario,
+                               BeanParametrosAuditoria beanParametrosAuditoria) throws Exception {
+        String modulo = "WFMaestraFacade.procesarEvento()";
+        String usuario = beanParametrosAuditoria.getUsuarioInsercion();
+        try {
+            WFEventoPorEtapa wfEventoPorEtapa = wfEventoPorEtapaInterfaceLocal.findById(idEventoPorEtapa);
+
+            wfDetalleComentarioFacadeInterfaceLocal.guardar(idMaestra,
+                                                            idEtapa,
+                                                            textoComentario,
+                                                            beanParametrosAuditoria);
+
+            wfMovimientosFacadeInterfaceLocal.insertar(idMaestra,
+                                                       idEtapa,
+                                                       wfEventoPorEtapa.getWfEstado().getIdEstado(),
+                                                       beanParametrosAuditoria);
+
+            if (!_isEmpty(wfEventoPorEtapa.getCodigoModuloReferenciaMail())) {
+                WFMaestra wfMaestra = wfMaestraInterfaceLocal.findById(idMaestra);
+                geMailSenderFacadeInterfaceLocal.enviarMailWorkFlowLegal(idMaestra,
+                                                                         idEtapa,
+                                                                         wfEventoPorEtapa.getWfEstado().getIdEstado(),
+                                                                         textoComentario,
+                                                                         wfMaestra.getWfRuta().getIdRuta(),
+                                                                         wfEventoPorEtapa.getCodigoModuloReferenciaMail(),
+                                                                         beanParametrosAuditoria);
+            }
+
+        } catch (Exception e) {
+            throw handlerError(e, usuario, modulo);
+        }
+    }
+
+    public BeanWFMaestra consultarMaestra(String idMaestra, BeanParametrosAuditoria beanParametrosAuditoria) throws Exception {
+        String modulo = "WFLegalFacade.consultarMaestra()";
+        String usuario = beanParametrosAuditoria.getUsuarioInsercion();
+        BeanWFMaestra beanWFMaestra;
+        WFMaestra wfMaestra = new WFMaestra();
+        try {
+            wfMaestra = wfMaestraInterfaceLocal.findById(idMaestra);
+            beanWFMaestra = getBeanWFMaestra(wfMaestra);
+
+        } catch (Exception e) {
+            throw handlerError(e, usuario, modulo);
+        }
+        return beanWFMaestra;
+    }
+
+    public BeanWFMaestra getBeanWFMaestra(WFMaestra wfMaestra) {
+        BeanWFMaestra beanWFMaestra = new BeanWFMaestra();
+        if (_isEmpty(wfMaestra)) {
+            return beanWFMaestra;
+        }
+        beanWFMaestra.setIdMaestra(wfMaestra.getIdMaestra());
+        beanWFMaestra.setIdModulo(wfMaestra.getWfModulo().getIdModulo());
+        beanWFMaestra.setIdRuta(wfMaestra.getWfRuta().getIdRuta());
+        beanWFMaestra.setIdEstado(wfMaestra.getWfEstado().getIdEstado());
+        beanWFMaestra.setIdEtapa(wfMaestra.getWfEtapa().getIdEtapa());
+        beanWFMaestra.setUsuarioSolicitante(wfMaestra.getUsuarioSolicitante());
+        beanWFMaestra.setUsuarioAtiende(wfMaestra.getUsuarioAtiende());
+        return beanWFMaestra;
+    }
+}
diff --git a/FINANCIERONEW/src/financ/workflow/facade/WFModuloFacade.java b/FINANCIERONEW/src/financ/workflow/facade/WFModuloFacade.java
new file mode 100644
index 0000000..821d933
--- /dev/null
+++ b/FINANCIERONEW/src/financ/workflow/facade/WFModuloFacade.java
@@ -0,0 +1,25 @@
+package financ.workflow.facade;
+
+import javax.ejb.EJB;
+import javax.ejb.Stateless;
+
+import pe.com.tfc.utils.AbstractFacade;
+import financ.workflow.entity.WFModulo;
+import financ.workflow.local.WFModuloFacadeInterfaceLocal;
+import financ.workflow.local.WFModuloInterfaceLocal;
+
+/**
+ * WFModuloFacade
+ * 
+ * @author kdelacruz
+ * @since [Req.17-007] 06.03.2017 Implementación WorkFlow Legal
+ */
+
+@Stateless
+public class WFModuloFacade extends AbstractFacade<WFModulo> implements WFModuloFacadeInterfaceLocal {
+
+    public static final String LocalJNDIName = WFModuloFacade.class.getSimpleName() + "/local";
+
+    @EJB
+    private WFModuloInterfaceLocal wfModuloInterfaceLocal;
+}
diff --git a/FINANCIERONEW/src/financ/workflow/facade/WFMovimientosFacade.java b/FINANCIERONEW/src/financ/workflow/facade/WFMovimientosFacade.java
new file mode 100644
index 0000000..b1998cd
--- /dev/null
+++ b/FINANCIERONEW/src/financ/workflow/facade/WFMovimientosFacade.java
@@ -0,0 +1,187 @@
+package financ.workflow.facade;
+
+import java.text.DateFormat;
+import java.text.SimpleDateFormat;
+import java.util.ArrayList;
+import java.util.Date;
+import java.util.List;
+
+import javax.ejb.EJB;
+import javax.ejb.Stateless;
+
+import pe.com.tfc.utils.AbstractFacade;
+import pe.com.tfc.utils.PropertyParams;
+import admin.contab.beans.BeanParametrosAuditoria;
+import financ.util.Constante;
+import financ.util.FormatoFecha;
+import financ.workflow.bean.BeanWFMovimientos;
+import financ.workflow.entity.WFEstado;
+import financ.workflow.entity.WFEtapa;
+import financ.workflow.entity.WFMaestra;
+import financ.workflow.entity.WFMovimientos;
+import financ.workflow.local.WFMaestraInterfaceLocal;
+import financ.workflow.local.WFMovimientosFacadeInterfaceLocal;
+import financ.workflow.local.WFMovimientosInterfaceLocal;
+
+/**
+ * WFMovimientosFacade
+ * 
+ * @author kdelacruz
+ * @since [Req.17-007] 06.03.2017 Implementación WorkFlow Legal
+ */
+
+@Stateless
+public class WFMovimientosFacade extends AbstractFacade<WFMovimientos> implements WFMovimientosFacadeInterfaceLocal {
+
+    public static final String LocalJNDIName = WFMovimientosFacade.class.getSimpleName() + "/local";
+
+    @EJB
+    private WFMovimientosInterfaceLocal wfMovimientosInterfaceLocal;
+    @EJB
+    private WFMaestraInterfaceLocal wfMaestraInterfaceLocal;
+    @EJB
+    private WFMovimientosFacadeInterfaceLocal wfMovimientosFacadeInterfaceLocal;
+
+    public void insertar(String idMaestra,
+                         String idEtapaFinal,
+                         String idEstadoFinal,
+                         BeanParametrosAuditoria beanParametrosAuditoria) throws Exception {
+        String modulo = "WFMovimientosFacade.insertar()";
+        String usuario = beanParametrosAuditoria.getUsuarioInsercion();
+        WFMovimientos wfMovimientos;
+        String correlativo;
+        try {
+            wfMovimientos = new WFMovimientos();
+            correlativo = generarCorrelativo("WFDMOVI", 15, beanParametrosAuditoria);
+
+            wfMovimientos.setIdMovimiento(correlativo);
+
+            WFMaestra wfMaestra = wfMaestraInterfaceLocal.findById(idMaestra);
+            wfMovimientos.setWfMaestra(wfMaestra);
+
+            if (!(_equiv(idEtapaFinal, wfMaestra.getWfEtapa().getIdEtapa()) && _equiv(idEstadoFinal,
+                                                                                      wfMaestra.getWfEstado().getIdEstado()))) {
+                wfMovimientos.setWfEtapaInicial(wfMaestra.getWfEtapa());
+                wfMovimientos.setWfEstadoInicial(wfMaestra.getWfEstado());
+
+                wfMaestra.setWfEtapa(new WFEtapa(idEtapaFinal));
+                wfMaestra.setWfEstado(new WFEstado(idEstadoFinal));
+                wfMaestraInterfaceLocal.update(wfMaestra);
+
+                entityManager.flush();
+                entityManager.refresh(wfMaestra);
+            }
+
+            wfMovimientos.setWfEtapaFinal(new WFEtapa(idEtapaFinal));
+            wfMovimientos.setWfEstadoFinal(new WFEstado(idEstadoFinal));
+
+            wfMovimientos.setFechaProceso(beanParametrosAuditoria.getFechaProceso());
+            wfMovimientos.setHoraProceso(FormatoFecha.obtenerHora());
+            wfMovimientos.setUsuarioProceso(beanParametrosAuditoria.getUsuarioInsercion());
+
+            wfMovimientos.setEstadoRegistro(Constante.ESTADO_REGISTRO_VIGENTE);
+            wfMovimientos.setCodigoEmpresa(beanParametrosAuditoria.getCodigoEmpresa());
+            setInsercionAuditoria(wfMovimientos, beanParametrosAuditoria);
+
+            wfMovimientosInterfaceLocal.save(wfMovimientos);
+        } catch (Exception e) {
+            throw handlerError(e, usuario, modulo);
+        }
+    }
+
+    public List<BeanWFMovimientos> buscar(String idMaestra, BeanParametrosAuditoria beanParametrosAuditoria) throws Exception {
+        String modulo = "WFMovimientosFacade.buscar()";
+        String usuario = beanParametrosAuditoria.getUsuarioInsercion();
+        List<BeanWFMovimientos> lstBeanWFMovimientos = new ArrayList<BeanWFMovimientos>();
+        List<WFMovimientos> lstWFMovimientos;
+        PropertyParams propertyParams;
+        try {
+            propertyParams = new PropertyParams();
+            propertyParams.addProperty("wfMaestra.idMaestra", idMaestra);
+            propertyParams.addProperty("estadoRegistro", Constante.ESTADO_REGISTRO_VIGENTE);
+            propertyParams.addPropertyOrder("fechaInsercion");
+
+            lstWFMovimientos = wfMovimientosInterfaceLocal.findByProperties(propertyParams);
+
+            for (WFMovimientos WFMovimientos : lstWFMovimientos) {
+                lstBeanWFMovimientos.add(getBeanWFMovimientos(WFMovimientos, null, beanParametrosAuditoria));
+            }
+
+        } catch (Exception e) {
+            throw handlerError(e, usuario, modulo);
+        }
+        return lstBeanWFMovimientos;
+    }
+
+    private BeanWFMovimientos getBeanWFMovimientos(WFMovimientos wfMovimientos,
+                                                   Integer ordenMovimiento,
+                                                   BeanParametrosAuditoria beanParametrosAuditoria) throws Exception {
+        BeanWFMovimientos beanWFMovimientos = new BeanWFMovimientos();
+        if (_isEmpty(wfMovimientos)) {
+            return beanWFMovimientos;
+        }
+
+        beanWFMovimientos.setIdMovimiento(wfMovimientos.getIdMovimiento());
+        beanWFMovimientos.setCodigoEmpresa(wfMovimientos.getCodigoEmpresa());
+        beanWFMovimientos.setIdMaestra(wfMovimientos.getWfMaestra().getIdMaestra());
+        if (!_isEmpty(wfMovimientos.getWfEtapaInicial())) {
+            beanWFMovimientos.setIdEtapaInicial(wfMovimientos.getWfEtapaInicial().getIdEtapa());
+            beanWFMovimientos.setDescripcionEtapaInicial(wfMovimientos.getWfEtapaInicial().getDescripcionEtapa());
+        }
+        beanWFMovimientos.setIdEtapaFinal(wfMovimientos.getWfEtapaFinal().getIdEtapa());
+        beanWFMovimientos.setDescripcionEtapaFinal(wfMovimientos.getWfEtapaFinal().getDescripcionEtapa());
+        if (!_isEmpty(wfMovimientos.getWfEstadoInicial())) {
+            beanWFMovimientos.setIdEstadoInicial(wfMovimientos.getWfEstadoInicial().getIdEstado());
+            beanWFMovimientos.setDescripcionEstadoInicial(wfMovimientos.getWfEstadoInicial().getDescripcionEstado());
+        }
+        beanWFMovimientos.setIdEstadoFinal(wfMovimientos.getWfEstadoFinal().getIdEstado());
+        beanWFMovimientos.setDescripcionEstadoFinal(wfMovimientos.getWfEstadoFinal().getDescripcionEstado());
+        beanWFMovimientos.setFechaProceso(wfMovimientos.getFechaProceso());
+        beanWFMovimientos.setHoraProceso(wfMovimientos.getHoraProceso());
+        beanWFMovimientos.setUsuarioProceso(wfMovimientos.getUsuarioProceso());
+        beanWFMovimientos.setTiempoTranscurrido(CADENA_VACIA);
+        if (!_isEmpty(wfMovimientos.getWfEtapaInicial())) {
+            String tiempoTranscurrido = calcutarTiempoDemora(wfMovimientos.getWfMaestra().getIdMaestra(),
+                                                             wfMovimientos.getIdMovimiento(),
+                                                             wfMovimientos.getFechaProceso(),
+                                                             wfMovimientos.getHoraProceso(),
+                                                             beanParametrosAuditoria);
+            beanWFMovimientos.setTiempoTranscurrido(tiempoTranscurrido);
+        }
+
+        return beanWFMovimientos;
+    }
+
+    private String calcutarTiempoDemora(String idMaestra,
+                                        String idMovimiento,
+                                        Date fechaProcesoFinal,
+                                        String horaProcesoFinalinal,
+                                        BeanParametrosAuditoria beanParametrosAuditoria) throws Exception {
+        String tiempoEstimado = "";
+        DateFormat formatter = new SimpleDateFormat("HH:mm:ss");
+        Date horaProcesoFinal;
+        Date horaProcesoInicial;
+        Long tiempoProcesoFinal;
+        Long tiempoProcesoInicial;
+        horaProcesoFinal = formatter.parse(horaProcesoFinalinal);
+        tiempoProcesoFinal = fechaProcesoFinal.getTime() + horaProcesoFinal.getTime();
+
+        PropertyParams propertyParams = new PropertyParams();
+        propertyParams.addProperty("idMovimiento", idMovimiento, PropertyParams.OPERADOR_MENOR);
+        propertyParams.addProperty("wfMaestra.idMaestra", idMaestra);
+        propertyParams.addProperty("estadoRegistro", Constante.ESTADO_REGISTRO_VIGENTE);
+        propertyParams.setOrderBy(true, "idMovimiento");
+        propertyParams.setMaxResults(1);
+
+        List<WFMovimientos> lstWFMovimientos = wfMovimientosInterfaceLocal.findByProperties(propertyParams);
+        for (WFMovimientos wfMovimientos : lstWFMovimientos) {
+            horaProcesoInicial = formatter.parse(wfMovimientos.getHoraProceso());
+            tiempoProcesoInicial = wfMovimientos.getFechaProceso().getTime() + horaProcesoInicial.getTime();
+
+            tiempoEstimado = FormatoFecha.longToStringHHMMSS(tiempoProcesoFinal - tiempoProcesoInicial);
+            return tiempoEstimado;
+        }
+
+        return null;
+    }
+}
diff --git a/FINANCIERONEW/src/financ/workflow/facade/WFRutaFacade.java b/FINANCIERONEW/src/financ/workflow/facade/WFRutaFacade.java
new file mode 100644
index 0000000..ab2b348
--- /dev/null
+++ b/FINANCIERONEW/src/financ/workflow/facade/WFRutaFacade.java
@@ -0,0 +1,130 @@
+package financ.workflow.facade;
+
+import java.util.List;
+
+import javax.ejb.EJB;
+import javax.ejb.Stateless;
+
+import pe.com.tfc.utils.AbstractFacade;
+import pe.com.tfc.utils.ErrorControladoException;
+import pe.com.tfc.utils.PropertyParams;
+import admin.contab.beans.BeanParametrosAuditoria;
+import admin.contab.entity.CBAgencia;
+import admin.contab.entity.CBAgenciaId;
+import admin.contab.entity.CBUbigeo;
+import admin.contab.local.CBAgenciaInterfaceLocal;
+import admin.util.ConstantesErrores;
+import financ.creditos.entity.CRSolicitudCredito;
+import financ.creditos.local.CRSolCredInformacionHipotecarioInterfaceLocal;
+import financ.creditos.local.CRSolicitudCreditoInterfaceLocal;
+import financ.workflow.bean.BeanWFMaestra;
+import financ.workflow.bean.BeanWFRuta;
+import financ.workflow.entity.WFRuta;
+import financ.workflow.local.WFMaestraFacadeInterfaceLocal;
+import financ.workflow.local.WFRutaFacadeInterfaceLocal;
+import financ.workflow.local.WFRutaInterfaceLocal;
+
+/**
+ * WFRutaWorkflowFacade
+ * 
+ * @author kdelacruz
+ * @since [Req.17-007] 06.03.2017 Implementación WorkFlow Legal
+ */
+
+@Stateless
+public class WFRutaFacade extends AbstractFacade<WFRuta> implements WFRutaFacadeInterfaceLocal {
+
+    public static final String LocalJNDIName = WFRutaFacade.class.getSimpleName() + "/local";
+
+    @EJB
+    private WFRutaInterfaceLocal wfRutaInterfaceLocal;
+    @EJB
+    private CRSolicitudCreditoInterfaceLocal crSolicitudCreditoInterfaceLocal;
+    @EJB
+    private CRSolCredInformacionHipotecarioInterfaceLocal crSolCredInformacionHipotecarioInterfaceLocal;
+    @EJB
+    private CBAgenciaInterfaceLocal cbAgenciaInterfaceLocal;
+    @EJB
+    private WFMaestraFacadeInterfaceLocal wfMaestraFacadeInterfaceLocal;
+
+    public String obtenerRuta(String idModulo,
+                              String numeroOperacion,
+                              String codigoTipoBien,
+                              String codigoPersona,
+                              BeanParametrosAuditoria beanParametrosAuditoria) throws Exception {
+
+        String modulo = "WFRutaFacade.obtenerRuta()";
+        String usuario = beanParametrosAuditoria.getUsuarioInsercion();
+        String idRuta = null;
+        PropertyParams propertyParams;
+        List<WFRuta> lstWfRutas = null;
+        try {
+            if (_equiv(idModulo, financ.util.Constante.WF_MODULO_WORKFLOW_LEGAL)) {
+                CRSolicitudCredito crSolicitudCredito = crSolicitudCreditoInterfaceLocal.findById(numeroOperacion);
+                if (!_isEmpty(codigoTipoBien)) {
+
+                    String codigoAgencia = crSolicitudCredito.getCodigoAgencia();
+                    CBAgencia cbAgencia = cbAgenciaInterfaceLocal.findById(new CBAgenciaId(beanParametrosAuditoria.getCodigoEmpresa(), codigoAgencia));
+                    CBUbigeo cbUbigeo = cbAgencia.getCbUbigeo();
+                    if (_isEmpty(codigoTipoBien)) {
+                        throw new ErrorControladoException(ConstantesErrores.ERROR_11157);
+                    }
+                    String codigoPlaza = _equiv(cbUbigeo.getCodigoDepartamento(), "15") ? financ.util.Constante.WF_RUTA_LIMA : financ.util.Constante.WF_RUTA_PROVINCIA;
+
+                    propertyParams = new PropertyParams();
+                    propertyParams.addProperty("key001", codigoPlaza);
+                    propertyParams.addProperty("key002", codigoTipoBien);
+                    lstWfRutas = wfRutaInterfaceLocal.findByProperties(propertyParams);
+                }
+            }
+
+            if (!_isEmpty(lstWfRutas)) {
+                for (WFRuta wfRuta : lstWfRutas) {
+                    idRuta = wfRuta.getIdRuta();
+                    break;
+                }
+            }
+            if (_isEmpty(idRuta)) {
+                throw new ErrorControladoException(ConstantesErrores.ERROR_11159);
+            }
+        } catch (Exception e) {
+            throw handlerError(e, usuario, modulo);
+        }
+        return idRuta;
+    }
+
+    public BeanWFRuta obtenerPlaza(String idMaestra, BeanParametrosAuditoria beanParametrosAuditoria) throws Exception {
+
+        String modulo = "WFRutaFacade.obtenerPlaza()";
+        String usuario = beanParametrosAuditoria.getUsuarioInsercion();
+        BeanWFMaestra beanWFMaestra;
+        BeanWFRuta beanWFRuta;
+        WFRuta wfRuta;
+        try {
+            beanWFMaestra = new BeanWFMaestra();
+            beanWFMaestra = wfMaestraFacadeInterfaceLocal.consultarMaestra(idMaestra, beanParametrosAuditoria);
+
+            wfRuta = new WFRuta();
+            wfRuta = wfRutaInterfaceLocal.findById(beanWFMaestra.getIdRuta());
+
+            beanWFRuta = getBeanWFRuta(wfRuta);
+        } catch (Exception e) {
+            throw handlerError(e, usuario, modulo);
+        }
+        return beanWFRuta;
+    }
+
+    public BeanWFRuta getBeanWFRuta(WFRuta wfRuta) {
+        BeanWFRuta beanWFRuta = new BeanWFRuta();
+        if (_isEmpty(wfRuta)) {
+            return beanWFRuta;
+        }
+        beanWFRuta.setIdRuta(wfRuta.getIdRuta());
+        beanWFRuta.setCodigoEmpresa(wfRuta.getCodigoEmpresa());
+        beanWFRuta.setDescripcionRuta(wfRuta.getDescripcionRuta());
+        beanWFRuta.setKey001(wfRuta.getKey001());
+        beanWFRuta.setKey002(wfRuta.getKey002());
+
+        return beanWFRuta;
+    }
+}
diff --git a/FINANCIERONEW/src/financ/workflow/facade/WFTipoDocumentoFacade.java b/FINANCIERONEW/src/financ/workflow/facade/WFTipoDocumentoFacade.java
new file mode 100644
index 0000000..78081f4
--- /dev/null
+++ b/FINANCIERONEW/src/financ/workflow/facade/WFTipoDocumentoFacade.java
@@ -0,0 +1,104 @@
+package financ.workflow.facade;
+
+import java.util.ArrayList;
+import java.util.List;
+
+import javax.ejb.EJB;
+import javax.ejb.Stateless;
+
+import pe.com.tfc.utils.AbstractFacade;
+import pe.com.tfc.utils.PropertyParams;
+import admin.contab.beans.BeanParametrosAuditoria;
+import financ.workflow.bean.BeanWFTipoDocumento;
+import financ.workflow.entity.WFDocumentos;
+import financ.workflow.entity.WFTipoDocumento;
+import financ.workflow.local.WFDocumentosInterfaceLocal;
+import financ.workflow.local.WFTipoDocumentoFacadeInterfaceLocal;
+import financ.workflow.local.WFTipoDocumentoInterfaceLocal;
+
+/**
+ * WFTipoDocumentoFacade
+ * 
+ * @author kdelacruz
+ * @since [Req.17-007] 06.03.2017 Implementación WorkFlow Legal
+ */
+
+@Stateless
+public class WFTipoDocumentoFacade extends AbstractFacade<WFTipoDocumento> implements WFTipoDocumentoFacadeInterfaceLocal {
+
+    public static final String LocalJNDIName = WFTipoDocumentoFacade.class.getSimpleName() + "/local";
+
+    @EJB
+    private WFTipoDocumentoInterfaceLocal wfTipoDocumentoInterfaceLocal;
+    @EJB
+    private WFDocumentosInterfaceLocal wfDocumentosInterfaceLocal;
+
+    public List<BeanWFTipoDocumento> obtenerPorKey(final String idMaestra,
+                                                   final String keyTipoDocumento,
+                                                   final BeanParametrosAuditoria beanParametrosAuditoria) throws Exception {
+
+        final String modulo = "WFTipoDocumentoFacade.obtenerPorKey()";
+        List<WFTipoDocumento> lstWFTipoDocumentos = new ArrayList<WFTipoDocumento>(0);
+        List<BeanWFTipoDocumento> lstBeanWFTipoDocumentos = new ArrayList<BeanWFTipoDocumento>(0);
+        PropertyParams propertyParams;
+
+        try {
+            propertyParams = new PropertyParams();
+            propertyParams.addProperty("keyTipoDocumento", keyTipoDocumento);
+
+            lstWFTipoDocumentos = wfTipoDocumentoInterfaceLocal.findByProperties(propertyParams);
+
+            for (final WFTipoDocumento wfTipoDocumento : lstWFTipoDocumentos) {
+                lstBeanWFTipoDocumentos.add(getBeanWFTipoDocumento(null, idMaestra, wfTipoDocumento, beanParametrosAuditoria));
+            }
+        } catch (final Exception e) {
+            throw handlerError(e, beanParametrosAuditoria.getUsuarioInsercion(), modulo);
+        }
+        return lstBeanWFTipoDocumentos;
+    }
+
+    public BeanWFTipoDocumento getBeanWFTipoDocumento(String idMaestra,
+                                                      String idEtapa,
+                                                      WFTipoDocumento wfTipoDocumento,
+                                                      BeanParametrosAuditoria beanParametrosAuditoria) throws Exception{
+        final String modulo = "WFTipoDocumentoFacade.getBeanWFTipoDocumento()";
+        BeanWFTipoDocumento beanWFTipoDocumento = new BeanWFTipoDocumento();
+        try{
+            
+        }catch (final Exception e) {
+            throw handlerError(e, beanParametrosAuditoria.getUsuarioInsercion(), modulo);
+        }
+        if (_isEmpty(wfTipoDocumento)) {
+            return beanWFTipoDocumento;
+        }
+
+        beanWFTipoDocumento.setIdTipoDocumento(wfTipoDocumento.getIdTipoDocumento());
+        beanWFTipoDocumento.setCodigoEmpresa(wfTipoDocumento.getCodigoEmpresa());
+        beanWFTipoDocumento.setDescripcionTipoDocumento(wfTipoDocumento.getDescripcionTipoDocumento());
+        beanWFTipoDocumento.setKeyTipoDocumento(wfTipoDocumento.getKeyTipoDocumento());
+        beanWFTipoDocumento.setIndicadorSeleccionado(buscarExisteDocumentoPorEtapa(idEtapa, idMaestra, wfTipoDocumento.getIdTipoDocumento()));
+
+        return beanWFTipoDocumento;
+    }
+
+    private String buscarExisteDocumentoPorEtapa(String idEtapa, String idMaestra, String idTipoDocumento) {
+        List<WFDocumentos> listWFDocumentos = new ArrayList<WFDocumentos>(0);
+        PropertyParams propertyParams;
+        propertyParams = new PropertyParams();
+        propertyParams.addPropertyOrder("id", false);
+
+        if (!_isEmpty(idEtapa)) {
+            propertyParams.addProperty("wfEtapa.idEtapa", idEtapa);
+        }
+        propertyParams.addProperty("wfMaestra.idMaestra", idMaestra);
+        propertyParams.addProperty("wfTipoDocumento.idTipoDocumento", idTipoDocumento);
+
+        listWFDocumentos = wfDocumentosInterfaceLocal.findByProperties(propertyParams);
+        if (!_isEmpty(listWFDocumentos)) {
+            return "Si";
+        }
+        return CADENA_VACIA;
+
+    }
+
+}
diff --git a/FINANCIERONEW/src/financ/workflow/local/WFDetalleComentarioFacadeInterfaceLocal.java b/FINANCIERONEW/src/financ/workflow/local/WFDetalleComentarioFacadeInterfaceLocal.java
new file mode 100644
index 0000000..d21b52d
--- /dev/null
+++ b/FINANCIERONEW/src/financ/workflow/local/WFDetalleComentarioFacadeInterfaceLocal.java
@@ -0,0 +1,40 @@
+package financ.workflow.local;
+
+import javax.ejb.Local;
+
+import financ.workflow.bean.BeanWFDetalleComentario;
+import admin.contab.beans.BeanParametrosAuditoria;
+
+/**
+ * WFDetalleComentarioFacadeInterfaceLocal
+ * 
+ * @autor kdelacruz
+ * @since [Req.17-007] 14.03.2017 Implementación WorkFlow Legal
+ */
+
+@Local
+public interface WFDetalleComentarioFacadeInterfaceLocal {
+
+    /**
+     * @author kdelacruz
+     * @since [Req.S17-007] 27.03.2017
+     * @param idMaestra
+     * @param idEtapa
+     * @param textoComentario
+     * @param beanParametrosAuditoria
+     */
+    public void guardar(String idMaestra,
+                        String idEtapa,
+                        String textoComentario,
+                        BeanParametrosAuditoria beanParametrosAuditoria) throws Exception;
+
+    /**
+     * @author kdelacruz
+     * @since [Req.S17-007] 27.03.2017
+     * @param idMaestra
+     * @param idEtapa
+     * @param beanParametrosAuditoria
+     */
+    public BeanWFDetalleComentario get(String idMaestra, String idEtapa, BeanParametrosAuditoria beanParametrosAuditoria) throws Exception;
+
+}
diff --git a/FINANCIERONEW/src/financ/workflow/local/WFDetalleComentarioInterfaceLocal.java b/FINANCIERONEW/src/financ/workflow/local/WFDetalleComentarioInterfaceLocal.java
new file mode 100644
index 0000000..00c9f00
--- /dev/null
+++ b/FINANCIERONEW/src/financ/workflow/local/WFDetalleComentarioInterfaceLocal.java
@@ -0,0 +1,18 @@
+package financ.workflow.local;
+
+import javax.ejb.Local;
+
+import pe.com.tfc.utils.GenericInterface;
+import financ.workflow.entity.WFDetalleComentario;
+
+/**
+ * WFDetalleComentarioInterfaceLocal
+ * 
+ * @author kdelacruz
+ * @since [Req.17-007] 14.03.2017 Implementación WorkFlow Legal
+ */
+
+@Local
+public interface WFDetalleComentarioInterfaceLocal extends GenericInterface<WFDetalleComentario, String> {
+
+}
diff --git a/FINANCIERONEW/src/financ/workflow/local/WFDetalleMailPorRutaFacadeInterfaceLocal.java b/FINANCIERONEW/src/financ/workflow/local/WFDetalleMailPorRutaFacadeInterfaceLocal.java
new file mode 100644
index 0000000..727fc81
--- /dev/null
+++ b/FINANCIERONEW/src/financ/workflow/local/WFDetalleMailPorRutaFacadeInterfaceLocal.java
@@ -0,0 +1,29 @@
+package financ.workflow.local;
+
+import java.util.List;
+
+import javax.ejb.Local;
+
+import admin.contab.beans.BeanParametrosAuditoria;
+
+/**
+ * WFDetalleMailPorRutaFacadeInterfaceLocal
+ * 
+ * @autor kdelacruz
+ * @since [S17-007] 22.03.2017 Implementación WorkFlow Legal
+ */
+
+@Local
+public interface WFDetalleMailPorRutaFacadeInterfaceLocal {
+
+    /**
+     * @author kdelacruz
+     * @since [Req.S17-007] 23.03.2017
+     * @param idRuta
+     * @param beanParametrosAuditoria
+     * @return List<String>
+     * @throws Exception
+     */
+    public List<String> buscarCorreosPorRuta(String idRuta, BeanParametrosAuditoria beanParametrosAuditoria) throws Exception;
+
+}
diff --git a/FINANCIERONEW/src/financ/workflow/local/WFDetalleMailPorRutaInterfaceLocal.java b/FINANCIERONEW/src/financ/workflow/local/WFDetalleMailPorRutaInterfaceLocal.java
new file mode 100644
index 0000000..3c6a13a
--- /dev/null
+++ b/FINANCIERONEW/src/financ/workflow/local/WFDetalleMailPorRutaInterfaceLocal.java
@@ -0,0 +1,18 @@
+package financ.workflow.local;
+
+import javax.ejb.Local;
+
+import pe.com.tfc.utils.GenericInterface;
+import financ.workflow.entity.WFDetalleMailPorRuta;
+
+/**
+ * WFDetalleMailPorRutaInterfaceLocal
+ * 
+ * @author kdelacruz
+ * @since [S17-007] 22.03.2017 Implementación WorkFlow Legal
+ */
+
+@Local
+public interface WFDetalleMailPorRutaInterfaceLocal extends GenericInterface<WFDetalleMailPorRuta, String> {
+
+}
diff --git a/FINANCIERONEW/src/financ/workflow/local/WFDocumentoPorEtapaFacadeInterfaceLocal.java b/FINANCIERONEW/src/financ/workflow/local/WFDocumentoPorEtapaFacadeInterfaceLocal.java
new file mode 100644
index 0000000..33840e8
--- /dev/null
+++ b/FINANCIERONEW/src/financ/workflow/local/WFDocumentoPorEtapaFacadeInterfaceLocal.java
@@ -0,0 +1,24 @@
+package financ.workflow.local;
+
+import java.util.List;
+
+import javax.ejb.Local;
+
+import admin.contab.beans.BeanParametrosAuditoria;
+import financ.workflow.bean.BeanWFTipoDocumento;
+
+/**
+ * WFDocumentoPorEtapaFacadeInterfaceLocal
+ * 
+ * @autor kdelacruz
+ * @since [Req.17-007] 06.03.2017 Implementación WorkFlow Legal
+ */
+
+@Local
+public interface WFDocumentoPorEtapaFacadeInterfaceLocal {
+
+    public List<BeanWFTipoDocumento> listarDetalleDocumento(final String idMaestra,
+                                                            final String idEtapa,
+                                                            final BeanParametrosAuditoria beanParametrosAuditoria) throws Exception;
+
+}
diff --git a/FINANCIERONEW/src/financ/workflow/local/WFDocumentoPorEtapaInterfaceLocal.java b/FINANCIERONEW/src/financ/workflow/local/WFDocumentoPorEtapaInterfaceLocal.java
new file mode 100644
index 0000000..b0a84a1
--- /dev/null
+++ b/FINANCIERONEW/src/financ/workflow/local/WFDocumentoPorEtapaInterfaceLocal.java
@@ -0,0 +1,18 @@
+package financ.workflow.local;
+
+import javax.ejb.Local;
+
+import pe.com.tfc.utils.GenericInterface;
+import financ.workflow.entity.WFDocumentoPorEtapa;
+
+/**
+ * WFDocumentoPorEtapaInterfaceLocal
+ *
+ * @author kdelacruz
+ * @since [Req.17-007] 06.03.2017 Implementación WorkFlow Legal
+ */
+
+@Local
+public interface WFDocumentoPorEtapaInterfaceLocal extends GenericInterface<WFDocumentoPorEtapa, String>{
+
+}
diff --git a/FINANCIERONEW/src/financ/workflow/local/WFDocumentosFacadeInterfaceLocal.java b/FINANCIERONEW/src/financ/workflow/local/WFDocumentosFacadeInterfaceLocal.java
new file mode 100644
index 0000000..9459b40
--- /dev/null
+++ b/FINANCIERONEW/src/financ/workflow/local/WFDocumentosFacadeInterfaceLocal.java
@@ -0,0 +1,73 @@
+package financ.workflow.local;
+
+import java.util.List;
+
+import javax.ejb.Local;
+
+import pe.com.tfc.utils.ErrorControladoException;
+import admin.contab.beans.BeanParametrosAuditoria;
+import financ.workflow.bean.BeanWFDocumentos;
+
+/**
+ * WFDocumentosFacadeInterfaceLocal
+ * 
+ * @autor kdelacruz
+ * @since [Req.17-007] 06.03.2017 Implementación WorkFlow Legal
+ */
+
+@Local
+public interface WFDocumentosFacadeInterfaceLocal {
+
+    /**
+     * @author kdelacruz
+     * @since [Req.S17-007] 14.03.2017
+     * @param idMaestra
+     * @param idTipoDocumento
+     * @param idFile
+     * @param idEtapa
+     * @param beanParametrosAuditoria
+     * @throws Exception
+     */
+    public void guardarUltimoDocumento(String idMaestra,
+                                       String idTipoDocumento,
+                                       String idFile,
+                                       String idEtapa,
+                                       BeanParametrosAuditoria beanParametrosAuditoria) throws Exception;
+
+    /**
+     * @author kdelacruz
+     * @since [Req.S17-007] 14.03.2017
+     * @param idEtapa
+     * @param idTipoDocumento
+     * @param idMaestra
+     * @param beanParametrosAuditoria
+     * @return
+     * @throws Exception
+     */
+    public List<BeanWFDocumentos> buscar(String idEtapa,
+                                         String idTipoDocumento,
+                                         String idMaestra,
+                                         BeanParametrosAuditoria beanParametrosAuditoria) throws Exception;
+
+    /**
+     * @author kdelacruz
+     * @since [Req.S17-007] 14.03.2017
+     * @param lista
+     * @return
+     * @throws ErrorControladoException
+     */
+    public List<BeanWFDocumentos> mapear(String lista) throws ErrorControladoException;
+
+    /**
+     * kdelacruz [Req.S17-007] 28.03.2017
+     * 
+     * @param idMaestra
+     * @param idEtapa
+     * @param beanParametrosAuditoria
+     * @throws Exception
+     */
+    public void darDeBajaTodosDocumentos(String idMaestra,
+                                         String idEtapa,
+                                         BeanParametrosAuditoria beanParametrosAuditoria) throws Exception;
+
+}
diff --git a/FINANCIERONEW/src/financ/workflow/local/WFDocumentosInterfaceLocal.java b/FINANCIERONEW/src/financ/workflow/local/WFDocumentosInterfaceLocal.java
new file mode 100644
index 0000000..6bbaae2
--- /dev/null
+++ b/FINANCIERONEW/src/financ/workflow/local/WFDocumentosInterfaceLocal.java
@@ -0,0 +1,18 @@
+package financ.workflow.local;
+
+import javax.ejb.Local;
+
+import pe.com.tfc.utils.GenericInterface;
+import financ.workflow.entity.WFDocumentos;
+
+/**
+ * WFDocumentosInterfaceLocal
+ * 
+ * @author kdelacruz
+ * @since [Req.17-007] 06.03.2017 Implementación WorkFlow Legal
+ */
+
+@Local
+public interface WFDocumentosInterfaceLocal extends GenericInterface<WFDocumentos, String> {
+
+}
diff --git a/FINANCIERONEW/src/financ/workflow/local/WFEstadoFacadeInterfaceLocal.java b/FINANCIERONEW/src/financ/workflow/local/WFEstadoFacadeInterfaceLocal.java
new file mode 100644
index 0000000..76477b6
--- /dev/null
+++ b/FINANCIERONEW/src/financ/workflow/local/WFEstadoFacadeInterfaceLocal.java
@@ -0,0 +1,31 @@
+package financ.workflow.local;
+
+import java.util.List;
+
+import javax.ejb.Local;
+
+import admin.contab.beans.BeanParametrosAuditoria;
+import financ.workflow.bean.BeanWFEstado;
+
+/**
+ * WFEstadoWorkflowFacadeInterfaceLocal
+ * 
+ * @autor kdelacruz
+ * @since [Req.17-007] 06.03.2017 Implementación WorkFlow Legal
+ */
+
+@Local
+public interface WFEstadoFacadeInterfaceLocal {
+
+    /**
+     * @author kdelacruz
+     * @since [Req.S17-007] 08.03.2017
+     * @param idModulo
+     * @param beanParametrosAuditoria
+     * @return List<BeanWFEstado>
+     * @throws Exception
+     */
+    public List<BeanWFEstado> listarCboEstado(final String idModulo,
+                                              final BeanParametrosAuditoria beanParametrosAuditoria) throws Exception;
+
+}
diff --git a/FINANCIERONEW/src/financ/workflow/local/WFEstadoInterfaceLocal.java b/FINANCIERONEW/src/financ/workflow/local/WFEstadoInterfaceLocal.java
new file mode 100644
index 0000000..4a949e5
--- /dev/null
+++ b/FINANCIERONEW/src/financ/workflow/local/WFEstadoInterfaceLocal.java
@@ -0,0 +1,18 @@
+package financ.workflow.local;
+
+import javax.ejb.Local;
+
+import pe.com.tfc.utils.GenericInterface;
+import financ.workflow.entity.WFEstado;
+
+/**
+ * WFEstadoWorkflowInterfaceLocal
+ * 
+ * @author kdelacruz
+ * @since [Req.17-007] 06.03.2017 Implementación WorkFlow Legal
+ */
+
+@Local
+public interface WFEstadoInterfaceLocal extends GenericInterface<WFEstado, String> {
+
+}
diff --git a/FINANCIERONEW/src/financ/workflow/local/WFEtapaFacadeInterfaceLocal.java b/FINANCIERONEW/src/financ/workflow/local/WFEtapaFacadeInterfaceLocal.java
new file mode 100644
index 0000000..00a28cc
--- /dev/null
+++ b/FINANCIERONEW/src/financ/workflow/local/WFEtapaFacadeInterfaceLocal.java
@@ -0,0 +1,67 @@
+package financ.workflow.local;
+
+import java.util.List;
+
+import javax.ejb.Local;
+
+import admin.contab.beans.BeanParametrosAuditoria;
+import financ.workflow.bean.BeanWFEtapa;
+
+/**
+ * WFEtapaWorkflowFacadeInterfaceLocal
+ * 
+ * @autor kdelacruz
+ * @since [Req.17-007] 06.03.2017 Implementación WorkFlow Legal
+ */
+
+@Local
+public interface WFEtapaFacadeInterfaceLocal {
+
+    /**
+     * @author kdelacruz
+     * @since [Req.S17-007] 10.03.2017
+     * @param idModulo
+     * @param indInicio
+     * @param beanParametrosAuditoria
+     * @return List<BeanWFEtapa>
+     * @throws Exception
+     */
+    public List<BeanWFEtapa> listarEtapa(final String idModulo,
+                                         final String indInicio,
+                                         final String idMaestra,
+                                         final BeanParametrosAuditoria beanParametrosAuditoria) throws Exception;
+    
+    /**
+     * @author kdelacruz
+     * @since [Req.S17-007] 10.03.2017
+     * @param idMaestra
+     * @param idEtapaValidar
+     * @param beanParametrosAuditoria
+     * @return
+     * @throws Exception
+     */
+    public String validarEtapaEdicion(final String idMaestra,
+                                      final String idEtapaValidar,
+                                      final BeanParametrosAuditoria beanParametrosAuditoria) throws Exception;
+    
+    /**
+     * @author kdelacruz
+     * @since [Req.S17-007] 10.03.2017
+     * @param idMaestra
+     * @param beanParametrosAuditoria
+     * @return
+     * @throws Exception
+     */
+    public String obtenerEtapaPendiente(final String idMaestra, BeanParametrosAuditoria beanParametrosAuditoria) throws Exception;
+    
+    /**
+     *@author kdelacruz
+     * @since [Req.S17-007] 27.03.2017
+     * @param beanParametrosAuditoria
+     * @return
+     * @throws Exception
+     */
+    public List<BeanWFEtapa> listarTodasEtapa(final BeanParametrosAuditoria beanParametrosAuditoria) throws Exception;
+    
+
+}
diff --git a/FINANCIERONEW/src/financ/workflow/local/WFEtapaInterfaceLocal.java b/FINANCIERONEW/src/financ/workflow/local/WFEtapaInterfaceLocal.java
new file mode 100644
index 0000000..d826804
--- /dev/null
+++ b/FINANCIERONEW/src/financ/workflow/local/WFEtapaInterfaceLocal.java
@@ -0,0 +1,18 @@
+package financ.workflow.local;
+
+import javax.ejb.Local;
+
+import pe.com.tfc.utils.GenericInterface;
+import financ.workflow.entity.WFEtapa;
+
+/**
+ * WFEtapaWorkflowInterfaceLocal
+ * 
+ * @author kdelacruz
+ * @since [Req.17-007] 06.03.2017 Implementación WorkFlow Legal
+ */
+
+@Local
+public interface WFEtapaInterfaceLocal extends GenericInterface<WFEtapa, String> {
+
+}
diff --git a/FINANCIERONEW/src/financ/workflow/local/WFEtapasPorRolFacadeInterfaceLocal.java b/FINANCIERONEW/src/financ/workflow/local/WFEtapasPorRolFacadeInterfaceLocal.java
new file mode 100644
index 0000000..fe707e3
--- /dev/null
+++ b/FINANCIERONEW/src/financ/workflow/local/WFEtapasPorRolFacadeInterfaceLocal.java
@@ -0,0 +1,15 @@
+package financ.workflow.local;
+
+import javax.ejb.Local;
+
+/**
+ * WFEtapasPorRolFacadeInterfaceLocal
+ * 
+ * @autor kdelacruz
+ * @since [Req.17-007] 16.03.2017 Implementación WorkFlow Legal
+ */
+
+@Local
+public interface WFEtapasPorRolFacadeInterfaceLocal {
+
+}
diff --git a/FINANCIERONEW/src/financ/workflow/local/WFEtapasPorRolInterfaceLocal.java b/FINANCIERONEW/src/financ/workflow/local/WFEtapasPorRolInterfaceLocal.java
new file mode 100644
index 0000000..f0496e6
--- /dev/null
+++ b/FINANCIERONEW/src/financ/workflow/local/WFEtapasPorRolInterfaceLocal.java
@@ -0,0 +1,18 @@
+package financ.workflow.local;
+
+import javax.ejb.Local;
+
+import pe.com.tfc.utils.GenericInterface;
+import financ.workflow.entity.WFEtapasPorRol;
+
+/**
+ * WFEtapasPorRolInterfaceLocal
+ * 
+ * @author kdelacruz
+ * @since [Req.17-007] 16.03.2017 Implementación WorkFlow Legal
+ */
+
+@Local
+public interface WFEtapasPorRolInterfaceLocal extends GenericInterface<WFEtapasPorRol, String> {
+
+}
diff --git a/FINANCIERONEW/src/financ/workflow/local/WFEventoFacadeInterfaceLocal.java b/FINANCIERONEW/src/financ/workflow/local/WFEventoFacadeInterfaceLocal.java
new file mode 100644
index 0000000..baf9f16
--- /dev/null
+++ b/FINANCIERONEW/src/financ/workflow/local/WFEventoFacadeInterfaceLocal.java
@@ -0,0 +1,30 @@
+package financ.workflow.local;
+
+import java.util.List;
+
+import javax.ejb.Local;
+
+import admin.contab.beans.BeanParametrosAuditoria;
+import financ.workflow.bean.BeanWFEvento;
+
+/**
+ * WFEventoWorkflowFacadeInterfaceLocal
+ * 
+ * @autor kdelacruz
+ * @since [Req.17-007] 06.03.2017 Implementación WorkFlow Legal
+ */
+
+@Local
+public interface WFEventoFacadeInterfaceLocal {
+
+    /**
+     * @author kdelacruz
+     * @since [Req.S17-007] 27.03.2017
+     * @param idModulo
+     * @param beanParametroAuditoria
+     * @return List<BeanWFEvento>
+     * @throws Exception
+     */
+    public List<BeanWFEvento> listar(final String idModulo, final BeanParametrosAuditoria beanParametrosAuditoria) throws Exception;
+
+}
diff --git a/FINANCIERONEW/src/financ/workflow/local/WFEventoInterfaceLocal.java b/FINANCIERONEW/src/financ/workflow/local/WFEventoInterfaceLocal.java
new file mode 100644
index 0000000..55d9764
--- /dev/null
+++ b/FINANCIERONEW/src/financ/workflow/local/WFEventoInterfaceLocal.java
@@ -0,0 +1,18 @@
+package financ.workflow.local;
+
+import javax.ejb.Local;
+
+import pe.com.tfc.utils.GenericInterface;
+import financ.workflow.entity.WFEvento;
+
+/**
+ * WFEventoWorkflowInterfaceLocal
+ * 
+ * @author kdelacruz
+ * @since [Req.17-007] 06.03.2017 Implementación WorkFlow Legal
+ */
+
+@Local
+public interface WFEventoInterfaceLocal extends GenericInterface<WFEvento, String> {
+
+}
diff --git a/FINANCIERONEW/src/financ/workflow/local/WFEventoPorEtapaFacadeInterfaceLocal.java b/FINANCIERONEW/src/financ/workflow/local/WFEventoPorEtapaFacadeInterfaceLocal.java
new file mode 100644
index 0000000..eb73969
--- /dev/null
+++ b/FINANCIERONEW/src/financ/workflow/local/WFEventoPorEtapaFacadeInterfaceLocal.java
@@ -0,0 +1,26 @@
+package financ.workflow.local;
+
+import java.util.List;
+
+import javax.ejb.Local;
+
+import admin.contab.beans.BeanParametrosAuditoria;
+import financ.workflow.bean.BeanWFEventoPorEtapa;
+
+/**
+ * WFEventoPorEtapaFacadeInterfaceLocal
+ * 
+ * @autor kdelacruz
+ * @since [Req.17-007] 06.03.2017 Implementación WorkFlow Legal
+ */
+
+@Local
+public interface WFEventoPorEtapaFacadeInterfaceLocal {
+
+    public List<BeanWFEventoPorEtapa> listar(final String idEtapa, final BeanParametrosAuditoria beanParametrosAuditoria) throws Exception;
+
+    public BeanWFEventoPorEtapa get(final String idEtapa,
+                                    final String idEvento,
+                                    final BeanParametrosAuditoria beanParametrosAuditoria) throws Exception;
+
+}
diff --git a/FINANCIERONEW/src/financ/workflow/local/WFEventoPorEtapaInterfaceLocal.java b/FINANCIERONEW/src/financ/workflow/local/WFEventoPorEtapaInterfaceLocal.java
new file mode 100644
index 0000000..fb29366
--- /dev/null
+++ b/FINANCIERONEW/src/financ/workflow/local/WFEventoPorEtapaInterfaceLocal.java
@@ -0,0 +1,18 @@
+package financ.workflow.local;
+
+import javax.ejb.Local;
+
+import pe.com.tfc.utils.GenericInterface;
+import financ.workflow.entity.WFEventoPorEtapa;
+
+/**
+ * WFEventoPorEtapaInterfaceLocal
+ * 
+ * @author kdelacruz
+ * @since [Req.17-007] 06.03.2017 Implementación WorkFlow Legal
+ */
+
+@Local
+public interface WFEventoPorEtapaInterfaceLocal extends GenericInterface<WFEventoPorEtapa, String> {
+
+}
diff --git a/FINANCIERONEW/src/financ/workflow/local/WFFlujoPorRutaFacadeInterfaceLocal.java b/FINANCIERONEW/src/financ/workflow/local/WFFlujoPorRutaFacadeInterfaceLocal.java
new file mode 100644
index 0000000..6905372
--- /dev/null
+++ b/FINANCIERONEW/src/financ/workflow/local/WFFlujoPorRutaFacadeInterfaceLocal.java
@@ -0,0 +1,15 @@
+package financ.workflow.local;
+
+import javax.ejb.Local;
+
+/**
+ * WFFlujoPorRutaFacadeInterfaceLocal
+ * 
+ * @autor kdelacruz
+ * @since [Req.17-007] 06.03.2017 Implementación WorkFlow Legal
+ */
+
+@Local
+public interface WFFlujoPorRutaFacadeInterfaceLocal {
+
+}
diff --git a/FINANCIERONEW/src/financ/workflow/local/WFFlujoPorRutaInterfaceLocal.java b/FINANCIERONEW/src/financ/workflow/local/WFFlujoPorRutaInterfaceLocal.java
new file mode 100644
index 0000000..7be5853
--- /dev/null
+++ b/FINANCIERONEW/src/financ/workflow/local/WFFlujoPorRutaInterfaceLocal.java
@@ -0,0 +1,18 @@
+package financ.workflow.local;
+
+import javax.ejb.Local;
+
+import pe.com.tfc.utils.GenericInterface;
+import financ.workflow.entity.WFFlujoPorRuta;
+
+/**
+ * WFFlujoPorRutaInterfaceLocal
+ * 
+ * @author kdelacruz
+ * @since [Req.17-007] 06.03.2017 Implementación WorkFlow Legal
+ */
+
+@Local
+public interface WFFlujoPorRutaInterfaceLocal extends GenericInterface<WFFlujoPorRuta, String>{
+
+}
diff --git a/FINANCIERONEW/src/financ/workflow/local/WFLegalFacadeInterfaceLocal.java b/FINANCIERONEW/src/financ/workflow/local/WFLegalFacadeInterfaceLocal.java
new file mode 100644
index 0000000..f87c81f
--- /dev/null
+++ b/FINANCIERONEW/src/financ/workflow/local/WFLegalFacadeInterfaceLocal.java
@@ -0,0 +1,178 @@
+package financ.workflow.local;
+
+import java.util.List;
+
+import javax.ejb.Local;
+
+import admin.contab.beans.BeanParametrosAuditoria;
+import financ.workflow.bean.BeanWFDocumentos;
+import financ.workflow.bean.BeanWFLegal;
+import financ.workflow.bean.BeanWFMaestra;
+
+/**
+ * WFLegalFacadeInterfaceLocal
+ * 
+ * @autor kdelacruz
+ * @since [Req.17-007] 06.03.2017 Implementación WorkFlow Legal
+ */
+
+@Local
+public interface WFLegalFacadeInterfaceLocal {
+
+    /**
+     * @author kdelacruz
+     * @since [Req.S17-007] 10.03.2017
+     * @param idMaestra
+     * @param beanParametrosAuditoria
+     * @return
+     * @throws Exception
+     */
+    public BeanWFLegal get(String idMaestra, BeanParametrosAuditoria beanParametrosAuditoria) throws Exception;
+
+    /**
+     * @author kdelacruz
+     * @since [Req.S17-007] 10.03.2017
+     * @param beanWFLegal
+     * @param listBeanWFLegal
+     * @param beanParametrosAuditoria
+     * @throws Exception
+     */
+    public void guardarDatosNotaria(BeanWFLegal beanWFLegal,
+                                    List<BeanWFDocumentos> listBeanWFDocumentos,
+                                    BeanParametrosAuditoria beanParametrosAuditoria) throws Exception;
+
+    /**
+     * @author kdelacruz
+     * @since [Req.S17-007] 10.03.2017
+     * @param idEvento
+     * @param beanWFMaestra
+     * @param beanWFLegal
+     * @param comentario
+     * @param codigoTipoOperacion
+     * @param lstBeanWFDocumentos
+     * @param beanParametrosAuditoria
+     * @return String
+     * @throws Exception
+     */
+    public String enviarDatosSolicitud(String idEvento,
+                                       BeanWFMaestra beanWFMaestra,
+                                       BeanWFLegal beanWFLegal,
+                                       String comentario,
+                                       String codigoTipoOperacion,
+                                       List<BeanWFDocumentos> lstBeanWFDocumentos,
+                                       BeanParametrosAuditoria beanParametrosAuditoria) throws Exception;
+
+    /**
+     * @author kdelacruz
+     * @since [Req.S17-007] 10.03.2017
+     * @param beanWFMaestra
+     * @param beanWFLegal
+     * @param idEvento
+     * @param comentario
+     * @param beanParametrosAuditoria
+     * @throws Exception
+     */
+    public void enviarTomaFirma(BeanWFMaestra beanWFMaestra,
+                                BeanWFLegal beanWFLegal,
+                                String idEvento,
+                                String comentario,
+                                BeanParametrosAuditoria beanParametrosAuditoria) throws Exception;
+
+    /**
+     * @author kdelacruz
+     * @since [Req.S17-007] 10.03.2017
+     * @param beanWFMaestra
+     * @param beanWFLegal
+     * @param comentario
+     * @param fechaFirmaEscritura
+     * @param beanParametrosAuditoria
+     * @throws Exception
+     */
+    public void enviarEscrituraPublica(BeanWFMaestra beanWFMaestra,
+                                       BeanWFLegal beanWFLegal,
+                                       String idEvento,
+                                       String comentario,
+                                       BeanParametrosAuditoria beanParametrosAuditoria) throws Exception;
+
+    /**
+     * @author kdelacruz
+     * @since [Req.S17-007] 10.03.2017
+     * @param beanWFMaestra
+     * @param beanWFLegal
+     * @param idEvento
+     * @param comentario
+     * @param lstBeanWFDocumentos
+     * @param beanParametrosAuditoria
+     * @throws Exception
+     */
+    public void enviarRevisionDocumento(BeanWFMaestra beanWFMaestra,
+                                        BeanWFLegal beanWFLegal,
+                                        String idEvento,
+                                        String comentario,
+                                        List<BeanWFDocumentos> lstBeanWFDocumentos,
+                                        BeanParametrosAuditoria beanParametrosAuditoria) throws Exception;
+
+    /**
+     * @author kdelacruz
+     * @since [Req.S17-007] 10.03.2017
+     * @param beanWFMaestra
+     * @param beanWFLegal
+     * @param idEvento
+     * @param comentario
+     * @param lstBeanWFDocumentos
+     * @param beanParametrosAuditoria
+     * @throws Exception
+     */
+    public void enviaBloqueRegistral(BeanWFMaestra beanWFMaestra,
+                                     BeanWFLegal beanWFLegal,
+                                     String idEvento,
+                                     String comentario,
+                                     List<BeanWFDocumentos> lstBeanWFDocumentos,
+                                     BeanParametrosAuditoria beanParametrosAuditoria) throws Exception;
+
+    /**
+     * @author kdelacruz
+     * @since [Req.S17-007] 14.03.2017
+     * @param beanWFMaestra
+     * @param idEvento
+     * @param comentario
+     * @param lstBeanWFDocumentos
+     * @param beanParametrosAuditoria
+     * @throws Exception
+     */
+    public void enviarGenericoDocumentoComentario(BeanWFMaestra beanWFMaestra,
+                                                  String idEvento,
+                                                  String comentario,
+                                                  List<BeanWFDocumentos> lstBeanWFDocumentos,
+                                                  BeanParametrosAuditoria beanParametrosAuditoria) throws Exception;
+
+    /**
+     * @author kdelacruz
+     * @since [Req.S17-007] 14.03.2017
+     * @param beanWFMaestra
+     * @param beanWFLegal
+     * @param idEvento
+     * @param comentario
+     * @param lstBeanWFDocumentos
+     * @param beanParametrosAuditoria
+     * @throws Exception
+     */
+    public void enviarInscripcionDefinitiva(BeanWFMaestra beanWFMaestra,
+                                            BeanWFLegal beanWFLegal,
+                                            String idEvento,
+                                            String comentario,
+                                            List<BeanWFDocumentos> lstBeanWFDocumentos,
+                                            BeanParametrosAuditoria beanParametrosAuditoria) throws Exception;
+
+    /**
+     * @author kdelacruz
+     * @since [Req.S17-007] 14.03.2017
+     * @param beanWFMaestra
+     * @param idEvento
+     * @param beanParametrosAuditoria
+     * @throws Exception
+     */
+    public void devolverRechazarSolicitud(BeanWFMaestra beanWFMaestra,
+                                          String idEvento,
+                                          BeanParametrosAuditoria beanParametrosAuditoria) throws Exception;
+}
diff --git a/FINANCIERONEW/src/financ/workflow/local/WFLegalInterfaceLocal.java b/FINANCIERONEW/src/financ/workflow/local/WFLegalInterfaceLocal.java
new file mode 100644
index 0000000..d447e91
--- /dev/null
+++ b/FINANCIERONEW/src/financ/workflow/local/WFLegalInterfaceLocal.java
@@ -0,0 +1,18 @@
+package financ.workflow.local;
+
+import javax.ejb.Local;
+
+import pe.com.tfc.utils.GenericInterface;
+import financ.workflow.entity.WFLegal;
+
+/**
+ * WFLegalInterfaceLocal
+ * 
+ * @author kdelacruz
+ * @since [Req.17-007] 06.03.2017 Implementación WorkFlow Legal
+ */
+
+@Local
+public interface WFLegalInterfaceLocal extends GenericInterface<WFLegal, String> {
+
+}
diff --git a/FINANCIERONEW/src/financ/workflow/local/WFMaestraFacadeInterfaceLocal.java b/FINANCIERONEW/src/financ/workflow/local/WFMaestraFacadeInterfaceLocal.java
new file mode 100644
index 0000000..bd3520a
--- /dev/null
+++ b/FINANCIERONEW/src/financ/workflow/local/WFMaestraFacadeInterfaceLocal.java
@@ -0,0 +1,111 @@
+package financ.workflow.local;
+
+import java.util.List;
+import java.util.Map;
+
+import javax.ejb.Local;
+
+import admin.contab.beans.BeanParametrosAuditoria;
+import financ.workflow.bean.BeanWFMaestra;
+import financ.workflow.entity.WFMaestra;
+
+/**
+ * WFMaestroFacadeInterfaceLocal
+ * 
+ * @autor kdelacruz
+ * @since [Req.17-007] 06.03.2017 Implementación WorkFlow Legal
+ */
+
+@Local
+public interface WFMaestraFacadeInterfaceLocal {
+
+    /**
+     * @author kdelacruz
+     * @since [Req.S17-007] 07.03.2017
+     * @param codigoPersona
+     * @param fechaSolicitud
+     * @param estado
+     * @param usuarioSolicitante
+     * @param etapaSolicitud
+     * @param usuarioLegal
+     * @param pagina
+     * @param beanParametrosAuditoria
+     * @return Map
+     * @throws Exception
+     */
+    public Map<String, Object> buscarDetalleLegal(final String codigoPersona,
+                                                  final String fechaSolicitud,
+                                                  final String estado,
+                                                  final String usuarioSolicitante,
+                                                  final String etapaSolicitud,
+                                                  final String usuarioLegal,
+                                                  final Integer pagina,
+                                                  final BeanParametrosAuditoria beanParametrosAuditoria) throws Exception;
+
+    /**
+     * @author kdelacruz
+     * @since [Req.S17-007] 07.03.2017
+     * @param codigoFuncionario
+     * @param codigo
+     * @param beanParametrosAuditoria
+     * @throws Exception
+     */
+    public void grabarAsignarSolicitud(final String codigoFuncionario,
+                                       final List<String> vIdsSeleccionados,
+                                       final BeanParametrosAuditoria beanParametrosAuditoria) throws Exception;
+
+    /**
+     * @author kdelacruz
+     * @since [Req.S17-007] 10.03.2017
+     * @param wfMaestra
+     * @return BeanWFMaestra
+     */
+    public BeanWFMaestra getBeanWFMaestra(WFMaestra wfMaestra);
+
+    /**
+     * @author kdelacruz
+     * @since [Req.S17-007] 10.03.2017
+     * @param idModulo
+     * @param idRuta
+     * @param idEtapa
+     * @param idEstado
+     * @param numeroOperacion
+     * @param codigoPersona
+     * @param codigoTipoOperacion
+     * @param beanParametrosAuditoria
+     * @return String
+     * @throws Exception
+     */
+    public String guardar(String idModulo,
+                          String idRuta,
+                          String idEtapa,
+                          String idEstado,
+                          BeanParametrosAuditoria beanParametrosAuditoria) throws Exception;
+
+    /**
+     * @author kdelacruz
+     * @since [Req.S17-007] 13.03.2017
+     * @param idMaestra
+     * @param beanParametrosAuditoria
+     * @return BeanWFMaestra
+     * @throws Exception
+     */
+    public BeanWFMaestra consultarMaestra(String idMaestra, BeanParametrosAuditoria beanParametrosAuditoria) throws Exception;
+
+    /**
+     * @author kdelacruz
+     * @since [Req.S17-007] 13.03.2017
+     * @param beanWFMaestra
+     * @param idMaestra
+     * @param idEtapa
+     * @param idEventoPorEtapa
+     * @param textoComentario
+     * @param beanParametrosAuditoria
+     * @throws Exception
+     */
+    public void procesarEvento(String idMaestra,
+                               String idEtapa,
+                               String idEventoPorEtapa,
+                               String textoComentario,
+                               BeanParametrosAuditoria beanParametrosAuditoria) throws Exception;
+}
diff --git a/FINANCIERONEW/src/financ/workflow/local/WFMaestraInterfaceLocal.java b/FINANCIERONEW/src/financ/workflow/local/WFMaestraInterfaceLocal.java
new file mode 100644
index 0000000..c4c8ac0
--- /dev/null
+++ b/FINANCIERONEW/src/financ/workflow/local/WFMaestraInterfaceLocal.java
@@ -0,0 +1,16 @@
+package financ.workflow.local;
+
+import javax.ejb.Local;
+
+import pe.com.tfc.utils.GenericInterface;
+import financ.workflow.entity.WFMaestra;
+
+/**
+ * WFMaestroWorkflowInterfaceLocal
+ * 
+ * @author kdelacruz
+ * @since [Req.17-007] 06.03.2017 Implementación WorkFlow Legal
+ */
+
+@Local
+public interface WFMaestraInterfaceLocal extends GenericInterface<WFMaestra, String> {}
diff --git a/FINANCIERONEW/src/financ/workflow/local/WFModuloFacadeInterfaceLocal.java b/FINANCIERONEW/src/financ/workflow/local/WFModuloFacadeInterfaceLocal.java
new file mode 100644
index 0000000..1d47d8f
--- /dev/null
+++ b/FINANCIERONEW/src/financ/workflow/local/WFModuloFacadeInterfaceLocal.java
@@ -0,0 +1,15 @@
+package financ.workflow.local;
+
+import javax.ejb.Local;
+
+/**
+ * WFModuloFacadeInterfaceLocal
+ * 
+ * @autor kdelacruz
+ * @since [Req.17-007] 06.03.2017 Implementación WorkFlow Legal
+ */
+
+@Local
+public interface WFModuloFacadeInterfaceLocal {
+
+}
diff --git a/FINANCIERONEW/src/financ/workflow/local/WFModuloInterfaceLocal.java b/FINANCIERONEW/src/financ/workflow/local/WFModuloInterfaceLocal.java
new file mode 100644
index 0000000..5037824
--- /dev/null
+++ b/FINANCIERONEW/src/financ/workflow/local/WFModuloInterfaceLocal.java
@@ -0,0 +1,18 @@
+package financ.workflow.local;
+
+import javax.ejb.Local;
+
+import pe.com.tfc.utils.GenericInterface;
+import financ.workflow.entity.WFModulo;
+
+/**
+ * WFModuloInterfaceLocal
+ * 
+ * @author kdelacruz
+ * @since [Req.17-007] 06.03.2017 Implementación WorkFlow Legal
+ */
+
+@Local
+public interface WFModuloInterfaceLocal extends GenericInterface<WFModulo, String> {
+
+}
diff --git a/FINANCIERONEW/src/financ/workflow/local/WFMovimientosFacadeInterfaceLocal.java b/FINANCIERONEW/src/financ/workflow/local/WFMovimientosFacadeInterfaceLocal.java
new file mode 100644
index 0000000..703a8f3
--- /dev/null
+++ b/FINANCIERONEW/src/financ/workflow/local/WFMovimientosFacadeInterfaceLocal.java
@@ -0,0 +1,44 @@
+package financ.workflow.local;
+
+import java.util.List;
+
+import javax.ejb.Local;
+
+import admin.contab.beans.BeanParametrosAuditoria;
+import financ.workflow.bean.BeanWFMovimientos;
+
+/**
+ * WFMovimientosFacadeInterfaceLocal
+ * 
+ * @autor kdelacruz
+ * @since [Req.17-007] 06.03.2017 Implementación WorkFlow Legal
+ */
+
+@Local
+public interface WFMovimientosFacadeInterfaceLocal {
+
+    /**
+     * @author kdelacruz
+     * @since [Req.S17-007] 21.03.2017
+     * @param idMaestra
+     * @param idEtapaFinal
+     * @param idEstadoFinal
+     * @param beanParametrosAuditoria
+     * @throws Exception
+     */
+    public void insertar(String idMaestra,
+                         String idEtapaFinal,
+                         String idEstadoFinal,
+                         BeanParametrosAuditoria beanParametrosAuditoria) throws Exception;
+
+    /**
+     * @author kdelacruz
+     * @since [Req.S17-007] 21.03.2017
+     * @param idWorkflow
+     * @param beanParametrosAuditoria
+     * @return
+     * @throws Exception
+     */
+    public List<BeanWFMovimientos> buscar(String idWorkflow, BeanParametrosAuditoria beanParametrosAuditoria) throws Exception;
+
+}
diff --git a/FINANCIERONEW/src/financ/workflow/local/WFMovimientosInterfaceLocal.java b/FINANCIERONEW/src/financ/workflow/local/WFMovimientosInterfaceLocal.java
new file mode 100644
index 0000000..8720f19
--- /dev/null
+++ b/FINANCIERONEW/src/financ/workflow/local/WFMovimientosInterfaceLocal.java
@@ -0,0 +1,18 @@
+package financ.workflow.local;
+
+import javax.ejb.Local;
+
+import pe.com.tfc.utils.GenericInterface;
+import financ.workflow.entity.WFMovimientos;
+
+/**
+ * WFMovimientosInterfaceLocal
+ * 
+ * @author kdelacruz
+ * @since [Req.17-007] 06.03.2017 Implementación WorkFlow Legal
+ */
+
+@Local
+public interface WFMovimientosInterfaceLocal extends GenericInterface<WFMovimientos, String> {
+
+}
diff --git a/FINANCIERONEW/src/financ/workflow/local/WFRutaFacadeInterfaceLocal.java b/FINANCIERONEW/src/financ/workflow/local/WFRutaFacadeInterfaceLocal.java
new file mode 100644
index 0000000..2da1503
--- /dev/null
+++ b/FINANCIERONEW/src/financ/workflow/local/WFRutaFacadeInterfaceLocal.java
@@ -0,0 +1,44 @@
+package financ.workflow.local;
+
+import javax.ejb.Local;
+
+import admin.contab.beans.BeanParametrosAuditoria;
+import financ.workflow.bean.BeanWFRuta;
+
+/**
+ * WFRutaWorkflowFacadeInterfaceLocal
+ * 
+ * @autor kdelacruz
+ * @since [Req.17-007] 06.03.2017 Implementación WorkFlow Legal
+ */
+
+@Local
+public interface WFRutaFacadeInterfaceLocal {
+
+    /**
+     * @author kdelacruz
+     * @since [Req.17-007] 20.03.2017
+     * @param idModulo
+     * @param numeroOperacion
+     * @param codigoTipoBien
+     * @param codigoPersona
+     * @param beanParametrosAuditoria
+     * @return
+     * @throws Exception
+     */
+    public String obtenerRuta(String idModulo,
+                              String numeroOperacion,
+                              String codigoTipoBien,
+                              String codigoPersona,
+                              BeanParametrosAuditoria beanParametrosAuditoria) throws Exception;
+
+    /**
+     * @author kdelacruz
+     * @since [Req.17-007] 20.03.2017
+     * @param idMaestra
+     * @param beanParametrosAuditoria
+     * @return BeanWFRuta
+     * @throws Exception
+     */
+    public BeanWFRuta obtenerPlaza(String idMaestra, BeanParametrosAuditoria beanParametrosAuditoria) throws Exception;
+}
diff --git a/FINANCIERONEW/src/financ/workflow/local/WFRutaInterfaceLocal.java b/FINANCIERONEW/src/financ/workflow/local/WFRutaInterfaceLocal.java
new file mode 100644
index 0000000..42ced92
--- /dev/null
+++ b/FINANCIERONEW/src/financ/workflow/local/WFRutaInterfaceLocal.java
@@ -0,0 +1,18 @@
+package financ.workflow.local;
+
+import javax.ejb.Local;
+
+import pe.com.tfc.utils.GenericInterface;
+import financ.workflow.entity.WFRuta;
+
+/**
+ * WFRutaWorkflowInterfaceLocal
+ * 
+ * @author kdelacruz
+ * @since [Req.17-007] 06.03.2017 Implementación WorkFlow Legal
+ */
+
+@Local
+public interface WFRutaInterfaceLocal extends GenericInterface<WFRuta, String> {
+
+}
diff --git a/FINANCIERONEW/src/financ/workflow/local/WFTipoDocumentoFacadeInterfaceLocal.java b/FINANCIERONEW/src/financ/workflow/local/WFTipoDocumentoFacadeInterfaceLocal.java
new file mode 100644
index 0000000..fac2ca5
--- /dev/null
+++ b/FINANCIERONEW/src/financ/workflow/local/WFTipoDocumentoFacadeInterfaceLocal.java
@@ -0,0 +1,45 @@
+package financ.workflow.local;
+
+import java.util.List;
+
+import javax.ejb.Local;
+
+import admin.contab.beans.BeanParametrosAuditoria;
+import financ.workflow.bean.BeanWFTipoDocumento;
+import financ.workflow.entity.WFTipoDocumento;
+
+/**
+ * WFTipoDocumentoFacadeInterfaceLocal
+ * 
+ * @autor kdelacruz
+ * @since [Req.17-007] 06.03.2017 Implementación WorkFlow Legal
+ */
+
+@Local
+public interface WFTipoDocumentoFacadeInterfaceLocal {
+
+    /**
+     * @author kdelacruz
+     * @since [Req.S17-007]
+     * @parma idMaestra
+     * @param keyTipoDocumento
+     * @param beanParametrosAuditoria
+     * @return List<BeanWFTipoDocumento>
+     * @throws Exception
+     */
+    public List<BeanWFTipoDocumento> obtenerPorKey(final String idMaestra,
+                                                   final String keyTipoDocumento,
+                                                   final BeanParametrosAuditoria beanParametrosAuditoria) throws Exception;
+
+    /**
+     * @author kdelacruz
+     * @since [Req.S17-007]
+     * @param wfTipoDocumento
+     * @return BeanWFTipoDocumento
+     */
+    public BeanWFTipoDocumento getBeanWFTipoDocumento(String idMaestra,
+                                                      String idEtapa,
+                                                      WFTipoDocumento wfTipoDocumento,
+                                                      BeanParametrosAuditoria beanParametrosAuditoria) throws Exception;
+
+}
diff --git a/FINANCIERONEW/src/financ/workflow/local/WFTipoDocumentoInterfaceLocal.java b/FINANCIERONEW/src/financ/workflow/local/WFTipoDocumentoInterfaceLocal.java
new file mode 100644
index 0000000..da23918
--- /dev/null
+++ b/FINANCIERONEW/src/financ/workflow/local/WFTipoDocumentoInterfaceLocal.java
@@ -0,0 +1,18 @@
+package financ.workflow.local;
+
+import javax.ejb.Local;
+
+import pe.com.tfc.utils.GenericInterface;
+import financ.workflow.entity.WFTipoDocumento;
+
+/**
+ * WFTipoDocumentoInterfaceLocal
+ * 
+ * @author kdelacruz
+ * @since [Req.17-007] 06.03.2017 Implementación WorkFlow Legal
+ */
+
+@Local
+public interface WFTipoDocumentoInterfaceLocal extends GenericInterface<WFTipoDocumento, String> {
+
+}
diff --git a/FINANCIERONEW/src/financ/workflow/session/WFDetalleComentarioSession.java b/FINANCIERONEW/src/financ/workflow/session/WFDetalleComentarioSession.java
new file mode 100644
index 0000000..c12a452
--- /dev/null
+++ b/FINANCIERONEW/src/financ/workflow/session/WFDetalleComentarioSession.java
@@ -0,0 +1,23 @@
+package financ.workflow.session;
+
+import javax.ejb.Stateless;
+
+import pe.com.tfc.utils.AbstractSession;
+import financ.workflow.entity.WFDetalleComentario;
+import financ.workflow.local.WFDetalleComentarioInterfaceLocal;
+
+/**
+ * WFDetalleComentarioSession
+ * 
+ * @autor kdelacruz
+ * @since [Req.17-007] 14.03.2017 Implementación WorkFlow Legal
+ */
+
+@Stateless
+public class WFDetalleComentarioSession extends AbstractSession<WFDetalleComentario, String> implements WFDetalleComentarioInterfaceLocal {
+
+    private WFDetalleComentarioSession() {
+        super(WFDetalleComentario.class);
+    }
+
+}
diff --git a/FINANCIERONEW/src/financ/workflow/session/WFDetalleMailPorRutaSession.java b/FINANCIERONEW/src/financ/workflow/session/WFDetalleMailPorRutaSession.java
new file mode 100644
index 0000000..11e6de6
--- /dev/null
+++ b/FINANCIERONEW/src/financ/workflow/session/WFDetalleMailPorRutaSession.java
@@ -0,0 +1,23 @@
+package financ.workflow.session;
+
+import javax.ejb.Stateless;
+
+import pe.com.tfc.utils.AbstractSession;
+import financ.workflow.entity.WFDetalleMailPorRuta;
+import financ.workflow.local.WFDetalleMailPorRutaInterfaceLocal;
+
+/**
+ * WFDetalleMailPorRutaSession
+ * 
+ * @autor kdelacruz
+ * @since [S17-007] 22.03.2017 Implementación WorkFlow Legal
+ */
+
+@Stateless
+public class WFDetalleMailPorRutaSession extends AbstractSession<WFDetalleMailPorRuta, String> implements WFDetalleMailPorRutaInterfaceLocal {
+
+    private WFDetalleMailPorRutaSession() {
+        super(WFDetalleMailPorRuta.class);
+    }
+
+}
diff --git a/FINANCIERONEW/src/financ/workflow/session/WFDocumentoPorEtapaSession.java b/FINANCIERONEW/src/financ/workflow/session/WFDocumentoPorEtapaSession.java
new file mode 100644
index 0000000..22c9784
--- /dev/null
+++ b/FINANCIERONEW/src/financ/workflow/session/WFDocumentoPorEtapaSession.java
@@ -0,0 +1,23 @@
+package financ.workflow.session;
+
+import javax.ejb.Stateless;
+
+import pe.com.tfc.utils.AbstractSession;
+import financ.workflow.entity.WFDocumentoPorEtapa;
+import financ.workflow.local.WFDocumentoPorEtapaInterfaceLocal;
+
+/**
+ * WFDocumentoPorEtapaSession
+ * 
+ * @autor kdelacruz
+ * @since [Req.17-007] 06.03.2017 Implementación WorkFlow Legal
+ */
+
+@Stateless
+public class WFDocumentoPorEtapaSession extends AbstractSession<WFDocumentoPorEtapa, String> implements WFDocumentoPorEtapaInterfaceLocal {
+
+    private WFDocumentoPorEtapaSession() {
+        super(WFDocumentoPorEtapa.class);
+    }
+
+}
diff --git a/FINANCIERONEW/src/financ/workflow/session/WFDocumentosSession.java b/FINANCIERONEW/src/financ/workflow/session/WFDocumentosSession.java
new file mode 100644
index 0000000..5b5b354
--- /dev/null
+++ b/FINANCIERONEW/src/financ/workflow/session/WFDocumentosSession.java
@@ -0,0 +1,23 @@
+package financ.workflow.session;
+
+import javax.ejb.Stateless;
+
+import pe.com.tfc.utils.AbstractSession;
+import financ.workflow.entity.WFDocumentos;
+import financ.workflow.local.WFDocumentosInterfaceLocal;
+
+/**
+ * WFDocumentosSession
+ * 
+ * @autor kdelacruz
+ * @since [Req.17-007] 06.03.2017 Implementación WorkFlow Legal
+ */
+
+@Stateless
+public class WFDocumentosSession extends AbstractSession<WFDocumentos, String> implements WFDocumentosInterfaceLocal {
+
+    private WFDocumentosSession() {
+        super(WFDocumentos.class);
+    }
+
+}
diff --git a/FINANCIERONEW/src/financ/workflow/session/WFEstadoWorkflowSession.java b/FINANCIERONEW/src/financ/workflow/session/WFEstadoWorkflowSession.java
new file mode 100644
index 0000000..f90daaf
--- /dev/null
+++ b/FINANCIERONEW/src/financ/workflow/session/WFEstadoWorkflowSession.java
@@ -0,0 +1,23 @@
+package financ.workflow.session;
+
+import javax.ejb.Stateless;
+
+import pe.com.tfc.utils.AbstractSession;
+import financ.workflow.entity.WFEstado;
+import financ.workflow.local.WFEstadoInterfaceLocal;
+
+/**
+ * WFEstadoWorkflowSession
+ * 
+ * @autor kdelacruz
+ * @since [Req.17-007] 06.03.2017 Implementación WorkFlow Legal
+ */
+
+@Stateless
+public class WFEstadoWorkflowSession extends AbstractSession<WFEstado, String> implements WFEstadoInterfaceLocal {
+
+    private WFEstadoWorkflowSession() {
+        super(WFEstado.class);
+    }
+
+}
diff --git a/FINANCIERONEW/src/financ/workflow/session/WFEtapaWorkflowSession.java b/FINANCIERONEW/src/financ/workflow/session/WFEtapaWorkflowSession.java
new file mode 100644
index 0000000..6380a47
--- /dev/null
+++ b/FINANCIERONEW/src/financ/workflow/session/WFEtapaWorkflowSession.java
@@ -0,0 +1,23 @@
+package financ.workflow.session;
+
+import javax.ejb.Stateless;
+
+import pe.com.tfc.utils.AbstractSession;
+import financ.workflow.entity.WFEtapa;
+import financ.workflow.local.WFEtapaInterfaceLocal;
+
+/**
+ * WFEtapaWorkflowSession
+ * 
+ * @autor kdelacruz
+ * @since [Req.17-007] 06.03.2017 Implementación WorkFlow Legal
+ */
+
+@Stateless
+public class WFEtapaWorkflowSession extends AbstractSession<WFEtapa, String> implements WFEtapaInterfaceLocal {
+
+    private WFEtapaWorkflowSession() {
+        super(WFEtapa.class);
+    }
+
+}
diff --git a/FINANCIERONEW/src/financ/workflow/session/WFEtapasPorRolSession.java b/FINANCIERONEW/src/financ/workflow/session/WFEtapasPorRolSession.java
new file mode 100644
index 0000000..6bbd7fa
--- /dev/null
+++ b/FINANCIERONEW/src/financ/workflow/session/WFEtapasPorRolSession.java
@@ -0,0 +1,23 @@
+package financ.workflow.session;
+
+import javax.ejb.Stateless;
+
+import pe.com.tfc.utils.AbstractSession;
+import financ.workflow.entity.WFEtapasPorRol;
+import financ.workflow.local.WFEtapasPorRolInterfaceLocal;
+
+/**
+ * WFEtapasPorRolSession
+ * 
+ * @autor kdelacruz
+ * @since [Req.17-007] 16.03.2017 Implementación WorkFlow Legal
+ */
+
+@Stateless
+public class WFEtapasPorRolSession extends AbstractSession<WFEtapasPorRol, String> implements WFEtapasPorRolInterfaceLocal {
+
+    private WFEtapasPorRolSession() {
+        super(WFEtapasPorRol.class);
+    }
+
+}
diff --git a/FINANCIERONEW/src/financ/workflow/session/WFEventoPorEtapaSession.java b/FINANCIERONEW/src/financ/workflow/session/WFEventoPorEtapaSession.java
new file mode 100644
index 0000000..854e5a4
--- /dev/null
+++ b/FINANCIERONEW/src/financ/workflow/session/WFEventoPorEtapaSession.java
@@ -0,0 +1,23 @@
+package financ.workflow.session;
+
+import javax.ejb.Stateless;
+
+import pe.com.tfc.utils.AbstractSession;
+import financ.workflow.entity.WFEventoPorEtapa;
+import financ.workflow.local.WFEventoPorEtapaInterfaceLocal;
+
+/**
+ * WFEventoPorEtapaSession
+ * 
+ * @autor kdelacruz
+ * @since [Req.17-007] 06.03.2017 Implementación WorkFlow Legal
+ */
+
+@Stateless
+public class WFEventoPorEtapaSession extends AbstractSession<WFEventoPorEtapa, String> implements WFEventoPorEtapaInterfaceLocal {
+
+    private WFEventoPorEtapaSession() {
+        super(WFEventoPorEtapa.class);
+    }
+
+}
diff --git a/FINANCIERONEW/src/financ/workflow/session/WFEventoWorkflowSession.java b/FINANCIERONEW/src/financ/workflow/session/WFEventoWorkflowSession.java
new file mode 100644
index 0000000..88b8646
--- /dev/null
+++ b/FINANCIERONEW/src/financ/workflow/session/WFEventoWorkflowSession.java
@@ -0,0 +1,23 @@
+package financ.workflow.session;
+
+import javax.ejb.Stateless;
+
+import pe.com.tfc.utils.AbstractSession;
+import financ.workflow.entity.WFEvento;
+import financ.workflow.local.WFEventoInterfaceLocal;
+
+/**
+ * WFEventoWorkflowSession
+ * 
+ * @autor kdelacruz
+ * @since [Req.17-007] 06.03.2017 Implementación WorkFlow Legal
+ */
+
+@Stateless
+public class WFEventoWorkflowSession extends AbstractSession<WFEvento, String> implements WFEventoInterfaceLocal {
+
+    private WFEventoWorkflowSession() {
+        super(WFEvento.class);
+    }
+
+}
diff --git a/FINANCIERONEW/src/financ/workflow/session/WFFlujoPorRutaSession.java b/FINANCIERONEW/src/financ/workflow/session/WFFlujoPorRutaSession.java
new file mode 100644
index 0000000..de8e2f7
--- /dev/null
+++ b/FINANCIERONEW/src/financ/workflow/session/WFFlujoPorRutaSession.java
@@ -0,0 +1,23 @@
+package financ.workflow.session;
+
+import javax.ejb.Stateless;
+
+import pe.com.tfc.utils.AbstractSession;
+import financ.workflow.entity.WFFlujoPorRuta;
+import financ.workflow.local.WFFlujoPorRutaInterfaceLocal;
+
+/**
+ * WFFlujoPorRutaSession
+ * 
+ * @autor kdelacruz
+ * @since [Req.17-007] 06.03.2017 Implementación WorkFlow Legal
+ */
+
+@Stateless
+public class WFFlujoPorRutaSession extends AbstractSession<WFFlujoPorRuta, String> implements WFFlujoPorRutaInterfaceLocal {
+
+    private WFFlujoPorRutaSession() {
+        super(WFFlujoPorRuta.class);
+    }
+
+}
diff --git a/FINANCIERONEW/src/financ/workflow/session/WFLegalSession.java b/FINANCIERONEW/src/financ/workflow/session/WFLegalSession.java
new file mode 100644
index 0000000..ddef9b7
--- /dev/null
+++ b/FINANCIERONEW/src/financ/workflow/session/WFLegalSession.java
@@ -0,0 +1,23 @@
+package financ.workflow.session;
+
+import javax.ejb.Stateless;
+
+import pe.com.tfc.utils.AbstractSession;
+import financ.workflow.entity.WFLegal;
+import financ.workflow.local.WFLegalInterfaceLocal;
+
+/**
+ * WFLegalSession
+ * 
+ * @autor kdelacruz
+ * @since [Req.17-007] 06.03.2017 Implementación WorkFlow Legal
+ */
+
+@Stateless
+public class WFLegalSession extends AbstractSession<WFLegal, String> implements WFLegalInterfaceLocal {
+
+    private WFLegalSession() {
+        super(WFLegal.class);
+    }
+
+}
diff --git a/FINANCIERONEW/src/financ/workflow/session/WFMaestraSession.java b/FINANCIERONEW/src/financ/workflow/session/WFMaestraSession.java
new file mode 100644
index 0000000..d9455e1
--- /dev/null
+++ b/FINANCIERONEW/src/financ/workflow/session/WFMaestraSession.java
@@ -0,0 +1,23 @@
+package financ.workflow.session;
+
+import javax.ejb.Stateless;
+
+import pe.com.tfc.utils.AbstractSession;
+import financ.workflow.entity.WFMaestra;
+import financ.workflow.local.WFMaestraInterfaceLocal;
+
+/**
+ * WFMaestroWorkflowSession
+ * 
+ * @autor kdelacruz
+ * @since [Req.17-007] 06.03.2017 Implementación WorkFlow Legal
+ */
+
+@Stateless
+public class WFMaestraSession extends AbstractSession<WFMaestra, String> implements WFMaestraInterfaceLocal {
+
+    private WFMaestraSession() {
+        super(WFMaestra.class);
+    }
+
+}
diff --git a/FINANCIERONEW/src/financ/workflow/session/WFModuloSession.java b/FINANCIERONEW/src/financ/workflow/session/WFModuloSession.java
new file mode 100644
index 0000000..b7134af
--- /dev/null
+++ b/FINANCIERONEW/src/financ/workflow/session/WFModuloSession.java
@@ -0,0 +1,23 @@
+package financ.workflow.session;
+
+import javax.ejb.Stateless;
+
+import pe.com.tfc.utils.AbstractSession;
+import financ.workflow.entity.WFModulo;
+import financ.workflow.local.WFModuloInterfaceLocal;
+
+/**
+ * WFModuloSession
+ * 
+ * @autor kdelacruz
+ * @since [Req.17-007] 06.03.2017 Implementación WorkFlow Legal
+ */
+
+@Stateless
+public class WFModuloSession extends AbstractSession<WFModulo, String> implements WFModuloInterfaceLocal {
+
+    private WFModuloSession() {
+        super(WFModulo.class);
+    }
+
+}
diff --git a/FINANCIERONEW/src/financ/workflow/session/WFMovimientosSession.java b/FINANCIERONEW/src/financ/workflow/session/WFMovimientosSession.java
new file mode 100644
index 0000000..1112389
--- /dev/null
+++ b/FINANCIERONEW/src/financ/workflow/session/WFMovimientosSession.java
@@ -0,0 +1,23 @@
+package financ.workflow.session;
+
+import javax.ejb.Stateless;
+
+import pe.com.tfc.utils.AbstractSession;
+import financ.workflow.entity.WFMovimientos;
+import financ.workflow.local.WFMovimientosInterfaceLocal;
+
+/**
+ * WFMovimientosSession
+ * 
+ * @autor kdelacruz
+ * @since [Req.17-007] 06.03.2017 Implementación WorkFlow Legal
+ */
+
+@Stateless
+public class WFMovimientosSession extends AbstractSession<WFMovimientos, String> implements WFMovimientosInterfaceLocal {
+
+    private WFMovimientosSession() {
+        super(WFMovimientos.class);
+    }
+
+}
diff --git a/FINANCIERONEW/src/financ/workflow/session/WFRutaSession.java b/FINANCIERONEW/src/financ/workflow/session/WFRutaSession.java
new file mode 100644
index 0000000..b4e1074
--- /dev/null
+++ b/FINANCIERONEW/src/financ/workflow/session/WFRutaSession.java
@@ -0,0 +1,23 @@
+package financ.workflow.session;
+
+import javax.ejb.Stateless;
+
+import pe.com.tfc.utils.AbstractSession;
+import financ.workflow.entity.WFRuta;
+import financ.workflow.local.WFRutaInterfaceLocal;
+
+/**
+ * WFRutaWorkflowSession
+ * 
+ * @autor kdelacruz
+ * @since [Req.17-007] 06.03.2017 Implementación WorkFlow Legal
+ */
+
+@Stateless
+public class WFRutaSession extends AbstractSession<WFRuta, String> implements WFRutaInterfaceLocal {
+
+    private WFRutaSession() {
+        super(WFRuta.class);
+    }
+
+}
diff --git a/FINANCIERONEW/src/financ/workflow/session/WFTipoDocumentoSession.java b/FINANCIERONEW/src/financ/workflow/session/WFTipoDocumentoSession.java
new file mode 100644
index 0000000..ec9405c
--- /dev/null
+++ b/FINANCIERONEW/src/financ/workflow/session/WFTipoDocumentoSession.java
@@ -0,0 +1,23 @@
+package financ.workflow.session;
+
+import javax.ejb.Stateless;
+
+import pe.com.tfc.utils.AbstractSession;
+import financ.workflow.entity.WFTipoDocumento;
+import financ.workflow.local.WFTipoDocumentoInterfaceLocal;
+
+/**
+ * WFTipoDocumentoSession
+ * 
+ * @autor kdelacruz
+ * @since [Req.17-007] 06.03.2017 Implementación WorkFlow Legal
+ */
+
+@Stateless
+public class WFTipoDocumentoSession extends AbstractSession<WFTipoDocumento, String> implements WFTipoDocumentoInterfaceLocal {
+
+    private WFTipoDocumentoSession() {
+        super(WFTipoDocumento.class);
+    }
+
+}
