diff --git a/ADMINISTRATIVONEW/.classpath b/ADMINISTRATIVONEW/.classpath
index 99b1ea4..522484f 100644
--- a/ADMINISTRATIVONEW/.classpath
+++ b/ADMINISTRATIVONEW/.classpath
@@ -1,17 +1,27 @@
-<?xml version="1.0" encoding="UTF-8"?>
-<classpath>
-	<classpathentry kind="src" path="src"/>
-	<classpathentry exported="true" kind="con" path="org.eclipse.jdt.launching.JRE_CONTAINER"/>
-	<classpathentry exported="true" kind="con" path="melibrary.com.genuitec.eclipse.j2eedt.core.MYECLIPSE_JAVAEE_5_CONTAINER"/>
-	<classpathentry exported="true" kind="con" path="melibrary.com.genuitec.eclipse.hibernate.MYECLIPSE_HIBERNATE_TOOLS"/>
-	<classpathentry exported="true" kind="con" path="melibrary.com.genuitec.eclipse.hibernate.MYECLIPSE_HIBERNATE3_2_CORE"/>
-	<classpathentry exported="true" kind="con" path="melibrary.com.genuitec.eclipse.hibernate.MYECLIPSE_HIBERNATE3_2_EXTRAS"/>
-	<classpathentry exported="true" kind="con" path="melibrary.com.genuitec.eclipse.hibernate.MYECLIPSE_HIBERNATE3_2_EM"/>
-	<classpathentry kind="con" path="melibrary.com.genuitec.eclipse.ws.xfire.MYECLIPSE_XFIRE_CORE"/>
-	<classpathentry kind="con" path="melibrary.com.genuitec.eclipse.ws.xfire.MYECLIPSE_XFIRE_JAXB2"/>
-	<classpathentry kind="con" path="melibrary.com.genuitec.eclipse.ws.xfire.MYECLIPSE_XFIRE_HTTP_CLIENT"/>
-	<classpathentry kind="lib" path="/DELFINWEBNEW/WebRoot/WEB-INF/lib/poi-3.0.1-FINAL-20070705.jar"/>
-	<classpathentry kind="lib" path="/DELFINWEBNEW/WebRoot/PROCESOS/applet/jsch-0.1.44.jar"/>
-	<classpathentry kind="lib" path="/DELFINWEBNEW/WebRoot/PROCESOS/applet/descargaSFTP-1.2.jar"/>
-	<classpathentry kind="output" path="classes"/>
-</classpath>
+<?xml version="1.0" encoding="UTF-8"?>
+<classpath>
+	<classpathentry kind="src" path="src"/>
+	<classpathentry exported="true" kind="con" path="melibrary.com.genuitec.eclipse.j2eedt.core.MYECLIPSE_JAVAEE_5_CONTAINER"/>
+	<classpathentry exported="true" kind="con" path="melibrary.com.genuitec.eclipse.hibernate.MYECLIPSE_HIBERNATE_TOOLS"/>
+	<classpathentry exported="true" kind="con" path="melibrary.com.genuitec.eclipse.hibernate.MYECLIPSE_HIBERNATE3_2_CORE"/>
+	<classpathentry exported="true" kind="con" path="melibrary.com.genuitec.eclipse.hibernate.MYECLIPSE_HIBERNATE3_2_EXTRAS"/>
+	<classpathentry exported="true" kind="con" path="melibrary.com.genuitec.eclipse.hibernate.MYECLIPSE_HIBERNATE3_2_EM"/>
+	<classpathentry kind="con" path="melibrary.com.genuitec.eclipse.ws.xfire.MYECLIPSE_XFIRE_CORE"/>
+	<classpathentry kind="con" path="melibrary.com.genuitec.eclipse.ws.xfire.MYECLIPSE_XFIRE_JAXB2"/>
+	<classpathentry kind="con" path="melibrary.com.genuitec.eclipse.ws.xfire.MYECLIPSE_XFIRE_HTTP_CLIENT"/>
+	<classpathentry kind="lib" path="/DELFINWEBNEW/WebRoot/WEB-INF/lib/poi-3.0.1-FINAL-20070705.jar"/>
+	<classpathentry kind="lib" path="/DELFINWEBNEW/WebRoot/PROCESOS/applet/jsch-0.1.44.jar"/>
+	<classpathentry kind="lib" path="/DELFINWEBNEW/WebRoot/PROCESOS/applet/descargaSFTP-1.2.jar"/>
+	<classpathentry kind="con" path="org.eclipse.jdt.launching.JRE_CONTAINER/org.eclipse.jdt.internal.debug.ui.launcher.StandardVMType/jdk1.6.0_07">
+		<attributes>
+			<attribute name="owner.project.facets" value="java"/>
+		</attributes>
+	</classpathentry>
+	<classpathentry kind="con" path="org.eclipse.jst.server.core.container/org.jboss.ide.eclipse.as.core.server.runtime.runtimeTarget/JBoss 4.2 Runtime">
+		<attributes>
+			<attribute name="owner.project.facets" value="jst.ejb"/>
+		</attributes>
+	</classpathentry>
+	<classpathentry kind="con" path="org.eclipse.jst.j2ee.internal.module.container"/>
+	<classpathentry kind="output" path="classes"/>
+</classpath>
diff --git a/ADMINISTRATIVONEW/.project b/ADMINISTRATIVONEW/.project
index ea19403..a4e3889 100644
--- a/ADMINISTRATIVONEW/.project
+++ b/ADMINISTRATIVONEW/.project
@@ -1,40 +1,48 @@
-<?xml version="1.0" encoding="UTF-8"?>
-<projectDescription>
-	<name>ADMINISTRATIVONEW</name>
-	<comment></comment>
-	<projects>
-	</projects>
-	<buildSpec>
-		<buildCommand>
-			<name>org.eclipse.jdt.core.javabuilder</name>
-			<arguments>
-			</arguments>
-		</buildCommand>
-		<buildCommand>
-			<name>com.genuitec.eclipse.j2eedt.core.DeploymentDescriptorValidator</name>
-			<arguments>
-			</arguments>
-		</buildCommand>
-		<buildCommand>
-			<name>org.eclipse.dali.core.persistenceBuilder</name>
-			<arguments>
-			</arguments>
-		</buildCommand>
-		<buildCommand>
-			<name>org.eclipse.wst.validation.validationbuilder</name>
-			<arguments>
-			</arguments>
-		</buildCommand>
-		<buildCommand>
-			<name>com.genuitec.eclipse.ast.deploy.core.DeploymentBuilder</name>
-			<arguments>
-			</arguments>
-		</buildCommand>
-	</buildSpec>
-	<natures>
-		<nature>com.genuitec.eclipse.ast.deploy.core.deploymentnature</nature>
-		<nature>com.genuitec.eclipse.j2eedt.core.ejbnature</nature>
-		<nature>org.eclipse.dali.core.persistenceNature</nature>
-		<nature>org.eclipse.jdt.core.javanature</nature>
-	</natures>
-</projectDescription>
+<?xml version="1.0" encoding="UTF-8"?>
+<projectDescription>
+	<name>ADMINISTRATIVONEW</name>
+	<comment></comment>
+	<projects>
+	</projects>
+	<buildSpec>
+		<buildCommand>
+			<name>org.eclipse.wst.common.project.facet.core.builder</name>
+			<arguments>
+			</arguments>
+		</buildCommand>
+		<buildCommand>
+			<name>org.eclipse.jdt.core.javabuilder</name>
+			<arguments>
+			</arguments>
+		</buildCommand>
+		<buildCommand>
+			<name>com.genuitec.eclipse.j2eedt.core.DeploymentDescriptorValidator</name>
+			<arguments>
+			</arguments>
+		</buildCommand>
+		<buildCommand>
+			<name>org.eclipse.dali.core.persistenceBuilder</name>
+			<arguments>
+			</arguments>
+		</buildCommand>
+		<buildCommand>
+			<name>org.eclipse.wst.validation.validationbuilder</name>
+			<arguments>
+			</arguments>
+		</buildCommand>
+		<buildCommand>
+			<name>com.genuitec.eclipse.ast.deploy.core.DeploymentBuilder</name>
+			<arguments>
+			</arguments>
+		</buildCommand>
+	</buildSpec>
+	<natures>
+		<nature>org.eclipse.jem.workbench.JavaEMFNature</nature>
+		<nature>org.eclipse.wst.common.modulecore.ModuleCoreNature</nature>
+		<nature>com.genuitec.eclipse.ast.deploy.core.deploymentnature</nature>
+		<nature>com.genuitec.eclipse.j2eedt.core.ejbnature</nature>
+		<nature>org.eclipse.dali.core.persistenceNature</nature>
+		<nature>org.eclipse.jdt.core.javanature</nature>
+		<nature>org.eclipse.wst.common.project.facet.core.nature</nature>
+	</natures>
+</projectDescription>
diff --git a/ADMINISTRATIVONEW/src/admin/contab/facade/CBUsuarioFacade.java b/ADMINISTRATIVONEW/src/admin/contab/facade/CBUsuarioFacade.java
index fbae829..f8ce8bd 100644
--- a/ADMINISTRATIVONEW/src/admin/contab/facade/CBUsuarioFacade.java
+++ b/ADMINISTRATIVONEW/src/admin/contab/facade/CBUsuarioFacade.java
@@ -2351,5 +2351,27 @@
         }
     }
     // Fin [CC16-034] DLAZO 22.07.2016
+    
+    // Inicio [Req.S17-022] kdelacruz 06.04.2017
+    public List<CBUsuario> lstUsuariosfindByCodigoAgenciaCodigoEmpresaEstadoRegistro(String codigoAgencia, String codigoUsuario, String codigoEmpresa) throws Exception {
+        List<CBUsuario> lObtenerDatos = new ArrayList<CBUsuario>();
+        
+        try {
+            lObtenerDatos = cbUsuarioInterfaceLocal.lstUsuariosfindByCodigoAgenciaCodigoEmpresaEstadoRegistro(codigoEmpresa, codigoAgencia, codigoUsuario);
+        } catch (Exception e) {
+            throw e;
+        }
+        
+        return lObtenerDatos;
+    }
+
+    public int countFindByCodigoAgenciaCodigoEmpresaEstadoRegistro(String codigoAgencia,
+                                                                   String codigoUsuario,
+                                                                   String codigoEmpresa) throws Exception {
+        return cbUsuarioInterfaceLocal.lstUsuariosfindByCodigoAgenciaCodigoEmpresaEstadoRegistro(codigoEmpresa,
+                                                                                                 codigoAgencia,
+                                                                                                 codigoUsuario).size();
+    }
+    //Fin [Req.S17-022]
 }
 
diff --git a/ADMINISTRATIVONEW/src/admin/contab/local/CBAgenciaInterfaceLocal.java b/ADMINISTRATIVONEW/src/admin/contab/local/CBAgenciaInterfaceLocal.java
index 4077145..087433d 100644
--- a/ADMINISTRATIVONEW/src/admin/contab/local/CBAgenciaInterfaceLocal.java
+++ b/ADMINISTRATIVONEW/src/admin/contab/local/CBAgenciaInterfaceLocal.java
@@ -107,4 +107,7 @@
 	public String findByCodigoAgenciaDescripcionAgencia(String codigoAgencia);
 	
 	public List<CBAgencia> findAll();
+
+    // [Req.17-022] esalazar 06.04.2017
+    List<CBAgencia> findByGerenteAgencia(String codigoUsuario);
 }
\ No newline at end of file
diff --git a/ADMINISTRATIVONEW/src/admin/contab/local/CBRegionesAgenciaInterfaceLocal.java b/ADMINISTRATIVONEW/src/admin/contab/local/CBRegionesAgenciaInterfaceLocal.java
index 3b21cb9..e969741 100644
--- a/ADMINISTRATIVONEW/src/admin/contab/local/CBRegionesAgenciaInterfaceLocal.java
+++ b/ADMINISTRATIVONEW/src/admin/contab/local/CBRegionesAgenciaInterfaceLocal.java
@@ -43,4 +43,7 @@
 	public String findAbreviByAgencia(String codigoAgencia);
 	
 	public List<CBRegionesAgencia> findAll();
+
+    // [Req.17-022] esalazar 06.04.2017
+    List<CBRegionesAgencia> findByGerenteZonal(String codigoUsuario);
 }
\ No newline at end of file
diff --git a/ADMINISTRATIVONEW/src/admin/contab/local/CBUsuarioFacadeLocal.java b/ADMINISTRATIVONEW/src/admin/contab/local/CBUsuarioFacadeLocal.java
index 5c6f17c..aae1d7a 100644
--- a/ADMINISTRATIVONEW/src/admin/contab/local/CBUsuarioFacadeLocal.java
+++ b/ADMINISTRATIVONEW/src/admin/contab/local/CBUsuarioFacadeLocal.java
@@ -229,4 +229,28 @@
      * @throws Exception
      */
     public Map<String, String> actualizarEstadoUsuarioBantiq(String codigoUsuario, String estadoUsuarioBantiq) throws Exception;
+    
+    /**
+     * @author kdelacruz
+     * @since [Req.S17-022] 06.04.2017
+     * @param codigoAgencia
+     * @param codigoUsuario
+     * @param estadoRegistro
+     * @param codigoEmpresa
+     * @return List<CBUsuario>
+     * @throws Exception
+     */
+    public List<CBUsuario> lstUsuariosfindByCodigoAgenciaCodigoEmpresaEstadoRegistro(String codigoAgencia, String codigoUsuario, String codigoEmpresa) throws Exception;
+    
+    /**
+     * @author kdelacruz
+     * @since [Req.S17-022] 06.04.2017
+     * @param codigoAgencia
+     * @param codigoUsuario
+     * @param estadoRegistro
+     * @param codigoEmpresa
+     * @return
+     * @throws Exception
+     */
+    public int countFindByCodigoAgenciaCodigoEmpresaEstadoRegistro(String codigoAgencia, String codigoUsuario, String codigoEmpresa) throws Exception;
 }
diff --git a/ADMINISTRATIVONEW/src/admin/contab/local/CBUsuarioInterfaceLocal.java b/ADMINISTRATIVONEW/src/admin/contab/local/CBUsuarioInterfaceLocal.java
index 969b714..8e35386 100644
--- a/ADMINISTRATIVONEW/src/admin/contab/local/CBUsuarioInterfaceLocal.java
+++ b/ADMINISTRATIVONEW/src/admin/contab/local/CBUsuarioInterfaceLocal.java
@@ -172,4 +172,14 @@
 	 */
 	public Integer countEmpresaNombreUsuario(String strCodEmp,
 			String strValor);
+	
+	/**
+	 * @author kdelacruz
+	 * @since [Req.S17-022] 06.04.2017
+	 * @param codigoEmpresa
+	 * @param codigoAgencia
+	 * @param codigoUsuario
+	 * @return
+	 */
+	public List<CBUsuario> lstUsuariosfindByCodigoAgenciaCodigoEmpresaEstadoRegistro(String codigoEmpresa,String codigoAgencia, String codigoUsuario);
 }
\ No newline at end of file
diff --git a/ADMINISTRATIVONEW/src/admin/contab/session/CBAgenciaSession.java b/ADMINISTRATIVONEW/src/admin/contab/session/CBAgenciaSession.java
index fd548c5..3f4f33f 100644
--- a/ADMINISTRATIVONEW/src/admin/contab/session/CBAgenciaSession.java
+++ b/ADMINISTRATIVONEW/src/admin/contab/session/CBAgenciaSession.java
@@ -12,7 +12,7 @@
 import javax.ejb.Stateless;
 import javax.persistence.EntityManager;
 import javax.persistence.PersistenceContext;
-
+import javax.persistence.Query;
 /**
  * Facade for entity CBAgencia.
  * 
@@ -551,5 +551,18 @@
 		return valor;
 	}
 
-	
+    // Inicio [Req.17-022] esalazar 06.04.2017
+    public List<CBAgencia> findByGerenteAgencia(String codigoUsuario) {
+        Query query;
+        try {
+            query = entityManager.createQuery("SELECT model FROM CBAgencia model WHERE model.cbUsuario.codigoUsuario = :codigoUsuario AND model.estadoRegistro = :estadoRegistro");
+            query.setParameter("codigoUsuario", codigoUsuario);
+            query.setParameter("estadoRegistro", Constante.ESTADO_REGISTRO_VIGENTE);
+            return query.getResultList();
+        } catch (RuntimeException e) {
+            throw e;
+        }
+    }
+    // Fin [Req.17-022]
+
 }
diff --git a/ADMINISTRATIVONEW/src/admin/contab/session/CBRegionesAgenciaSession.java b/ADMINISTRATIVONEW/src/admin/contab/session/CBRegionesAgenciaSession.java
index 9708138..115bf71 100644
--- a/ADMINISTRATIVONEW/src/admin/contab/session/CBRegionesAgenciaSession.java
+++ b/ADMINISTRATIVONEW/src/admin/contab/session/CBRegionesAgenciaSession.java
@@ -4,13 +4,13 @@
 import admin.contab.entity.CBRegionesAgencia;
 import admin.contab.local.CBRegionesAgenciaInterfaceLocal;
 import admin.contab.remote.CBRegionesAgenciaInterfaceRemote;
+import admin.util.Constante;
 
 import java.util.*;
-import java.util.logging.Level;
 import javax.ejb.Stateless;
 import javax.persistence.EntityManager;
 import javax.persistence.PersistenceContext;
-
+import javax.persistence.Query;
 /**
  * Facade for entity CBRegionesAgencia.
  * 
@@ -163,5 +163,19 @@
 			throw re;
 		}
 	}
+
+    // Inicio [Req.17-022] esalazar 06.04.2017
+    public List<CBRegionesAgencia> findByGerenteZonal(String codigoUsuario) {
+        Query query;
+        try {
+            query = entityManager.createQuery("SELECT model FROM CBRegionesAgencia model WHERE model.cbUsuario.codigoUsuario = :codigoUsuario AND model.estadoRegistro = :estadoRegistro");
+            query.setParameter("codigoUsuario", codigoUsuario);
+            query.setParameter("estadoRegistro", Constante.ESTADO_REGISTRO_VIGENTE);
+            return query.getResultList();
+        } catch (RuntimeException e) {
+            throw e;
+        }
+    }
+    // Fin [Req.17-022]
 }
 
diff --git a/ADMINISTRATIVONEW/src/admin/contab/session/CBUsuarioSession.java b/ADMINISTRATIVONEW/src/admin/contab/session/CBUsuarioSession.java
index 733c7ca..a57061d 100644
--- a/ADMINISTRATIVONEW/src/admin/contab/session/CBUsuarioSession.java
+++ b/ADMINISTRATIVONEW/src/admin/contab/session/CBUsuarioSession.java
@@ -1372,4 +1372,30 @@
 		}
 		return lnResult;
 	}
+	
+	//Inicio [Req.S17-022] kdelacruz 06.04.2017
+	public List<CBUsuario> lstUsuariosfindByCodigoAgenciaCodigoEmpresaEstadoRegistro(String codigoEmpresa,String codigoAgencia, String codigoUsuario) {
+        List<CBUsuario> lstCBUsuario=new ArrayList<CBUsuario>(0);
+        try {
+            String strQuery =   " select u.* " +
+                                " from   CBTUSUA u," +
+                                "       CBTAGUS a," +
+                                "       CBTAGEN g " +
+                                " where  a.c_codemp=g.c_codemp" +
+                                "       and g.C_CODAGE=a.C_CODAGE" +
+                                "       and u.C_CODUSU=a.C_CODUSU" +
+                                "       and a.C_ESTREG='S' " +
+                                "       and a.c_codemp='"+codigoEmpresa+"'"+
+                                "       and a.c_codage='"+codigoAgencia+"'"+
+                                "       and u.c_estreg <> 'N' " +
+                                "       and u.C_CODUSU like '%" + codigoUsuario + "%' " + 
+                                " ORDER BY u.C_NOMBRE,g.c_codage ";
+            lstCBUsuario= entityManager.createNativeQuery(strQuery, CBUsuario.class).getResultList();
+        } catch (RuntimeException re) {
+            throw re;
+        }
+        
+        return lstCBUsuario;
+    }
+	//Fin [Req.S17-022]
 }
\ No newline at end of file
diff --git a/ADMINISTRATIVONEW/src/admin/secc/session/SSMenuOpcionSession.java b/ADMINISTRATIVONEW/src/admin/secc/session/SSMenuOpcionSession.java
index 9044706..2d5bd0b 100644
--- a/ADMINISTRATIVONEW/src/admin/secc/session/SSMenuOpcionSession.java
+++ b/ADMINISTRATIVONEW/src/admin/secc/session/SSMenuOpcionSession.java
@@ -27,20 +27,58 @@
         super(SSMenuOpcion.class);
     }
 
+    // Inicio [Req.17-022] esalazar 06.04.2017
     public List<SSMenuOpcion> findByEmpresaAndModuloAndSubModulo(String codigoEmpresa,
                                                                  String codigoModulo,
                                                                  String codigoSubModulo) {
+        Query query;
+        StringBuilder sbQuery;
         try {
-            int k = 1;
-            Query query = entityManager.createNamedQuery("SSMenuOpcion.findByEmpresaAndModuloAndSubModulo");
-            query.setParameter(k++, codigoEmpresa);
-            query.setParameter(k++, codigoModulo);
-            query.setParameter(k++, codigoSubModulo);
+            sbQuery = new StringBuilder();
+
+            sbQuery.append(" SELECT NOPC.C_IDMNOP, ");
+            sbQuery.append("        NOPC.C_CODEMP, ");
+            sbQuery.append("        (RPAD('-', (LEVEL -1 ) * 3, '-') || NOPC.C_DESCRI) C_DESCRI, ");
+            sbQuery.append("        NOPC.C_ABREVI, ");
+            sbQuery.append("        NOPC.C_INDNVL, ");
+            sbQuery.append("        NOPC.C_IDPADR, ");
+            sbQuery.append("        NOPC.C_IDGUPR, ");
+            sbQuery.append("        NOPC.C_IDGRUP, ");
+            sbQuery.append("        NOPC.C_KEYMNU, ");
+            sbQuery.append("        NOPC.C_ESTREG, ");
+            sbQuery.append("        NOPC.A_FECINS, ");
+            sbQuery.append("        NOPC.A_USUINS, ");
+            sbQuery.append("        NOPC.A_TERINS, ");
+            sbQuery.append("        NOPC.A_IPEINS, ");
+            sbQuery.append("        NOPC.A_FECMOD, ");
+            sbQuery.append("        NOPC.A_USUMOD, ");
+            sbQuery.append("        NOPC.A_TERMOD, ");
+            sbQuery.append("        NOPC.A_IPEMOD, ");
+            sbQuery.append("        NOPC.N_NUMORD, ");
+            sbQuery.append("        NOPC.C_NOMPRG, ");
+            sbQuery.append("        NOPC.C_REQPER ");
+            sbQuery.append("   FROM DADM.SSMNOPC NOPC ");
+            sbQuery.append("  INNER JOIN DADM.SSMNOPC NOPC_P ");
+            sbQuery.append("     ON (NOPC_P.C_IDMNOP = NOPC.C_IDMNOP) ");
+            sbQuery.append("  WHERE NOPC.C_ESTREG = 'S' ");
+            sbQuery.append("    AND NOPC_P.C_ESTREG = 'S' ");
+            sbQuery.append("    AND NOPC.C_IDGRUP = :codigoModulo ");
+            sbQuery.append("    AND NOPC.C_IDGUPR = :codigoSubModulo ");
+            sbQuery.append("    AND NOPC.C_CODEMP = :codigoEmpresa ");
+            sbQuery.append(" CONNECT BY PRIOR NOPC.C_IDMNOP = NOPC.C_IDPADR ");
+            sbQuery.append("  START WITH NOPC_P.C_IDPADR IS NULL");
+            sbQuery.append("  ORDER SIBLINGS BY NOPC.C_IDMNOP ");
+
+            query = entityManager.createNativeQuery(sbQuery.toString(), SSMenuOpcion.class);
+            query.setParameter("codigoEmpresa", codigoEmpresa);
+            query.setParameter("codigoModulo", codigoModulo);
+            query.setParameter("codigoSubModulo", codigoSubModulo);
             return query.getResultList();
         } catch (RuntimeException re) {
             throw re;
         }
     }
+    // Fin [Req.17-022]
     
     //Inicio [Req.16-043] gmeza 23.11.2016
     public List<SSMenuOpcion> findByEmpresaAndModuloAndSubModuloRequierePermiso(String codigoEmpresa,
diff --git a/ADMINISTRATIVONEW/src/admin/util/Constante.java b/ADMINISTRATIVONEW/src/admin/util/Constante.java
index 9ae9e3c..8a8d457 100644
--- a/ADMINISTRATIVONEW/src/admin/util/Constante.java
+++ b/ADMINISTRATIVONEW/src/admin/util/Constante.java
@@ -1116,4 +1116,12 @@
     public static final String SALDO_INICIAL_MES_POSTERIOR = "POSTERIOR";
     public static final String MES_DOCE = "DOCE";
     //Fin [CC17-017]
+    
+    //Inicio [Req.S17-022] kdelacruz 03.04.2017
+    public static final String INDICADOR_ENVIADO = "S";
+    public static final String INDICADOR_NO_ENVIADO = "N";
+    //Fin [Req.S17-022]
+    
+    public static final String CODIGO_PROCESO_CARGA_MASIVA_SEGUIMIENTO_CARTERA = "CRCASEGA";
 }
+
diff --git a/ADMINISTRATIVONEW/src/admin/util/ConstantesErrores.java b/ADMINISTRATIVONEW/src/admin/util/ConstantesErrores.java
index 0dffbf9..909a097 100644
--- a/ADMINISTRATIVONEW/src/admin/util/ConstantesErrores.java
+++ b/ADMINISTRATIVONEW/src/admin/util/ConstantesErrores.java
@@ -816,6 +816,16 @@
     String ERROR_11160 = "11160"; //La cuenta de ahorro destino no puede ser la misma de la cancelaci�n
     String ERROR_11161 = "11161"; //La moneda de la cuenta de ahorro destino debe ser la misma de la cancelaci�n    
     // Fin [CC17-035]
+    
+    //Inicio [S17-022] rsanchez 06.04.2017
+    String ERROR_11172 = "11172"; //No se pudo cambiar el estado del Lote
+    String ERROR_11174 = "11174"; //Cliente no cuenta con Cr�ditos Vigentes
+    String ERROR_11175 = "11175"; //Fecha de Atenci�n no puede ser menor-igual a la Fecha de Proceso de Lote
+    String ERROR_11176 = "11176"; //Usuario Asesor no pertenece a la Agencia del Cliente
+    String ERROR_11177 = "11177"; //No se ha podido identificar el Tipo de Alerta ingresado
+    String ERROR_11178 = "11178"; //No se ha podido identificar la Calificaci�n SBS ingresada
+    //Fin [S17-022]
+
     
     // [CC17-044] agarcia 29.03.2017
     String ERROR_11165 = "11165"; //La nueva fecha de vencimiento supera el m�ximo de d�as permitidos con respecto al credito actual seg�n motivo reprogramaci�n
@@ -827,4 +837,4 @@
     String ERROR_11170 = "11170"; //Evaluaci�n Crediticia asociada ha sido aprobada.
     String ERROR_11171 = "11171"; //Constante Factor CEM Hipotecaria debe ser num�rica.
     // Fin [Req. S17-017] 
-}
+}
\ No newline at end of file
diff --git a/ADMINISTRATIVONEW/src/admin/util/local/UtilAdminFacadeInterfaceLocal.java b/ADMINISTRATIVONEW/src/admin/util/local/UtilAdminFacadeInterfaceLocal.java
index dc7d1a9..1fa6a34 100644
--- a/ADMINISTRATIVONEW/src/admin/util/local/UtilAdminFacadeInterfaceLocal.java
+++ b/ADMINISTRATIVONEW/src/admin/util/local/UtilAdminFacadeInterfaceLocal.java
@@ -382,4 +382,11 @@
      * @return ArrayList<BeanCombo>
      */
     public ArrayList<BeanCombo> lstEstadoReciboManual();
+
+    // Inicio [Req.17-022] esalazar 06.04.2017
+    String validarGerenteZonal(String codigoUsuario, BeanParametrosAuditoria beanParametrosAuditoria) throws Exception;
+
+    String validarGerenteAgencia(String codigoUsuario,
+                                 BeanParametrosAuditoria beanParametrosAuditoria) throws Exception;
+    // Fin [Req.17-022]
 }
diff --git a/ADMINISTRATIVONEW/src/admin/util/session/UtilAdminFacade.java b/ADMINISTRATIVONEW/src/admin/util/session/UtilAdminFacade.java
index 23d5ce4..548a9a2 100644
--- a/ADMINISTRATIVONEW/src/admin/util/session/UtilAdminFacade.java
+++ b/ADMINISTRATIVONEW/src/admin/util/session/UtilAdminFacade.java
@@ -22,6 +22,7 @@
 import admin.contab.entity.CBCatalogoCheckConstraint;
 import admin.contab.entity.CBCatalogoCheckConstraintId;
 import admin.contab.entity.CBCatalogoComboGenerico;
+import admin.contab.entity.CBRegionesAgencia;
 import admin.contab.entity.CBRolAplicacion;
 import admin.contab.entity.CBTipoDocumento;
 import admin.contab.entity.CBTiposMovimiento;
@@ -29,6 +30,7 @@
 import admin.contab.local.CBAgenciaInterfaceLocal;
 import admin.contab.local.CBCatalogoCheckConstraintInterfaceLocal;
 import admin.contab.local.CBCatalogoComboGenericoInterfaceLocal;
+import admin.contab.local.CBRegionesAgenciaInterfaceLocal;
 import admin.contab.local.CBTipoDocumentoInterfaceLocal;
 import admin.contab.local.CBTiposMovimientoInterfaceLocal;
 import admin.contab.local.CBVigenciaImpuestosLeyInterfaceLocal;
@@ -78,6 +80,11 @@
     @EJB
     private CBCatalogoComboGenericoInterfaceLocal cbCatalogoComboGenericoInterfaceLocal;
     //Fin [Req. S16-024] 
+
+    //Inicio [Req.S17-022] esalazar 09.08.2016
+    @EJB
+    private CBRegionesAgenciaInterfaceLocal cbRegionesAgenciaInterfaceLocal;
+    //Fin [Req.S17-022] 
 
 	public List<BeanCBTipoDocumento>obtenerTipoDocumentoxCriterioEmpresaEstado(
 			String criterio,
@@ -883,4 +890,39 @@
         return lstBeanCombo;
     }
     //Fin [CC17-007]
+
+    // Inicio [Req.17-022] esalazar 06.04.2017
+    public String validarGerenteZonal(String codigoUsuario,
+                                      BeanParametrosAuditoria beanParametrosAuditoria) throws Exception {
+        String modulo = "UtilAdminFacade.validarGerenteZonal()";
+        String indicadorGerenteZonal = "N";
+        List<CBRegionesAgencia> listCBRegionesAgencia;
+        try {
+            listCBRegionesAgencia = cbRegionesAgenciaInterfaceLocal.findByGerenteZonal(codigoUsuario);
+            if (!_isEmpty(listCBRegionesAgencia)) {
+                indicadorGerenteZonal = "S";
+            }
+        } catch (Exception e) {
+            throw handlerError(e, beanParametrosAuditoria.getUsuarioInsercion(), modulo);
+        }
+        return indicadorGerenteZonal;
+    }
+
+    public String validarGerenteAgencia(String codigoUsuario,
+                                        BeanParametrosAuditoria beanParametrosAuditoria) throws Exception {
+        String modulo = "UtilAdminFacade.validarGerenteAgencia()";
+        String indicadorGerenteAgencia = "N";
+        List<CBAgencia> listCBAgencia;
+        try {
+            listCBAgencia = cbAgenciaInterfaceLocal.findByGerenteAgencia(codigoUsuario);
+            if (!_isEmpty(listCBAgencia)) {
+                indicadorGerenteAgencia = "S";
+            }
+        } catch (Exception e) {
+            throw handlerError(e, beanParametrosAuditoria.getUsuarioInsercion(), modulo);
+        }
+        return indicadorGerenteAgencia;
+    }
+    // Fin [Req.17-022]
+
 }
diff --git a/ADMINISTRATIVONEW/src/pe/com/tfc/utils/GenericBean.java b/ADMINISTRATIVONEW/src/pe/com/tfc/utils/GenericBean.java
index 4a61b42..f60fa49 100644
--- a/ADMINISTRATIVONEW/src/pe/com/tfc/utils/GenericBean.java
+++ b/ADMINISTRATIVONEW/src/pe/com/tfc/utils/GenericBean.java
@@ -1,10 +1,14 @@
 package pe.com.tfc.utils;
 
 import java.io.Serializable;
+import java.sql.Timestamp;
 import java.util.ArrayList;
 import java.util.Collections;
+import java.util.Date;
 import java.util.Iterator;
 import java.util.List;
+
+import admin.util.FormatoFecha;
 
 /**
  * 
@@ -26,6 +30,36 @@
     }
     //Fin [CC17-012]
 
+    // Inicio [Req.16-022] esalazar 31.03.2017
+    public Date getPropertyDate(String campo) {
+        Object valor = getProperty(campo);
+        if (StringUtil.isEmpty(valor)) {
+            return null;
+        }
+        if (valor instanceof String) {
+            return FormatoFecha.stringToDateddMMyyyy(valor.toString());
+        }
+        if (valor instanceof Date) {
+            return getProperty(campo, Date.class);
+        }
+        if (valor instanceof java.sql.Date) {
+            return getProperty(campo, java.sql.Date.class);
+        }
+        if (valor instanceof Timestamp) {
+            return getProperty(campo, Timestamp.class);
+        }
+        return null;
+    }
+
+    public Object getProperty(String campo) {
+        int index = Collections.binarySearch(listProperties, new Property(campo));
+        if (index < 0) {
+            return null;
+        }
+        return listProperties.get(index).getValor();
+    }
+    // Fin [Req.16-022]
+
     public <T> T getProperty(String campo, Class<T> clase) {
         int index = Collections.binarySearch(listProperties, new Property(campo));
         if (index < 0) {
diff --git a/DELFINWEBNEW/.classpath b/DELFINWEBNEW/.classpath
index 6c42886..0f38d04 100644
--- a/DELFINWEBNEW/.classpath
+++ b/DELFINWEBNEW/.classpath
@@ -1,35 +1,46 @@
-<?xml version="1.0" encoding="UTF-8"?>
-<classpath>
-	<classpathentry kind="src" path="src"/>
-	<classpathentry kind="con" path="org.eclipse.jdt.launching.JRE_CONTAINER"/>
-	<classpathentry kind="con" path="com.genuitec.eclipse.j2eedt.core.J2EE14_CONTAINER"/>
-	<classpathentry combineaccessrules="false" kind="src" path="/ADMINISTRATIVONEW"/>
-	<classpathentry combineaccessrules="false" kind="src" path="/FINANCIERONEW"/>
-	<classpathentry kind="lib" path="WebRoot/WEB-INF/lib/JasperBabylon-1.0.0.jar"/>
-	<classpathentry kind="lib" path="WebRoot/WEB-INF/lib/barbecue-1.5-beta1.jar"/>
-	<classpathentry kind="lib" path="WebRoot/WEB-INF/lib/bsh-2.0b4.jar"/>
-	<classpathentry kind="lib" path="WebRoot/WEB-INF/lib/commons-beanutils-1.7.jar"/>
-	<classpathentry kind="lib" path="WebRoot/WEB-INF/lib/commons-codec-1.3.jar"/>
-	<classpathentry kind="lib" path="WebRoot/WEB-INF/lib/commons-collections-2.1.jar"/>
-	<classpathentry kind="lib" path="WebRoot/WEB-INF/lib/commons-dbcp-1.2.1.jar"/>
-	<classpathentry kind="lib" path="WebRoot/WEB-INF/lib/commons-digester-1.7.jar"/>
-	<classpathentry kind="lib" path="WebRoot/WEB-INF/lib/commons-fileupload-1.1.1.jar"/>
-	<classpathentry kind="lib" path="WebRoot/WEB-INF/lib/commons-httpclient-3.1.jar"/>
-	<classpathentry kind="lib" path="WebRoot/WEB-INF/lib/commons-io-1.3.1.jar"/>
-	<classpathentry kind="lib" path="WebRoot/WEB-INF/lib/commons-javaflow-20060411.jar"/>
-	<classpathentry kind="lib" path="WebRoot/WEB-INF/lib/commons-logging-1.0.2.jar"/>
-	<classpathentry kind="lib" path="WebRoot/WEB-INF/lib/commons-logging-api-1.0.2.jar"/>
-	<classpathentry kind="lib" path="WebRoot/WEB-INF/lib/commons-math-1.0.jar"/>
-	<classpathentry kind="lib" path="WebRoot/WEB-INF/lib/commons-pool-1.3.jar"/>
-	<classpathentry kind="lib" path="WebRoot/WEB-INF/lib/commons-vfs-1.0.jar"/>
-	<classpathentry kind="lib" path="WebRoot/WEB-INF/lib/iReport.jar"/>
-	<classpathentry kind="lib" path="WebRoot/WEB-INF/lib/jakarta-bcel-20050813.jar"/>
-	<classpathentry kind="lib" path="WebRoot/WEB-INF/lib/poi-3.0.1-FINAL-20070705.jar"/>
-	<classpathentry kind="lib" path="WebRoot/WEB-INF/lib/jsonplugin-0.34.jar"/>
-	<classpathentry kind="lib" path="WebRoot/WEB-INF/lib/itext-1.3.1.jar"/>
-	<classpathentry kind="lib" path="WebRoot/WEB-INF/lib/jasperreports-3.0.0-applet.jar"/>
-	<classpathentry kind="lib" path="WebRoot/WEB-INF/lib/jasperreports-3.0.0.jar"/>
-	<classpathentry kind="lib" path="WebRoot/WEB-INF/lib/jasperreports-extensions-1.3.1.jar"/>
-	<classpathentry kind="lib" path="WebRoot/WEB-INF/lib/jasperreports-flash-2.0.5.jar"/>
-	<classpathentry kind="output" path="WebRoot/WEB-INF/classes"/>
-</classpath>
+<?xml version="1.0" encoding="UTF-8"?>
+<classpath>
+	<classpathentry kind="src" path="src"/>
+	<classpathentry kind="con" path="com.genuitec.eclipse.j2eedt.core.J2EE14_CONTAINER"/>
+	<classpathentry combineaccessrules="false" kind="src" path="/ADMINISTRATIVONEW"/>
+	<classpathentry combineaccessrules="false" kind="src" path="/FINANCIERONEW"/>
+	<classpathentry kind="lib" path="WebRoot/WEB-INF/lib/JasperBabylon-1.0.0.jar"/>
+	<classpathentry kind="lib" path="WebRoot/WEB-INF/lib/barbecue-1.5-beta1.jar"/>
+	<classpathentry kind="lib" path="WebRoot/WEB-INF/lib/bsh-2.0b4.jar"/>
+	<classpathentry kind="lib" path="WebRoot/WEB-INF/lib/commons-beanutils-1.7.jar"/>
+	<classpathentry kind="lib" path="WebRoot/WEB-INF/lib/commons-codec-1.3.jar"/>
+	<classpathentry kind="lib" path="WebRoot/WEB-INF/lib/commons-collections-2.1.jar"/>
+	<classpathentry kind="lib" path="WebRoot/WEB-INF/lib/commons-dbcp-1.2.1.jar"/>
+	<classpathentry kind="lib" path="WebRoot/WEB-INF/lib/commons-digester-1.7.jar"/>
+	<classpathentry kind="lib" path="WebRoot/WEB-INF/lib/commons-fileupload-1.1.1.jar"/>
+	<classpathentry kind="lib" path="WebRoot/WEB-INF/lib/commons-httpclient-3.1.jar"/>
+	<classpathentry kind="lib" path="WebRoot/WEB-INF/lib/commons-io-1.3.1.jar"/>
+	<classpathentry kind="lib" path="WebRoot/WEB-INF/lib/commons-javaflow-20060411.jar"/>
+	<classpathentry kind="lib" path="WebRoot/WEB-INF/lib/commons-logging-1.0.2.jar"/>
+	<classpathentry kind="lib" path="WebRoot/WEB-INF/lib/commons-logging-api-1.0.2.jar"/>
+	<classpathentry kind="lib" path="WebRoot/WEB-INF/lib/commons-math-1.0.jar"/>
+	<classpathentry kind="lib" path="WebRoot/WEB-INF/lib/commons-pool-1.3.jar"/>
+	<classpathentry kind="lib" path="WebRoot/WEB-INF/lib/commons-vfs-1.0.jar"/>
+	<classpathentry kind="lib" path="WebRoot/WEB-INF/lib/iReport.jar"/>
+	<classpathentry kind="lib" path="WebRoot/WEB-INF/lib/jakarta-bcel-20050813.jar"/>
+	<classpathentry kind="lib" path="WebRoot/WEB-INF/lib/poi-3.0.1-FINAL-20070705.jar"/>
+	<classpathentry kind="lib" path="WebRoot/WEB-INF/lib/jsonplugin-0.34.jar"/>
+	<classpathentry kind="lib" path="WebRoot/WEB-INF/lib/itext-1.3.1.jar"/>
+	<classpathentry kind="lib" path="WebRoot/WEB-INF/lib/jasperreports-3.0.0-applet.jar"/>
+	<classpathentry kind="lib" path="WebRoot/WEB-INF/lib/jasperreports-3.0.0.jar"/>
+	<classpathentry kind="lib" path="WebRoot/WEB-INF/lib/jasperreports-extensions-1.3.1.jar"/>
+	<classpathentry kind="lib" path="WebRoot/WEB-INF/lib/jasperreports-flash-2.0.5.jar"/>
+	<classpathentry kind="con" path="org.eclipse.jdt.launching.JRE_CONTAINER/org.eclipse.jdt.internal.debug.ui.launcher.StandardVMType/jdk1.6.0_07">
+		<attributes>
+			<attribute name="owner.project.facets" value="java"/>
+		</attributes>
+	</classpathentry>
+	<classpathentry kind="con" path="org.eclipse.jst.server.core.container/org.jboss.ide.eclipse.as.core.server.runtime.runtimeTarget/JBoss 4.2 Runtime">
+		<attributes>
+			<attribute name="owner.project.facets" value="jst.web"/>
+		</attributes>
+	</classpathentry>
+	<classpathentry kind="con" path="org.eclipse.jst.j2ee.internal.web.container"/>
+	<classpathentry kind="con" path="org.eclipse.jst.j2ee.internal.module.container"/>
+	<classpathentry kind="output" path="WebRoot/WEB-INF/classes"/>
+</classpath>
diff --git a/DELFINWEBNEW/.project b/DELFINWEBNEW/.project
index d6944cb..c2d3cd4 100644
--- a/DELFINWEBNEW/.project
+++ b/DELFINWEBNEW/.project
@@ -1,50 +1,58 @@
-<?xml version="1.0" encoding="UTF-8"?>
-<projectDescription>
-	<name>DELFINWEBNEW</name>
-	<comment></comment>
-	<projects>
-	</projects>
-	<buildSpec>
-		<buildCommand>
-			<name>org.eclipse.wst.jsdt.core.javascriptValidator</name>
-			<arguments>
-			</arguments>
-		</buildCommand>
-		<buildCommand>
-			<name>com.genuitec.eclipse.j2eedt.core.WebClasspathBuilder</name>
-			<arguments>
-			</arguments>
-		</buildCommand>
-		<buildCommand>
-			<name>org.eclipse.jdt.core.javabuilder</name>
-			<arguments>
-			</arguments>
-		</buildCommand>
-		<buildCommand>
-			<name>com.genuitec.eclipse.j2eedt.core.J2EEProjectValidator</name>
-			<arguments>
-			</arguments>
-		</buildCommand>
-		<buildCommand>
-			<name>com.genuitec.eclipse.j2eedt.core.DeploymentDescriptorValidator</name>
-			<arguments>
-			</arguments>
-		</buildCommand>
-		<buildCommand>
-			<name>org.eclipse.wst.validation.validationbuilder</name>
-			<arguments>
-			</arguments>
-		</buildCommand>
-		<buildCommand>
-			<name>com.genuitec.eclipse.ast.deploy.core.DeploymentBuilder</name>
-			<arguments>
-			</arguments>
-		</buildCommand>
-	</buildSpec>
-	<natures>
-		<nature>com.genuitec.eclipse.ast.deploy.core.deploymentnature</nature>
-		<nature>com.genuitec.eclipse.j2eedt.core.webnature</nature>
-		<nature>org.eclipse.jdt.core.javanature</nature>
-		<nature>org.eclipse.wst.jsdt.core.jsNature</nature>
-	</natures>
-</projectDescription>
+<?xml version="1.0" encoding="UTF-8"?>
+<projectDescription>
+	<name>DELFINWEBNEW</name>
+	<comment></comment>
+	<projects>
+	</projects>
+	<buildSpec>
+		<buildCommand>
+			<name>org.eclipse.wst.common.project.facet.core.builder</name>
+			<arguments>
+			</arguments>
+		</buildCommand>
+		<buildCommand>
+			<name>org.eclipse.wst.jsdt.core.javascriptValidator</name>
+			<arguments>
+			</arguments>
+		</buildCommand>
+		<buildCommand>
+			<name>com.genuitec.eclipse.j2eedt.core.WebClasspathBuilder</name>
+			<arguments>
+			</arguments>
+		</buildCommand>
+		<buildCommand>
+			<name>org.eclipse.jdt.core.javabuilder</name>
+			<arguments>
+			</arguments>
+		</buildCommand>
+		<buildCommand>
+			<name>com.genuitec.eclipse.j2eedt.core.J2EEProjectValidator</name>
+			<arguments>
+			</arguments>
+		</buildCommand>
+		<buildCommand>
+			<name>com.genuitec.eclipse.j2eedt.core.DeploymentDescriptorValidator</name>
+			<arguments>
+			</arguments>
+		</buildCommand>
+		<buildCommand>
+			<name>org.eclipse.wst.validation.validationbuilder</name>
+			<arguments>
+			</arguments>
+		</buildCommand>
+		<buildCommand>
+			<name>com.genuitec.eclipse.ast.deploy.core.DeploymentBuilder</name>
+			<arguments>
+			</arguments>
+		</buildCommand>
+	</buildSpec>
+	<natures>
+		<nature>org.eclipse.jem.workbench.JavaEMFNature</nature>
+		<nature>org.eclipse.wst.common.modulecore.ModuleCoreNature</nature>
+		<nature>com.genuitec.eclipse.ast.deploy.core.deploymentnature</nature>
+		<nature>com.genuitec.eclipse.j2eedt.core.webnature</nature>
+		<nature>org.eclipse.jdt.core.javanature</nature>
+		<nature>org.eclipse.wst.jsdt.core.jsNature</nature>
+		<nature>org.eclipse.wst.common.project.facet.core.nature</nature>
+	</natures>
+</projectDescription>
diff --git a/DELFINWEBNEW/WebRoot/FINANCIERO/workflow/WF_T_Contenedor_CNTR.jsp b/DELFINWEBNEW/WebRoot/FINANCIERO/workflow/WF_T_Contenedor_CNTR.jsp
index 927a26c..3684fa2 100644
--- a/DELFINWEBNEW/WebRoot/FINANCIERO/workflow/WF_T_Contenedor_CNTR.jsp
+++ b/DELFINWEBNEW/WebRoot/FINANCIERO/workflow/WF_T_Contenedor_CNTR.jsp
@@ -148,6 +148,9 @@
         }
 
         function funcionGenerica(funcion){
+        	if (!confirm(m_10131)){
+                return;
+            }
             eval('document.'+iframe + '.' + funcion);
         }
 
diff --git a/DELFINWEBNEW/WebRoot/FINANCIERO/workflow/seguimientoCartera/CR_C_ConsultaSeguimientoCartera_CNTR.jsp b/DELFINWEBNEW/WebRoot/FINANCIERO/workflow/seguimientoCartera/CR_C_ConsultaSeguimientoCartera_CNTR.jsp
new file mode 100644
index 0000000..69f607c
--- /dev/null
+++ b/DELFINWEBNEW/WebRoot/FINANCIERO/workflow/seguimientoCartera/CR_C_ConsultaSeguimientoCartera_CNTR.jsp
@@ -0,0 +1,455 @@
+<!-- CR_C_ConsultaSeguimientoCartera_CNTR.jsp-->
+<%--[Req.S17-022] esalazar 29.03.2017 - Implementacion WorkFlow Seguimiento Cartera--%>
+
+<%@ page language="java" import="java.util.*" pageEncoding="ISO-8859-1"%>
+<jsp:directive.page import="financ.util.Constante"/>
+<%@ taglib prefix="c" uri="http://java.sun.com/jstl/core" %>
+<%@ taglib uri="/delfin" prefix="delfinTagHtml" %>
+<%
+    String idModulo = request.getAttribute("idModulo") != null?(String)request.getAttribute("idModulo"):"";
+%>
+<html>
+  <head>
+    <title>BUSQUEDA DE ALERTAS</title>
+    <link id="css" href="${pageContext.request.contextPath}/UTILS/css/DELFIN.css" rel="stylesheet" type="text/css">
+    <script src="${pageContext.request.contextPath}/UTILS/Script/MsgValidacion.js"></script>
+    <script src="<%=request.getContextPath()%>/UTILS/Script/DELFIN-Utiles.js"></script>
+    <script type="text/javascript">
+    
+        var f = null;
+        var path;
+        nextfield = "fechaAsignacionInicial";
+        field = "";
+        var indicadorPermisoConsulta = '<c:out value="${indicadorPermisoConsulta}" />';
+        var indicadorGerenteZonal = '<c:out value="${indicadorGerenteZonal}" />';
+        var indicadorGerenteAgencia = '<c:out value="${indicadorGerenteAgencia}" />';
+        var permiteCambiarAgencia;
+        var permiteCambiarAsesor;
+
+        function cargar() {
+            f = document.getElementById('frmBusqueda');
+            path = '<%=request.getContextPath()%>';
+            mensajeRespuesta('<c:out value="${codigoError}" />', '<c:out value="${mensajeError}" />');
+            byID(nextfield).focus();
+            onCargarDetalle();
+            permiteCambiarAgencia = (indicadorPermisoConsulta == 'S' || indicadorGerenteZonal == 'S');
+            permiteCambiarAsesor  = (indicadorPermisoConsulta == 'S' || indicadorGerenteZonal == 'S' || indicadorGerenteAgencia == 'S');
+
+            if(!permiteCambiarAgencia){
+                byID('descripcionAgencia').readOnly = true;
+                byID('descripcionAgencia').className = 'campodisplayiz';
+                byID('imgAgencia').style.visibility = "hidden";
+            }
+            if(!permiteCambiarAsesor){
+                byID('descripcionAsesor').readOnly = true;
+                byID('descripcionAsesor').className = 'campodisplayiz';
+                byID('imgAsesor').style.visibility = "hidden";
+            }
+        }
+
+        function pag(direccion){
+            document.ifrmDetalleWorkflowSeguimiento.paginacion(direccion);
+        }
+
+        function keyDown(DnEvents){
+            k = window.event.keyCode;
+            if (k == 13){
+                   if(field == "descripcionAgencia"){
+                       buscarAgencia();
+                       return false;
+                   } else if(field == "descripcionAsesor"){
+                       buscarAsesor();
+                       return false;
+                   } else if(field == "nombreCliente"){
+                       buscarPersonas();
+                       return false;
+                   } else {
+                       byID(nextfield).focus();
+                   }
+                return false;
+            }
+            if (k == 120){
+                return false;
+            }
+            if (k == 27){
+                salir();
+                return false;
+            }
+            if (k == 121){
+                grabar()
+                return false;
+            }
+            if (k == 112){
+                ayuda();
+                return false;
+            }
+            if (event.ctrlKey){
+                event.keyCode = 0;
+                return false;
+            }
+            if (k==46){
+                return false;
+            }
+            if (window.event && (k == 114 || k == 116 || k == 117 || k == 122))
+                event.keyCode = 505;
+            if(event.keyCode == 505)
+                return false;
+        }
+        document.onkeydown = keyDown;       
+
+        document.oncontextmenu = function(){return false}
+
+        function salir(){
+            window.location = path + '/GENERAL/Menu.jsp';
+        }
+
+        function onCargarDetalle(pag) {
+          var params = '?action=CARGAR_DETALLE';
+              params += '&fechaAsignacionInicial=' + byID('fechaAsignacionInicial').value;
+              params += '&fechaAsignacionFinal=' + byID('fechaAsignacionFinal').value;
+              params += '&fechaAtencionInicial=' + byID('fechaAtencionInicial').value;
+              params += '&fechaAtencionFinal=' + byID('fechaAtencionFinal').value;
+              params += '&codigoTipoAlerta=' + byID('cboTipoAlerta').value;
+              if(!isEmpty(byID('descripcionAgencia').value)){
+                  params += '&codigoAgencia=' + byID('codigoAgencia').value;
+              }
+              if(!isEmpty(byID('descripcionAsesor').value)){
+                  params += '&codigoAsesor=' + byID('codigoAsesor').value;
+              }
+              if(!isEmpty(byID('nombreCliente').value)){
+                  params += '&codigoCliente=' + byID('codigoCliente').value;
+              }
+              params += '&codigoEstado=' + byID('cboEstado').value;
+              if(pag){
+                  params += '&hid_pagina=' + pag;
+              }
+
+          var url = path + '/CR_C_ConsultaSeguimientoCartera_Servlet' + params;
+          document.getElementById('hidepage').style.visibility = '';
+          document.ifrmDetalleWorkflowSeguimiento.location.replace(url);
+        }
+
+        function buscarPersonas() {
+          var valor = byID('nombreCliente').value;
+          var nombre="PERSONAS";
+          valor1 ='Nombre';
+          valor2 ='DOI';
+          if(isEmpty(valor)){
+              valor='NULO';
+          }
+          var url = path + "/GENERAL/Busqueda.jsp?cboValorBuscar1="+valor1+"&cboValorBuscar2="+valor2+"&txtValorBuscar="+valor+"&tabla="+nombre;
+          var opciones = "dialogHeight:330px;dialogWidth:670px;center:yes;help:no;resizable:no;status:no";
+          window.showModalDialog(url,window,opciones);
+        }
+
+        // Ingresar nombre del cliente.
+        function insertarPersona(data) {
+          byID('codigoCliente').value = data[0];
+          byID('numeroDocumento').value = data[1];
+          byID('nombreCliente').value = data[2];
+          byID('cboEstado').focus();
+        }
+
+        function buscarAgencia(){
+
+            if(!permiteCambiarAgencia){
+                return;
+            }
+
+            var nombre="AGENCIA";
+            var valor = f.codigoAgencia.value != "" ? f.codigoAgencia.value.toUpperCase() : "NULO";
+            var valor_2 = f.descripcionAgencia.value != "" ? f.descripcionAgencia.value.toUpperCase() : "NULO";
+
+            valor1 = "CODIGO";
+            valor2 = "DESCRIPCION";
+            if (valor_2 != 'NULO') {
+                //alert(valor_2);
+                valor = valor_2;
+                valor1 = "DESCRIPCION";
+                valor2 = "CODIGO";
+            }
+
+            var params = '?cboValorBuscar1='+valor1;
+            params += '&cboValorBuscar1='+valor1;
+            params += '&cboValorBuscar2='+valor2;
+            params += '&txtValorBuscar='+valor;
+            params += '&tabla='+nombre;
+            var url = path + '/GENERAL/Busqueda.jsp';
+            window.showModalDialog(url + params, window,"dialogHeight:330px;dialogWidth:670px;center:yes;help:no;resizable:no;");
+        }
+
+        function insertarAgencia(data){
+            byID('codigoAgencia').value = data[0];
+            byID('descripcionAgencia').value = data[1];
+            byID('descripcionAsesor').focus();
+         }
+
+        function buscarAsesor() {
+
+            if(!permiteCambiarAsesor){
+                return;
+            }
+
+            var valor = byID('descripcionAsesor').value;
+            var nombre='USUARIO';
+
+            var url = path + '/GENERAL/Busqueda.jsp';
+            var params = '?cboValorBuscar1=Descripcion';
+            params += '&cboValorBuscar2=Codigo';
+            params += '&txtValorBuscar=' + valor;
+            params += '&tabla=' + nombre;
+            params += '&indicadorTipo=0'
+            window.showModalDialog(url + params ,window,'dialogHeight:330px;dialogWidth:670px;center:yes;help:no;resizable:no;status:no');
+        }
+
+        function insertarUsuario(data, indicador){
+             byID('codigoAsesor').value = data[0];
+             byID('descripcionAsesor').value = data[1];
+             byID('nombreCliente').focus();
+        }
+
+        function modificarSolicitud(){
+            var idMaestra = document.ifrmDetalleWorkflowSeguimiento.obtenerIdMaestra();
+            var correlativoSeguimiento = document.ifrmDetalleWorkflowSeguimiento.obtenerIdSeguimientoCartera();
+            cargaIndividual(idMaestra, correlativoSeguimiento);
+        }
+
+        function cargaIndividual(idMaestra, correlativoSeguimiento){
+            if(idMaestra == null){
+            	idMaestra = '';
+            }
+            if(correlativoSeguimiento == null){
+            	correlativoSeguimiento = '';
+            }
+            var params = '?action=MOSTRAR_CONTENEDOR_WORKFLOW';
+            params += '&idMaestra=' + idMaestra;
+            params += '&idModulo=' + f.hidIdModulo.value;
+            params += '&url=/CR_C_ConsultaSeguimientoCartera_Servlet?action=MOSTRAR_DETALLE';
+            var url = '<%=request.getContextPath()%>/WF_T_Maestra_Servlet' + params;
+            window.top.document.location.replace(url);
+        }
+
+        function cargaMasiva(){
+            var params = '?action=MOSTRAR_CONTENEDOR';
+                params += '&time=' + (new Date()).getTime(); 
+            var url = '<%=request.getContextPath()%>/CR_T_SeguimientoCarteraAdministracionLotes_Servlet' + params;
+            var attribs = 'dialogHeight:400px;dialogWidth:800px; center:yes; help:no; resizable:no; status:no';
+            window.top.document.location.replace(url);
+       }
+    </script>
+  </head>
+  <body onhelp="getF1();" class="colorbody" onload="cargar();" style="padding: 0px, 0px, 0px, 0px;overflow:auto;">
+    <form name="frmBusqueda" id="frmBusqueda" method="post">
+      <input type="hidden" name="hidIdModulo" value='<%=idModulo%>'>
+      <div id="hidepage" style="position: absolute;left:460px;top:380px;width: 100;height: 20">
+          <table>
+              <tr><td align="center"><img src="<%=request.getContextPath()%>/UTILS/img/loadings.gif" ></td></tr>
+              <tr><td align="center" style="font-weight: bold;" ><span class="etiqueta" >Cargando...</span></td></tr>
+          </table>
+      </div>
+      <div id="wndHide" ></div>
+      <table cellpadding="0" cellspacing="0" width="100%">
+        <tr>
+          <td class="tituloopcion">
+            DETALLE WORKFLOW LEGAL
+          </td>
+        </tr>
+        <tr>
+          <td height="4">
+            <img src="<%=request.getContextPath()%>/UTILS/img/t.gif" width="1" height="2">
+          </td>
+        </tr>
+      </table>
+      <table border="0" cellpadding="0" cellspacing="2" width="99.5%" align="center" >
+        <tr>
+          <td>
+            <table border="1" cellpadding="0" cellspacing="0" width="100%" align="center" class="frame">
+              <tr>
+                <td height="20" align="center">
+                  <table width="100%" cellpadding="0" cellspacing="0" border="0">
+                    <tr>
+                      <td align="left" colspan="4" valign="middle">
+                        <span>
+                           <div id="itMenu1" style="width:30px; height:20px; top:26px; z-index:1;" class="itMenu" onMouseOver="despMenu(this.id,1)" onMouseOut="despMenu(this.id,0)" > 
+                               <div id="itMenu10" style="width: 30px" class="itMenuDes" onMouseOver="destacar(this,1)" onMouseOut="destacar(this,0)"> 
+                                   <a href="" target="_parent" class="itLink"><delfinTagHtml:boton nombre="BT_Individual_P.gif" onclick="javascript:cargaIndividual();return false;" /></a>
+                               </div>
+                               <div id="itMenu11" style="width: 30px" class="itMenuDes" onMouseOver="destacar(this,1)" onMouseOut="destacar(this,0)"> 
+                                   <a href="" target="_parent" class="itLink"><delfinTagHtml:boton nombre="BT_Masivo_P.gif" onclick="javascript:cargaMasiva();return false;" /></a> 
+                               </div>
+                           </div>
+                        </span>
+                        <delfinTagHtml:boton nombre="BT_Registrar.gif" onMouseOver="despMenu('itMenu1',1)" onMouseout="despMenu('itMenu1',0)"/>
+                        <delfinTagHtml:boton nombre="BT_Atencion.gif" onclick="javascript:modificarSolicitud()"/>
+                        <delfinTagHtml:boton nombre="BT_Exportar_G.gif" onclick="javascript:modificarSolicitud()"/>
+                        <delfinTagHtml:boton nombre="BT_Salir.gif" onclick="javascript:salir();" />
+                      </td>
+                    </tr>
+                  </table>
+                </td>
+              </tr>
+            </table>
+          </td>
+        </tr>
+        <tr>
+          <td height="4">
+            <img src="<%=request.getContextPath()%>/UTILS/img/t.gif" width="1" height="2">
+          </td>
+        </tr>
+        <tr>
+            <td class="tituloframe">FILTROS DE BUSQUEDA</td>
+        </tr>
+        <tr>
+          <td>
+            <table border="2" cellpadding="0" cellspacing="0" width="100%" align="center" class="frame">
+              <tr>
+                <td height="20" align="center">
+                  <table width="99%" cellpadding="0" cellspacing="2" border="0">
+                    <tr id="trFiltroActivos1"> 
+                        <td class="etiqueta" align="left" width="110" valign="middle">
+                            Fecha Asignaci&oacute;n
+                        </td>
+                        <td class="etiqueta" width="200">
+                            del <input name="fechaAsignacionInicial" id="txtFechaAsignacionInicial" value="<c:out value='${fechaProcesoInicio}' />" style="width: 70px" class="campoobligatorioce"  tabindex="1" onBlur="this.value=vuelveFecha(this.value);validarFecha('fechaAsignacionInicial');" onfocus="this.select(); field='txtFechaAsignacionInicial'; nextfield ='txtFechaAsignacionFinal';">
+                            al <input name="fechaAsignacionFinal" id="txtFechaAsignacionFinal" value="<c:out value='${fechaProcesoFin}' />" style="width: 70px" class="campoobligatorioce"  tabindex="1" onBlur="this.value=vuelveFecha(this.value);validarFecha('fechaAsignacionFinal');" onfocus="this.select(); field='fechaAsignacionFinal'; nextfield ='fechaAtencionInicial';">
+                        </td>
+                        <td class="etiqueta" align="left" width="60" valign="middle">
+                            Agencia
+                        </td>
+                        <td width="200"> 
+                            <input type="hidden" name="codigoAgencia" id="codigoAgencia" value="<c:out value='${codigoAgencia}' />" style="width: 80px" class="campoobligatorioiz"  tabindex="1" onfocus="this.select(); field='txtCriterio'; nextfield ='txtFechaSolicitud';" >
+                            <input name="descripcionAgencia" id="descripcionAgencia" value="<c:out value='${descripcionAgencia}' />" style="width: 160px" class="campoobligatorioiz"  tabindex="1" onfocus="this.select(); field='descripcionAgencia'; nextfield ='';" >
+                            <img id="imgAgencia" style="cursor:hand" title="Buscar Agencia" src="<%=request.getContextPath()%>/UTILS/img/Detalle.gif" onclick="buscarAgencia();">
+                        </td>
+                        <td class="etiqueta" align="left" width="130" valign="middle">
+                            Estado Seguimiento
+                        </td>
+                        <td > 
+                            <select name="cboEstado" id="cboEstado" style="width: 120px;" tabindex="4" class="campoobligatorioiz"
+                                   onfocus="field='cboEstado'; nextfield ='fechaAsignacionInicial';">
+                                 <c:forEach var='listBeanWFEstado' items='${requestScope.listBeanWFEstado}'>
+                                    <option value="<c:out value='${listBeanWFEstado.idEstado}'/>" >
+                                        <c:out value='${listBeanWFEstado.descripcionEstado}' />
+                                    </option>
+                                 </c:forEach>
+                            </select>
+                        </td>
+                      </tr>
+                      <tr id="trFiltroActivos2"> 
+                        <td class="etiqueta" align="left" valign="middle">
+                            Fecha Atenci&oacute;n
+                        </td>
+                        <td class="etiqueta">
+                            del <input name="fechaAtencionInicial" id="txtFechaAsignacionInicial" value="<c:out value='${fechaProcesoInicio}' />" style="width: 70px" class="campoobligatorioce"  tabindex="1" onBlur="this.value=vuelveFecha(this.value);validarFecha('fechaAtencionInicial');" onfocus="this.select(); field='fechaAtencionInicial'; nextfield ='fechaAtencionFinal';">
+                            al <input name="fechaAtencionFinal" id="txtFechaAsignacionFinal" value="<c:out value='${fechaProcesoFin}' />" style="width: 70px" class="campoobligatorioce"  tabindex="1" onBlur="this.value=vuelveFecha(this.value);validarFecha('fechaAtencionFinal');" onfocus="this.select(); field='fechaAtencionFinal'; nextfield ='cboTipoAlerta';">
+                        </td>
+                        <td class="etiqueta" align="left" valign="middle">
+                            Asesor
+                        </td>
+                        <td width="200"> 
+                            <input type="hidden" name="codigoAsesor" id="codigoAsesor" value="<c:out value='${codigoAsesor}' />" style="width: 80px" class="campoobligatorioiz"  tabindex="1" onfocus="this.select(); field='txtCriterio'; nextfield ='txtFechaSolicitud';" >
+                            <input name="descripcionAsesor" id="descripcionAsesor" value="<c:out value='${descripcionAsesor}' />" style="width: 160px" class="campoobligatorioiz"  tabindex="1" onfocus="this.select(); field='descripcionAsesor'; nextfield ='nombreCliente';" >
+                            <img id="imgAsesor" style="cursor:hand" title="Buscar Asesor" src="<%=request.getContextPath()%>/UTILS/img/Detalle.gif" onclick="buscarAsesor();">
+                        </td>
+                        <td class="etiqueta" align="left" valign="middle">
+                        </td>
+                        <td > 
+                        </td>
+                      </tr>
+                      <tr id="trFiltroActivos3"> 
+                        <td class="etiqueta" align="left" valign="middle">
+                            Tipo de Alerta
+                        </td>
+                        <td>
+                           <select name="cboTipoAlerta" id="cboTipoAlerta" style="width: 150px;" tabindex="4" class="campoobligatorioiz"
+                                   onfocus="field='cboTipoAlerta'; nextfield ='descripcionAgencia';">
+                                 <c:forEach var='beanCombo' items='${requestScope.listTipoAlerta}'>
+                                    <option value="<c:out value='${beanCombo.codigo}'/>" >
+                                        <c:out value='${beanCombo.descripcion}' />
+                                    </option>
+                                 </c:forEach>
+                            </select>
+                        </td>
+                        <td class="etiqueta" align="left" valign="middle">
+                            Cliente
+                        </td>
+                        <td width="200">
+                            <input type="hidden" name="codigoCliente" id="codigoCliente" value="<c:out value='${codigoCliente}' />" />
+                            <input type="hidden" name="numeroDocumento" id="numeroDocumento" value="<c:out value='${numeroDocumento}' />" onfocus="this.select();nextfield='cboTipoLinea'" class="campoobligatorioiz" maxlength="20" style="width: 80px;" />
+                            <input type="text" name="nombreCliente" id="nombreCliente" value="<c:out value='${nombreCliente}' />" onfocus="this.select();field='nombreCliente';"  class="campoobligatorioiz" style="width: 160px;" />
+                            <img id="imgPersona" style="cursor:hand" src="<%=request.getContextPath()%>/UTILS/img/Detalle.gif" title="Buscar Cliente" onclick="if(!byID('numeroDocumento').readOnly){buscarPersonas();}">
+                        </td>
+                        <td class="etiqueta" align="left" valign="middle">
+                        </td>
+                        <td >
+                            <delfinTagHtml:boton nombre="BT_Buscar_P.gif" onclick="javascript:onCargarDetalle();" />
+                        </td>
+                      </tr>
+                  </table>
+                </td>
+              </tr>
+            </table>
+          </td>
+        </tr>
+        <tr>
+          <td height="4">
+            <img src="<%=request.getContextPath()%>/UTILS/img/t.gif" width="1" height="2">
+          </td>
+        </tr>
+        <tr>
+          <td>
+            <table cellpadding="0" border="0" cellspacing="0" width="100%" align="center">
+              <tr>
+                <td align="center" valign="top" width="100%">
+                  <table width="100%" align="center" cellspacing="0" border="0">
+                    <tr>
+                      <td valign="top">
+                        <table width="100%" cellpadding="0" cellspacing="0" border="0">
+                          <tr>
+                              <td class="tituloframe">DETALLE DE CLIENTES</td>
+                          </tr>
+                          <tr>
+                            <td>
+                              <iframe id="ifrmDetalleWorkflowSeguimiento" name="ifrmDetalleWorkflowSeguimiento" frameborder="0" width="100%" height="300px"  class="frame"></iframe>
+                            </td>
+                          </tr>
+                        </table>
+                      </td>
+                    </tr>
+                  </table>
+                  <table width="100%">
+                    <tr>
+                      <td align="right">
+                      <IMG src="<%=request.getContextPath()%>/UTILS/img/PagRe.gif" onClick="pag(-1);" style="CURSOR: hand;vertical-align: middle;" alt="Anterior">
+                      <label id="inicial" style="width:25;text-align:left;font-size:8pt;font-family:Arial;vertical-align: middle;"></label>
+                      <IMG src="<%=request.getContextPath()%>/UTILS/img/t.gif" height=1 width="10">
+                      <label id="final" style="width:25;text-align:right;font-size:8pt;font-family:Arial;vertical-align: middle;"></label>
+                      <IMG src="<%=request.getContextPath()%>/UTILS/img/PagAv.gif" onClick="pag(1)" style="CURSOR: hand;vertical-align: middle;" alt="Siguiente">
+                      <label id="total" style="width:50;text-align:left;font-size:8pt;font-family:Arial;vertical-align: middle;"></label>
+                      </td>
+                    </tr>
+                  </table>
+                </td>
+              </tr>
+            </table>
+          </td>
+        </tr>
+      </table>
+      <table>
+           <tr>
+               <td>
+                   <img src="${pageContext.request.contextPath}/UTILS/img/t.gif"
+                       width="1" height="1">
+               </td>
+           </tr>
+       </table>
+       <table cellpadding="0" cellspacing="0" border="0" width="100%">
+           <tr>
+               <td><%@ include file="/GENERAL/Header.jsp"%>
+               </td>
+           </tr>
+           <tr height="40px"></tr>
+       </table>
+    </form>
+  </body>
+</html>
\ No newline at end of file
diff --git a/DELFINWEBNEW/WebRoot/FINANCIERO/workflow/seguimientoCartera/CR_C_ConsultaSeguimientoCartera_TABLA.jsp b/DELFINWEBNEW/WebRoot/FINANCIERO/workflow/seguimientoCartera/CR_C_ConsultaSeguimientoCartera_TABLA.jsp
new file mode 100644
index 0000000..a41f642
--- /dev/null
+++ b/DELFINWEBNEW/WebRoot/FINANCIERO/workflow/seguimientoCartera/CR_C_ConsultaSeguimientoCartera_TABLA.jsp
@@ -0,0 +1,277 @@
+<!-- CR_C_ConsultaSeguimientoCartera_TABLA.jsp-->
+<%-- [Req.S17-022] esalazar 30.03.2017 - Implementacion WorkFlow Seguimiento Cartera--%>
+
+<jsp:directive.page import="general.utils.Paginacion"/>
+<%
+	String path =request.getContextPath();
+	String myData = request.getAttribute("myData") != null ? (String)request.getAttribute("myData") : "";
+	String hid_pagina = request.getParameter("hid_pagina") != null?request.getParameter("hid_pagina"):"1";  
+	String ini = request.getAttribute("inicio") != null?(String)request.getAttribute("inicio"):"0";
+	String indFin = request.getAttribute("indFin") != null?(String)request.getAttribute("indFin"):"0";
+%>
+<%@ taglib prefix="c" uri="http://java.sun.com/jstl/core" %>
+<html>
+<head>  
+    <!-- Invocación de Estilos -->
+    <link id="css" href="<%=request.getContextPath()%>/UTILS/css/DELFIN.css" rel="stylesheet" type="text/css">
+    <!-- Invocación de JavaScript -->
+    <script src="<%=request.getContextPath()%>/UTILS/Script/DELFIN-Tabla.js"></script>
+    <script src="<%=request.getContextPath()%>/UTILS/Script/MsgValidacion.js"></script>
+    <style>
+        .active-controls-grid {height: 100%; font: menu;}
+
+                 .active-column-0  {display: none;}
+                 .active-column-1  {display: none;}
+                 .active-column-2  {width: 140px;text-align: left;}
+                 .active-column-3  {width: 190px;text-align: left;}
+                 .active-column-4  {width: 190px;text-align: left}
+                 .active-column-5  {width: 130px;text-align: left;}
+                 .active-column-6  {width: 110px;text-align: right;}
+                 .active-column-7  {width: 90px;text-align: center;}
+                 .active-column-8  {width: 90px;text-align: center;}
+                 .active-column-9  {width: 140px;text-align: left;}
+                 .active-column-10  {width: 90px;text-align: center;}
+                 .active-column-11  {width: 120px;text-align: left;}
+                 .active-column-12  {width: 90px;text-align: center;}
+                 .active-column-13  {width: 120px;text-align: left;}
+                 
+
+        .active-grid-column {border-right: 1px solid threedlightshadow; }
+        .active-grid-row {border-bottom: 1px solid threedlightshadow; }
+    </style>
+</head>
+<body onhelp="getF1()" onLoad="onload();">
+    <script>                                    
+        var myData= [<c:out value="${requestScope.myData}" escapeXml="false"/>];
+        var myColumns = ["Id" //0
+                        ,"Id Maestra"//1
+                        ,"Agencia" //2
+                        ,"Asesor" //3
+                        ,"Cliente" //4
+                        ,"Tipo Alerta" //5
+                        ,"Monto Alerta" //6
+                        ,"Fecha Asig." //7
+                        ,"Fecha Aten." //8
+                        ,"Estado" //9
+                        ,"Fecha Ult. Act." //10
+                        ,"Comentario Act."//11
+                        ,"Fecha Final" //12
+                        ,"Comentario Final"]; //13
+
+        //      create ActiveWidgets Grid javascript object
+        var obj = new Active.Controls.Grid;
+        
+        obj.setId("obj");
+        // grid header
+        obj.gridColumn = myColumns;
+        // grid data
+        obj.gridData = myData;
+        //  header methods
+        obj.getColumnCount = function() {return this.gridColumn.length};
+        obj.getColumnText = function(i){return this.gridColumn[i]};
+        //  data methods
+        obj.getDataCount = function() {return this.gridData.length};
+        obj.getDataText = function(i, j){return this.gridData[i][j]};
+        obj.setDataText = function(value, i, j){this.gridData[i][j] = value};
+    
+        obj.setRowHeaderWidth("28px");
+        obj.setColumnHeaderHeight("20px");
+        
+        
+        var row = new Active.Templates.Row; 
+        obj.setTemplate("row", row);
+        
+        obj.setAction("selectionChanged", null);
+            
+        //Evento que reconoce la tecla ENTER
+        var defaultEventHandler = obj.getEvent("onkeydown");
+        var myEventHandler = function(event){
+            if(event.keyCode==121)
+                parent.grabar();
+            else if(event.keyCode==27){
+                parent.salir();
+                event.returnValue = false;//Cancela la función inherente del ESC
+            }else if (event.keyCode == 8)event.returnValue = backspace();//Cancela Backspace
+            else if (event.keyCode == 112)parent.ayuda();//F1 ACERCA DE...
+            else if (event.ctrlKey){//Cancela Control
+                event.keyCode = 0;
+                event.returnValue = false; 
+            }else if (window.event && (event.keyCode == 114 || event.keyCode == 116 ||
+                event.keyCode == 117 || event.keyCode == 122)){//Cancela F3,F5,F6 y F11
+                event.keyCode = 505;
+                if(event.keyCode == 505)event.returnValue = false;  
+            }else
+                defaultEventHandler.call(this, event);
+        }
+        obj.setEvent("onkeydown", myEventHandler);
+
+		var row1 = new Active.Templates.Row; 
+        obj.setTemplate("row", row1);
+        row1.setEvent("ondblclick", function(){this.action("myAction")});    
+        obj.setAction("myAction", function(src){
+            parent.cargaIndividual(obtenerIdMaestra());
+        });
+
+        //Pintado de la grilla
+        document.write(obj);
+
+        function devuelveTam(){
+            return myData.length;
+        }
+
+        function setFoco(){
+        }
+        function getTableIndex() {
+            return obj.getProperty("selection/index");
+        }
+        
+        //Numero de filas de las tablas
+        function NumerodeFilas() {
+            return obj.getRowProperty("values").length;
+        }
+        
+      //Devuelve los datos de la fila que se solicita
+        function devuelveFila(){
+            var fila = new Array(myColumns.length);
+            if(myData.length){
+                var index = obj.getSelectionProperty("index");
+                for (i=0; i<myColumns.length; i++)
+                    fila[i] = obj.getDataProperty('text', index, i);
+            }
+            return  fila;
+        }
+    
+        var f = parent.document.forms[0];
+        function devuelveTamanio(){
+        }
+        
+        function marcarTodos(){
+            for(var i=0; i < myData.length; ++i) { 
+                myData[i][2]="Si";                 
+            }
+            obj.refresh(); 
+        }
+        function desmarcarTodos(){
+            for(var i=0; i < myData.length; ++i) {                
+                myData[i][1]="";                
+            }
+            obj.refresh(); 
+        }
+     
+        if(myData.length>0)
+            obj.setSelectionIndex(0);
+            
+        //Funciones que anulan el click derecho del mouse
+        document.oncontextmenu=new Function("return false");
+        
+        function NumerodeFilas() {
+            return obj.getRowProperty("values").length;
+        }
+
+        function getTableIndex() {
+            return obj.getProperty("selection/index");
+        }
+
+        function funcion_checkbox(newValue){
+            var tamanio = devuelveTamanio();
+            var indice = getTableIndex();
+            for(var i=0; i < tamanio;i++){
+                if (i != indice) {
+                    myData[i][0] = "";
+                }
+            }
+            obj.refresh();
+        }
+
+        var path;
+        function onload(){
+          path = '<%=path%>';
+          parent.mensajeRespuesta('<c:out value="${codigoError}" />', '<c:out value="${mensajeError}" />');
+          if(parent.document.getElementById('hidepage')){
+              parent.loadImages();
+          }
+          setFoco();
+        }
+
+        function datosPagina(pag){
+            parent.onCargarDetalle(pag);
+        }
+
+        function paginacion(direccion){
+            if(myData.length < 1){
+                return;
+              }
+              var pag = eval("<%=hid_pagina%>")+eval(direccion);
+                  if(direccion == "-1"){
+                     <%if(!ini.equals("0")){%>
+                          datosPagina(pag);
+                     <%}else{%>
+                          alert(m_0060);
+                     <%}%>
+                  }else{
+                     <%if(indFin.equals("0")){%>
+                          datosPagina(pag);
+                     <%}else{%>
+                          alert(m_0061);
+                     <%}%>
+                  }
+            }
+
+        valores();
+        function valores(){
+          <%
+            String comienzo = request.getAttribute("inicio") != null?(String)request.getAttribute("inicio"):"0";
+            String fin = request.getAttribute("fin") != null?(String)request.getAttribute("fin"):"0";
+            String total = request.getAttribute("total") != null?(String)request.getAttribute("total"):"0";
+          %>
+            if(myData.length>0){
+               parent.inicial.innerHTML = eval(<%=comienzo%>)+1;
+               parent.final.innerHTML   = <%= fin %>;
+               parent.total.innerHTML   = "de <%= total %>";
+            }else{
+               parent.inicial.innerHTML = "";
+               parent.final.innerHTML   = "";
+               parent.total.innerHTML   = "";
+            }
+        }
+
+        function obtenerIdMaestra() {
+            var filas = NumerodeFilas();
+        	if(filas != 0){
+                return myData[getTableIndex()][1];
+            }else{
+                return '';
+             }
+        }
+        function obtenerIdSeguimientoCartera() {
+        	var filas = NumerodeFilas();
+            if(filas != 0){
+                return myData[getTableIndex()][0];
+            }else{
+                return '';
+            }
+        }
+
+        function obtenerNumeroSolicitudes(){
+            var seleccionadosSolicitudes = "";
+            for(var i = 0; i < NumerodeFilas(); i++){
+                if(myData[i][0] == "Si"){
+                	seleccionadosSolicitudes += myData[i][3] + "-";
+                }
+            }
+            return seleccionadosSolicitudes;
+        }
+
+        function obtenerUsuarioLegalIdsWorkflow(){
+            var seleccionadosSolicitudes = "";
+            for(var i = 0; i < NumerodeFilas(); i++){
+                if(myData[i][0] == "Si"){
+                	seleccionadosSolicitudes += myData[i][1] + "," + myData[i][6] + "-";
+                }
+            }
+            return seleccionadosSolicitudes;
+        }
+
+    </script>
+</body>
+</html>
\ No newline at end of file
diff --git a/DELFINWEBNEW/WebRoot/FINANCIERO/workflow/seguimientoCartera/carga/CR-T-SeguimientoCarteraAdministracionLotes_CNTR.jsp b/DELFINWEBNEW/WebRoot/FINANCIERO/workflow/seguimientoCartera/carga/CR-T-SeguimientoCarteraAdministracionLotes_CNTR.jsp
new file mode 100644
index 0000000..36fcfd0
--- /dev/null
+++ b/DELFINWEBNEW/WebRoot/FINANCIERO/workflow/seguimientoCartera/carga/CR-T-SeguimientoCarteraAdministracionLotes_CNTR.jsp
@@ -0,0 +1,342 @@
+<!-- CR_T_SeguimientoCarteraAdministracionLotes_CNTR.jsp-->
+<%--[Req.S17-022] rsanchez 29.03.2017 - Implementacion WorkFlow Seguimiento Cartera--%>
+
+<%@ page language="java" import="java.util.*" pageEncoding="ISO-8859-1"%>
+<jsp:directive.page import="financ.util.Constante" />
+<%@ taglib prefix="c" uri="http://java.sun.com/jstl/core"%>
+<%@ taglib uri="/delfin" prefix="delfinTagHtml"%>
+<%
+    String idModulo = request.getAttribute("idModulo") != null ? (String) request.getAttribute("idModulo") : "";
+%>
+
+<html>
+<head>
+<title>ADMINISTRACION DE LOTES</title>
+<link id="css"
+	href="${pageContext.request.contextPath}/UTILS/css/DELFIN.css"
+	rel="stylesheet" type="text/css">
+<script
+	src="${pageContext.request.contextPath}/UTILS/Script/MsgValidacion.js"></script>
+<script
+	src="<%=request.getContextPath()%>/UTILS/Script/DELFIN-Utiles.js"></script>
+<script type="text/javascript">
+
+    var operacionEnProceso;
+    var path;
+
+	    function cargar() {
+	        operacionEnProceso = false;
+            f = document.getElementById('frmBusqueda');
+            path = '<%=request.getContextPath()%>';
+        mensajeRespuesta('<c:out value="${codigoError}" />', '<c:out value="${mensajeError}" />');
+        onCargarTabla();
+    }
+
+    function cargarLotes() {
+        var params = '?action=MOSTRAR_CONTENEDOR';
+            params += '&time=' + (new Date()).getTime();
+        var url = path + '/CR_T_SeguimientoCarteraCargaAlerta_Servlet' + params;
+        var attribs = 'dialogHeight:250px;dialogWidth:600px; center:yes; help:no; resizable:no; status:no';
+        window.showModalDialog(url, window, attribs);
+    }
+
+    function detalleCarga() {
+        var idLote = document.ifrmDetalleWorkflowSeguimiento.obtenerIdLote();
+        if (isEmpty(idLote)) {
+            return;
+        }
+        var params = '?action=MOSTRAR_CONTENEDOR';
+        params += '&idLote=' + idLote;
+        var url = path + '/CR_T_SeguimientoCarteraDetalleCarga_Servlet' + params;
+        var attribs = 'dialogHeight:600px;dialogWidth:900px; center:yes; help:no; resizable:no; status:no';
+        window.showModalDialog(url, window, attribs);
+    }
+
+    function pag(direccion){
+        document.ifrmDetalleWorkflowSeguimiento.paginacion(direccion);
+    }
+
+    function onCargarTabla(pag) {
+        var params = '?action=CARGAR_INFORMACION_LOTE';
+        params += '&fechaAsignacionInicial=' + byID('fechaAsignacionInicial').value;
+        params += '&fechaAsignacionFinal=' + byID('fechaAsignacionFinal').value;
+        params += '&codigoEstado=' + byID('cboEstado').value;
+        if(pag){
+            params += '&hid_pagina=' + pag;
+        }
+
+        var url = path + '/CR_T_SeguimientoCarteraAdministracionLotes_Servlet' + params;
+        document.getElementById('hidepage').style.visibility = '';
+        document.ifrmDetalleWorkflowSeguimiento.location.replace(url);
+    }
+
+    function keyDown(DnEvents){
+        k = window.event.keyCode;
+        if (k == 13){
+            return false;
+        }
+        if (k == 120){
+            return false;
+        }
+        if (k == 27){
+            salir();
+            return false;
+        }
+        if (k == 121){
+            grabar()
+            return false;
+        }
+        if (k == 112){
+            ayuda();
+            return false;
+        }
+        if (event.ctrlKey){
+            event.keyCode = 0;
+            return false;
+        }
+        if (k==46){
+            return false;
+        }
+        if (window.event && (k == 114 || k == 116 || k == 117 || k == 122))
+            event.keyCode = 505;
+        if(event.keyCode == 505)
+            return false;
+    }
+    document.onkeydown = keyDown;
+
+    document.oncontextmenu = function(){return false}
+
+    function salir() {
+        var params = '?action=MOSTRAR_DETALLE';
+        params += '&idModulo=143002';
+        window.location = path + '/CR_C_ConsultaSeguimientoCartera_Servlet' + params;
+
+    }
+
+    function aprobarLote() {
+        autorizarLote('<%=Constante.CODIGO_LOTE_APROBADO%>');
+    }
+
+    function rechazarLote() {
+        autorizarLote('<%=Constante.CODIGO_LOTE_RECHAZADO%>');
+    }
+
+    function autorizarLote(CodigoEstadoLote) {
+        if (operacionEnProceso) {
+            alert(m_0156);
+            return;
+        }
+        var params = serializeForm(byID('frmAdministracion'));
+            params = '&action=CAMBIAR_ESTADO';
+	        params += '&idLote=' + document.ifrmDetalleWorkflowSeguimiento.obtenerIdLote();
+	        params += '&estadoCambiaLote=' + CodigoEstadoLote;
+	        params += '&time=' + new Date().getTime();
+	        var url = path + '/CR_T_SeguimientoCarteraAdministracionLotes_Servlet';
+
+        operacionEnProceso = true;
+        ajaxRequestPOST(url, params, false, function(xmldoc) {
+            mensajeRespuestaXML(xmldoc, function() {
+                alert(m_8570);
+                onCargarTabla();
+            });
+        });
+    }
+</script>
+</head>
+<body onhelp="getF1();" class="colorbody" onload="cargar();"
+	style="padding: 0px, 0px, 0px, 0px; overflow: auto;">
+	<form name="frmAdministracion" id="frmAdministracion" method="post">
+		<input type="hidden" name="hidNumeroDocumento"> <input
+			type="hidden" name="usuarioSolicitante"> <input type="hidden"
+			name="usuarioLegal"> <input type="hidden" name="hidIdModulo"
+			value='<%=idModulo%>'>
+		<div id="hidepage"
+			style="position: absolute; left: 400px; top: 280px; width: 100; height: 20">
+			<table>
+				<tr>
+					<td align="center"><img
+						src="<%=request.getContextPath()%>/UTILS/img/loadings.gif"></td>
+				</tr>
+				<tr>
+					<td align="center" style="font-weight: bold;"><span
+						class="etiqueta">Cargando...</span></td>
+				</tr>
+			</table>
+		</div>
+		<div id="wndHide"></div>
+		<table cellpadding="0" cellspacing="0" width="100%">
+			<tr>
+				<td class="tituloopcion">ADMINISTRACION DE LOTES - SEGUIMIENTO
+					DE CARTERA</td>
+			</tr>
+			<tr>
+				<td height="4"><img
+					src="<%=request.getContextPath()%>/UTILS/img/t.gif" width="1"
+					height="2"></td>
+			</tr>
+		</table>
+		<!-- tabla inicio -->
+
+		<table border="0" cellpadding="0" cellspacing="2" width="99.5%"
+			align="center">
+			<tr>
+				<td>
+					<table border="1" cellpadding="0" cellspacing="0" width="100%"
+						align="center" class="frame">
+						<tr>
+							<td height="20" align="center">
+								<table width="100%" cellpadding="0" cellspacing="0" border="0">
+									<tr>
+										<td align="left" colspan="4" valign="middle"><span>
+												<div id="itMenu1"
+													style="width: 30px; height: 20px; top: 26px; z-index: 1;"
+													class="itMenu" onMouseOver="despMenu(this.id,1)"
+													onMouseOut="despMenu(this.id,0)">
+													<div id="itMenu10" style="width: 30px" class="itMenuDes"
+														onMouseOver="destacar(this,1)"
+														onMouseOut="destacar(this,0)">
+														<a href="" target="_parent" class="itLink"><delfinTagHtml:boton
+																nombre="BT_Aprobar_P.gif"
+																onclick="javascript:aprobarLote();" /></a>
+													</div>
+													<div id="itMenu11" style="width: 30px" class="itMenuDes"
+														onMouseOver="destacar(this,1)"
+														onMouseOut="destacar(this,0)">
+														<a href="" target="_parent" class="itLink"><delfinTagHtml:boton
+																nombre="BT_Rechazar_P.gif"
+																onclick="javascript:rechazarLote();" /></a>
+													</div>
+												</div>
+										</span> <delfinTagHtml:boton
+												nombre="BT_AutorizarLotesSeguimiento.gif"
+												onMouseOver="despMenu('itMenu1',1)"
+												onMouseout="despMenu('itMenu1',0)" /> <delfinTagHtml:boton
+												nombre="BT_DetalleLotesSeguimiento.gif"
+												onclick="javascript:detalleCarga()" /> <delfinTagHtml:boton
+												nombre="BT_CargarLotesSeguimiento.gif"
+												onclick="javascript:cargarLotes()" /> <delfinTagHtml:boton
+												nombre="BT_Salir.gif" onclick="javascript:salir();" /></td>
+									</tr>
+								</table>
+							</td>
+						</tr>
+					</table>
+				</td>
+			</tr>
+			<tr>
+				<td height="4"><img
+					src="<%=request.getContextPath()%>/UTILS/img/t.gif" width="1"
+					height="2"></td>
+			</tr>
+			<tr>
+				<td class="tituloframe">FILTROS DE BUSQUEDA</td>
+			</tr>
+			<tr>
+				<td>
+					<table border="2" cellpadding="0" cellspacing="0" width="100%"
+						align="center" class="frame">
+						<tr>
+							<td height="20" align="center">
+								<table width="99%" cellpadding="0" cellspacing="2" border="0">
+									<tr id="trFiltroActivos1">
+										<td class="etiqueta" align="left" width="110" valign="middle">
+											Fecha Proceso</td>
+										<td class="etiqueta" width="200">del <input
+											name="fechaAsignacionInicial" id="txtFechaAsignacionInicial"
+											value="<c:out value='${requestScope.fechaProcesoInicio}' />" style="width: 70px"
+											class="campoobligatorioce" tabindex="1"
+											onBlur="this.value=vuelveFecha(this.value);validarFecha('fechaAsignacionInicial');"
+											onfocus="this.select(); field='txtFechaAsignacion'; nextfield ='txtFechaAsignacionFinal';">
+											al <input name="fechaAsignacionFinal"
+											id="txtFechaAsignacionFinal"
+											value="<c:out value='${requestScope.fechaProcesoFin}' />" style="width: 70px"
+											class="campoobligatorioce" tabindex="1"
+											onBlur="this.value=vuelveFecha(this.value);validarFecha('fechaAsignacionFinal');"
+											onfocus="this.select(); field='txtFechaAsignacion'; nextfield ='cboEstado';">
+										</td>
+										<td class="etiqueta" align="left" width="130" valign="middle">
+											Estado Lote</td>
+										<td><select name="cboEstado" id="cboEstado"
+											style="width: 120px;" tabindex="4" class="campoobligatorioiz"
+											onfocus="field='cboEstado'; nextfield ='descripcionSolicitante';">
+												<c:forEach var='beanCombo'
+													items='${requestScope.listBeanEstado}'>
+													<option value="<c:out value='${beanCombo.codigo}'/>">
+														<c:out value='${beanCombo.descripcion}' />
+													</option>
+												</c:forEach>
+										</select></td>
+										<td><delfinTagHtml:boton nombre="BT_Buscar_P.gif"
+												onclick="javascript:onCargarTabla();" /></td>
+									</tr>
+								</table>
+							</td>
+						</tr>
+					</table>
+				</td>
+			</tr>
+			<tr>
+				<td height="4"><img
+					src="<%=request.getContextPath()%>/UTILS/img/t.gif" width="1"
+					height="2"></td>
+			</tr>
+			<tr>
+				<td>
+					<table cellpadding="0" border="0" cellspacing="0" width="100%"
+						align="center">
+						<tr>
+							<td align="center" valign="top" width="100%">
+								<table width="100%" align="center" cellspacing="0" border="0">
+									<tr>
+										<td valign="top">
+											<table width="100%" cellpadding="0" cellspacing="0"
+												border="0">
+												<tr>
+													<td class="tituloframe">LOTES CARGADOS</td>
+												</tr>
+												<tr>
+													<td>
+                                                        <iframe id="ifrmDetalleWorkflowSeguimiento" name="ifrmDetalleWorkflowSeguimiento" frameborder="0" width="100%" height="300px"  class="frame"></iframe>
+													</td>
+												</tr>
+											</table>
+										</td>
+									</tr>
+								</table>
+								<table width="100%">
+									<tr>
+										<td align="right"><IMG
+											src="<%=request.getContextPath()%>/UTILS/img/PagRe.gif"
+											onClick="pag(-1);"
+											style="CURSOR: hand; vertical-align: middle;" alt="Anterior">
+											<label id="inicial"
+											style="width: 25; text-align: left; font-size: 8pt; font-family: Arial; vertical-align: middle;"></label>
+											<IMG src="<%=request.getContextPath()%>/UTILS/img/t.gif"
+											height=1 width="10"> <label id="final"
+											style="width: 25; text-align: right; font-size: 8pt; font-family: Arial; vertical-align: middle;"></label>
+											<IMG src="<%=request.getContextPath()%>/UTILS/img/PagAv.gif"
+											onClick="pag(1)"
+											style="CURSOR: hand; vertical-align: middle;" alt="Siguiente">
+											<label id="total"
+											style="width: 50; text-align: left; font-size: 8pt; font-family: Arial; vertical-align: middle;"></label>
+										</td>
+									</tr>
+								</table>
+							</td>
+						</tr>
+					</table>
+				</td>
+			</tr>
+		</table>
+
+		<!-- tabla final -->
+		<table cellpadding="0" cellspacing="0" border="0" width="100%">
+			<tr>
+				<td><%@ include file="/GENERAL/Header.jsp"%>
+				</td>
+			</tr>
+			<tr height="40px"></tr>
+		</table>
+	</form>
+</body>
+</html>
\ No newline at end of file
diff --git a/DELFINWEBNEW/WebRoot/FINANCIERO/workflow/seguimientoCartera/carga/CR-T-SeguimientoCarteraAdministracionLotes_TABLA.jsp b/DELFINWEBNEW/WebRoot/FINANCIERO/workflow/seguimientoCartera/carga/CR-T-SeguimientoCarteraAdministracionLotes_TABLA.jsp
new file mode 100644
index 0000000..c24d426
--- /dev/null
+++ b/DELFINWEBNEW/WebRoot/FINANCIERO/workflow/seguimientoCartera/carga/CR-T-SeguimientoCarteraAdministracionLotes_TABLA.jsp
@@ -0,0 +1,197 @@
+<!-- CR_T_SeguimientoCarteraAdministracionLotes_TABLA.jsp -->
+<%-- [S17-022] rsanchez 30.03.2017 --%>
+<jsp:directive.page import="general.utils.Paginacion" />
+<%@ taglib prefix="c" uri="http://java.sun.com/jstl/core"%>
+<%@ taglib prefix='fmt' uri='http://java.sun.com/jstl/fmt'%>
+<%
+	String path =request.getContextPath();
+	String myData = request.getAttribute("myData") != null ? (String)request.getAttribute("myData") : "";
+	String hid_pagina = request.getParameter("hid_pagina") != null?request.getParameter("hid_pagina"):"1";  
+	String ini = request.getAttribute("inicio") != null?(String)request.getAttribute("inicio"):"0";
+	String indFin = request.getAttribute("indFin") != null?(String)request.getAttribute("indFin"):"0";
+%>
+<html>
+    <head>
+        <!-- Invocaci�n de Estilos -->
+        <link id="css" href="<%=path%>/UTILS/css/DELFIN.css" rel="stylesheet" type="text/css">
+        <!-- Invocaci�n de JavaScript -->
+        <script src="<%=path%>/UTILS/Script/grid.js"></script>
+        <script src="<%=path%>/UTILS/Script/MsgValidacion.js"></script>
+        <script src="<%=path%>/UTILS/Script/DELFIN-Utiles.js"></script>
+        <style>
+            .active-controls-grid {width: "100%"; height: 100%; font: menu;}
+            .active-column-0  {width: 120px;text-align: left;}
+            .active-column-1  {width: 100px;text-align: center;}
+            .active-column-2  {width: 80px;text-align: left;}
+            .active-column-3  {width: 80px;text-align: left;}
+            .active-column-4  {width: 200px;text-align: left;}
+            .active-column-5  {width: 100px;text-align: left;}
+            .active-column-6  {width: 200px;text-align: left;}
+            .active-column-7  {width: 100px;text-align: right;}
+            .active-column-8  {width: 100px;text-align: left;}
+            .active-grid-column {border-right: 1px solid threedlightshadow; }
+            .active-grid-row {border-bottom: 1px solid threedlightshadow; }
+        </style>
+    </head>
+    <body onload="onload();" TOPMARGIN=0 LEFTMARGIN=0 MARGINHEIGHT=0 MARGINWIDTH=0>
+        <script>
+	        var path;
+	        function onload(){
+	          path = '<%=path%>';
+	          parent.mensajeRespuesta('<c:out value="${codigoError}" />', '<c:out value="${mensajeError}" />');
+              if(parent.document.getElementById('hidepage')){
+                  parent.loadImages();
+              }
+	          setFoco();
+	        }
+
+	        var posini;
+	        var posfin;
+	        var indice = '0';
+	        var myData = [<c:out value="${myData}" escapeXml="false"/>];
+	
+	        var myColumns = ["Id Lote",//0
+	             	         "Fecha de Asignaci�n",//1
+	             	         "Hora",//1
+	                         "Usuario Registro",//2
+	                         "Nombre Usuario Registro",//3
+                             "Usuario Estado",//4
+                             "Nombre Usuario Estado",//5
+	                         "Total Registros",//6
+	                         "Estado"//7
+	                         ];
+	
+	        //  create ActiveWidgets Grid javascript object
+	        var obj = new Active.Controls.Grid;
+	
+	        obj.setId("obj");
+	        // grid header
+	        obj.gridColumn = myColumns;
+	        // grid data
+	        obj.gridData = myData;
+	        //  header methods
+	        obj.getColumnCount = function() {return this.gridColumn.length};
+	        obj.getColumnText = function(i){return this.gridColumn[i]};
+	        //  data methods
+	        obj.getDataCount = function() {return this.gridData.length};
+	        obj.getDataText = function(i, j){return this.gridData[i][j]};
+	        obj.setDataText = function(value, i, j){this.gridData[i][j] = value};
+	
+	        obj.setRowHeaderWidth("28px");
+	        obj.setColumnHeaderHeight("20px");
+	
+	        var row = new Active.Templates.Row; 
+	        row.setEvent("ondblclick", function(){this.action("myAction")});
+	        obj.setTemplate("row", row);
+	        obj.setAction("myAction", function(src){
+	            
+	        });
+	        //Evento Focus de la grilla 
+	        obj.setAction("selectionChanged", mySelect);
+	
+	        //Evento que reconoce la tecla ENTER
+	        var defaultEventHandler = obj.getEvent("onkeydown");
+	        var myEventHandler = function(event){
+	            if(event.keyCode==13){
+	                //
+	            }else if(event.keyCode==27){
+	                parent.parent.salir();
+	                event.returnValue = false;
+	            }else if (event.keyCode == 8)event.returnValue = backspace();//Cancela Backspace
+	            else if (event.keyCode == 112)parent.ayuda();//F1 ACERCA DE...
+	            else if (event.ctrlKey){//Cancela Control
+	                event.keyCode = 0;
+	                event.returnValue = false; 
+	            }else if (window.event && (event.keyCode == 114 || event.keyCode == 116 ||
+	                event.keyCode == 117 || event.keyCode == 122)){//Cancela F3,F5,F6 y F11
+	                event.keyCode = 505;
+	                if(event.keyCode == 505)event.returnValue = false;  
+	            }else
+	                defaultEventHandler.call(this, event);
+	        }
+	        obj.setEvent("onkeydown", myEventHandler);
+	
+	        //Pintado de la grilla
+	        document.write(obj);
+	
+	        function setFoco() {
+	            try{
+	              if(myData.length == 0){
+	                parent.nuevo();
+	              }
+	              if(myData.length > eval(indice) && indice > -1){
+	                  obj.setSelectionIndex(eval(indice));
+	              }else if(myData.length > 0){
+	                  obj.setSelectionIndex(0);
+	              }
+	            }catch(error){
+	            }
+	        }
+
+	        function obtenerIdLote() {
+	            var index = obj.getProperty("selection/index");
+	            if(index >= 0){
+	                return myData[index][0];
+	            }
+	            return '';
+	        }
+
+	        function NumerodeFilas() {
+	            return obj.getRowProperty("values").length;
+	        }
+	
+	        function getTableIndex() {
+	            return obj.getProperty("selection/index");
+	        }
+	
+	        function mySelect(){
+	
+	        }
+
+
+	        function datosPagina(pag){
+	            parent.onCargarTabla(pag);
+	        }
+
+	        function paginacion(direccion){
+	            if(myData.length < 1){
+	                return;
+	              }
+	              var pag = eval("<%=hid_pagina%>")+eval(direccion);
+	                  if(direccion == "-1"){
+	                     <%if(!ini.equals("0")){%>
+	                          datosPagina(pag);
+	                     <%}else{%>
+	                          alert(m_0060);
+	                     <%}%>
+	                  }else{
+	                     <%if(indFin.equals("0")){%>
+	                          datosPagina(pag);
+	                     <%}else{%>
+	                          alert(m_0061);
+	                     <%}%>
+	                  }
+	            }
+
+	        valores();
+	        function valores(){
+	          <%
+	            String comienzo = request.getAttribute("inicio") != null?(String)request.getAttribute("inicio"):"0";
+	            String fin = request.getAttribute("fin") != null?(String)request.getAttribute("fin"):"0";
+	            String total = request.getAttribute("total") != null?(String)request.getAttribute("total"):"0";
+	          %>
+	            if(myData.length>0){
+	               parent.inicial.innerHTML = eval(<%=comienzo%>)+1;
+	               parent.final.innerHTML   = <%= fin %>;
+	               parent.total.innerHTML   = "de <%= total %>";
+	            }else{
+	               parent.inicial.innerHTML = "";
+	               parent.final.innerHTML   = "";
+	               parent.total.innerHTML   = "";
+	            }
+	        }
+		        
+
+	    </script>
+    </body>
+</html>
\ No newline at end of file
diff --git a/DELFINWEBNEW/WebRoot/FINANCIERO/workflow/seguimientoCartera/carga/CR-T-SeguimientoCarteraCargaAlerta_CNTR.jsp b/DELFINWEBNEW/WebRoot/FINANCIERO/workflow/seguimientoCartera/carga/CR-T-SeguimientoCarteraCargaAlerta_CNTR.jsp
new file mode 100644
index 0000000..333c9b6
--- /dev/null
+++ b/DELFINWEBNEW/WebRoot/FINANCIERO/workflow/seguimientoCartera/carga/CR-T-SeguimientoCarteraCargaAlerta_CNTR.jsp
@@ -0,0 +1,195 @@
+<!-- CR-T-CargaAlertaSeguimientoCartera_CNTR.jsp -->
+<%-- [S17-022] rsanchez 24.03.2017 --%>
+
+<%@ taglib uri="/delfin" prefix="delfinTagHtml"%>
+<%@ taglib prefix="c" uri="http://java.sun.com/jstl/core"%>
+<%@ taglib prefix='fmt' uri='http://java.sun.com/jstl/fmt'%>
+
+<html>
+<head>
+    <META HTTP-EQUIV="Pragma" CONTENT="no-cache" />
+    <!-- Titulo del M�dulo -->
+    <title>Carga Alerta</title>
+    <!-- Invocaci�n de Estilos -->
+    <link id="css" href="<%=request.getContextPath()%>/UTILS/css/DELFIN.css" rel="stylesheet" type="text/css">
+    <!-- Invocaci�n de Java Scripts -->
+    <script src="<%=request.getContextPath()%>/UTILS/Script/MsgValidacion.js"></script>
+    <script src="<%=request.getContextPath()%>/UTILS/Script/DELFIN-Utiles.js"></script>
+
+    <script type="text/javascript">
+        var form;
+        var path = '<%=request.getContextPath()%>';
+        var operacionEnProceso = false;
+        
+        function onLoad(){
+            form = document.frmRegistro;
+            form.txtRuta.focus();
+            document.getElementById('hidepage').style.visibility = '';
+        }
+
+
+        function grabar(){
+            if(!operacionEnProceso){
+                if(validar()){
+                    operacionEnProceso = true;
+                    document.getElementById('hidepage').style.visibility = '';
+                    form.chkReproceso.value = form.chkReproceso.checked ? 'S' : 'N';
+                    form.submit();                }  
+            }else{
+                alert(m_0156);
+            }
+        }
+
+        function onChangeFile(){
+            var fullPath = byID('txtRuta').value;
+            if (fullPath) {
+                var startIndex = (fullPath.indexOf('\\') >= 0 ? fullPath.lastIndexOf('\\') : fullPath.lastIndexOf('/'));
+                var filename = fullPath.substring(startIndex);
+                if (filename.indexOf('\\') === 0 || filename.indexOf('/') === 0) {
+                    filename = filename.substring(1);
+                }
+                byID('txtRutaX').value = filename;
+            }
+        }
+
+        function validar(){
+            if (form.txtRuta.value == ""){
+                alert(m_9133);
+                return false;
+            }
+            
+            var str = form.txtRuta.value.toUpperCase();
+            var extension = str.substring(str.lastIndexOf('.')+1);
+            if(extension != 'XLS'){
+                form.txtRuta.value = "";
+                alert(m_0394);
+                return false;
+            }
+            return true;
+        }
+
+
+        function salir(){
+            window.close();
+            //window.location = path + '/GENERAL/Menu.jsp';
+        }
+        
+        function respuestaMultipartOK(){
+            alert(m_0021);
+            salir();
+        }
+        
+        document.onkeydown = keyDown;
+        function keyDown(DnEvents) {
+          k = window.event.keyCode;
+          if (k == 27) {
+            salir();
+            return false;
+          }
+        }
+        
+        function cancelClick(event){
+            event = event || window.event;
+            event.preventDefault ? event.preventDefault() : event.returnValue = false;
+        }
+
+  </script>
+</head>
+<body class="colorbody" onload="onLoad();">
+
+    <div id="hidepage" class="hidePage" style="left: 140px; top: 50px; width: 180; height: 25; display:none">
+        <img src="<%=request.getContextPath()%>/UTILS/img/loading.gif"><br/>
+        <center>Validando Formato . . .</center>
+    </div>
+
+    <form id="frmRegistro" name="frmRegistro" method="post" target="ifrmHidden" enctype="multipart/form-data" action="<%=request.getContextPath()%>/CR_T_SeguimientoCarteraCargaAlerta_Servlet">
+        <input type="hidden" id="action" name="action" value="PROCESAR" />
+        <div id="wndHide" ></div>
+        <table cellpadding="0" cellspacing="0" width="100%">
+	        <tr>
+	          <td class="tituloopcion">
+	            SEGUIMIENTO DE CARTERA - CARGA ALERTA
+	          </td>
+	        </tr>
+	        <tr>
+	          <td height="4">
+	            <img src="<%=request.getContextPath()%>/UTILS/img/t.gif" width="1" height="2">
+	          </td>
+	        </tr>
+        </table>
+      <table border="0" cellpadding="0" cellspacing="2" width="99.5%" align="center" >
+        <tr>
+          <td>
+            <table border="1" cellpadding="0" cellspacing="0" width="100%" align="center" class="frame">
+              <tr>
+                <td height="20" align="center">
+                  <table width="100%" cellpadding="0" cellspacing="0" border="0">
+                    <tr>
+                      <td align="left" colspan="4" valign="middle">
+                        <delfinTagHtml:boton nombre="BT_Grabar.gif" onclick="JavaScript:grabar();" />
+                        <delfinTagHtml:boton nombre="BT_Salir.gif" onclick="JavaScript:salir();" />
+                      </td>
+                    </tr>
+                  </table>
+                </td>
+              </tr>
+            </table>
+          </td>
+        </tr>
+        <tr>
+          <td height="2">
+            <img src="<%=request.getContextPath()%>/UTILS/img/t.gif" width="1" height="2">
+          </td>
+        </tr>
+        <tr>
+            <td class="tituloframe">CARGA ALERTA</td>
+        </tr>
+        <tr>
+          <td>
+            <table border="2" cellpadding="0" cellspacing="0" width="100%" align="center" class="frame">
+              <tr>
+                <td height="20" align="center">
+                  <table width="99%" cellpadding="0" cellspacing="2" border="0">
+                    <tr>
+                      <td class="etiqueta" align="left" valign="middle">
+                        Fecha Proceso
+                      </td>
+                      <td>
+                        <input type="text" id="fechaProceso" name="fechaProceso" value="<c:out value='${requestScope.fechaProceso}' />" class="campodisplayiz"/>
+                      </td>
+                    </tr>
+                    <tr>
+                      <td class="etiqueta" align="left" valign="middle">
+                        Archivo
+                      </td>
+                      <td>
+                        <input type="input" id="txtRutaX" name="txtRutaX" class="campodisplayiz" style="width:300px;" />
+                        <input type="file" id="txtRuta" name="txtRuta" class="campodisplayiz" onchange="onChangeFile();" onkeypress="alert('Debe usar el bot�n Examinar'); return false;" style="width:1px;" alt="Examinar"/>
+                      </td>
+                    </tr>
+                    <tr>
+                      <td width="10%" class="etiqueta">Reprocesar</td>
+                      <td>
+                        <input name="chkReproceso" type="checkbox" value="S" >
+                      </td>
+                    </tr>
+                  </table>
+                </td>
+              </tr>
+            </table>
+          </td>
+        </tr>
+        <tr>
+          <td height="4">
+            <img src="<%=request.getContextPath()%>/UTILS/img/t.gif" width="1" height="2">
+          </td>
+        </tr>
+      </table>    
+      <table cellpadding="0" cellspacing="0" align="center">
+      </table>        
+      
+    </form>
+    <iframe id="ifrmHidden" name="ifrmHidden" style="display: none"></iframe>
+    
+</body>
+</html>
\ No newline at end of file
diff --git a/DELFINWEBNEW/WebRoot/FINANCIERO/workflow/seguimientoCartera/carga/CR-T-SeguimientoCarteraDetalleCarga_CHILD.jsp b/DELFINWEBNEW/WebRoot/FINANCIERO/workflow/seguimientoCartera/carga/CR-T-SeguimientoCarteraDetalleCarga_CHILD.jsp
new file mode 100644
index 0000000..272e724
--- /dev/null
+++ b/DELFINWEBNEW/WebRoot/FINANCIERO/workflow/seguimientoCartera/carga/CR-T-SeguimientoCarteraDetalleCarga_CHILD.jsp
@@ -0,0 +1,369 @@
+<!-- CR-T-SeguimientoCarteraDetalleCarga_CHILD.jsp-->
+<%--[Req.S17-022] rsanchez 31.03.2017 - Implementacion WorkFlow Seguimiento Cartera--%>
+
+<%@ page language="java" import="java.util.*" pageEncoding="ISO-8859-1"%>
+<jsp:directive.page import="financ.util.Constante" />
+<%@ taglib prefix="c" uri="http://java.sun.com/jstl/core"%>
+<%@ taglib uri="/delfin" prefix="delfinTagHtml"%>
+<%
+    String idModulo = request.getAttribute("idModulo") != null ? (String) request.getAttribute("idModulo") : "";
+%>
+<html>
+<head>
+<title>DETALLE CARGA DE LOTE</title>
+<link id="css"
+	href="${pageContext.request.contextPath}/UTILS/css/DELFIN.css"
+	rel="stylesheet" type="text/css">
+<script
+	src="${pageContext.request.contextPath}/UTILS/Script/MsgValidacion.js"></script>
+<script
+	src="<%=request.getContextPath()%>/UTILS/Script/DELFIN-Utiles.js"></script>
+<script type="text/javascript">
+    var f = null;
+    var path;
+    field = "";
+
+    function onLoad() {
+        f = document.getElementById('frmBusqueda');
+        path = '<%=request.getContextPath()%>';
+        document.getElementById('hidepage').style.visibility = '';
+        onCargarDetalle();
+    }
+
+    function onCargarDetalle() {
+        var params = '?action=CARGAR_DETALLE';
+            params += '&fechaAsignacionInicial=' + byID('fechaAsignacionInicial').value;
+            params += '&fechaAsignacionFinal=' + byID('fechaAsignacionFinal').value;
+            params += '&fechaAtencionInicial=' + byID('fechaAtencionInicial').value;
+            params += '&fechaAtencionFinal=' + byID('fechaAtencionFinal').value;
+            params += '&codigoTipoAlerta=' + byID('cboTipoAlerta').value;
+            if(!isEmpty(byID('descripcionAgencia').value)){
+                params += '&codigoAgencia=' + byID('codigoAgencia').value;
+            }
+            if(!isEmpty(byID('descripcionAsesor').value)){
+                params += '&codigoAsesor=' + byID('codigoAsesor').value;
+            }
+            if(!isEmpty(byID('nombreCliente').value)){
+                params += '&codigoCliente=' + byID('codigoCliente').value;
+            }
+            
+        var url = path + '/CR_T_SeguimientoCarteraDetalleCarga_Servlet' + params;
+        document.getElementById('hidepage').style.visibility = '';
+        document.ifrmDetalleWorkflow.location.replace(url);
+      }
+
+    function pag(direccion) {
+        document.ifrmDetalleWorkflowSeguimiento.paginacion(direccion);
+    }
+
+    function buscarAgencia() {
+        var nombre = "AGENCIA";
+        var valor = f.codigoAgencia.value != "" ? f.codigoAgencia.value.toUpperCase() : "NULO";
+        var valor_2 = f.descripcionAgencia.value != "" ? f.descripcionAgencia.value.toUpperCase() : "NULO";
+
+        valor1 = "CODIGO";
+        valor2 = "DESCRIPCION";
+        if (valor_2 != 'NULO') {
+            //alert(valor_2);
+            valor = valor_2;
+            valor1 = "DESCRIPCION";
+            valor2 = "CODIGO";
+        }
+
+        var params = '?cboValorBuscar1=' + valor1;
+        params += '&cboValorBuscar1=' + valor1;
+        params += '&cboValorBuscar2=' + valor2;
+        params += '&txtValorBuscar=' + valor;
+        params += '&tabla=' + nombre;
+        params += '&indicadorEnFuncionamiento=S';
+        var url = path + '/GENERAL/Busqueda.jsp';
+        window.showModalDialog(url + params, window, "dialogHeight:330px;dialogWidth:670px;center:yes;help:no;resizable:no;");
+    }
+
+    function buscarAsesor() {
+        var valor = byID('descripcionAsesor').value;
+        var nombre = 'USUARIO';
+
+        var url = path + '/GENERAL/Busqueda.jsp';
+        var params = '?cboValorBuscar1=Descripcion';
+        params += '&cboValorBuscar2=Codigo';
+        params += '&txtValorBuscar=' + valor;
+        params += '&tabla=' + nombre;
+        params += '&indicadorTipo=0'
+        window.showModalDialog(url + params, window, 'dialogHeight:330px;dialogWidth:670px;center:yes;help:no;resizable:no;status:no');
+    }
+
+    function buscarPersonas() {
+        var valor = byID('nombreCliente').value;
+        var nombre = "PERSONAS";
+        valor1 = 'Nombre';
+        valor2 = 'DOI';
+        if (isEmpty(valor)) {
+            valor = 'NULO';
+        }
+        var url = path + "/GENERAL/Busqueda.jsp?cboValorBuscar1=" + valor1 + "&cboValorBuscar2=" + valor2 + "&txtValorBuscar=" + valor + "&tabla=" + nombre;
+        var opciones = "dialogHeight:330px;dialogWidth:670px;center:yes;help:no;resizable:no;status:no";
+        window.showModalDialog(url, window, opciones);
+    }
+
+    function salir() {
+        window.close();
+    }
+</script>
+</head>
+<body class="colorbody" onload="onLoad();">
+	<form name="frmBusqueda" id="frmBusqueda" method="post">
+		<input type="hidden" name="hidNumeroDocumento"> <input
+			type="hidden" name="usuarioSolicitante"> <input type="hidden"
+			name="usuarioLegal"> <input type="hidden" name="hidIdModulo"
+			value='<%=idModulo%>'>
+		<div id="hidepage"
+			style="position: absolute; left: 460px; top: 200px; width: 100; height: 20">
+			<table>
+				<tr>
+					<td align="center"><img
+						src="<%=request.getContextPath()%>/UTILS/img/loadings.gif"></td>
+				</tr>
+				<tr>
+					<td align="center" style="font-weight: bold;"><span
+						class="etiqueta">Cargando...</span></td>
+				</tr>
+			</table>
+		</div>
+		<div id="wndHide"></div>
+		<table cellpadding="0" cellspacing="0" width="100%">
+			<tr>
+				<td class="tituloopcion">DETALLE DE LOTE - SEGUIMIENTO DE
+					CARTERA
+			</tr>
+			<tr>
+				<td height="4"><img
+					src="<%=request.getContextPath()%>/UTILS/img/t.gif" width="1"
+					height="2"></td>
+			</tr>
+		</table>
+		<table border="0" cellpadding="0" cellspacing="2" width="99.5%"
+			align="center">
+			<tr>
+				<td>
+					<table border="1" cellpadding="0" cellspacing="0" width="100%"
+						align="center" class="frame">
+						<tr>
+							<td height="20" align="center">
+								<table width="100%" cellpadding="0" cellspacing="0" border="0">
+									<tr>
+										<td align="left" colspan="4" valign="middle"><span>
+												<div id="itMenu1"
+													style="width: 30px; height: 20px; top: 26px; z-index: 1;"
+													class="itMenu" onMouseOver="despMenu(this.id,1)"
+													onMouseOut="despMenu(this.id,0)">
+													<div id="itMenu10" style="width: 30px" class="itMenuDes"
+														onMouseOver="destacar(this,1)"
+														onMouseOut="destacar(this,0)">
+														<a href="" target="_parent" class="itLink"><delfinTagHtml:boton
+																nombre="BT_Individual.gif"
+																onclick="javascript:generarReporte('PDF');return false;" /></a>
+													</div>
+													<div id="itMenu11" style="width: 30px" class="itMenuDes"
+														onMouseOver="destacar(this,1)"
+														onMouseOut="destacar(this,0)">
+														<a href="" target="_parent" class="itLink"><delfinTagHtml:boton
+																nombre="BT_Masivo.gif"
+																onclick="javascript:generarReporte('EXCEL');return false;" /></a>
+													</div>
+												</div>
+										</span> <delfinTagHtml:boton nombre="BT_Salir.gif"
+												onclick="javascript:salir();" /></td>
+									</tr>
+								</table>
+							</td>
+						</tr>
+					</table>
+				</td>
+			</tr>
+			<tr>
+				<td height="4"><img
+					src="<%=request.getContextPath()%>/UTILS/img/t.gif" width="1"
+					height="2"></td>
+			</tr>
+			<tr>
+				<td class="tituloframe">FILTROS DE BUSQUEDA</td>
+			</tr>
+			<tr>
+				<td>
+					<table border="0" cellpadding="0" cellspacing="0" width="100%"
+						align="center" class="frame">
+						<tr>
+							<td height="20" align="center">
+								<table width="99%" cellpadding="0" cellspacing="2" border="0">
+									<tr id="trFiltroActivos1">
+										<td class="etiqueta" align="left" width="110" valign="middle">
+											Fecha Asignaci&oacute;n</td>
+										<td class="etiqueta" width="200">del <input
+											name="fechaAsignacionInicial" id="txtFechaAsignacionInicial"
+											value="<c:out value='${fechaProceso}' />" style="width: 70px"
+											class="campoobligatorioce" tabindex="1"
+											onBlur="this.value=vuelveFecha(this.value);validarFecha('fechaAsignacionInicial');"
+											onfocus="this.select(); field='txtFechaAsignacion'; nextfield ='cboEstado';">
+											al <input name="fechaAsignacionFinal"
+											id="txtFechaAsignacionFinal"
+											value="<c:out value='${fechaProceso}' />" style="width: 70px"
+											class="campoobligatorioce" tabindex="1"
+											onBlur="this.value=vuelveFecha(this.value);validarFecha('fechaAsignacionFinal');"
+											onfocus="this.select(); field='txtFechaAsignacion'; nextfield ='cboEstado';">
+										</td>
+										<td class="etiqueta" align="left" width="60" valign="middle">
+											Agencia</td>
+										<td width="200"><input type="hidden" name="codigoAgencia"
+											id="codigoAgencia" value="<c:out value='${codigoAgencia}' />"
+											style="width: 80px" class="campoobligatorioiz" tabindex="1"
+											onfocus="this.select(); field='txtCriterio'; nextfield ='txtFechaSolicitud';">
+											<input name="descripcionAgencia" id="descripcionAgencia"
+											value="<c:out value='${descripcionAgencia}' />"
+											style="width: 160px" class="campoobligatorioiz" tabindex="1"
+											onfocus="this.select(); field='txtCriterio'; nextfield ='txtFechaSolicitud';">
+											<img id="imgAgencia" style="cursor: hand"
+											title="Buscar Agencia"
+											src="<%=request.getContextPath()%>/UTILS/img/Detalle.gif"
+											onclick="buscarAgencia();"></td>
+									</tr>
+									<tr id="trFiltroActivos2">
+										<td class="etiqueta" align="left" valign="middle">Fecha
+											Atenci&oacute;n</td>
+										<td class="etiqueta">del <input
+											name="fechaAtencionInicial" id="txtFechaAsignacionInicial"
+											value="<c:out value='${fechaProceso}' />" style="width: 70px"
+											class="campoobligatorioce" tabindex="1"
+											onBlur="this.value=vuelveFecha(this.value);validarFecha('fechaAtencionInicial');"
+											onfocus="this.select(); field='txtFechaAsignacion'; nextfield ='cboEstado';">
+											al <input name="fechaAtencionFinal"
+											id="txtFechaAsignacionFinal"
+											value="<c:out value='${fechaProceso}' />" style="width: 70px"
+											class="campoobligatorioce" tabindex="1"
+											onBlur="this.value=vuelveFecha(this.value);validarFecha('fechaAtencionFinal');"
+											onfocus="this.select(); field='txtFechaAsignacion'; nextfield ='cboEstado';">
+										</td>
+										<td class="etiqueta" align="left" valign="middle">Asesor
+										</td>
+										<td width="200"><input type="hidden" name="codigoAsesor"
+											id="codigoAsesor" style="width: 80px"
+											class="campoobligatorioiz" tabindex="1"
+											onfocus="this.select(); field='txtCriterio'; nextfield ='txtFechaSolicitud';">
+											<input name="descripcionAsesor" id="descripcionAsesor"
+											value="<c:out value='${descripcionAsesor}' />"
+											style="width: 160px" class="campoobligatorioiz" tabindex="1"
+											onfocus="this.select(); field='descripcionAsesor'; nextfield ='numeroDocumento';">
+											<img id="imgAsesor" style="cursor: hand"
+											title="Buscar Asesor"
+											src="<%=request.getContextPath()%>/UTILS/img/Detalle.gif"
+											onclick="buscarAsesor();"></td>
+									</tr>
+									<tr id="trFiltroActivos3">
+										<td class="etiqueta" align="left" valign="middle">Tipo de
+											Alerta</td>
+										<td><select name="cboAlerta" id="cboAlerta"
+											style="width: 100%;" tabindex="4" class="campoobligatorioiz"
+											onfocus="field='cboEstado'; nextfield ='descripcionSolicitante';">
+												<c:forEach var='beanCRTipoAlerta'
+													items='${requestScope.listBeanCRTipoAlerta}'>
+													<option
+														value="<c:out value='${beanCRTipoAlerta.idTipoAlerta}'/>">
+														<c:out value='${beanCRTipoAlerta.descripcionTipoAlerta}' />
+													</option>
+												</c:forEach>
+										</select></td>
+										<td class="etiqueta" align="left" valign="middle">
+											Cliente</td>
+										<td width="200"><input type="hidden" name="codigoCliente"
+											id="codigoCliente" value="<c:out value='${codigoCliente}' />" />
+											<input type="hidden" name="numeroDocumento"
+											id="numeroDocumento"
+											value="<c:out value='${numeroDocumento}' />"
+											onfocus="this.select();nextfield='cboTipoLinea'"
+											class="campoobligatorioiz" maxlength="20"
+											style="width: 80px;" /> <input type="text"
+											name="nombreCliente" id="nombreCliente"
+											value="<c:out value='${nombreCliente}' />"
+											onfocus="this.select();nextfield='cboTipoLinea';"
+											class="campoobligatorioiz" style="width: 160px;" /> <img
+											id="imgPersona" style="cursor: hand"
+											src="<%=request.getContextPath()%>/UTILS/img/Detalle.gif"
+											title="Buscar Cliente"
+											onclick="if(!byID('numeroDocumento').readOnly){buscarPersonas();}">
+										</td>
+										<td><delfinTagHtml:boton nombre="BT_Buscar_P.gif"
+                                                onclick="javascript:onCargarTabla();" /></td>
+										<td class="etiqueta" align="left" valign="middle"></td>
+										<td></td>
+									</tr>
+								</table>
+							</td>
+						</tr>
+					</table>
+				</td>
+			</tr>
+			<tr>
+				<td height="4"><img
+					src="<%=request.getContextPath()%>/UTILS/img/t.gif" width="1"
+					height="2"></td>
+			</tr>
+			<tr>
+				<td>
+					<table cellpadding="0" border="0" cellspacing="0" width="100%"
+						align="center">
+						<tr>
+							<td align="center" valign="top" width="100%">
+								<table width="100%" align="center" cellspacing="0" border="0">
+									<tr>
+										<td valign="top">
+											<table width="100%" cellpadding="0" cellspacing="0"
+												border="0">
+												<tr>
+													<td class="tituloframe">DETALLE DE CLIENTES</td>
+												</tr>
+												<tr>
+													<td><iframe id="ifrmDetalleWorkflow"
+															name="ifrmDetalleWorkflow" frameborder="0"
+															width="100%" height="300px" class="frame"
+															src="FINANCIERO/workflow/seguimientoCartera/carga/CR_T_SeguimientoCarteraDetalleCarga_TABLA.jsp"></iframe>
+													</td>
+												</tr>
+											</table>
+										</td>
+									</tr>
+								</table>
+								<table width="100%">
+									<tr>
+										<td align="right"><IMG
+											src="<%=request.getContextPath()%>/UTILS/img/PagRe.gif"
+											onClick="pag(-1);"
+											style="CURSOR: hand; vertical-align: middle;" alt="Anterior">
+											<label id="inicial"
+											style="width: 25; text-align: left; font-size: 8pt; font-family: Arial; vertical-align: middle;"></label>
+											<IMG src="<%=request.getContextPath()%>/UTILS/img/t.gif"
+											height=1 width="10"> <label id="final"
+											style="width: 25; text-align: right; font-size: 8pt; font-family: Arial; vertical-align: middle;"></label>
+											<IMG src="<%=request.getContextPath()%>/UTILS/img/PagAv.gif"
+											onClick="pag(1)"
+											style="CURSOR: hand; vertical-align: middle;" alt="Siguiente">
+											<label id="total"
+											style="width: 50; text-align: left; font-size: 8pt; font-family: Arial; vertical-align: middle;"></label>
+										</td>
+									</tr>
+								</table>
+							</td>
+						</tr>
+					</table>
+				</td>
+			</tr>
+		</table>
+		<table>
+			<tr>
+				<td><img
+					src="${pageContext.request.contextPath}/UTILS/img/t.gif" width="1"
+					height="1"></td>
+			</tr>
+		</table>
+	</form>
+</body>
+</html>
\ No newline at end of file
diff --git a/DELFINWEBNEW/WebRoot/FINANCIERO/workflow/seguimientoCartera/carga/CR_T_SeguimientoCarteraDetalleCarga_TABLA.jsp b/DELFINWEBNEW/WebRoot/FINANCIERO/workflow/seguimientoCartera/carga/CR_T_SeguimientoCarteraDetalleCarga_TABLA.jsp
new file mode 100644
index 0000000..e1080f3
--- /dev/null
+++ b/DELFINWEBNEW/WebRoot/FINANCIERO/workflow/seguimientoCartera/carga/CR_T_SeguimientoCarteraDetalleCarga_TABLA.jsp
@@ -0,0 +1,178 @@
+<!-- CR_T_SeguimientoCarteraDetalleCarga_TABLA.jsp -->
+<%-- [S17-022] rsanchez 03.04.2017 --%>
+<jsp:directive.page import="general.utils.Paginacion" />
+<%@ taglib prefix="c" uri="http://java.sun.com/jstl/core"%>
+<%@ taglib prefix='fmt' uri='http://java.sun.com/jstl/fmt'%>
+<%
+    String path = request.getContextPath();
+%>
+<html>
+<head>
+<!-- Invocaci�n de Estilos -->
+<link id="css" href="<%=path%>/UTILS/css/DELFIN.css" rel="stylesheet"
+	type="text/css">
+<!-- Invocaci�n de JavaScript -->
+<script src="<%=path%>/UTILS/Script/grid.js"></script>
+<script src="<%=path%>/UTILS/Script/MsgValidacion.js"></script>
+<script src="<%=path%>/UTILS/Script/DELFIN-Utiles.js"></script>
+<style>
+.active-controls-grid {
+	width: "100%";
+	height: 100%;
+	font: menu;
+}
+
+.active-column-0 {
+	width: 100px;
+	text-align: left;
+}
+
+.active-column-1 {
+	width: 18%;
+	text-align: left;
+}
+
+.active-column-2 {
+	width: 18%;
+	text-align: left;
+}
+
+.active-column-3 {
+	width: 10%;
+	text-align: left;
+}
+
+.active-column-4 {
+	width: 18%;
+	text-align: right;
+}
+
+active-column-5 {
+	width: 18%;
+	text-align: center;
+}
+
+.active-grid-column {
+	border-right: 1px solid threedlightshadow;
+}
+
+.active-grid-row {
+	border-bottom: 1px solid threedlightshadow;
+}
+</style>
+</head>
+<body onload="onload();" TOPMARGIN=0 LEFTMARGIN=0 MARGINHEIGHT=0
+	MARGINWIDTH=0>
+	<script>
+            var path;
+            function onload(){
+              path = '<%=path%>';
+            parent.mensajeRespuesta('<c:out value="${codigoError}" />', '<c:out value="${mensajeError}" />');
+            if (parent.document.getElementById('hidepage')) {
+                parent.loadImages();
+            }
+            setFoco();
+        }
+
+        var posini;
+        var posfin;
+        var indice = '0';
+        var myData = [ <c:out value="${myData}" escapeXml="false"/> ];
+
+        var myColumns = [ "Agencia", "Asesor", "Cliente", "Tipo Alerta", "Monto Alerta", "Fecha Atenci�n" ];
+
+        //  create ActiveWidgets Grid javascript object
+        var obj = new Active.Controls.Grid;
+
+        obj.setId("obj");
+        // grid header
+        obj.gridColumn = myColumns;
+        // grid data
+        obj.gridData = myData;
+        //  header methods
+        obj.getColumnCount = function() {
+            return this.gridColumn.length
+        };
+        obj.getColumnText = function(i) {
+            return this.gridColumn[i]
+        };
+        //  data methods
+        obj.getDataCount = function() {
+            return this.gridData.length
+        };
+        obj.getDataText = function(i, j) {
+            return this.gridData[i][j]
+        };
+        obj.setDataText = function(value, i, j) {
+            this.gridData[i][j] = value
+        };
+
+        obj.setRowHeaderWidth("28px");
+        obj.setColumnHeaderHeight("20px");
+
+        var row = new Active.Templates.Row;
+        row.setEvent("ondblclick", function() {
+            this.action("myAction")
+        });
+        obj.setTemplate("row", row);
+        obj.setAction("myAction", function(src) {
+
+        });
+        //Evento Focus de la grilla 
+        obj.setAction("selectionChanged", mySelect);
+
+        //Evento que reconoce la tecla ENTER
+        var defaultEventHandler = obj.getEvent("onkeydown");
+        var myEventHandler = function(event) {
+            if (event.keyCode == 13) {
+                //
+            } else if (event.keyCode == 27) {
+                parent.parent.salir();
+                event.returnValue = false;
+            } else if (event.keyCode == 8)
+                event.returnValue = backspace();//Cancela Backspace
+            else if (event.keyCode == 112)
+                parent.ayuda();//F1 ACERCA DE...
+            else if (event.ctrlKey) {//Cancela Control
+                event.keyCode = 0;
+                event.returnValue = false;
+            } else if (window.event && (event.keyCode == 114 || event.keyCode == 116 || event.keyCode == 117 || event.keyCode == 122)) {//Cancela F3,F5,F6 y F11
+                event.keyCode = 505;
+                if (event.keyCode == 505)
+                    event.returnValue = false;
+            } else
+                defaultEventHandler.call(this, event);
+        }
+        obj.setEvent("onkeydown", myEventHandler);
+
+        //Pintado de la grilla
+        document.write(obj);
+
+        function setFoco() {
+            try {
+                if (myData.length == 0) {
+                    parent.nuevo();
+                }
+                if (myData.length > eval(indice) && indice > -1) {
+                    obj.setSelectionIndex(eval(indice));
+                } else if (myData.length > 0) {
+                    obj.setSelectionIndex(0);
+                }
+            } catch (error) {
+            }
+        }
+
+        function NumerodeFilas() {
+            return obj.getRowProperty("values").length;
+        }
+
+        function getTableIndex() {
+            return obj.getProperty("selection/index");
+        }
+
+        function mySelect() {
+
+        }
+    </script>
+</body>
+</html>
\ No newline at end of file
diff --git a/DELFINWEBNEW/WebRoot/FINANCIERO/workflow/seguimientoCartera/documentos/CR_T_DocumentoActividad_CNTR.jsp b/DELFINWEBNEW/WebRoot/FINANCIERO/workflow/seguimientoCartera/documentos/CR_T_DocumentoActividad_CNTR.jsp
new file mode 100644
index 0000000..be9ddef
--- /dev/null
+++ b/DELFINWEBNEW/WebRoot/FINANCIERO/workflow/seguimientoCartera/documentos/CR_T_DocumentoActividad_CNTR.jsp
@@ -0,0 +1,520 @@
+<!-- CR_T_DocumentoActividad_CNTR.jsp-->
+<%--[Req.S17-022] kdelacruz 06.04.2017 - Implementacion workflow seguimiento cartera--%>
+
+<%@ page language="java" import="java.util.*" pageEncoding="ISO-8859-1"%>
+<jsp:directive.page import="financ.util.Constante"/>
+<%@ taglib prefix="c" uri="http://java.sun.com/jstl/core" %>
+<%@ taglib uri="/delfin" prefix="delfinTagHtml" %>
+
+<html>
+  <head>
+    <title>ESTADOS DE CUENTAS</title>
+    <link id="css" href="${pageContext.request.contextPath}/UTILS/css/DELFIN.css" rel="stylesheet" type="text/css">
+    <script src="${pageContext.request.contextPath}/UTILS/Script/MsgValidacion.js"></script>
+    <script src="<%=request.getContextPath()%>/UTILS/Script/DELFIN-Utiles.js"></script>
+    <script type="text/javascript">
+    
+        var f = null;
+        var path;
+        var idLote;
+        nextfield = "";
+        var codigoTipoEstadoCuenta;
+        var modalidadEECC ;
+
+        function cargar() {
+            codigoTipoEstadoCuenta = '<%=request.getAttribute("tipoEstadoCuenta")%>';
+            modalidadEECC = '<%=request.getAttribute("modalidadEECC")%>';
+            habilitarFiltrosCreditos();
+            deshabilitarBotones();
+            f = document.getElementById('frmBusqueda');
+            path = '<%=request.getContextPath()%>';
+            mensajeRespuesta('<c:out value="${codigoError}" />', '<c:out value="${mensajeError}" />');
+            onCargarDetalle();
+        }
+        
+        function deshabilitarBotones(){
+            if (modalidadEECC == '<%=Constante.MODO_DIRECCION_FISICA%>'){
+                byID('descargarDetalle').style.display = 'none';
+                byID('reenviarCorreoDetalle').style.display = 'none';
+                byID('idEstadoEnvio').style.display = 'none';
+                byID('cboEstadoEnvio').style.display = 'none';
+            }
+        }
+        
+        function habilitarFiltrosCreditos(){
+            if (codigoTipoEstadoCuenta != '<%=Constante.TIPO_ESTADO_CUENTA_CREDITO_CUOTAS%>'){
+                byID('trFiltroPasivos').style.display = 'none';
+                byID('trFiltroActivos').style.height = '35px';
+            }
+        }
+
+        function pag(direccion){
+            document.ifrmDetalleEstadoCuenta.paginacion(direccion);
+        }
+
+
+        function keyDown(DnEvents){
+            k = window.event.keyCode;
+            if (k == 13){
+            var cboCriterio = byID("cboCriterio").value;
+                   if (nextfield == "cboProducto"){
+                       if(cboCriterio == "NC" || cboCriterio == "DC"){
+                           openBusqueda();
+                           eval('document.forms[0].' + nextfield + '.focus()');
+                           return false;
+                       }
+                   }
+                   else{
+                       onCargarDetalle();
+                       return false;
+                   }
+                   if(nextfield == "cboProducto"){
+                       onCargarDetalle();
+                       eval('document.forms[0].' + nextfield + '.focus()');
+                       return false;
+                   }
+                   if(nextfield == "cboDepartamento"){
+                       onCargarDetalle();
+                       return false;
+                   }
+                   if(nextfield == "cboCastigado"){
+                       onCargarDetalle();
+                       return false;
+                   }
+                   if(nextfield == "cboEstadoCredito"){
+                       onCargarDetalle();
+                       return false;
+                   }
+                   if(nextfield == "cboVendido"){
+                       onCargarDetalle();
+                       return false;
+                   }
+                return false;
+            }
+            if (k == 120){
+                return false;
+            }
+            if (k == 27){
+                salir();
+                return false;
+            }
+            if (k == 121){
+                grabar()
+                return false;
+            }
+            if (k == 112){
+                ayuda();
+                return false;
+            }
+            if (event.ctrlKey){
+                event.keyCode = 0;
+                return false;
+            }
+            if (k==46){
+                return false;
+            }
+            if (window.event && (k == 114 || k == 116 || k == 117 || k == 122))
+                event.keyCode = 505;
+            if(event.keyCode == 505)
+                return false;
+        }
+        document.onkeydown = keyDown;       
+
+     function salir(){
+         window.close();
+         return true;
+     }
+
+    function validarSeleccionMultiple() {
+       var iframe = document.frames["ifrmDetalleEstadoCuenta"];
+        
+       if (iframe.getCantElemSelec() == 0) {
+           alert(m_9120);
+       }else{
+        return true;
+           }
+       return false;
+    }
+
+    function validarSeleccion() {
+        var iframe = document.frames["ifrmDetalleEstadoCuenta"];
+         
+        if (iframe.getCantElemSelec() != 1) {
+            alert(m_9120);
+        }else{
+         return true;
+            }
+        return false;
+     }
+
+    function validarEstadoLote() {
+        var estadoLote = '<%=request.getAttribute("estadoLote")%>';
+        if (estadoLote == '<%=Constante.ESTADO_LOTE_REGISTRADO%>') {
+           return false;
+        }
+        return true;
+     }
+
+  //Busqueda de Clientes
+    function openBusqueda(){
+        var valor = f.txtCriterio.value != ""?f.txtCriterio.value.toUpperCase():"NULO";
+        nombre="PERSONAS";
+
+        if(byID("cboCriterio").value == "NC"){
+            valor1 = "Nombre"
+            valor2 = "DOI"
+        }
+        else{
+            valor1 = "DOI"
+            valor2 = "Nombre"
+        }   
+        window.showModalDialog("<%=request.getContextPath()%>/GENERAL/Busqueda.jsp?cboValorBuscar1="+valor1     +
+                               "&cboValorBuscar2="+valor2+"&txtValorBuscar="+valor+"&tabla="+nombre,
+                               window,"dialogHeight:330px;dialogWidth:670px;center:yes;help:no;resizable:no;");
+    }
+
+    function insertarPersona(data){
+        f.cboCriterio.value = "NC";
+        f.txtCriterio.value        = data[2];
+        document.frmBusqueda.txtCriterio.focus();
+    }
+    
+    function onCargarDetalle() {
+        var numeroCredito = '';
+        var codigoPersona='';
+        if(byID('cboCriterio').value == "CN") {
+            numeroCredito = byID('txtCriterio').value;
+            codigoPersona = '';
+          }else{
+              numeroCredito = '';
+              codigoPersona = byID('txtCriterio').value;
+          }
+        
+        var cboProducto = byID('cboProducto').value;
+        var cboCastigado = byID('cboCastigado').value;
+        var cboDepartamento = byID('cboDepartamento').value;
+        var cboEstadoCredito = byID('cboEstadoCredito').value;
+        var cboVendido = byID('cboVendido').value;
+        var cboEstadoEnvio = byID('cboEstadoEnvio').value;
+        
+        var iframe = document.frames["ifrmDetalleEstadoCuenta"];
+
+        var params = '?action=CARGAR_DETALLE';
+           params += '&codigoLote=' + '<%=request.getAttribute("codigoLote")%>';
+           params += '&modalidadEECC=' + '<%=request.getAttribute("modalidadEECC")%>';
+           params += '&numeroCredito=' + numeroCredito;
+           params +='&nombreCliente='+ codigoPersona;
+           params +='&productoCredito='+ cboProducto;
+           params +='&estadoCastigado='+ cboCastigado;
+           params +='&nombreDepartamento='+ cboDepartamento;
+           params +='&estadoCredito='+ cboEstadoCredito;
+           params +='&cboVendido='+ cboVendido;
+           params +='&cboEstadoEnvio='+ cboEstadoEnvio;
+        var url = path + '/OP_C_MantenimientoDetalleEstadoCuentas_Servlet' + params;
+        document.getElementById('hidepage').style.visibility = '';
+        document.ifrmDetalleEstadoCuenta.location.replace(url);
+      }
+
+    function reenviarCorreo() {
+        if(validarEstadoLote()){
+            if(validarSeleccionMultiple()){
+                  if (!confirm(m_0354)){
+                    return;
+                  }
+                  estadoOperacion = false;
+                  var cadenaSeleccionadosNroCredito = document.ifrmDetalleEstadoCuenta.obtenerNroCreditoSeleccionados();
+                  var SeleccionadoIdLote = document.ifrmDetalleEstadoCuenta.getIdLote();
+                  var index = document.ifrmDetalleEstadoCuenta.getTableIndex();
+                  
+                  var params = 'action=REENVIAR_CORREO';
+                  params += '&cadenaSeleccionadosNroCredito=' + cadenaSeleccionadosNroCredito;
+                  params += '&seleccionadoIdLote=' + SeleccionadoIdLote;
+                  params += '&index=' + index;
+                  params += '&time=' + (new Date()).getTime();
+    
+                  var url = path + '/OP_C_MantenimientoDetalleEstadoCuentas_Servlet';
+
+                  operacionEnProceso = true;
+                  ajaxRequestPOST(url, params, false, function(xmldoc) {
+                    mensajeRespuestaXML(xmldoc, function(){
+                      alert(m_8570);
+                    });
+                  });
+    
+                  setTimeout('onCargarDetalle()', 1000);
+            }
+        }else{
+            alert(m_10027);
+            }
+     }
+
+    function generarReporteImprimirDetalleEstadoCuenta(){
+        if(validarEstadoLote()){
+            if(validarSeleccion()){
+                var cadenaSeleccionadosNroCredito = document.ifrmDetalleEstadoCuenta.obtenerNroCreditoSeleccionados();
+                var SeleccionadoIdLote = document.ifrmDetalleEstadoCuenta.getIdLote();
+                
+                var params = '?action=GENERAR_REPORTE_DETALLE';
+                params += '&cadenaSeleccionadosNroCredito=' + cadenaSeleccionadosNroCredito;
+                params += '&seleccionadoIdLote=' + SeleccionadoIdLote;
+                params +='&time=' + (new Date()).getTime();
+                var url = path + '/OP_C_MantenimientoDetalleEstadoCuentas_Servlet' + params;
+                var attribs = "width=790,height=540,top=0,left=0,status=no,resizable=yes,dependent=yes,alwaysRaised=yes,scrollbars=yes,toolbar=no,menubar=no";
+                window.open(url + params, "", attribs);
+            }
+        }else{
+            alert(m_10026);
+            }
+    }
+
+    function generarReporteImprimir(forma){
+    	var numeroCredito = '';
+        var nombrePersona='';
+        if(byID('cboCriterio').value == "CN") {
+            numeroCredito = byID('txtCriterio').value;
+            nombrePersona = '';
+        }else{
+            numeroCredito = '';
+            nombrePersona = byID('txtCriterio').value;
+        }
+        var cboProducto = byID('cboProducto').value;
+        var cboCastigado = byID('cboCastigado').value;
+        var cboDepartamento = byID('cboDepartamento').value;
+        var cboEstadoCredito = byID('cboEstadoCredito').value;
+        var cboVendido = byID('cboVendido').value;
+        var cboCriterio = byID('cboCriterio').value;
+        var cboEstadoEnvio = byID('cboEstadoEnvio').value
+        
+        var params = '?action=EXPORTAR_REPORTE_DETALLE';
+        params += '&codigoLote=' + '<%=request.getAttribute("codigoLote")%>';
+        params += '&tipoEstadoCuenta=' + '<%=request.getAttribute("tipoEstadoCuenta")%>';
+        params += '&cboCriterio='+ cboCriterio;
+        params += '&numeroCredito=' + numeroCredito;
+        params += '&nombreCliente='+ nombrePersona;
+        params += '&cboProductoCredito='+ cboProducto;
+        params += '&cboEstadoCastigado='+ cboCastigado;
+        params += '&cboDepartamento='+ cboDepartamento;
+        params += '&cboEstadoCredito='+ cboEstadoCredito;
+        params += '&cboVendido='+ cboVendido;
+        params += '&cboEstadoEnvio=' + cboEstadoEnvio;
+        params += '&tipoArchivo=' + forma;
+
+        var url = path + '/OP_C_MantenimientoDetalleEstadoCuentas_Servlet';
+        window.open(url + params, "reporte","width=790,height=540,top=0,left=0,status=no,resizable=yes,dependent=yes,alwaysRaised=yes,scrollbars=yes,toolbar=no,menubar=no");
+        }
+
+    </script>
+
+  </head>
+  
+  <body onhelp="getF1();" class="colorbody" onload="cargar();" style="padding: 0px, 0px, 0px, 0px;overflow:auto;">
+    <form name="frmBusqueda" id="frmBusqueda" method="post">
+      <div id="hidepage" style="position: absolute;left:460px;top:380px;width: 100;height: 20">
+          <table>
+              <tr><td align="center"><img src="<%=request.getContextPath()%>/UTILS/img/loadings.gif" ></td></tr>
+              <tr><td align="center" style="font-weight: bold;" ><span class="etiqueta" >Cargando...</span></td></tr>
+          </table>
+      </div>
+      <div id="wndHide" ></div>
+      <table cellpadding="0" cellspacing="0" width="100%">
+        <tr>
+          <td class="tituloopcion">
+            DETALLE DE ESTADOS DE CUENTA POR LOTE
+          </td>
+        </tr>
+        <tr>
+          <td height="4">
+            <img src="<%=request.getContextPath()%>/UTILS/img/t.gif" width="1" height="2">
+          </td>
+        </tr>
+      </table>
+      <table border="0" cellpadding="0" cellspacing="2" width="99.5%" align="center" >
+        <tr>
+          <td>
+            <table border="1" cellpadding="0" cellspacing="0" width="100%" align="center" class="frame">
+              <tr>
+                <td height="20" align="center">
+                  <table width="100%" cellpadding="0" cellspacing="0" border="0">
+                    <tr>
+                      <td align="left" colspan="4" valign="middle">
+                        <delfinTagHtml:boton name="descargarDetalle" nombre="BT_DescargarDetalleEstadoCuenta.gif" onclick="javascript:generarReporteImprimirDetalleEstadoCuenta()"/>
+                        <delfinTagHtml:boton name="reenviarCorreoDetalle" nombre="BT_ReenviarDetalleEstadoCuenta.gif" onclick="javascript:reenviarCorreo()" />
+                        <span>
+                        <div id="itMenu1" style="width:30px; height:20px; z-index:2;" class="itMenu" onMouseOver="despMenu(this.id,1)" onMouseOut="despMenu(this.id,0)" > 
+                          <div id="itMenu10" style="width: 30px" class="itMenuDes" onMouseOver="destacar(this,1)" onMouseOut="destacar(this,0)"> 
+                            <input type="button" value="Imprimir PDF  " onclick="generarReporteImprimir('PDF');" class="boton_pequeno" style="cursor: hand;" />
+                          </div>
+                          <div id="itMenu11" style="width: 30px" class="itMenuDes" onMouseOver="destacar(this,1)" onMouseOut="destacar(this,0)"> 
+                            <input type="button" value="Imprimir XLS" onclick="generarReporteImprimir('EXCEL');" class="boton_pequeno" style="cursor: hand;" /> 
+                          </div>
+                        </div>
+                      </span>
+                        <delfinTagHtml:boton nombre="BT_Imprimir.gif" onMouseOver="despMenu('itMenu1',1)" onMouseout="despMenu('itMenu1',0)"
+                                             name="imprimirDetalle"/>
+                        <delfinTagHtml:boton nombre="BT_Salir.gif" onclick="javascript:salir();" />
+                      </td>
+                    </tr>
+                  </table>
+                </td>
+              </tr>
+            </table>
+          </td>
+        </tr>
+        <tr>
+          <td height="4">
+            <img src="<%=request.getContextPath()%>/UTILS/img/t.gif" width="1" height="2">
+          </td>
+        </tr>
+        <tr>
+            <td class="tituloframe">BUSQUEDA</td>
+        </tr>
+        <tr>
+          <td>
+            <table border="2" cellpadding="0" cellspacing="0" width="100%" align="center" class="frame">
+              <tr>
+                <td height="20" align="center">
+                  <table width="99%" cellpadding="0" cellspacing="2" border="0">
+                    <tr id="trFiltroActivos"> 
+                        <td>
+                            <select name="cboCriterio" style="width:100px" tabindex="1" class="campoobligatorioce" onfocus="nextfield ='txtCriterio';">
+                                <option value="NC">NOMBRE </option>
+                                <option value="DC">DOI</option>
+                                <option value="CN">CR�DITO</option>
+                            </select>
+                        </td>
+                        <td > 
+                           <input name="txtCriterio" style="width: 140px" class="campoobligatorioiz"  tabindex="1" value="<c:out value='${beansc.nombreRazonSocial}'/>" 
+                           onfocus="this.select(); field='txtCriterio'; nextfield ='cboProducto';" >
+                        </td>
+                        <td class="etiqueta" align="left" width="140px" valign="middle">
+                            Producto
+                        </td>
+                        <td >
+                            <select name="cboProducto" id="cboProducto" style="width: 220px;" tabindex="4" onfocus=" nextfield='cboDepartamento'" class="campoobligatorioiz" >
+                          <c:forEach var='beanCombo' items='${requestScope.listProductos}'  >
+                            <option value="<c:out value='${beanCombo.codigo}'/>" >
+                              <c:out value='${beanCombo.descripcion}' />
+                            </option>
+                          </c:forEach>
+                        </select>
+                        </td>
+                        
+                        <td class="etiqueta" width="200px" align="left" valign="middle">
+                        Departamento
+                      </td>
+                      <td>
+                        <select name="cboDepartamento" id="cboDepartamento" style="width: 140px;" tabindex="4" onfocus="nextfield='cboCastigado'" class="campoobligatorioiz" >
+                          <c:forEach var='beanCombo' items='${requestScope.listDepartamentos}'  >
+                            <option value="<c:out value='${beanCombo.codigo}'/>" >
+                              <c:out value='${beanCombo.descripcion}' />
+                            </option>
+                          </c:forEach>
+                        </select>
+                      </td>
+                      <td id="idEstadoEnvio" class="etiqueta" align="left" width="8%" valign="middle">
+                                Estado Env�o
+                            </td>
+                            <td >
+                                <select name="" id="cboEstadoEnvio" style="width: 140px;" tabindex="4"  class="campoobligatorioiz" >
+                                    <c:forEach var='beanCombo' items='${requestScope.lstEnvio}'  >
+		                                <option value="<c:out value='${beanCombo.codigo}'/>" >
+		                                    <c:out value='${beanCombo.descripcion}' />
+		                                </option>
+		                            </c:forEach>
+                                </select>
+                            </td>
+                      <td valign="top" align="right" width="800px" rowspan="3">
+                            <delfinTagHtml:boton name="btnBuscar" nombre="BT_Buscar.gif" onclick="JavaScript:onCargarDetalle();" />
+                      </td>
+                    </tr>
+                    <tr id="trFiltroPasivos">
+                        <td class="etiqueta" align="left" width="8%" valign="middle">
+                                Castigado
+                            </td>
+                            <td >
+                                <select name="" id="cboCastigado" style="width: 140px;" tabindex="4"  class="campoobligatorioiz" >
+                                    <c:forEach var='beanCombo' items='${requestScope.lstCastigado}'  >
+                                        <option value="<c:out value='${beanCombo.codigo}'/>" >
+                                            <c:out value='${beanCombo.descripcion}' />
+                                        </option>
+                                    </c:forEach>
+                                </select>
+                        </td>
+                      <td class="etiqueta" align="left" valign="middle">
+                        Estado Cr�dito
+                      </td>
+                      <td>
+                        <select name="cboEstadoCredito" id="cboEstadoCredito" style="width: 220px;" tabindex="4" class="campoobligatorioiz" >
+                          <c:forEach var='beanCombo' items='${requestScope.lstActivo}'  >
+                              <option value="<c:out value='${beanCombo.codigo}'/>" >
+                                  <c:out value='${beanCombo.descripcion}' />
+                              </option>
+                          </c:forEach>
+                        </select>
+                      </td>
+                      <td class="etiqueta" align="left" valign="middle">
+                        Vendido
+                      </td>
+                      <td>
+                        <select name="cboVendido" id="cboVendido" style="width: 140px;" tabindex="4" class="campoobligatorioiz" >
+                          <c:forEach var='beanCombo' items='${requestScope.lstVendido}'  >
+                              <option value="<c:out value='${beanCombo.codigo}'/>" >
+                                 <c:out value='${beanCombo.descripcion}' />
+                              </option>
+                          </c:forEach>
+                        </select>
+                      </td>
+                    </tr>
+                  </table>
+                </td>
+              </tr>
+            </table>
+          </td>
+        </tr>
+        <tr>
+          <td height="4">
+            <img src="<%=request.getContextPath()%>/UTILS/img/t.gif" width="1" height="2">
+          </td>
+        </tr>
+        <tr>
+          <td>
+            <table cellpadding="0" border="0" cellspacing="0" width="100%" align="center">
+              <tr>
+                <td align="center" valign="top" width="100%">
+                  <table width="100%" align="center" cellspacing="0" border="0">
+                    <tr>
+                      <td valign="top">
+                        <table width="100%" cellpadding="0" cellspacing="0" border="0">
+                          <tr>
+                              <td class="tituloframe">DETALLE DE ESTADOS DE CUENTA</td>
+                          </tr>
+                          <tr>
+                            <td>
+                              <iframe id="ifrmDetalleEstadoCuenta" name="ifrmDetalleEstadoCuenta" frameborder="0" width="100%" height="380px"  class="frame" src="FINANCIERO/operaciones/OP-DetalleEstadoCuentas_TABLA.jsp"></iframe>
+                            </td>
+                          </tr>
+                        </table>
+                      </td>
+                    </tr>
+                  </table>
+                  <table width="100%">
+                    <tr>
+                      <td align="right">
+                      <IMG src="<%=request.getContextPath()%>/UTILS/img/PagRe.gif" onClick="pag(-1);" style="CURSOR: hand;vertical-align: middle;" alt="Anterior">
+                      <label id="inicial" style="width:25;text-align:left;font-size:8pt;font-family:Arial;vertical-align: middle;"></label>
+                      <IMG src="<%=request.getContextPath()%>/UTILS/img/t.gif" height=1 width="10">
+                      <label id="final" style="width:25;text-align:right;font-size:8pt;font-family:Arial;vertical-align: middle;"></label>
+                      <IMG src="<%=request.getContextPath()%>/UTILS/img/PagAv.gif" onClick="pag(1)" style="CURSOR: hand;vertical-align: middle;" alt="Siguiente">
+                      <label id="total" style="width:50;text-align:left;font-size:8pt;font-family:Arial;vertical-align: middle;"></label>
+                      </td>
+                    </tr>
+                  </table>
+                </td>
+              </tr>
+            </table>
+          </td>
+        </tr>
+      </table>
+    </form>
+  </body>
+</html>
\ No newline at end of file
diff --git a/DELFINWEBNEW/WebRoot/FINANCIERO/workflow/seguimientoCartera/etapa/actividades/CR_C_DatosActividades_CNTR.jsp b/DELFINWEBNEW/WebRoot/FINANCIERO/workflow/seguimientoCartera/etapa/actividades/CR_C_DatosActividades_CNTR.jsp
new file mode 100644
index 0000000..5aa83ce
--- /dev/null
+++ b/DELFINWEBNEW/WebRoot/FINANCIERO/workflow/seguimientoCartera/etapa/actividades/CR_C_DatosActividades_CNTR.jsp
@@ -0,0 +1,345 @@
+<!-- CR_C_DatosActividades_CNTR.jsp-->
+<%--[Req.S17-022] kdelacruz 29.03.2017 - Implementaci�n WorkFlow Seguimiento Cartera--%>
+
+<%@ page language="java" import="java.util.*" pageEncoding="ISO-8859-1"%>
+<jsp:directive.page import="financ.util.Constante"/>
+<%@ taglib prefix="c" uri="http://java.sun.com/jstl/core" %>
+<%@ taglib uri="/delfin" prefix="delfinTagHtml" %>
+<%
+    String strComportamiento = request.getAttribute("strComportamiento") != null ? (String) request.getAttribute("strComportamiento") : "C";
+    
+    String campoIz = "T".equals(strComportamiento) ? "class='campoobligatorioiz'" : "readonly class='campodisplayiz'";
+    String cboIz = "T".equals(strComportamiento) ? "class='campoobligatorioiz'" : "disabled class='campodisplayiz'";
+    String campoCe = "T".equals(strComportamiento) ? "class='campoobligatorioce'" : "readonly class='campodisplayce'";
+%>
+<html>
+  <head>
+    <title>DATOS ACTIVIDADES</title>
+    <link id="css" href="${pageContext.request.contextPath}/UTILS/css/DELFIN.css" rel="stylesheet" type="text/css">
+    <script src="${pageContext.request.contextPath}/UTILS/Script/MsgValidacion.js"></script>
+    <script src="<%=request.getContextPath()%>/UTILS/Script/DELFIN-Utiles.js"></script>
+    <script src="<%=request.getContextPath()%>/UTILS/Script/DELFIN-Calendario.js"></script>
+    <script type="text/javascript">
+    
+        var f = null;
+        var path;
+        nextfield = "";
+
+        function cargar() {
+            byID('idMaestra').value = parent.byID('idMaestra').value;
+            byID('idModulo').value = parent.byID('idModulo').value;
+            byID('strComportamiento').value = '<%=strComportamiento%>';
+            f = document.getElementById('frmDatosActividades');
+            path = '<%=request.getContextPath()%>';
+            mensajeRespuesta('<c:out value="${codigoError}" />', '<c:out value="${mensajeError}" />');
+            if('<%=strComportamiento%>' != '<%=Constante.WF_COMPORTAMIENTO_TRANSACCIONAL%>'){
+            	byID('botonesTransacciones').style.visibility = "hidden";
+            }
+            onCargarDetalle();
+            goblalLimitText('textoComentario','numCarac',1000);
+        }
+
+        function keyDown(DnEvents){
+            k = window.event.keyCode;
+            if (k == 13){
+                return false;
+            }
+            if (k == 120){
+                return false;
+            }
+            if (k == 27){
+                salir();
+                return false;
+            }
+            if (k == 121){
+                return false;
+            }
+            if (k == 112){
+                ayuda();
+                return false;
+            }
+            if (event.ctrlKey){
+                event.keyCode = 0;
+                return false;
+            }
+            if (k==46){
+                return false;
+            }
+            if (window.event && (k == 114 || k == 116 || k == 117 || k == 122))
+                event.keyCode = 505;
+            if(event.keyCode == 505)
+                return false;
+        }
+        document.onkeydown = keyDown;
+
+        function onCargarDetalle() {
+            
+            var params = '?action=CARGAR_DETALLE';
+                params += '&time=' + (new Date()).getTime();
+                params += '&correlativoSeguimiento=' + byID('correlativoSeguimiento').value;
+            var url = path + '/CR_C_RegistroActividades_Servlet' + params;
+            document.getElementById('hidepage').style.visibility = '';
+            document.ifrmDetalleActividades.location.replace(url);
+          }
+        
+        function salir(){
+            parent.salir();
+        }
+
+        function pag(direccion){
+            document.ifrmDetalleActividades.paginacion(direccion);
+        }
+
+        function validar(){
+        	var textoComentario = byID('textoComentario').value;
+            var idTipoMotivo = byID('idTipoMotivo').value;
+
+            if(isEmpty(textoComentario)){
+                frmDatos.textoComentario.focus();
+                alert(m_0001);
+               return false;
+            }
+            if(isEmpty(idTipoMotivo)){
+                frmDatos.idTipoMotivo.focus();
+                alert(m_0001);
+               return false;
+            }
+            return true;
+        }
+
+        function validarIndicadorEnvio(){
+        	var indicadorEnvio = document.ifrmDetalleActividades.obtenerIndicadorEnvio();
+        	if(indicadorEnvio == '<%=Constante.ESTADO_REGISTRO_VIGENTE%>'){
+            	alert(m_10128);
+            	return false;
+            }
+            return true;
+        }
+
+        function procesarEvento(idEvento, indicadorValidacion){
+            var strComportamiento = byID('strComportamiento').value;
+            var textoComentario = byID('textoComentario').value;
+            var idTipoMotivo = byID('idTipoMotivo').value;
+            if(strComportamiento != '<%=Constante.WF_COMPORTAMIENTO_TRANSACCIONAL%>'){
+                alert(m_10120);
+                return false;
+                }
+            if(indicadorValidacion == 'S'){
+                if(!validar()){
+                    return false;
+                }
+            }
+
+            var params = serializeForm(byID('frmDatosActividades'));
+            params += '&action=ENVIAR';
+            params += '&idEvento=' + idEvento;
+            params += '&idTipoMotivo=' + idTipoMotivo;
+            params += '&textoComentario=' + textoComentario;
+            params += '&time=' + (new Date()).getTime();
+            var url = path + '/CR_T_RegistroActividades_Servlet';
+            ajaxRequestPOST(url, params, false, function(xmldoc) {
+                mensajeRespuestaXML(xmldoc, function(){
+                  alert(m_8570);
+                  parent.salir();
+                });
+              });
+        }
+
+        function verActividad(){
+        	var correlativoActividad = document.ifrmDetalleActividades.obtenerIdActividad();
+            if(isEmpty(correlativoActividad)){
+                alert(m_9120);
+                return false;
+            }
+            var indicadorEnvio = document.ifrmDetalleActividades.obtenerIndicadorEnvio();
+            agregarActividad(correlativoActividad, indicadorEnvio);
+        }
+
+        function agregarActividad(idActividad, indicadorEnvio){
+            var strComportamiento = byID('strComportamiento').value;
+            if(isEmpty(idActividad)){
+                idActividad = '';
+                
+            }else if(strComportamiento == '<%=Constante.COMPORTAMIENTO_TRANSACCIONAL%>'){
+            	if(indicadorEnvio == '<%=Constante.ESTADO_REGISTRO_VIGENTE%>'){
+            		strComportamiento = '<%=Constante.COMPORTAMIENTO_CONSULTA%>'
+                }else{
+                	strComportamiento = '<%=Constante.COMPORTAMIENTO_TRANSACCIONAL%>';
+                }
+            }
+            var params = '?action=MOSTRAR_DETALLE';
+                params += '&idMaestra=' + byID('idMaestra').value;
+                params += '&idActividad=' + idActividad;
+                params += '&strComportamiento=' + strComportamiento;
+                params += '&time=' + (new Date()).getTime();
+            var url = '/DELFINWEBNEW/CR_T_RegistroActividades_Servlet' + params;
+            var attribs = 'dialogHeight:300px;dialogWidth:600px; center:yes; help:no; resizable:no; status:no';
+            window.showModalDialog(url, window, attribs);
+         }
+
+        function eliminarActividad(){
+        	if(!validarIndicadorEnvio()){
+            	return false;
+        	}
+            strComportamiento = byID('strComportamiento').value;
+            if(strComportamiento != '<%=Constante.WF_COMPORTAMIENTO_TRANSACCIONAL%>'){
+                alert(m_10120);
+                return false;
+            }
+            if (!confirm(m_0002)){
+                return;
+            }
+            var correlativoActividad = document.ifrmDetalleActividades.obtenerIdActividad();
+            if(isEmpty(correlativoActividad)){
+                alert(m_9120);
+                return false;
+            }
+            var params = 'action=ELIMINAR';
+                params += '&correlativoActividad=' + correlativoActividad;
+                params += '&time=' + (new Date()).getTime();
+            var url = path + '/CR_T_RegistroActividades_Servlet';
+            ajaxRequestPOST(url, params, false, function(xmldoc) {
+                mensajeRespuestaXML(xmldoc, function(){
+                  alert(m_8570);
+                  onCargarDetalle();
+                });
+              });
+        }
+
+  </script>
+  </head>
+  <body onhelp="getF1();" class="colorbody" onload="cargar();" style="padding: 0px, 0px, 0px, 0px;overflow:auto;">
+    <form name="frmDatosActividades" id="frmDatosActividades" method="post">
+      <div id="hidepage" style="position: absolute;left:460px;top:230px;width: 100;height: 20">
+          <table>
+              <tr><td align="center"><img src="<%=request.getContextPath()%>/UTILS/img/loadings.gif" ></td></tr>
+              <tr><td align="center" style="font-weight: bold;" ><span class="etiqueta" >Cargando...</span></td></tr>
+          </table>
+      </div>
+      <table border="0" cellpadding="0" cellspacing="2" width="99.5%" align="center" >
+        <tr>
+          <td height="4">
+            <img src="<%=request.getContextPath()%>/UTILS/img/t.gif" width="1" height="2">
+          </td>
+        </tr>
+        <tr>
+            <td class="tituloframe">
+                DATOS ACTIVIDADES
+                <input type="hidden" name="idEtapa" id="idEtapa" value="<c:out value="${requestScope.idEtapa}"/>">
+                <input type="hidden" name="idMaestra" id="idMaestra">
+                <input type="hidden" name="idModulo" id="idModulo" >
+                <input type="hidden" name="correlativoSeguimiento" id="correlativoSeguimiento" value="<c:out value="${beanCRSeguimientoCartera.correlativoSeguimiento}"/>" >
+                <input type="hidden" name="strComportamiento" id="strComportamiento" value="<c:out value="${requestScope.strComportamiento}"/>">
+            </td>
+        </tr>
+        <tr>
+          <td>
+            <table border="2" cellpadding="0" cellspacing="0" width="100%" align="center" class="frame">
+              <tr>
+                <td height="20" align="center">
+                  <table width="99%" cellpadding="0" cellspacing="2" border="0">
+                    <tr>
+                        <td class="etiqueta" align="left"  valign="middle" style="width: 3%">
+                            Motivo
+                        </td>
+                        <td style="width: 45%"> 
+                            <select name="idTipoMotivo" id="idTipoMotivo" style="width: 250px;" tabindex="4" onfocus=" nextfield='textoComentario'" <%=cboIz%>>
+	                          <c:forEach var='beanCRMotivoSeguimientoCartera' items='${requestScope.listBeanCRMotivoSeguimientoCartera}'  >
+	                            <option value="<c:out value='${beanCRMotivoSeguimientoCartera.idMotivoSeguimiento}'/>" <c:if test="${beanCRMotivoSeguimientoCartera.idMotivoSeguimiento == beanCRMovimientoPorSeguimiento.idTipoMotivo}">selected</c:if> >
+	                              <c:out value='${beanCRMotivoSeguimientoCartera.descripcionMotivo}' />
+	                            </option>
+	                          </c:forEach>
+	                        </select>
+                        </td>
+                    </tr>
+                    <tr>
+			          <td height="4">
+			            <img src="<%=request.getContextPath()%>/UTILS/img/t.gif" width="1" height="2">
+			          </td>
+			        </tr>
+                    <tr>
+                        <td class="etiqueta" align="left"  valign="middle" style="width: 3%" >
+                            Comentarios
+                        </td>
+                       <td colspan="2"> 
+                           <textarea name="textoComentario" id="textoComentario" style="width: 100%;height:70px;"
+                           onfocus="this.select(); field='textoComentario';" <%=campoIz%>
+                           onKeyDown="goblalLimitText('textoComentario','numCarac',1000);" onKeyUp="goblalLimitText('textoComentario','numCarac',1000);"><c:out value="${requestScope.textoComentario}"/></textarea>
+                           <input type="hidden" name="countdown" size="3" readonly />
+                           <div style="text-align: right;" class="etiqueta">
+                              (Max. <label name="numCarac" id="numCarac"></label>&nbsp;/ 1000)
+                            </div>
+                        </td>
+                    </tr>
+                </table>
+                </td>
+              </tr>
+            </table>
+          </td>
+        </tr>
+        <tr>
+          <td height="4">
+            <img src="<%=request.getContextPath()%>/UTILS/img/t.gif" width="1" height="2">
+          </td>
+        </tr>
+        <tr>
+          <td>
+            <table cellpadding="0" cellspacing="0" width="100%" align="center">
+              <tr>
+                <td height="20" align="center">
+                  <table width="100%" cellpadding="0" cellspacing="2" border="0">
+	                  <tr>
+			          <td>
+			            <table cellpadding="0" border="0" cellspacing="0" width="100%" align="center">
+			              <tr>
+			                <td align="center" valign="top" width="100%">
+			                  <table width="100%" align="center" cellspacing="0" border="0">
+			                  <tr>
+	                              <td class="tituloframe">DETALLE ACTIVIDADES</td>
+	                          </tr>
+			                    <tr>
+			                      <td valign="top">
+			                        <table width="100%" cellpadding="0" cellspacing="0" border="0">
+			                          <tr>
+			                            <td>
+			                              <iframe id="ifrmDetalleActividades" name="ifrmDetalleActividades" frameborder="0" width="100%" height="300px"  class="frame" src="FINANCIERO/workflow/seguimientoCartera/etapa/actividades/CR_C_DatosActividades_TABLA.jsp"></iframe>
+			                            </td>
+			                          </tr>
+			                        </table>
+			                      </td>
+			                    </tr>
+			                  </table>
+			                  <table width="99%">
+                                <tr>
+                                  <td align="left">
+                                    <delfinTagHtml:boton nombre="BT_Ver_P.gif" onclick="javascript:verActividad();" />
+                                    <div id="botonesTransacciones" style="display: inline">
+	                                    <delfinTagHtml:boton nombre="BT_Agregar_P.gif" onclick="javascript:agregarActividad();" />
+	                                    <delfinTagHtml:boton nombre="BT_Eliminar_P.gif" onclick="javascript:eliminarActividad();" />
+                                    </div>
+                                  </td>
+			                      <td align="right">
+			                      <IMG src="<%=request.getContextPath()%>/UTILS/img/PagRe.gif" onClick="pag(-1);" style="CURSOR: hand;vertical-align: middle;" alt="Anterior">
+			                      <label id="inicial" style="width:25;text-align:left;font-size:8pt;font-family:Arial;vertical-align: middle;"></label>
+			                      <IMG src="<%=request.getContextPath()%>/UTILS/img/t.gif" height=1 width="10">
+			                      <label id="final" style="width:25;text-align:right;font-size:8pt;font-family:Arial;vertical-align: middle;"></label>
+			                      <IMG src="<%=request.getContextPath()%>/UTILS/img/PagAv.gif" onClick="pag(1)" style="CURSOR: hand;vertical-align: middle;" alt="Siguiente">
+			                      <label id="total" style="width:50;text-align:left;font-size:8pt;font-family:Arial;vertical-align: middle;"></label>
+			                      </td>
+			                    </tr>
+			                  </table>
+			                </td>
+			              </tr>
+			            </table>
+			          </td>
+			        </tr>
+                </table>
+                </td>
+              </tr>
+            </table>
+          </td>
+        </tr>
+      </table>
+    </form>
+  </body>
+</html>
\ No newline at end of file
diff --git a/DELFINWEBNEW/WebRoot/FINANCIERO/workflow/seguimientoCartera/etapa/actividades/CR_C_DatosActividades_TABLA.jsp b/DELFINWEBNEW/WebRoot/FINANCIERO/workflow/seguimientoCartera/etapa/actividades/CR_C_DatosActividades_TABLA.jsp
new file mode 100644
index 0000000..1ae9542
--- /dev/null
+++ b/DELFINWEBNEW/WebRoot/FINANCIERO/workflow/seguimientoCartera/etapa/actividades/CR_C_DatosActividades_TABLA.jsp
@@ -0,0 +1,249 @@
+<!-- CR_C_DatosActividades_TABLA.jsp-->
+<%--[Req.S17-022] kdelacruz 10.04.2017 - Implementacion workflow seguimiento cartera--%>
+
+<jsp:directive.page import="general.utils.Paginacion"/>
+<%
+    String path =request.getContextPath();
+    String myData = request.getAttribute("myData") != null ? (String)request.getAttribute("myData") : "";
+    String hid_pagina = request.getParameter("hid_pagina") != null?request.getParameter("hid_pagina"):"1";  
+    String ini = request.getAttribute("inicio") != null?(String)request.getAttribute("inicio"):"0";
+    String indFin = request.getAttribute("indFin") != null?(String)request.getAttribute("indFin"):"0";
+    String numeroSolicitud = (String)request.getParameter("numeroSolicitud") != null ? (String)request.getParameter("numeroSolicitud") : "";
+%>
+<%@ taglib prefix="c" uri="http://java.sun.com/jstl/core" %>
+<html>
+<head>  
+    <!-- Invocaci�n de Estilos -->
+    <link id="css" href="<%=request.getContextPath()%>/UTILS/css/DELFIN.css" rel="stylesheet" type="text/css">
+    <!-- Invocaci�n de JavaScript -->
+    <script src="<%=request.getContextPath()%>/UTILS/Script/DELFIN-Tabla.js"></script>
+    <script src="<%=request.getContextPath()%>/UTILS/Script/MsgValidacion.js"></script>
+    <style>
+        .active-controls-grid {width: "100%"; font: menu;}
+        .active-column-0  {display: none;}
+        .active-column-1  {display: none;}
+        .active-column-2  {display: none;}
+        .active-column-3  {width: 120px;text-align: center;}
+        .active-column-4  {width: 170px;text-align: left;}
+        .active-column-5  {width: 120px;text-align: left}
+        .active-column-6  {width: 250px;text-align: left;}
+        .active-column-7  {width: 250px;text-align: left;}
+
+        .active-grid-column {border-right: 1px solid threedlightshadow; }
+        .active-grid-row {border-bottom: 1px solid threedlightshadow; }
+    </style>
+</head>
+<body onhelp="getF1()" onLoad="onload();">
+    <script>    
+      var path;
+      function onload(){
+        path = '<%=path%>';
+        if(parent.document.getElementById('hidepage')){
+            parent.loadImages();
+        }
+        setFoco();
+      }
+        var myData= [<c:out value="${myData}" escapeXml="false"/>];
+        var myColumns = ["ID Actividad"
+                         ,"ID Seguimiento"
+                         , "codigo Indicador Envio"
+                         , "Fecha Actividad"
+                         , "Tipo Actividad"
+                         , "Contacto"
+                         , "Comentario"
+                         , "Indicador Envio"
+                         , "Documentos"];
+
+        //  create ActiveWidgets Grid javascript object
+        var obj = new Active.Controls.Grid;
+
+        obj.setId("obj");
+        // grid header
+        obj.gridColumn = myColumns;
+        // grid data
+        obj.gridData = myData;
+        //  header methods
+        obj.getColumnCount = function() {return this.gridColumn.length};
+        obj.getColumnText = function(i){return this.gridColumn[i]};
+        //  data methods
+        obj.getDataCount = function() {return this.gridData.length};
+        obj.getDataText = function(i, j){return this.gridData[i][j]};
+        obj.setDataText = function(value, i, j){this.gridData[i][j] = value};
+
+        obj.setRowHeaderWidth("28px");
+        obj.setColumnHeaderHeight("20px");
+
+        //var row = new Active.Templates.Row;
+        var row = new Active.Templates.Row;
+        obj.setTemplate('row', row);
+        row.setEvent("ondblclick", function(){this.action("myAction")});    
+        obj.setTemplate("row", row);
+        obj.setAction("myAction", function(src){
+        	parent.verActividad();
+        });
+        //Evento Focus de la grilla 
+        obj.setAction("selectionChanged", mySelect);
+
+        //Evento que reconoce la tecla ENTER
+        var defaultEventHandler = obj.getEvent("onkeydown");
+        var myEventHandler = function(event){
+            if(event.keyCode==13){
+
+            }else if(event.keyCode==27){
+                parent.parent.salir();
+                event.returnValue = false;
+            }else if (event.keyCode == 8)event.returnValue = backspace();//Cancela Backspace
+            else if (event.keyCode == 112)parent.ayuda();//F1 ACERCA DE...
+            else if (event.ctrlKey){//Cancela Control
+                event.keyCode = 0;
+                event.returnValue = false; 
+            }else if (window.event && (event.keyCode == 114 || event.keyCode == 116 ||
+                event.keyCode == 117 || event.keyCode == 122)){//Cancela F3,F5,F6 y F11
+                event.keyCode = 505;
+                if(event.keyCode == 505)event.returnValue = false;  
+            }else
+                defaultEventHandler.call(this, event);
+        }
+        obj.setEvent("onkeydown", myEventHandler);
+
+        function mySelect(){
+        }
+
+        var checkbox = new My.Templates.CheckboxLabel;
+        checkbox.setCheckedProperty("true", "Si");
+        checkbox.setCheckedProperty("false", "");
+        obj.setColumnTemplate(checkbox, 0);
+        
+        //Pintado de la grilla
+        document.write(obj);
+
+        function devuelveTam(){
+            return myData.length;
+        }
+
+        function setFoco(){
+            try{
+                if(myData.length > eval(indice) && indice > -1){
+                    obj.setSelectionIndex(eval(indice));
+                    document.getElementById('obj.data.item:'+indice+'.item:1').focus();
+                }else if(myData.length > 0){
+                    obj.setSelectionIndex(0);
+                    document.getElementById('obj.data.item:'+ 0 +'.item:1').focus();
+                  }
+             }catch(error){
+             }
+        }
+        function getTableIndex() {
+            return obj.getProperty("selection/index");
+        }
+        
+        //Numero de filas de las tablas
+        function NumerodeFilas() {
+            return obj.getRowProperty("values").length;
+        }
+        
+      //Devuelve los datos de la fila que se solicita
+        function devuelveFila(){
+            var fila = new Array(myColumns.length);
+            if(myData.length){
+                var index = obj.getSelectionProperty("index");
+                for (i=0; i<myColumns.length; i++)
+                    fila[i] = obj.getDataProperty('text', index, i);
+            }
+            return  fila;
+        }
+    
+        var f = parent.document.forms[0];
+        function devuelveTamanio(){
+        }
+        
+        if(myData.length>0)
+            obj.setSelectionIndex(0);
+            
+        //Funciones que anulan el click derecho del mouse
+        document.oncontextmenu=new Function("return false");
+        
+        function NumerodeFilas() {
+            return obj.getRowProperty("values").length;
+        }
+
+        function getTableIndex() {
+            return obj.getProperty("selection/index");
+        }
+
+        function datosPagina(pag){
+        	 var params = '?action=CARGAR_DETALLE';
+             params += '&correlativoSeguimiento=' + parent.byID('correlativoSeguimiento').value;
+             params += '&hid_pagina=' + pag;
+	         var url = path + '/CR_C_RegistroActividades_Servlet' + params;
+	         parent.window.document.ifrmDetalleActividades.location.replace(url);
+        }
+
+        function paginacion(direccion){
+            if(myData.length < 1){
+                return;
+              }
+              var pag = eval("<%=hid_pagina%>")+eval(direccion);
+                  if(direccion == "-1"){
+                     <%if(!ini.equals("0")){%>
+                          datosPagina(pag);
+                     <%}else{%>
+                          alert(m_0060);
+                     <%}%>
+                  }else{
+                     <%if(indFin.equals("0")){%>
+                          datosPagina(pag);
+                     <%}else{%>
+                          alert(m_0061);
+                     <%}%>
+                  }
+            }
+
+        valores();
+        function valores(){
+            <%
+              String comienzo = request.getAttribute("inicio") != null?(String)request.getAttribute("inicio"):"0";
+              String fin = request.getAttribute("fin") != null?(String)request.getAttribute("fin"):"0";
+              String total = request.getAttribute("total") != null?(String)request.getAttribute("total"):"0";
+            %>
+              if(myData.length>0){
+                 parent.inicial.innerHTML = eval(<%=comienzo%>)+1;
+                 parent.final.innerHTML   = <%= fin %>;
+                 parent.total.innerHTML   = "de <%= total %>";
+              }else{
+                 parent.inicial.innerHTML = "";
+                 parent.final.innerHTML   = "";
+                 parent.total.innerHTML   = "";
+              }
+          }
+
+        function obtenerIdActividad() {
+            var filas = NumerodeFilas();
+            if(filas != 0){
+                return myData[getTableIndex()][0];
+            }else{
+                return '';
+             }
+        }
+        
+        function obtenerIdSeguimiento() {
+            var filas = NumerodeFilas();
+            if(filas != 0){
+                return myData[getTableIndex()][1];
+            }else{
+                return '';
+             }
+        }
+
+        function obtenerIndicadorEnvio() {
+            var filas = NumerodeFilas();
+            if(filas != 0){
+                return myData[getTableIndex()][2];
+            }else{
+                return '';
+             }
+        }
+
+    </script>
+</body>
+</html>
\ No newline at end of file
diff --git a/DELFINWEBNEW/WebRoot/FINANCIERO/workflow/seguimientoCartera/etapa/actividades/CR_T_RegistroActividades_CHILD.jsp b/DELFINWEBNEW/WebRoot/FINANCIERO/workflow/seguimientoCartera/etapa/actividades/CR_T_RegistroActividades_CHILD.jsp
new file mode 100644
index 0000000..656a0e5
--- /dev/null
+++ b/DELFINWEBNEW/WebRoot/FINANCIERO/workflow/seguimientoCartera/etapa/actividades/CR_T_RegistroActividades_CHILD.jsp
@@ -0,0 +1,259 @@
+<!-- CR_T_RegistroActividades_CHILD.jsp-->
+<%--[Req.S17-022] kdelacruz 29.03.2017 - Implementaci�n WorkFlow Seguimiento Carteral--%>
+
+<%@ page language="java" import="java.util.*" pageEncoding="ISO-8859-1"%>
+<jsp:directive.page import="financ.util.Constante"/>
+<%@ taglib prefix="c" uri="http://java.sun.com/jstl/core" %>
+<%@ taglib uri="/delfin" prefix="delfinTagHtml" %>
+<%
+	String strComportamiento = request.getAttribute("strComportamiento") != null ? (String) request.getAttribute("strComportamiento") : "C";
+	String campoIz = "T".equals(strComportamiento) ? "class='campoobligatorioiz'" : "readonly class='campodisplayiz'";
+    String campoDe = "T".equals(strComportamiento) ? "class='campoobligatoriode'" : "readonly class='campodisplayde'";
+    String campoCe = "T".equals(strComportamiento) ? "class='campoobligatorioce'" : "readonly class='campodisplayce'";
+
+    String opcionDe = "T".equals(strComportamiento) ? "class='campoopcionalde'" : "readonly class='campodisplayde'";
+
+    String cboOpcIz = "T".equals(strComportamiento) ? "class='campoopcionaliz'" : "disabled class='campodisplayiz'";
+    String cboIz = "T".equals(strComportamiento) ? "class='campoobligatorioiz'" : "disabled class='campodisplayiz'";
+%>
+<html>
+  <head>
+    <title>REGISTRO DE ACTIVIDAD</title>
+    <link id="css" href="${pageContext.request.contextPath}/UTILS/css/DELFIN.css" rel="stylesheet" type="text/css">
+    <script src="${pageContext.request.contextPath}/UTILS/Script/MsgValidacion.js"></script>
+    <script src="<%=request.getContextPath()%>/UTILS/Script/DELFIN-Utiles.js"></script>
+    <script src="<%=request.getContextPath()%>/UTILS/Script/DELFIN-Calendario.js"></script>
+    <script type="text/javascript">
+    
+        var f = null;
+        var path;
+        nextfield = "";
+
+        function cargar() {
+            byID('idMaestra').value = byID('idMaestra').value;
+            byID('idModulo').value = byID('idModulo').value;
+            f = document.getElementById('frmRegistroActividad');
+            path = '<%=request.getContextPath()%>';
+            mensajeRespuesta('<c:out value="${codigoError}" />', '<c:out value="${mensajeError}" />');
+            goblalLimitText('comentarioActividad','numCarac',1000);
+            iniciarCalendario();
+            if('<%=Constante.COMPORTAMIENTO_TRANSACCIONAL%>' != '<%=strComportamiento%>'){
+                byID('botonesRegistroActividades').style.display = 'none';
+            }
+        }
+
+        function iniciarCalendario(){
+            cal1 = new calendar1(byID('fechaActividad'));
+            cal1.year_scroll = true;
+            cal1.time_comp = false;
+        }
+
+        function keyDown(DnEvents){
+            k = window.event.keyCode;
+            if (k == 13){
+            	if(nextfield == "comentarioActividad"){
+            	    eval('document.forms[0].' + nextfield + '.focus()');
+            	    return false;
+            	}
+            	if(nextfield == "tipoActividad"){
+            	    eval('document.forms[0].' + nextfield + '.focus()');
+            	    return false;
+            	}
+            	if(nextfield == "contactoActividad"){
+            	    eval('document.forms[0].' + nextfield + '.focus()');
+            	    return false;
+            	}
+                return false;
+            }
+            if (k == 120){
+                return false;
+            }
+            if (k == 27){
+                salir();
+                return false;
+            }
+            if (k == 121){
+                return false;
+            }
+            if (k == 112){
+                ayuda();
+                return false;
+            }
+            if (event.ctrlKey){
+                event.keyCode = 0;
+                return false;
+            }
+            if (k==46){
+                return false;
+            }
+            if (window.event && (k == 114 || k == 116 || k == 117 || k == 122))
+                event.keyCode = 505;
+            if(event.keyCode == 505)
+                return false;
+        }
+        document.onkeydown = keyDown;
+
+        function salir(){
+        	window.close();
+            return true;
+        }
+
+        function validar(){
+        	var fechaActividad = byID('fechaActividad').value;
+        	var comentarioActividad = byID('comentarioActividad').value;
+        	var tipoActividad = byID('tipoActividad').value;
+        	var contactoActividad = byID('contactoActividad').value;
+
+        	if(isEmpty(fechaActividad)){
+        	    frmRegistroActividad.fechaActividad.focus();
+        	    alert(m_0001);
+        	    return false;
+        	}
+        	if(isEmpty(comentarioActividad)){
+        	    frmRegistroActividad.comentarioActividad.focus();
+        	    alert(m_0001);
+        	    return false;
+        	}
+        	if(isEmpty(tipoActividad)){
+        	    frmRegistroActividad.tipoActividad.focus();
+        	    alert(m_0001);
+        	    return false;
+        	}
+        	if(isEmpty(contactoActividad)){
+        	    frmRegistroActividad.contactoActividad.focus();
+        	    alert(m_0001);
+        	    return false;
+        	}
+            return true;
+        }
+
+        function grabarActividad(){
+            strComportamiento = byID('strComportamiento').value;
+            if(strComportamiento != '<%=Constante.WF_COMPORTAMIENTO_TRANSACCIONAL%>'){
+                alert(m_10120);
+                return false;
+                }
+            if(!validar()){
+                return false;
+            }
+
+            var params = serializeForm(byID('frmRegistroActividad'));
+            params += '&action=GRABAR';
+            params += '&idMaestra=' + byID('idMaestra').value;
+            params += '&time=' + (new Date()).getTime();
+            var url = path + '/CR_T_RegistroActividades_Servlet';
+            ajaxRequestPOST(url, params, false, function(xmldoc) {
+                mensajeRespuestaXML(xmldoc, function(){
+                  alert(m_8570);
+                  var callerWindowObj = dialogArguments;
+                  callerWindowObj.onCargarDetalle();
+                  salir();
+                });
+              });
+        }
+    </script>
+  </head>
+  <body onhelp="getF1();" class="colorbody" onload="cargar();" style="padding: 0px, 0px, 0px, 0px;overflow:auto;">
+    <form name="frmRegistroActividad" id="frmRegistroActividad" method="post">
+    <input type="hidden" name="idEtapa" id="idEtapa" value="<c:out value="${requestScope.idEtapa}"/>">
+    <input type="hidden" name="idMaestra" id="idMaestra" value="<c:out value="${requestScope.idMaestra}"/>">
+    <input type="hidden" name="idModulo" id="idModulo">
+    <input type="hidden" name="strComportamiento" id="strComportamiento" value="<c:out value="${requestScope.strComportamiento}"/>">
+    <input type="hidden" name="correlativoActividad" id="correlativoActividad" value="<c:out value="${requestScope.beanCRActividadSeguimientoCartera.correlativoActividad}"/>">
+      <table border="0" cellpadding="0" cellspacing="2" width="99.5%" align="center" >
+        <tr>
+          <td>
+            <table border="1" cellpadding="0" cellspacing="0" width="100%" align="center" class="frame">
+              <tr>
+                <td height="20" align="center">
+                  <table width="100%" cellpadding="0" cellspacing="0" border="0">
+                    <tr>
+                      <td align="left" colspan="4" valign="middle">
+                        <div id="botonesRegistroActividades" style="display: inline">
+                            <delfinTagHtml:boton nombre="BT_Grabar.gif" onclick="javascript:grabarActividad();"/>
+                            <delfinTagHtml:boton nombre="BT_Documentos.gif" onclick="javascript:"/>
+                        </div>
+                        <delfinTagHtml:boton nombre="BT_Salir.gif" onclick="javascript:salir();" />
+                      </td>
+                    </tr>
+                  </table>
+                </td>
+              </tr>
+            </table>
+          </td>
+        </tr>
+        <tr>
+          <td height="4">
+            <img src="<%=request.getContextPath()%>/UTILS/img/t.gif" width="1" height="2">
+          </td>
+        </tr>
+        <tr>
+            <td class="tituloframe">DATOS</td>
+        </tr>
+        <tr>
+          <td>
+            <table border="2" cellpadding="0" cellspacing="0" width="100%" align="center" class="frame">
+              <tr>
+                <td height="20" align="center">
+                  <table width="99%" cellpadding="0" cellspacing="2" border="0">
+                    <tr> 
+                        <td class="etiqueta" align="left" width="110" valign="middle">
+                            Fecha Actividad
+                        </td>
+                        <td class="etiqueta" width="200">
+                            <input name="fechaActividad" id="fechaActividad" value="<c:out value='${beanCRActividadSeguimientoCartera.fechaActividad}' />" style="width: 180px" <%=campoCe%>  
+                            tabindex="1" onBlur="this.value=vuelveFecha(this.value);validarFecha('fechaActividad');" onfocus="this.select(); field='fechaActividad'; nextfield ='tipoActividad';">
+                            <img id="imgFecha" style="cursor:hand" title="Seleccionar Fecha" width="16px" height="16px" src="<%=request.getContextPath()%>/UTILS/img/cal.gif" onclick="if(!byID('fechaActividad').readOnly){cal1.popup();};">
+                        </td>
+
+                        <td  class="etiqueta" align="left" width="110" valign="middle">
+                            Comentario
+                        </td>
+                        <td class="etiqueta" width="200" rowspan="2">
+                            <textarea name="comentarioActividad" id="comentarioActividad" style="width: 200px;height:60px;"
+                                 onfocus="this.select(); field='comentarioActividad';" <%=campoIz%>
+                                 onKeyDown="goblalLimitText('comentarioActividad','numCarac',1000);" onKeyUp="goblalLimitText('comentarioActividad','numCarac',1000);"><c:out value="${requestScope.beanCRActividadSeguimientoCartera.comentarioActividad}"/></textarea>
+                                 <input type="hidden" name="countdown" size="3" readonly />
+                                 <div style="text-align: right;" class="etiqueta">
+                                    (Max. <label name="numCarac" id="numCarac"></label>&nbsp;/ 1000)
+                                 </div>
+                        </td>
+                    </tr>
+                    <tr>
+                        <td class="etiqueta" align="left" width="60" valign="middle">
+                            Tipo Actividad
+                        </td>
+                        <td width="200"> 
+                            <select name="tipoActividad" id="tipoActividad" onchange="" onfocus="nextfield='contactoActividad'" <%=cboIz%> style="width: 200px;" >
+	                          <c:forEach var='indicadorTipoActividad' items='${lstTipoActividad}'>
+	                            <option value="<c:out value='${indicadorTipoActividad.codigo}'/>" <c:if test="${indicadorTipoActividad.codigo == beanCRActividadSeguimientoCartera.tipoActividad}">selected</c:if> >
+	                              <c:out value='${indicadorTipoActividad.descripcion}' />
+	                            </option>
+	                          </c:forEach>
+	                        </select>
+                        </td>
+                    </tr>
+                    <tr>
+                        <td class="etiqueta" align="left" width="130" valign="middle">
+                            Contacto
+                        </td>
+                        <td > 
+                            <select name="contactoActividad" id="contactoActividad" onchange="" onfocus="nextfield='comentarioActividad'" <%=cboIz%> style="width: 200px;" >
+                              <c:forEach var='indicadorContacto' items='${requestScope.lstContacto}'>
+                                <option value="<c:out value='${indicadorContacto.codigo}'/>" <c:if test="${indicadorContacto.codigo == beanCRActividadSeguimientoCartera.contactoActividad}">selected</c:if> >
+                                  <c:out value='${indicadorContacto.descripcion}' />
+                                </option>
+                              </c:forEach>
+                            </select>
+                        </td>
+                      </tr>
+                  </table>
+                </td>
+              </tr>
+            </table>
+          </td>
+        </tr>
+      </table>
+    </form>
+  </body>
+</html>
\ No newline at end of file
diff --git a/DELFINWEBNEW/WebRoot/FINANCIERO/workflow/seguimientoCartera/etapa/datosSeguimiento/CR_T_DatosSeguimiento_CNTR.jsp b/DELFINWEBNEW/WebRoot/FINANCIERO/workflow/seguimientoCartera/etapa/datosSeguimiento/CR_T_DatosSeguimiento_CNTR.jsp
new file mode 100644
index 0000000..bbd15fc
--- /dev/null
+++ b/DELFINWEBNEW/WebRoot/FINANCIERO/workflow/seguimientoCartera/etapa/datosSeguimiento/CR_T_DatosSeguimiento_CNTR.jsp
@@ -0,0 +1,503 @@
+<!-- CR_T_DatosSeguimiento_CNTR.jsp-->
+<%--[Req.S17-022] kdelacruz 29.03.2017 - Implementaci�n WorkFlow Seguimiento Cartera--%>
+
+<%@ page language="java" import="java.util.*" pageEncoding="ISO-8859-1"%>
+<jsp:directive.page import="financ.util.Constante"/>
+<%@ taglib prefix="c" uri="http://java.sun.com/jstl/core" %>
+<%@ taglib uri="/delfin" prefix="delfinTagHtml" %>
+<%
+    String strComportamiento = request.getAttribute("strComportamiento") != null ? (String) request.getAttribute("strComportamiento") : "C";
+    
+    String campoIz = "T".equals(strComportamiento) ? "class='campoobligatorioiz'" : "readonly class='campodisplayiz'";
+    String campoDe = "T".equals(strComportamiento) ? "class='campoobligatoriode'" : "readonly class='campodisplayde'";
+    String campoCe = "T".equals(strComportamiento) ? "class='campoobligatorioce'" : "readonly class='campodisplayce'";
+
+    String opcionDe = "T".equals(strComportamiento) ? "class='campoopcionalde'" : "readonly class='campodisplayde'";
+
+    String cboOpcIz = "T".equals(strComportamiento) ? "class='campoopcionaliz'" : "disabled class='campodisplayiz'";
+    String cboIz = "T".equals(strComportamiento) ? "class='campoobligatorioiz'" : "disabled class='campodisplayiz'";
+%>
+<html>
+  <head>
+    <title>ASIGNAR SOLICITUD</title>
+    <link id="css" href="${pageContext.request.contextPath}/UTILS/css/DELFIN.css" rel="stylesheet" type="text/css">
+    <script src="${pageContext.request.contextPath}/UTILS/Script/MsgValidacion.js"></script>
+    <script src="<%=request.getContextPath()%>/UTILS/Script/DELFIN-Utiles.js"></script>
+    <script src="<%=request.getContextPath()%>/UTILS/Script/DELFIN-Calendario.js"></script>
+    <script type="text/javascript">
+    
+        var f = null;
+        var path;
+        nextfield = "";
+
+        function cargar() {
+            byID('idMaestra').value = parent.byID('idMaestra').value;
+            byID('idModulo').value = parent.byID('idModulo').value;
+            f = document.getElementById('frmDatosSeguimiento');
+            path = '<%=request.getContextPath()%>';
+            mensajeRespuesta('<c:out value="${codigoError}" />', '<c:out value="${mensajeError}" />');
+            formatear();
+            iniciarCalendario();
+            goblalLimitText('comentario','numCarac',1000);
+        }
+
+        function iniciarCalendario(){
+        	cal1 = new calendar1(byID('fechaAlerta'));
+            cal1.year_scroll = true;
+            cal1.time_comp = false;
+
+            cal2 = new calendar1(byID('fechaAtencion'));
+            cal2.year_scroll = true;
+            cal2.time_comp = false;
+            }
+
+        function formatear(){
+            byID('montoProvision').value = formateador(byID('montoProvision').value);
+            byID('montoAlerta').value = formateador(byID('montoAlerta').value);
+            byID('interesDevengado').value = formateador(byID('interesDevengado').value);
+          }
+
+        function keyDown(DnEvents){
+            k = window.event.keyCode;
+            if (k == 13){
+            	if (byID(nextfield) && !byID(nextfield).readOnly) {
+	                if(nextfield == "nombreAgencia"){
+	                    eval('document.forms[0].' + nextfield + '.focus()');
+	                    return false;
+	                }
+	                if(nextfield == "nombreAsignado"){
+	                	openBusqueda();
+	                    eval('document.forms[0].' + nextfield + '.focus()');
+	                    return false;
+	                }
+	                if(nextfield == "txtCriterio"){
+	                    eval('document.forms[0].' + nextfield + '.focus()');
+	                    return false;
+	                }
+	                if(nextfield == "fechaAlerta"){
+	                    eval('document.forms[0].' + nextfield + '.focus()');
+	                    return false;
+	                }
+	                if(nextfield == "codigoTipoAlerta"){
+	                	buscarAsesor();
+	                    eval('document.forms[0].' + nextfield + '.focus()');
+	                    return false;
+	                }
+	                if(nextfield == "fechaAtencion"){
+	                	cal1.popup();
+	                    eval('document.forms[0].' + nextfield + '.focus()');
+	                    return false;
+	                }
+	                if(nextfield == "montoAlerta"){
+	                	cal2.popup();
+	                    eval('document.forms[0].' + nextfield + '.focus()');
+	                    return false;
+	                }
+	                if(nextfield == "codigoCalificacionSBS"){
+	                    eval('document.forms[0].' + nextfield + '.focus()');
+	                    return false;
+	                }
+	                if(nextfield == "montoProvision"){
+	                    eval('document.forms[0].' + nextfield + '.focus()');
+	                    return false;
+	                }
+	                if(nextfield == "interesDevengado"){
+	                    eval('document.forms[0].' + nextfield + '.focus()');
+	                    return false;
+	                }
+	                if(nextfield == "comentario"){
+                        eval('document.forms[0].' + nextfield + '.focus()');
+                        return false;
+                    }
+            	}
+                return false;
+            }
+            if (k == 120){
+                return false;
+            }
+            if (k == 27){
+                salir();
+                return false;
+            }
+            if (k == 121){
+                return false;
+            }
+            if (k == 112){
+                ayuda();
+                return false;
+            }
+            if (event.ctrlKey){
+                event.keyCode = 0;
+                return false;
+            }
+            if (k==46){
+                return false;
+            }
+            if (window.event && (k == 114 || k == 116 || k == 117 || k == 122))
+                event.keyCode = 505;
+            if(event.keyCode == 505)
+                return false;
+        }
+        document.onkeydown = keyDown;
+
+        function salir(){
+            parent.salir();
+        }
+
+        function validar(){
+            
+            var frmDatos = document.frmDatosSeguimiento;
+            var nombreAgencia = byID('nombreAgencia').value;
+            var fechaAlerta = byID('fechaAlerta').value;
+            var codigoCalificacionSBS = byID('nombreAgencia').value;
+            var nombreAsignado = byID('nombreAsignado').value;
+            var codigoTipoAlerta = byID('codigoTipoAlerta').value;
+            var txtCriterio = byID('txtCriterio').value;
+            var fechaAtencion = byID('fechaAtencion').value;
+            var montoAlerta = byID('montoAlerta').value;
+            var comentario = byID('comentario').value;
+            
+            if(isEmpty(nombreAgencia)){
+                frmDatos.nombreAgencia.focus();
+                alert(m_0001);
+               return false;
+            }
+
+            if(isEmpty(fechaAlerta)){
+                frmDatos.fechaAlerta.focus();
+                alert(m_0001);
+               return false;
+            }
+
+            if(isEmpty(codigoCalificacionSBS)){
+                frmDatos.codigoCalificacionSBS.focus();
+                alert(m_0001);
+               return false;
+            }
+
+            if(isEmpty(nombreAsignado)){
+                frmDatos.nombreAsignado.focus();
+                alert(m_0001);
+               return false;
+            }
+
+            if(isEmpty(codigoTipoAlerta)){
+                frmDatos.codigoTipoAlerta.focus();
+                alert(m_0001);
+               return false;
+            }
+
+            if(isEmpty(txtCriterio)){
+                frmDatos.txtCriterio.focus();
+                alert(m_0001);
+               return false;
+            }
+
+            if(isEmpty(fechaAtencion)){
+                frmDatos.fechaAtencion.focus();
+                alert(m_0001);
+               return false;
+            }
+
+            if(isEmpty(montoAlerta)){
+                frmDatos.montoAlerta.focus();
+                alert(m_0001);
+               return false;
+            }
+            if(isEmpty(comentario)){
+                frmDatos.comentario.focus();
+                alert(m_0001);
+               return false;
+            }
+            return true;
+        }
+
+        function procesarEvento(idEvento, indicadorValidacion){
+            var comentario = byID('comentario').value;
+            strComportamiento = byID('strComportamiento').value;
+            if(strComportamiento != '<%=Constante.WF_COMPORTAMIENTO_TRANSACCIONAL%>'){
+                alert(m_10120);
+                return false;
+                }
+            if(indicadorValidacion == 'S'){
+                if(!validar()){
+                    return false;
+                }
+            }else{
+            	var descripcionEstado = byID('descripcionEstado').value;
+                if(isEmpty(descripcionEstado)){
+                    alert(m_10127);
+                    return false;
+                }
+            }
+
+            var params = serializeForm(byID('frmDatosSeguimiento'));
+            params += '&action=PROCESAR';
+            params += '&idEvento=' + idEvento;
+            params += '&comentario=' + comentario;
+            params += '&time=' + (new Date()).getTime();
+            var url = path + '/CR_T_DatosSeguimiento_Servlet';
+            ajaxRequestPOST(url, params, false, function(xmldoc) {
+                mensajeRespuestaXML(xmldoc, function(){
+                  var descripcionEstado = getValor(xmldoc, 'descripcionEstado');
+                  var idMaestra = getValor(xmldoc, 'idMaestra');
+                  var correlativoSeguimiento = getValor(xmldoc, 'correlativoSeguimiento');
+                  byID('descripcionEstado').value = descripcionEstado;
+                  byID('idMaestra').value = idMaestra;
+                  byID('correlativoSeguimiento').value = correlativoSeguimiento;
+                  alert(m_8570);
+                  parent.salir();
+                });
+              });
+        }
+
+        function openBusqueda(){
+            var valor = f.txtCriterio.value != ""?f.txtCriterio.value.toUpperCase():"NULO";
+            nombre="PERSONAS";
+    
+            valor1 = "DOI";
+            valor2 = "Nombre";
+            window.showModalDialog("<%=request.getContextPath()%>/GENERAL/Busqueda.jsp?cboValorBuscar1="+valor1     +
+                                   "&cboValorBuscar2="+valor2+"&txtValorBuscar="+valor+"&tabla="+nombre,
+                                   window,"dialogHeight:330px;dialogWidth:670px;center:yes;help:no;resizable:no;");
+        }
+
+        function insertarPersona(data){
+            f.codigoCliente.value = data[0];
+            f.txtCriterio.value        = data[2];
+            document.frmDatosSeguimiento.txtCriterio.focus();
+            obtenerAgenciaPorCliente(data[0]);
+         }
+
+        function buscarAsesor() {
+            var valor = byID('nombreAsignado').value;
+            var codigoAgencia = byID('codigoAgencia').value;
+            var nombre='USUARIO';
+            var url = path + '/GENERAL/Busqueda.jsp';
+            var params = '?cboValorBuscar1=Codigo';
+            params += '&cboValorBuscar2=Descripcion';
+            params += '&txtValorBuscar=' + valor;
+            params += '&valorAgencia=' + codigoAgencia;
+            params += '&tabla=' + nombre;
+            params += '&time=' + (new Date()).getTime();
+            window.showModalDialog(url + params ,window,'dialogHeight:330px;dialogWidth:670px;center:yes;help:no;resizable:no;status:no');
+       }
+
+       function insertarUsuario(data, indicadorTipo){
+               byID('usuarioAsignado').value = data[0];
+               byID('nombreAsignado').value = data[1];
+               document.frmDatosSeguimiento.nombreAsignado.focus();
+       }
+
+       function obtenerAgenciaPorCliente(codigoCliente){
+           var params = 'action=OBTENER_AGENCIA';
+           params += '&codigoCliente=' + codigoCliente;
+           params += '&time=' + (new Date()).getTime();
+           var url = path + '/CR_T_DatosSeguimiento_Servlet';
+           ajaxRequestPOST(url, params, false, function(xmldoc) {
+               mensajeRespuestaXML(xmldoc, function(){
+                 var codigoAgencia = getValor(xmldoc, 'codigoAgencia');
+                 var descripcionAgencia = getValor(xmldoc, 'descripcionAgencia');
+                 byID('codigoAgencia').value = codigoAgencia;
+                 byID('nombreAgencia').value = descripcionAgencia;
+               });
+             });
+       }
+
+    </script>
+  </head>
+  <body onhelp="getF1();" class="colorbody" onload="cargar();" style="padding: 0px, 0px, 0px, 0px;overflow:auto;">
+    <form name="frmDatosSeguimiento" id="frmDatosSeguimiento" method="post">
+      <table border="0" cellpadding="0" cellspacing="2" width="99.5%" align="center" >
+        <tr>
+          <td height="4">
+            <img src="<%=request.getContextPath()%>/UTILS/img/t.gif" width="1" height="2">
+          </td>
+        </tr>
+        <tr>
+            <td class="tituloframe">
+                DATOS SEGUIMIENTO
+                <input type="hidden" name="idEtapa" id="idEtapa" value="<c:out value="${requestScope.idEtapa}"/>">
+                <input type="hidden" name="idMaestra" id="idMaestra">
+                <input type="hidden" name="idModulo" id="idModulo">
+                <input type="hidden" name="correlativoSeguimiento" id="correlativoSeguimiento" value="<c:out value="${requestScope.beanCRSeguimientoCartera.correlativoSeguimiento}"/>" >
+                <input type="hidden" name="strComportamiento" id="strComportamiento" value="<c:out value="${requestScope.strComportamiento}"/>">
+            </td>
+        </tr>
+        <tr>
+          <td>
+            <table border="2" cellpadding="0" cellspacing="0" width="100%" align="center" class="frame">
+              <tr>
+                <td height="20" align="center">
+                  <table width="99%" cellpadding="0" cellspacing="2" border="0">
+                  <tr>
+                     <td class="etiqueta" align="left" valign="middle" style="padding: 10px 0">
+                        Cliente
+                    </td>
+
+                    <td > 
+                       <input type="hidden" name="codigoCliente" id="codigoCliente" value="<c:out value='${requestScope.beanCRSeguimientoCartera.codigoCliente}' />"/>
+                       <input name="txtCriterio" style="width: 75%" <%=campoIz%> tabindex="1" value="<c:out value='${requestScope.beanCRSeguimientoCartera.nombreCliente}' />"
+                       onfocus="this.select(); field='codigoCliente'; nextfield ='nombreAsignado';" >
+                       <img  src="<%=request.getContextPath()%>/UTILS/img/Detalle.gif" style="cursor: hand" border=0 onclick="if(!byID('txtCriterio').readOnly){openBusqueda();};">
+                    </td>
+
+                     <td class="etiqueta" align="left" valign="middle" width="10%">
+                         Fecha Atencion
+                     </td>
+                     <td class="etiqueta" align="left" valign="middle" width="40%"> 
+                        <input name="fechaAtencion" style="width: 75%" <%=campoCe%> tabindex="1" 
+                        value="<c:out value='${requestScope.beanCRSeguimientoCartera.fechaAtencion}' />"
+                        onkeypress="valida_especiales(this.value,'fecha')" maxlength="10" onblur="this.value=vuelveFecha(this.value);if(!esFecha(this.value)) {alert(m_0006);this.focus();return false;}"
+                        onfocus="this.select(); field='fechaAtencion'; nextfield ='montoAlerta';"/>
+                        <img id="imgFecha" style="cursor:hand" title="Seleccionar Fecha" width="16px" height="16px" src="<%=request.getContextPath()%>/UTILS/img/cal.gif" onclick="if(!byID('fechaAtencion').readOnly){cal2.popup();};">
+                     </td>
+                  </tr>
+                  <tr>
+                     <td class="etiqueta" align="left" valign="middle" style="padding: 10px 0" width="10%">
+                         Agencia
+                     </td>
+                     <td width="40%">
+                        <input type="hidden" name="codigoAgencia" id="codigoAgencia" value="<c:out value='${requestScope.beanCRSeguimientoCartera.codigoAgencia}' />"/>
+                        <input name="nombreAgencia" style="width: 75%" readonly class='campodisplayiz' tabindex="1"  value="<c:out value='${beanCRSeguimientoCartera.descripcionAgencia}' />"
+                        onfocus="this.select(); field='codigoAgenciaAsignada'; nextfield ='nombreAsignado';">
+                     </td>
+
+                    <td class="etiqueta" align="left" valign="middle" width="100">
+                        Monto Alerta
+                    </td>
+
+                    <td width="100" class="etiqueta" align="left" valign="middle"> 
+                        <input name="montoAlerta" style="width: 80%" <%=campoDe%> tabindex="1" maxlength="10"
+                               value="<c:out value='${requestScope.beanCRSeguimientoCartera.montoAlerta}' />"
+                               onKeyPress="valida_numero(this,'dec')" onblur="this.value=formateador(this.value);"
+                               onfocus="this.select(); field='montoAlerta'; nextfield ='codigoCalificacionSBS';">
+                    </td>
+                  </tr>
+                  <tr>
+                    <td class="etiqueta" align="left" valign="middle" style="padding: 10px 0">
+                         Asesor
+                     </td>
+
+                     <td >
+                        <input type="hidden" name="usuarioAsignado" id="usuarioAsignado" value="<c:out value='${requestScope.beanCRSeguimientoCartera.usuarioAsignado}' />"/>
+                        <input name="nombreAsignado" style="width: 75%" <%=campoIz%>  tabindex="1" value="<c:out value='${requestScope.beanCRSeguimientoCartera.nombreUsuarioAsignado}' />"
+                        onfocus="this.select(); field='usuarioAsignacion'; nextfield ='codigoTipoAlerta';">
+                         <img  src="<%=request.getContextPath()%>/UTILS/img/Detalle.gif" style="cursor: hand" border=0 onclick="if(!byID('nombreAsignado').readOnly){buscarAsesor();};">
+                    </td>
+                    
+                    <td class="etiqueta" align="left" width="100" valign="middle">
+                            Cal. SBS
+                        </td>
+                        <td >
+                            <select name=codigoCalificacionSBS id="codigoCalificacionSBS" style="width: 80%;" tabindex="4" onfocus="nextfield='montoProvision'" <%=cboIz%>>
+                              <c:forEach var='beanCombo' items='${requestScope.lstCalificacionSBS}' >
+                                <option value="<c:out value='${beanCombo.codigo}' />" <c:if test="${indicadorFinanciamiento.codigo == beanCRSeguimientoCartera.codigoCalificacionSBS}">selected</c:if> >
+                                  <c:out value='${beanCombo.descripcion}' />
+                                </option>
+                              </c:forEach>
+                            </select>
+                        </td>
+                  </tr>
+                  <tr>
+                    <td class="etiqueta" align="left" valign="middle" style="padding: 10px 0">
+                          Tipo Alerta
+                    </td>
+                    <td class="etiqueta" align="left" valign="middle"> 
+                       <select name=codigoTipoAlerta id="codigoTipoAlerta" style="width: 80%;" tabindex="4" onfocus=" nextfield='fechaAlerta'" <%=cboIz%> >
+                         <c:forEach var='beanCRTipoAlerta' items='${requestScope.lstBeanCRTipoAlerta}' >
+                           <option value="<c:out value='${beanCRTipoAlerta.idTipoAlerta}' />" <c:if test="${beanCRTipoAlerta.idTipoAlerta == beanCRSeguimientoCartera.codigoTipoAlerta}">selected</c:if> >
+                             <c:out value='${beanCRTipoAlerta.descripcionTipoAlerta}' />
+                           </option>
+                         </c:forEach>
+                       </select>
+                    </td>
+
+                    <td class="etiqueta" align="left" valign="middle">
+		                Monto Prov.
+		            </td>
+		            <td > 
+	                     <input name="montoProvision" style="width: 80%" <%=opcionDe%>  tabindex="1" maxlength="10" 
+		                 value="<c:out value='${requestScope.beanCRSeguimientoCartera.montoProvision}' />"
+		                 onKeyPress="valida_numero(this,'dec')" maxlength="14" onblur="this.value=formateador(this.value);"
+		                 onfocus="this.select(); field='montoProvision'; nextfield ='interesDevengado';">
+		             </td>
+                  </tr>
+                  <tr>
+                    <td class="etiqueta" align="left" valign="middle" style="padding: 10px 0">
+                        Fecha Alerta
+                    </td>
+                    <td> 
+                       <input name="fechaAlerta" style="width: 75%" <%=campoCe%> tabindex="1" value="<c:out value='${requestScope.beanCRSeguimientoCartera.fechaAlerta}' />"
+                        onkeypress="valida_especiales(this.value,'fecha')" maxlength="10" onblur="this.value=vuelveFecha(this.value);if(!esFecha(this.value)) {alert(m_0006);this.focus();return false;}"
+                        onfocus="this.select(); field='fechaAlerta'; nextfield ='fechaAtencion';"/>
+                        <img id="imgFecha" style="cursor:hand" title="Seleccionar Fecha" width="16px" height="16px" src="<%=request.getContextPath()%>/UTILS/img/cal.gif" onclick="if(!byID('fechaAlerta').readOnly){cal1.popup();};">
+                     </td>
+                    </td>
+
+                    <td class="etiqueta" align="left" valign="middle" width="100">
+                       Int. Devengado
+                    </td>
+                    <td class="etiqueta" align="left" valign="middle"> 
+                       <input name="interesDevengado" style="width: 80%" <%=opcionDe%>  tabindex="1" maxlength="10" 
+                         onKeyPress="valida_numero(this,'dec')"  maxlength="12" onblur="this.value=formateador(this.value);"
+                         value="<c:out value='${requestScope.beanCRSeguimientoCartera.interesDevengado}' />"
+                         onfocus="this.select(); field='montoProvision'; nextfield ='comentario';">
+                    </td>
+                  </tr>
+                  <tr>
+                        <td class="etiqueta" align="left" valign="middle" style="padding: 10px 0">
+                            Estado
+	                    </td>
+	                    <td >
+	                        <input name=descripcionEstado style="width: 80%" class="campodisplayiz" readonly  tabindex="1" value="<c:out value='${requestScope.beanWFMaestra.descripcionEstado}' />"
+	                        onfocus="this.select(); field='descripcionEstado';">
+	                    </td>
+                 </tr>
+                </table>
+                </td>
+              </tr>
+            </table>
+          </td>
+        </tr>
+        <tr>
+            <td height="4">
+              <img src="<%=request.getContextPath()%>/UTILS/img/t.gif" width="1" height="2">
+            </td>
+          </tr>
+          <tr>
+            <td>
+              <table cellpadding="0" border="0" cellspacing="0" width="100%" align="center">
+                <tr>
+                  <td align="center" valign="top" width="100%">
+                    <table width="100%" align="center" cellspacing="0" border="0">
+                      <tr>
+                        <td valign="top">
+                          <table width="100%" cellpadding="0" cellspacing="0" border="0">
+                            <tr>
+                                <td class="tituloframe">COMENTARIOS</td>
+                            </tr>
+                            <tr>
+                               <td > 
+                                   <textarea name="comentario" id="comentario" style="width: 100%;height:70px;"
+                                   onfocus="this.select(); field='comentario';" <%=campoIz%>
+                                   onKeyDown="goblalLimitText('comentario','numCarac',1000);" onKeyUp="goblalLimitText('comentario','numCarac',1000);"><c:out value="${beanCRSeguimientoCartera.comentario}"/></textarea>
+                                   <input type="hidden" name="countdown" size="3" readonly />
+                                   <div style="text-align: right;" class="etiqueta">
+                                      (Max. <label name="numCarac" id="numCarac"></label>&nbsp;/ 1000)
+                                    </div>
+                                </td>
+                            </tr>
+                          </table>
+                        </td>
+                      </tr>
+                    </table>
+                  </td>
+                </tr>
+              </table>
+            </td>
+          </tr>
+      </table>
+    </form>
+  </body>
+</html>
\ No newline at end of file
diff --git a/DELFINWEBNEW/WebRoot/FINANCIERO/workflow/seguimientoCartera/etapa/resolucion/CR_C_Resolucion_CNTR.jsp b/DELFINWEBNEW/WebRoot/FINANCIERO/workflow/seguimientoCartera/etapa/resolucion/CR_C_Resolucion_CNTR.jsp
new file mode 100644
index 0000000..12da6b0
--- /dev/null
+++ b/DELFINWEBNEW/WebRoot/FINANCIERO/workflow/seguimientoCartera/etapa/resolucion/CR_C_Resolucion_CNTR.jsp
@@ -0,0 +1,319 @@
+<!-- CR_C_Resolucion_CNTR.jsp-->
+<%--[Req.S17-022] kdelacruz 29.03.2017 - Implementaci�n WorkFlow Seguimiento Cartera--%>
+
+<%@ page language="java" import="java.util.*" pageEncoding="ISO-8859-1"%>
+<jsp:directive.page import="financ.util.Constante"/>
+<%@ taglib prefix="c" uri="http://java.sun.com/jstl/core" %>
+<%@ taglib uri="/delfin" prefix="delfinTagHtml" %>
+<%
+    String strComportamiento = request.getAttribute("strComportamiento") != null ? (String) request.getAttribute("strComportamiento") : "C";
+    
+    String campoIz = "T".equals(strComportamiento) ? "class='campoobligatorioiz'" : "readonly class='campodisplayiz'";
+    String cboIz = "T".equals(strComportamiento) ? "class='campoobligatorioiz'" : "disabled class='campodisplayiz'";
+    String campoCe = "T".equals(strComportamiento) ? "class='campoobligatorioce'" : "readonly class='campodisplayce'";
+%>
+<html>
+  <head>
+    <title>RESOLUCION</title>
+    <link id="css" href="${pageContext.request.contextPath}/UTILS/css/DELFIN.css" rel="stylesheet" type="text/css">
+    <script src="${pageContext.request.contextPath}/UTILS/Script/MsgValidacion.js"></script>
+    <script src="<%=request.getContextPath()%>/UTILS/Script/DELFIN-Utiles.js"></script>
+    <script type="text/javascript">
+    
+        var f = null;
+        var path;
+        nextfield = "";
+
+        function cargar() {
+        	byID('idMaestra').value = parent.byID('idMaestra').value;
+            byID('idModulo').value = parent.byID('idModulo').value;
+            f = document.getElementById('frmSolicitudEstudioTitulo');
+            path = '<%=request.getContextPath()%>';
+            mensajeRespuesta('<c:out value="${codigoError}" />', '<c:out value="${mensajeError}" />');
+            onCargarDetalle();
+            setMotivoPorRespuesta();
+            mostrarFecha();
+            goblalLimitText('textoComentario','numCarac',200);
+            if('<%=strComportamiento%>' != '<%=Constante.COMPORTAMIENTO_TRANSACCIONAL%>'){
+            	byID('tipoMotivo').className = "campodisplayiz";
+            	byID('tipoMotivo').disabled = true;
+            }
+        }
+
+        function iniciarCalendario(){
+            cal1 = new calendar1(byID('fechaAtencion'));
+            cal1.year_scroll = true;
+            cal1.time_comp = false;
+            }
+
+        function keyDown(DnEvents){
+            k = window.event.keyCode;
+            if (k == 13){
+            	if(nextfield == "idTipoRespuesta"){
+            	    eval('document.forms[0].' + nextfield + '.focus()');
+            	    return false;
+            	}
+            	if(nextfield == "tipoMotivo"){
+            	    eval('document.forms[0].' + nextfield + '.focus()');
+            	    return false;
+            	}
+            	if(nextfield == "fechaAtencion"){
+            	    eval('document.forms[0].' + nextfield + '.focus()');
+            	    return false;
+            	}
+                return false;
+            }
+            if (k == 120){
+                return false;
+            }
+            if (k == 27){
+                salir();
+                return false;
+            }
+            if (k == 121){
+                return false;
+            }
+            if (k == 112){
+                ayuda();
+                return false;
+            }
+            if (event.ctrlKey){
+                event.keyCode = 0;
+                return false;
+            }
+            if (k==46){
+                return false;
+            }
+            if (window.event && (k == 114 || k == 116 || k == 117 || k == 122))
+                event.keyCode = 505;
+            if(event.keyCode == 505)
+                return false;
+        }
+        document.onkeydown = keyDown;
+
+        function salir(){
+        	parent.salir();
+        }
+
+        function onCargarDetalle() {
+        }
+
+	    function validaSustento(){
+	        goblalLimitText('textoComentario','numCarac',200);
+	        if (byID('textoComentario').value.length > 200){
+	            return false;
+	        }
+	        return true;
+	    }
+
+	    function validar(){
+	    	var frmDatos = document.frmResolucionSeguimientoCartera;
+            var textoComentario = byID('textoComentario').value;
+            var tipoMotivo = byID('tipoMotivo').value;
+            var idTipoRespuesta = byID('idTipoRespuesta').value;
+            var fechaAtencion = byID('fechaAtencion').value;
+
+            if(isEmpty(textoComentario)){
+                frmDatos.textoComentario.focus();
+                alert(m_0001);
+               return false;
+            }
+            if(isEmpty(idTipoRespuesta)){
+                frmDatos.idTipoRespuesta.focus();
+                alert(m_0001);
+               return false;
+            }
+            if(isEmpty(tipoMotivo)){
+                frmDatos.tipoMotivo.focus();
+                alert(m_0001);
+               return false;
+            }
+            if(isEmpty(fechaAtencion)){
+                frmDatos.fechaAtencion.focus();
+                alert(m_0001);
+               return false;
+            }
+            return true;
+        }
+
+	    function procesarEvento(idEvento){
+	    	strComportamiento = byID('strComportamiento').value;
+	    	var idTipoRespuesta = byID('idTipoRespuesta').value;
+	    	var tipoMotivo = byID('tipoMotivo').value;
+            if(strComportamiento != '<%=Constante.WF_COMPORTAMIENTO_TRANSACCIONAL%>'){
+                alert(m_10120);
+                return false;
+                }
+            if(!validar()){
+                return false;
+            }
+            var textoComentario = byID('textoComentario').value;
+            var params = serializeForm(byID('frmResolucionSeguimientoCartera'));
+            params += '&action=ENVIAR';
+            params += '&idEvento=' + idEvento;
+            params += '&idTipoMotivo=' + tipoMotivo;
+            params += '&idTipoRespuesta=' + idTipoRespuesta;
+            params += '&textoComentario=' + textoComentario;
+            var url = path + '/CR_C_Resolucion_Servlet';
+            ajaxRequestPOST(url, params, false, function(xmldoc) {
+                mensajeRespuestaXML(xmldoc, function(){
+                  alert(m_8570);
+                  salir();
+                });
+              });
+        }
+
+	    function setMotivoPorRespuesta() {
+	        var idTipoRespuesta = byID('idTipoRespuesta').value;
+	        var url =  path + "/CR_C_Resolucion_Servlet";
+	        var params = "?action=CARGA_COMBO_DINAMICO_MOTIVO";
+	        params += "&idTipoRespuesta=" + idTipoRespuesta;
+	        params += "&idEtapa=" + byID('idEtapa').value;
+	        params += "&time=" + new Date().getTime();
+	        
+	        ajaxRequestGET(url + params, false, function(xmldoc) {
+	          mensajeRespuestaXML(xmldoc, function(){
+	            var contenedor = byID('contenedorTipoMotivoPorRespuesta');
+	            var combo = getValor(xmldoc, 'contenedorTipoMotivoPorRespuesta');
+	            contenedor.innerHTML = combo;
+	            onCargarDetalle();
+	            mostrarFecha();
+	          });
+	        });
+	    }
+
+	    function mostrarFecha(){
+
+	    	var idTipoMotivo = byID('tipoMotivo').value;
+            var url =  path + "/CR_C_Resolucion_Servlet";
+            var params = "?action=CONSULTA_FECHA_MOTIVO";
+            params += "&idTipoMotivo=" + idTipoMotivo;
+            params += "&time=" + new Date().getTime();
+
+            ajaxRequestGET(url + params, false, function(xmldoc) {
+              mensajeRespuestaXML(xmldoc, function(){
+                var indicadorFechaMotivo = getValor(xmldoc, 'indicadorFechaMotivo');
+
+                if(indicadorFechaMotivo == '<%=Constante.CODIGO_TIPO_MOTIVO_AMPLIACION_ATENCION%>'){
+                    byID('mostrarFechaAtencion').style.visibility = "visible";
+                    byID('mostrarFechaAtencion1').style.visibility = "visible";
+                }else{
+                    byID('mostrarFechaAtencion').style.visibility = "hidden";
+                    byID('mostrarFechaAtencion1').style.visibility = "hidden";
+                }
+              });
+            });
+        }
+
+    </script>
+  </head>
+  <body onhelp="getF1();" class="colorbody" onload="cargar();" style="padding: 0px, 0px, 0px, 0px;overflow:auto;">
+    <form name="frmResolucionSeguimientoCartera" id="frmResolucionSeguimientoCartera" method="post">
+    <input type="hidden" name="idEtapa" id="idEtapa" value="<c:out value="${requestScope.idEtapa}"/>">
+    <input type="hidden" name="idMaestra" id="idMaestra">
+    <input type="hidden" name="idModulo" id="idModulo" >
+    <input type="hidden" name="correlativoSeguimiento" id="correlativoSeguimiento" value="<c:out value="${beanCRSeguimientoCartera.correlativoSeguimiento}"/>" >
+    <input type="hidden" name="strComportamiento" id="strComportamiento" value="<c:out value="${requestScope.strComportamiento}"/>">
+      <table border="0" cellpadding="0" cellspacing="2" width="99.5%" align="center" >
+        <tr>
+          <td height="4">
+            <img src="<%=request.getContextPath()%>/UTILS/img/t.gif" width="1" height="2">
+          </td>
+        </tr>
+        <tr>
+            <td class="tituloframe">
+                DETALLE
+                <input type="hidden" name="idEtapa" id="idEtapa" value="<c:out value="${requestScope.idEtapa}"/>">
+                <input type="hidden" name="idMaestra" id="idMaestra">
+                <input type="hidden" name="idModulo" id="idModulo" >
+                <input type="hidden" name="strComportamiento" id="strComportamiento" value="<c:out value="${requestScope.strComportamiento}"/>">
+            </td>
+        </tr>
+        <tr>
+          <td>
+            <table border="2" cellpadding="0" cellspacing="0" width="100%" align="center" class="frame">
+              <tr>
+                <td height="20" align="center">
+                  <table width="99%" cellpadding="0" cellspacing="2" border="0">
+                    <tr>
+                           <td class="etiqueta" align="left"  valign="middle" style="width: 10%">
+                               Respuesta
+                           </td>
+                           <td style="width: 25%"> 
+                               <select name="idTipoRespuesta" id="idTipoRespuesta" onchange="setMotivoPorRespuesta()" style="width: 120px;" tabindex="4" onfocus=" nextfield='textoComentario'" <%=cboIz%>>
+                                 <c:forEach var='beanCombo' items='${requestScope.lstTipoRespuesta}'  >
+                                   <option value="<c:out value='${beanCombo.codigo}'/>" <c:if test="${beanCombo.codigo == BeanCRMovimientoPorSeguimiento.idTipoRespuesta}">selected</c:if> >
+                                     <c:out value='${beanCombo.descripcion}' />
+                                   </option>
+                                 </c:forEach>
+                               </select>
+                           </td>
+                           <td class="etiqueta" align="left"  valign="middle" style="width: 10%">
+                               Motivo
+                           </td>
+                           <td style="width: 25%">
+                               <div id="contenedorTipoMotivoPorRespuesta">
+                                   <select name="idTipoMotivo" id="idTipoMotivo" style="width: 250px;" tabindex="4" <%=cboIz%> onfocus=" nextfield='textoComentario'" />
+                              </div>
+                           </td>
+                          <td id="mostrarFechaAtencion" class="etiqueta" align="left"  valign="middle" style="width: 10%">
+                               Fecha Atencion
+                           </td>
+                           <td id="mostrarFechaAtencion1"  class="etiqueta" align="left" valign="middle" width="40%"> 
+                               <input name="fechaAtencion" style="width: 75%" <%=campoCe%> tabindex="1" 
+                               value="<c:out value='${requestScope.beanCRSeguimientoCartera.fechaAtencion}'/>"
+                               onkeypress="valida_especiales(this.value,'fecha')" maxlength="10" onblur="this.value=vuelveFecha(this.value);if(!esFecha(this.value)) {alert(m_0006);this.focus();return false;}"
+                               onfocus="this.select(); nextfield ='montoAlerta';"/>
+                               <img id="imgFecha" style="cursor:hand" title="Seleccionar Fecha" width="16px" height="16px" src="<%=request.getContextPath()%>/UTILS/img/cal.gif" onclick="if(!byID('fechaAtencion').readOnly){cal1.popup();};"/>
+                           </td>
+                    </tr>
+	                </table>
+	                </td>
+	              </tr>
+	            </table>
+	          </td>
+		      </tr>
+              <tr>
+		          <td height="4">
+		            <img src="<%=request.getContextPath()%>/UTILS/img/t.gif" width="1" height="2">
+		          </td>
+		        </tr>
+		        <tr>
+		          <td>
+		            <table cellpadding="0" border="0" cellspacing="0" width="100%" align="center">
+		              <tr>
+		                <td align="center" valign="top" width="100%">
+		                  <table width="100%" align="center" cellspacing="0" border="0">
+		                    <tr>
+		                      <td valign="top">
+		                        <table width="100%" cellpadding="0" cellspacing="0" border="0">
+		                          <tr>
+		                              <td class="tituloframe">COMENTARIOS</td>
+		                          </tr>
+		                          <tr>
+		                             <td > 
+		                                 <textarea name="textoComentario" id="textoComentario" style="width: 100%;height:70px;"
+		                                 onfocus="this.select(); field='textoComentario';" <%=campoIz%>
+		                                 onKeyDown="goblalLimitText('textoComentario','numCarac',200);" onKeyUp="goblalLimitText('textoComentario','numCarac',200);"><c:out value="${requestScope.textoComentario}"/></textarea>
+		                                 <input type="hidden" name="countdown" size="3" readonly />
+		                                 <div style="text-align: right;" class="etiqueta">
+		                                    (Max. <label name="numCarac" id="numCarac"></label>&nbsp;/ 200)
+		                                  </div>
+		                              </td>
+		                          </tr>
+		                        </table>
+		                      </td>
+		                    </tr>
+		                  </table>
+		                </td>
+		              </tr>
+		            </table>
+		          </td>
+		        </tr>
+            </table>
+          </td>
+        </tr>
+      </table>
+    </form>
+  </body>
+</html>
\ No newline at end of file
diff --git a/DELFINWEBNEW/WebRoot/GENERAL/Busqueda.jsp b/DELFINWEBNEW/WebRoot/GENERAL/Busqueda.jsp
index 9037696..1afb033 100644
--- a/DELFINWEBNEW/WebRoot/GENERAL/Busqueda.jsp
+++ b/DELFINWEBNEW/WebRoot/GENERAL/Busqueda.jsp
@@ -159,6 +159,8 @@
     String indicadorEnFuncionamiento = request.getParameter("indicadorEnFuncionamiento") != null ? request.getParameter("indicadorEnFuncionamiento") : "";
     //[Req.S17-007] kdelacruz 06.03.2017
     String indicadorTipo = request.getParameter("indicadorTipo") != null ? request.getParameter("indicadorTipo") : "";
+    //[Req.S17-022] kdelacruz 06.04.2017
+    String valorAgencia = request.getParameter("valorAgencia") != null ? request.getParameter("valorAgencia") : "";
 %>
 <html>
     <head>
@@ -310,6 +312,8 @@
                         && arrParamNames[i] != "indicadorEnFuncionamiento"
                        //[Req.S17-007] kdelacruz 06.03.2017
                         && arrParamNames[i] != "indicadorTipo"
+                       //[Req.S17-022] kdelacruz 06.04.2017}
+                        && arrParamNames[i] != "valorAgencia"
                         )
                         
                         <!-- rgutierrez 30.07.2012-->
@@ -853,7 +857,9 @@
                 
             <%}else if(strTabla.equals("USUARIO")){%>
                 document.title = "B�squeda de Usuarios";
-                url = '<%=path%>/Busqueda_Usuarios_Servlet?criterio='+criterio+'&valor='+valor + '&indicadorTipo=<%=indicadorTipo%>'; //[Req.S17-007] kdelacruz 27.03.2017
+              //[Req.S17-007] kdelacruz 27.03.2017
+              //[Req.S17-022] kdelacruz 06.04.2017
+                url = '<%=path%>/Busqueda_Usuarios_Servlet?criterio='+criterio+'&valor='+valor + '&indicadorTipo=<%=indicadorTipo%>' + '&codAgencia=<%=valorAgencia%>'; 
                 
             <%}else if(strTabla.equals("USUARIOALL")){%>
                 document.title = "B�squeda de Usuarios";
@@ -1716,7 +1722,8 @@
             <%}else if(strTabla.equals("USUARIO")){%>
                 document.title = "B�squeda de Usuarios";
               //[Req.S17-007] kdelacruz 06.03.2017
-                url = '<%=path%>/Busqueda_Usuarios_Servlet?criterio='+criterio+'&valor=' + valor + '&indicadorTipo=<%=indicadorTipo%>'; 
+              //[Req.S17-022] kdelacruz 06.04.2017
+                url = '<%=path%>/Busqueda_Usuarios_Servlet?criterio='+criterio+'&valor=' + valor + '&indicadorTipo=<%=indicadorTipo%>' + '&codAgencia=<%=valorAgencia%>'; 
                 
             <%}else if(strTabla.equals("USUARIOALL")){%>
                 document.title = "B�squeda de Usuarios";
@@ -2814,7 +2821,8 @@
         <%}else if(strTabla.equals("USUARIO")){%>
             document.title = "B�squeda de Usuarios";
             //[Req.S17-007] kdelacruz 06.03.2017
-            url = '<%=path%>/Busqueda_Usuarios_Servlet?criterio='+criterio+'&valor='+valor + '&indicadorTipo=<%=indicadorTipo%>';
+            //[Req.S17-022] kdelacruz 06.04.2017
+            url = '<%=path%>/Busqueda_Usuarios_Servlet?criterio='+criterio+'&valor='+valor + '&indicadorTipo=<%=indicadorTipo%>' + '&codAgencia=<%=valorAgencia%>'; 
             
         <%}else if(strTabla.equals("USUARIOALL")){%>
             document.title = "B�squeda de Usuarios";
diff --git a/DELFINWEBNEW/WebRoot/UTILS/Script/MsgValidacion.js b/DELFINWEBNEW/WebRoot/UTILS/Script/MsgValidacion.js
index bb6eeff..bb45f45 100644
--- a/DELFINWEBNEW/WebRoot/UTILS/Script/MsgValidacion.js
+++ b/DELFINWEBNEW/WebRoot/UTILS/Script/MsgValidacion.js
@@ -1461,6 +1461,12 @@
 //[Ticket #9754] stacanga 21.03.2017
 var m_10123 = 'Ingrese dias de atraso mayor a cero';
 
+//Inicio [Req.S17-022] kdelacruz 04.04.2017
+var m_10127 = 'Se debe registrar el Seguimiento';
+var m_10128 = 'La actividad ya fue enviado';
+var m_10131 = '�Est� seguro de continuar con el Proceso?';
+//Fin [Req.S17-022]
+
 //Inicio [S17-017] agarcia 04.04.2017 
 var m_10126 = 'Destino de evaluaci�n crediticia no enviada.';
 
@@ -2300,4 +2306,4 @@
 	}
 	return true;
 }
-// Fin [Req.16-039]
+// Fin [Req.16-039]
\ No newline at end of file
diff --git a/DELFINWEBNEW/WebRoot/WEB-INF/web.xml b/DELFINWEBNEW/WebRoot/WEB-INF/web.xml
index c365cb3..949ca3f 100644
--- a/DELFINWEBNEW/WebRoot/WEB-INF/web.xml
+++ b/DELFINWEBNEW/WebRoot/WEB-INF/web.xml
@@ -24347,15 +24347,15 @@
     <!-- Fin [CC17-002] -->
     <!-- Inicio [S16-039] agarcia 05.12.2016  -->
     <servlet>
-        <description>
-        </description>
-        <display-name>CR_T_EvaluacionDependiente_Servlet</display-name>
-        <servlet-name>CR_T_EvaluacionDependiente_Servlet</servlet-name>
-        <servlet-class>financ.creditos.Evaluaciones.servlets.CR_T_EvaluacionDependiente_Servlet</servlet-class>
+    	<description>
+    	</description>
+    	<display-name>CR_T_EvaluacionDependiente_Servlet</display-name>
+    	<servlet-name>CR_T_EvaluacionDependiente_Servlet</servlet-name>
+    	<servlet-class>financ.creditos.Evaluaciones.servlets.CR_T_EvaluacionDependiente_Servlet</servlet-class>
     </servlet>
     <servlet-mapping>
-        <servlet-name>CR_T_EvaluacionDependiente_Servlet</servlet-name>
-        <url-pattern>/CR_T_EvaluacionDependiente_Servlet</url-pattern>
+    	<servlet-name>CR_T_EvaluacionDependiente_Servlet</servlet-name>
+    	<url-pattern>/CR_T_EvaluacionDependiente_Servlet</url-pattern>
     </servlet-mapping>
     <servlet>
         <description>
@@ -24365,8 +24365,8 @@
         <servlet-class>financ.creditos.Evaluaciones.servlets.CR_T_SustentoPropuestaEvaluacionDependiente_Servlet</servlet-class>
     </servlet>
     <servlet-mapping>
-        <servlet-name>CR_T_SustentoPropuestaEvaluacionDependiente_Servlet</servlet-name>
-        <url-pattern>/CR_T_SustentoPropuestaEvaluacionDependiente_Servlet</url-pattern>
+    	<servlet-name>CR_T_SustentoPropuestaEvaluacionDependiente_Servlet</servlet-name>
+    	<url-pattern>/CR_T_SustentoPropuestaEvaluacionDependiente_Servlet</url-pattern>
     </servlet-mapping>
     <!-- Fin [S16-039] -->
 
@@ -24686,12 +24686,95 @@
         <servlet-name>GE_GeneradorReportesCuadreOperativoContable_Servlet</servlet-name>
         <servlet-class>general.servlets.GE_GeneradorReportesCuadreOperativoContable_Servlet</servlet-class>
     </servlet>
-
+    
     <servlet-mapping>
         <servlet-name>GE_GeneradorReportesCuadreOperativoContable_Servlet</servlet-name>
         <url-pattern>/GE_GeneradorReportesCuadreOperativoContable_Servlet</url-pattern>
     </servlet-mapping>
     <!-- Fin [Req.17-011] -->
+	<!-- Inicio [Req.S17-022] rsanchez 29.03.2017 -->
+     <servlet>
+       <servlet-name>CR_T_SeguimientoCarteraCargaAlerta_Servlet</servlet-name>
+       <servlet-class>financ.workflow.seguimientoCartera.servlets.CR_T_SeguimientoCarteraCargaAlerta_Servlet</servlet-class>
+    </servlet>
+    <servlet-mapping>
+        <servlet-name>CR_T_SeguimientoCarteraCargaAlerta_Servlet</servlet-name>
+        <url-pattern>/CR_T_SeguimientoCarteraCargaAlerta_Servlet</url-pattern>
+    </servlet-mapping>
+    
+    <servlet>
+       <servlet-name>CR_T_SeguimientoCarteraAdministracionLotes_Servlet</servlet-name>
+       <servlet-class>financ.workflow.seguimientoCartera.servlets.CR_T_SeguimientoCarteraAdministracionLotes_Servlet</servlet-class>
+    </servlet>
+    <servlet-mapping>
+        <servlet-name>CR_T_SeguimientoCarteraAdministracionLotes_Servlet</servlet-name>
+        <url-pattern>/CR_T_SeguimientoCarteraAdministracionLotes_Servlet</url-pattern>
+    </servlet-mapping>
+    
+    <servlet>
+       <servlet-name>CR_T_SeguimientoCarteraDetalleCarga_Servlet</servlet-name>
+       <servlet-class>financ.workflow.seguimientoCartera.servlets.CR_T_SeguimientoCarteraDetalleCarga_Servlet</servlet-class>
+    </servlet>
+    <servlet-mapping>
+        <servlet-name>CR_T_SeguimientoCarteraDetalleCarga_Servlet</servlet-name>
+        <url-pattern>/CR_T_SeguimientoCarteraDetalleCarga_Servlet</url-pattern>
+    </servlet-mapping>
+    
+    
+	<!-- Fin [Req.S17-022] -->
+
+    <!-- Inicio [Req.S17-022] esalazar 30.03.2017 -->
+    <servlet>
+        <display-name>CR_C_ConsultaSeguimientoCartera_Servlet</display-name>
+        <servlet-name>CR_C_ConsultaSeguimientoCartera_Servlet</servlet-name>
+        <servlet-class>financ.workflow.seguimientoCartera.servlets.CR_C_ConsultaSeguimientoCartera_Servlet</servlet-class>
+    </servlet>
+    <servlet-mapping>
+        <servlet-name>CR_C_ConsultaSeguimientoCartera_Servlet</servlet-name>
+        <url-pattern>/CR_C_ConsultaSeguimientoCartera_Servlet</url-pattern>
+    </servlet-mapping>
+    <!-- Fin [Req.S17-022] -->
+    <!-- Inicio [Req.S17-022] kdelacruz 30.03.2017 -->
+    <servlet>
+        <display-name>CR_T_DatosSeguimiento_Servlet</display-name>
+        <servlet-name>CR_T_DatosSeguimiento_Servlet</servlet-name>
+        <servlet-class>financ.workflow.seguimientoCartera.servlets.CR_T_DatosSeguimiento_Servlet</servlet-class>
+    </servlet>
+    <servlet-mapping>
+        <servlet-name>CR_T_DatosSeguimiento_Servlet</servlet-name>
+        <url-pattern>/CR_T_DatosSeguimiento_Servlet</url-pattern>
+    </servlet-mapping>
+    
+    <servlet>
+        <display-name>CR_C_RegistroActividades_Servlet</display-name>
+        <servlet-name>CR_C_RegistroActividades_Servlet</servlet-name>
+        <servlet-class>financ.workflow.seguimientoCartera.servlets.CR_C_RegistroActividades_Servlet</servlet-class>
+    </servlet>
+    <servlet-mapping>
+        <servlet-name>CR_C_RegistroActividades_Servlet</servlet-name>
+        <url-pattern>/CR_C_RegistroActividades_Servlet</url-pattern>
+    </servlet-mapping>
+    
+    <servlet>
+        <display-name>CR_T_RegistroActividades_Servlet</display-name>
+        <servlet-name>CR_T_RegistroActividades_Servlet</servlet-name>
+        <servlet-class>financ.workflow.seguimientoCartera.servlets.CR_T_RegistroActividades_Servlet</servlet-class>
+    </servlet>
+    <servlet-mapping>
+        <servlet-name>CR_T_RegistroActividades_Servlet</servlet-name>
+        <url-pattern>/CR_T_RegistroActividades_Servlet</url-pattern>
+    </servlet-mapping>
+    
+    <servlet>
+        <display-name>CR_C_Resolucion_Servlet</display-name>
+        <servlet-name>CR_C_Resolucion_Servlet</servlet-name>
+        <servlet-class>financ.workflow.seguimientoCartera.servlets.CR_C_Resolucion_Servlet</servlet-class>
+    </servlet>
+    <servlet-mapping>
+        <servlet-name>CR_C_Resolucion_Servlet</servlet-name>
+        <url-pattern>/CR_C_Resolucion_Servlet</url-pattern>
+    </servlet-mapping>
+    <!-- Fin [Req.S17-022] -->
 
     <!-- Inicio [CC17-044] agarcia 29.03.2017 -->
     <servlet>
@@ -24720,4 +24803,4 @@
         <url-pattern>/CR_C_Evaluaciones_Servlet</url-pattern>
     </servlet-mapping>
     <!-- Fin [Req.17-017] -->
-</web-app>
+</web-app>
\ No newline at end of file
diff --git a/DELFINWEBNEW/src/financ/workflow/seguimientoCartera/servlets/CR_C_ConsultaSeguimientoCartera_Servlet.java b/DELFINWEBNEW/src/financ/workflow/seguimientoCartera/servlets/CR_C_ConsultaSeguimientoCartera_Servlet.java
new file mode 100644
index 0000000..0ac4501
--- /dev/null
+++ b/DELFINWEBNEW/src/financ/workflow/seguimientoCartera/servlets/CR_C_ConsultaSeguimientoCartera_Servlet.java
@@ -0,0 +1,208 @@
+package financ.workflow.seguimientoCartera.servlets;
+
+import financ.seguimientoCartera.beans.BeanCRSeguimientoCartera;
+import financ.seguimientoCartera.beans.BeanCRTipoAlerta;
+import financ.seguimientoCartera.facade.CRSeguimientoCarteraFacade;
+import financ.seguimientoCartera.facade.CRTipoAlertaFacade;
+import financ.seguimientoCartera.local.CRSeguimientoCarteraFacadeInterfaceLocal;
+import financ.seguimientoCartera.local.CRTipoAlertaFacadeInterfaceLocal;
+import financ.util.BeanCombo;
+import financ.util.Constante;
+import financ.util.FormatoFecha;
+import financ.workflow.bean.BeanWFEstado;
+import financ.workflow.bean.BeanWFEtapa;
+import financ.workflow.facade.WFEstadoFacade;
+import financ.workflow.facade.WFEtapaFacade;
+import financ.workflow.local.WFEstadoFacadeInterfaceLocal;
+import financ.workflow.local.WFEtapaFacadeInterfaceLocal;
+import general.servlets.GE_BaseMethodInvocation_Servlet;
+
+import java.util.ArrayList;
+import java.util.List;
+import java.util.Map;
+
+import pe.com.tfc.utils.GenericBean;
+import pe.com.tfc.utils.RequestMapping;
+import pe.com.tfc.utils.ResponseType;
+import admin.contab.beans.BeanCBAgencia;
+import admin.contab.beans.BeanCBUsuarios;
+import admin.contab.beans.BeanParametrosAuditoria;
+import admin.contab.facade.CBUsuarioFacade;
+import admin.contab.local.CBUsuarioFacadeLocal;
+import admin.secc.facade.SSMenuOpcionRolFacade;
+import admin.secc.local.SSMenuOpcionRolFacadeInterfaceLocal;
+import admin.util.local.UtilAdminFacadeInterfaceLocal;
+import admin.util.session.UtilAdminFacade;
+
+/**
+ * CR_C_ConsultaSeguimientoCartera
+ * 
+ * @author esalazar
+ * @since [Req.17-022] 29.03.2017
+ */
+
+public class CR_C_ConsultaSeguimientoCartera_Servlet extends GE_BaseMethodInvocation_Servlet {
+
+    private static final long serialVersionUID = -5512688935870305818L;
+    private static final String URL_MOSTRAR_CONTENEDOR = Constante.RUTA_WORKFLOW + "seguimientoCartera/CR_C_ConsultaSeguimientoCartera_CNTR.jsp";
+    private static final String URL_TABLA_DETALLE = Constante.RUTA_WORKFLOW + "seguimientoCartera/CR_C_ConsultaSeguimientoCartera_TABLA.jsp";
+
+    private WFEstadoFacadeInterfaceLocal wfEstadoFacadeInterfaceLocal;
+    private WFEtapaFacadeInterfaceLocal wfEtapaFacadeInterfaceLocal;
+    private UtilAdminFacadeInterfaceLocal utilAdminFacadeInterfaceLocal;
+    private CBUsuarioFacadeLocal cbUsuarioFacadeLocal;
+    private CRSeguimientoCarteraFacadeInterfaceLocal crDetalleSeguimientoFacadeInterfaceLocal;
+    private CRTipoAlertaFacadeInterfaceLocal crTipoAlertaFacadeInterfaceLocal;
+    private SSMenuOpcionRolFacadeInterfaceLocal ssMenuOpcionRolFacadeInterfaceLocal;
+
+    protected void initEJBs() throws Exception {
+        wfEstadoFacadeInterfaceLocal = lookup(WFEstadoFacade.LocalJNDIName);
+        wfEtapaFacadeInterfaceLocal = lookup(WFEtapaFacade.LocalJNDIName);
+        utilAdminFacadeInterfaceLocal = lookup(UtilAdminFacade.LocalJNDIName);
+        cbUsuarioFacadeLocal = lookup(CBUsuarioFacade.LocalJNDIName);
+        crDetalleSeguimientoFacadeInterfaceLocal = lookup(CRSeguimientoCarteraFacade.LocalJNDIName);
+        crTipoAlertaFacadeInterfaceLocal = lookup(CRTipoAlertaFacade.LocalJNDIName);
+        ssMenuOpcionRolFacadeInterfaceLocal = lookup(SSMenuOpcionRolFacade.LocalJNDIName);
+    }
+
+    protected void execute(ServletParams servletParams) throws Exception {
+    }
+
+    @RequestMapping(value = "MOSTRAR_DETALLE", responseType = ResponseType.HTML, url = URL_MOSTRAR_CONTENEDOR)
+    protected void mostrarDetalle(final ServletParams servletParams) throws Exception {
+        BeanParametrosAuditoria beanParametrosAuditoria = getBeanParametrosAuditoria(servletParams);
+        String idModulo = getParameter(servletParams, "idModulo");
+        String codigoUsuario = getSessionAttribute(servletParams, "strCodUsu", String.class);
+        String codigoAgencia = getSessionAttribute(servletParams, "strCodAge", String.class);
+        String fechaProceso = getSessionAttribute(servletParams, "strFecPro", String.class);
+        String codigoAsesor = codigoUsuario;
+
+        List<BeanCRTipoAlerta> listBeanCRTipoAlerta = crTipoAlertaFacadeInterfaceLocal.lstTipoAlerta(beanParametrosAuditoria);
+        List<BeanCombo> listTipoAlerta = parseListBeanCombo(listBeanCRTipoAlerta,
+                                                            "idTipoAlerta",
+                                                            "descripcionTipoAlerta");
+        List<BeanCombo> listTipoAlertaFinal = new ArrayList<BeanCombo>(0);
+        listTipoAlertaFinal.add(new BeanCombo("", "TODOS", "TODOS"));
+        listTipoAlertaFinal.addAll(listTipoAlerta);
+
+        String indicadorPermisoConsulta = ssMenuOpcionRolFacadeInterfaceLocal.validarPermisoMenuOpcion("WF_SEG_CAR_CON",
+                                                                                                       getBeanParametrosAuditoria(servletParams));
+        indicadorPermisoConsulta = _equiv(indicadorPermisoConsulta, "1") ? "S" : "N";
+
+        String indicadorGerenteZonal = utilAdminFacadeInterfaceLocal.validarGerenteZonal(codigoUsuario,
+                                                                                         beanParametrosAuditoria);
+        String indicadorGerenteAgencia = utilAdminFacadeInterfaceLocal.validarGerenteAgencia(codigoUsuario,
+                                                                                             beanParametrosAuditoria);
+
+        List<BeanWFEstado> listBeanWFEstado = wfEstadoFacadeInterfaceLocal.listarCboEstado(idModulo,
+                                                                                           beanParametrosAuditoria);
+
+        List<BeanWFEtapa> listBeanWFEtapa = wfEtapaFacadeInterfaceLocal.listarTodasEtapa(idModulo,
+                                                                                         beanParametrosAuditoria);
+
+        BeanCBAgencia beanCBAgencia = utilAdminFacadeInterfaceLocal.obtenerAgenciaPorCodigo(Constante.ID_TFC,
+                                                                                            codigoAgencia,
+                                                                                            getBeanParametrosAuditoria(servletParams));
+
+        BeanCBUsuarios beanCBUsuarios = cbUsuarioFacadeLocal.findByCodigo(codigoAsesor);
+
+        String fechaProcesoFin = FormatoFecha.dateToStringDDMMYYYYY(FormatoFecha.getUltimoDiaDelMes(FormatoFecha.stringToUtilDate(fechaProceso)));
+
+        setRequestAttribute(servletParams, "indicadorPermisoConsulta", indicadorPermisoConsulta);
+        setRequestAttribute(servletParams, "indicadorGerenteZonal", indicadorGerenteZonal);
+        setRequestAttribute(servletParams, "indicadorGerenteAgencia", indicadorGerenteAgencia);
+        setRequestAttribute(servletParams, "codigoAgencia", codigoAgencia);
+        setRequestAttribute(servletParams, "descripcionAgencia", beanCBAgencia.getDescripcion());
+        setRequestAttribute(servletParams, "codigoAsesor", codigoAsesor);
+        setRequestAttribute(servletParams, "descripcionAsesor", beanCBUsuarios.getNombreCompleto());
+        setRequestAttribute(servletParams, "fechaProcesoInicio", fechaProceso);
+        setRequestAttribute(servletParams, "fechaProcesoFin", fechaProcesoFin);
+
+        setRequestAttribute(servletParams, "listTipoAlerta", listTipoAlertaFinal);
+        setRequestAttribute(servletParams, "listBeanWFEtapa", listBeanWFEtapa);
+        setRequestAttribute(servletParams, "listBeanWFEstado", listBeanWFEstado);
+        setRequestAttribute(servletParams, "idModulo", idModulo);
+        forward(servletParams);
+    }
+
+    @RequestMapping(value = "CARGAR_DETALLE", responseType = ResponseType.HTML, url = URL_TABLA_DETALLE)
+    protected void cargarDetalle(ServletParams servletParams) throws Exception {
+
+        String fechaAsignacionInicial = getParameter(servletParams, "fechaAsignacionInicial");
+        String fechaAsignacionFinal = getParameter(servletParams, "fechaAsignacionFinal");
+        String fechaAtencionInicial = getParameter(servletParams, "fechaAtencionInicial");
+        String fechaAtencionFinal = getParameter(servletParams, "fechaAtencionFinal");
+        String codigoTipoAlerta = getParameter(servletParams, "codigoTipoAlerta");
+        String codigoAgencia = getParameter(servletParams, "codigoAgencia");
+        String codigoAsesor = getParameter(servletParams, "codigoAsesor");
+        String codigoCliente = getParameter(servletParams, "codigoCliente");
+        String codigoEstado = getParameter(servletParams, "codigoEstado");
+
+        // Indica si es el final
+        String fin = "0";
+        // Cantidad de registros por pag. y pagina actual
+        String strCanPag = getSessionAttribute(servletParams, "paginacion", String.class, "50");
+        String strPagina = getParameter(servletParams, "hid_pagina", "1");
+
+        int cantReg = _toInteger(strCanPag);
+        int intPagina = _toInteger(strPagina);
+
+        // Posiciones inicial y final
+        int pos_ini = (intPagina - 1) * cantReg;
+        int pos_fin = intPagina * cantReg;
+        Long totalRegistros = new Long(0);
+
+        BeanParametrosAuditoria beanParametrosAuditoria = getBeanParametrosAuditoria(servletParams);
+
+        GenericBean genericBean = new GenericBean();
+        genericBean.addProperty("fechaAsignacionInicial", fechaAsignacionInicial);
+        genericBean.addProperty("fechaAsignacionFinal", fechaAsignacionFinal);
+        genericBean.addProperty("fechaAtencionInicial", fechaAtencionInicial);
+        genericBean.addProperty("fechaAtencionFinal", fechaAtencionFinal);
+        genericBean.addProperty("codigoTipoAlerta", codigoTipoAlerta);
+        genericBean.addProperty("codigoAgencia", codigoAgencia);
+        genericBean.addProperty("codigoAsesor", codigoAsesor);
+        genericBean.addProperty("codigoCliente", codigoCliente);
+        genericBean.addProperty("codigoEstado", codigoEstado);
+        genericBean.addProperty("usuarioConsulta", beanParametrosAuditoria.getUsuarioInsercion());
+        genericBean.addProperty("pagina", intPagina);
+
+        Map<String, Object> mapRespuesta = crDetalleSeguimientoFacadeInterfaceLocal.buscarSeguimientoCartera(genericBean,
+                                                                                                             beanParametrosAuditoria);
+
+        List<BeanCRSeguimientoCartera> listBeanCRSeguimientoCartera = (List<BeanCRSeguimientoCartera>) mapRespuesta.get("listBeanCRSeguimientoCartera");
+        totalRegistros = (Long) mapRespuesta.get("cantReg");
+        String myData = "";
+        if (!_isEmpty(listBeanCRSeguimientoCartera)) {
+            myData = getMyData(listBeanCRSeguimientoCartera,
+                               "correlativoSeguimiento",
+                               "idMaestra",
+                               "descripcionAgencia",
+                               "nombreUsuarioAsignado",
+                               "nombreCliente",
+                               "descripcionTipoAlerta",
+                               "montoAlerta",
+                               "fechaAsignada",
+                               "fechaAtencion",
+                               "descripcionEstado",
+                               "",
+                               "",
+                               "",
+                               "");
+        }
+
+        if (pos_fin + 1 > totalRegistros) {
+            fin = "1";
+            pos_fin = totalRegistros.intValue();
+        }
+
+        setRequestAttribute(servletParams, "hid_paginaActual", strPagina);
+        setRequestAttribute(servletParams, "myData", myData);
+        setRequestAttribute(servletParams, "inicio", _toStr(pos_ini));
+        setRequestAttribute(servletParams, "fin", _toStr(pos_fin));
+        setRequestAttribute(servletParams, "indFin", fin);
+        setRequestAttribute(servletParams, "total", _toStr(totalRegistros));
+
+        forward(servletParams);
+    }
+}
diff --git a/DELFINWEBNEW/src/financ/workflow/seguimientoCartera/servlets/CR_C_RegistroActividades_Servlet.java b/DELFINWEBNEW/src/financ/workflow/seguimientoCartera/servlets/CR_C_RegistroActividades_Servlet.java
new file mode 100644
index 0000000..28860b5
--- /dev/null
+++ b/DELFINWEBNEW/src/financ/workflow/seguimientoCartera/servlets/CR_C_RegistroActividades_Servlet.java
@@ -0,0 +1,152 @@
+package financ.workflow.seguimientoCartera.servlets;
+
+import financ.seguimientoCartera.beans.BeanCRActividadSeguimientoCartera;
+import financ.seguimientoCartera.beans.BeanCRMotivoSeguimientoCartera;
+import financ.seguimientoCartera.beans.BeanCRMovimientoPorSeguimiento;
+import financ.seguimientoCartera.beans.BeanCRSeguimientoCartera;
+import financ.seguimientoCartera.facade.CRActividadSeguimientoCarteraFacade;
+import financ.seguimientoCartera.facade.CRMotivoSeguimientoCarteraFacade;
+import financ.seguimientoCartera.facade.CRMovimientoPorSeguimientoFacade;
+import financ.seguimientoCartera.facade.CRSeguimientoCarteraFacade;
+import financ.seguimientoCartera.local.CRActividadSeguimientoCarteraFacadeInterfaceLocal;
+import financ.seguimientoCartera.local.CRMotivoSeguimientoCarteraFacadeInterfaceLocal;
+import financ.seguimientoCartera.local.CRMovimientoPorSeguimientoFacadeInterfaceLocal;
+import financ.seguimientoCartera.local.CRSeguimientoCarteraFacadeInterfaceLocal;
+import financ.util.Constante;
+import financ.util.Paginacion;
+import financ.workflow.facade.WFMovimientosFacade;
+import financ.workflow.local.WFMovimientosFacadeInterfaceLocal;
+import general.servlets.GE_BaseMethodInvocation_Servlet;
+
+import java.util.List;
+import java.util.Map;
+
+import pe.com.tfc.utils.RequestMapping;
+import pe.com.tfc.utils.ResponseType;
+import admin.contab.beans.BeanParametrosAuditoria;
+
+/**
+ * CR_C_RegistroActividades_Servlet
+ * 
+ * @author kdelacruz
+ * @since [Req.17-022] 29.03.2017
+ */
+
+public class CR_C_RegistroActividades_Servlet extends GE_BaseMethodInvocation_Servlet {
+
+    /**
+     * 
+     */
+    private static final long serialVersionUID = -8637921303056588610L;
+    private static final String URL_TAB_DATOS_ACTIVIDADES = Constante.RUTA_WORKFLOW + "seguimientoCartera/etapa/actividades/CR_C_DatosActividades_CNTR.jsp";
+    private static final String URL_TAB_TABLA_DETALLE = Constante.RUTA_WORKFLOW + "seguimientoCartera/etapa/actividades/CR_C_DatosActividades_TABLA.jsp";
+    private CRMotivoSeguimientoCarteraFacadeInterfaceLocal crMotivoSeguimientoCarteraFacadeInterfaceLocal;
+
+    private CRSeguimientoCarteraFacadeInterfaceLocal crSeguimientoCarteraFacadeInterfaceLocal;
+    private CRActividadSeguimientoCarteraFacadeInterfaceLocal crActividadSeguimientoCarteraFacadeInterfaceLocal;
+    private CRMovimientoPorSeguimientoFacadeInterfaceLocal crMovimientoPorSeguimientoFacadeInterfaceLocal;
+    private WFMovimientosFacadeInterfaceLocal wfMovimientosFacadeInterfaceLocal;
+
+    protected void initEJBs() throws Exception {
+        crSeguimientoCarteraFacadeInterfaceLocal = lookup(CRSeguimientoCarteraFacade.LocalJNDIName);
+        crActividadSeguimientoCarteraFacadeInterfaceLocal = lookup(CRActividadSeguimientoCarteraFacade.LocalJNDIName);
+        crMotivoSeguimientoCarteraFacadeInterfaceLocal = lookup(CRMotivoSeguimientoCarteraFacade.LocalJNDIName);
+        crMovimientoPorSeguimientoFacadeInterfaceLocal = lookup(CRMovimientoPorSeguimientoFacade.LocalJNDIName);
+        wfMovimientosFacadeInterfaceLocal = lookup(WFMovimientosFacade.LocalJNDIName);
+
+    }
+
+    @Override
+    protected void execute(ServletParams servletParams) throws Exception {
+        // TODO Auto-generated method stub
+
+    }
+
+    @RequestMapping(value = "MOSTRAR_DETALLE", responseType = ResponseType.HTML, url = URL_TAB_DATOS_ACTIVIDADES)
+    protected void mostrarDetalle(final ServletParams servletParams) throws Exception {
+        BeanParametrosAuditoria beanParametrosAuditoria = getBeanParametrosAuditoria(servletParams);
+        String idEtapa = getParameter(servletParams, "idEtapa");
+        String idMaestra = getParameter(servletParams, "idMaestra");
+        String comportamiento = getParameter(servletParams, "comportamiento");
+        String tipoRespuesta = getParameter(servletParams, "tipoRespuesta");
+
+        BeanCRSeguimientoCartera beanCRSeguimientoCartera = new BeanCRSeguimientoCartera();
+        BeanCRMovimientoPorSeguimiento beanCRMovimientoPorSeguimiento = new BeanCRMovimientoPorSeguimiento();
+        String textoComentario = "";
+
+        if (!_isEmpty(idMaestra)) {
+
+            textoComentario = wfMovimientosFacadeInterfaceLocal.obtenerUltimoComentario(idMaestra,
+                                                                                        idEtapa,
+                                                                                        beanParametrosAuditoria);
+
+            beanCRSeguimientoCartera = crSeguimientoCarteraFacadeInterfaceLocal.obtenerSeguimientoCarteraPorIdMaestra(idMaestra,
+                                                                                                                      beanParametrosAuditoria);
+
+            beanCRMovimientoPorSeguimiento = crMovimientoPorSeguimientoFacadeInterfaceLocal.listarMovimientoSeguimientoUltimoRegistro(beanCRSeguimientoCartera.getCorrelativoSeguimiento(),
+                                                                                                                                      idEtapa,
+                                                                                                                                      beanParametrosAuditoria);
+
+        }
+
+        List<BeanCRMotivoSeguimientoCartera> listBeanCRMotivoSeguimientoCartera = crMotivoSeguimientoCarteraFacadeInterfaceLocal.listarPorTipoResputa(tipoRespuesta,
+                                                                                                                                                      idEtapa,
+                                                                                                                                                      beanParametrosAuditoria);
+
+        setRequestAttribute(servletParams, "idMaestra", idMaestra);
+        setRequestAttribute(servletParams, "idEtapa", idEtapa);
+        setRequestAttribute(servletParams, "strComportamiento", comportamiento);
+        setRequestAttribute(servletParams, "listBeanCRMotivoSeguimientoCartera", listBeanCRMotivoSeguimientoCartera);
+        setRequestAttribute(servletParams, "beanCRSeguimientoCartera", beanCRSeguimientoCartera);
+        setRequestAttribute(servletParams, "beanCRMovimientoPorSeguimiento", beanCRMovimientoPorSeguimiento);
+        setRequestAttribute(servletParams, "textoComentario", textoComentario);
+        forward(servletParams);
+    }
+
+    @RequestMapping(value = "CARGAR_DETALLE", responseType = ResponseType.HTML, url = URL_TAB_TABLA_DETALLE)
+    protected void cargarDetalleHandler(final ServletParams servletParams) throws Exception {
+        BeanParametrosAuditoria beanParametrosAuditoria = getBeanParametrosAuditoria(servletParams);
+        String correlativoSeguimiento = getParameter(servletParams, "correlativoSeguimiento");
+        final String strPagina = getParameter(servletParams, "hid_pagina", "1");
+
+        final int cantReg = Paginacion.NUM_REG;
+        final int intPagina = _toInteger(strPagina);
+        final int pos_ini = (intPagina - 1) * cantReg;
+        int pos_fin = intPagina * cantReg;
+        Long totalRegistros = new Long(0);
+        String fin = "0";
+        String myData = "";
+
+        List<BeanCRActividadSeguimientoCartera> listBeanCRActividadSeguimientoCartera;
+
+        final Map<String, Object> mapRespuesta = crActividadSeguimientoCarteraFacadeInterfaceLocal.listarActividades(correlativoSeguimiento,
+                                                                                                                     _toInteger(strPagina),
+                                                                                                                     beanParametrosAuditoria);
+
+        listBeanCRActividadSeguimientoCartera = (List<BeanCRActividadSeguimientoCartera>) mapRespuesta.get("listBeanCRActividadSeguimientoCartera");
+        totalRegistros = (Long) mapRespuesta.get("cantReg");
+
+        myData = getMyData(listBeanCRActividadSeguimientoCartera,
+                           "correlativoActividad",
+                           "correlativoSeguimiento",
+                           "codigoIndicadorEnvio",
+                           "fechaActividad",
+                           "tipoActividad",
+                           "contactoActividad",
+                           "comentarioActividad",
+                           "indicadorEnvio",
+                           "");
+        setRequestAttribute(servletParams, "myData", myData);
+
+        if (pos_fin + 1 > totalRegistros) {
+            fin = "1";
+            pos_fin = totalRegistros.intValue();
+        }
+        setRequestAttribute(servletParams, "correlativoSeguimiento", correlativoSeguimiento);
+        setRequestAttribute(servletParams, "inicio", _toStr(pos_ini));
+        setRequestAttribute(servletParams, "fin", _toStr(pos_fin));
+        setRequestAttribute(servletParams, "indFin", fin);
+        setRequestAttribute(servletParams, "total", _toStr(totalRegistros));
+        forward(servletParams);
+    }
+}
diff --git a/DELFINWEBNEW/src/financ/workflow/seguimientoCartera/servlets/CR_C_Resolucion_Servlet.java b/DELFINWEBNEW/src/financ/workflow/seguimientoCartera/servlets/CR_C_Resolucion_Servlet.java
new file mode 100644
index 0000000..8ed4e8a
--- /dev/null
+++ b/DELFINWEBNEW/src/financ/workflow/seguimientoCartera/servlets/CR_C_Resolucion_Servlet.java
@@ -0,0 +1,152 @@
+package financ.workflow.seguimientoCartera.servlets;
+
+import financ.seguimientoCartera.beans.BeanCRMotivoSeguimientoCartera;
+import financ.seguimientoCartera.beans.BeanCRMovimientoPorSeguimiento;
+import financ.seguimientoCartera.beans.BeanCRSeguimientoCartera;
+import financ.seguimientoCartera.facade.CRMotivoSeguimientoCarteraFacade;
+import financ.seguimientoCartera.facade.CRMovimientoPorSeguimientoFacade;
+import financ.seguimientoCartera.facade.CRSeguimientoCarteraFacade;
+import financ.seguimientoCartera.local.CRMotivoSeguimientoCarteraFacadeInterfaceLocal;
+import financ.seguimientoCartera.local.CRMovimientoPorSeguimientoFacadeInterfaceLocal;
+import financ.seguimientoCartera.local.CRSeguimientoCarteraFacadeInterfaceLocal;
+import financ.util.BeanCombo;
+import financ.util.Constante;
+import financ.util.local.UtilFacadeIntrefaceLocal;
+import financ.util.session.UtilFacade;
+import financ.workflow.bean.BeanWFMaestra;
+import financ.workflow.facade.WFMovimientosFacade;
+import financ.workflow.local.WFMovimientosFacadeInterfaceLocal;
+import general.servlets.GE_BaseMethodInvocation_Servlet;
+
+import java.util.List;
+
+import pe.com.tfc.utils.RequestMapping;
+import pe.com.tfc.utils.ResponseType;
+import admin.contab.beans.BeanParametrosAuditoria;
+
+/**
+ * CR_C_Resolucion_Servlet
+ * 
+ * @author kdelacruz
+ * @since [Req.17-022] 04.04.2017
+ */
+
+public class CR_C_Resolucion_Servlet extends GE_BaseMethodInvocation_Servlet {
+
+    /**
+     * 
+     */
+    private static final long serialVersionUID = -8637921303056588610L;
+    private static final String URL_TAB_DATOS_RESOLUCION = Constante.RUTA_WORKFLOW + "seguimientoCartera/etapa/resolucion/CR_C_Resolucion_CNTR.jsp";
+    private WFMovimientosFacadeInterfaceLocal wfMovimientosFacadeInterfaceLocal;
+    private CRSeguimientoCarteraFacadeInterfaceLocal crSeguimientoCarteraFacadeInterfaceLocal;
+    private CRMovimientoPorSeguimientoFacadeInterfaceLocal crMovimientoPorSeguimientoFacadeInterfaceLocal;
+    private UtilFacadeIntrefaceLocal utilFacadeIntrefaceLocal;
+    private CRMotivoSeguimientoCarteraFacadeInterfaceLocal crMotivoSeguimientoCarteraFacadeInterfaceLocal;
+
+    protected void initEJBs() throws Exception {
+        wfMovimientosFacadeInterfaceLocal = lookup(WFMovimientosFacade.LocalJNDIName);
+        crSeguimientoCarteraFacadeInterfaceLocal = lookup(CRSeguimientoCarteraFacade.LocalJNDIName);
+        crMovimientoPorSeguimientoFacadeInterfaceLocal = lookup(CRMovimientoPorSeguimientoFacade.LocalJNDIName);
+        utilFacadeIntrefaceLocal = lookup(UtilFacade.LocalJNDIName);
+        crMotivoSeguimientoCarteraFacadeInterfaceLocal = lookup(CRMotivoSeguimientoCarteraFacade.LocalJNDIName);
+    }
+
+    @Override
+    protected void execute(ServletParams servletParams) throws Exception {
+        // TODO Auto-generated method stub
+    }
+
+    @RequestMapping(value = "CARGA_COMBO_DINAMICO_MOTIVO", responseType = ResponseType.XML)
+    protected void cargaComboDinamico(final ServletParams servletParams) throws Exception {
+        final BeanParametrosAuditoria beanParametrosAuditoria = getBeanParametrosAuditoria(servletParams);
+        final String idTipoRespuesta = getParameter(servletParams, "idTipoRespuesta");
+        String idEtapa = getParameter(servletParams, "idEtapa");
+        String idTipoMotivo = getParameter(servletParams, "idTipoMotivo");
+        String combo = "";
+
+        List<BeanCRMotivoSeguimientoCartera> listBeanCRMotivoSeguimientoCartera = crMotivoSeguimientoCarteraFacadeInterfaceLocal.listarPorTipoResputa(idTipoRespuesta,
+                                                                                                                                                      idEtapa,
+                                                                                                                                                      beanParametrosAuditoria);
+        List<BeanCombo> listTipoMotivo = parseListBeanCombo(listBeanCRMotivoSeguimientoCartera,
+                                                            "idMotivoSeguimiento",
+                                                            "descripcionMotivo");
+
+        combo = armarComboDinamico(listTipoMotivo, "tipoMotivo", "mostrarFecha", "width: 80%;", idTipoMotivo, false);
+        final StringBuilder sbRespuesta = new StringBuilder();
+        sbRespuesta.append("<codigoError>" + NO_ERROR + "</codigoError>");
+        sbRespuesta.append("<contenedorTipoMotivoPorRespuesta>" + combo + "</contenedorTipoMotivoPorRespuesta>");
+
+        responseXML(servletParams, sbRespuesta.toString());
+    }
+
+    @RequestMapping(value = "MOSTRAR_DETALLE", responseType = ResponseType.HTML, url = URL_TAB_DATOS_RESOLUCION)
+    protected void mostrarDetalleDescarga(final ServletParams servletParams) throws Exception {
+        BeanParametrosAuditoria beanParametrosAuditoria = getBeanParametrosAuditoria(servletParams);
+        String idMaestra = getParameter(servletParams, "idMaestra");
+        String idEtapa = getParameter(servletParams, "idEtapa");
+        String comportamiento = getParameter(servletParams, "comportamiento");
+        BeanCRSeguimientoCartera beanCRSeguimientoCartera;
+        BeanCRMovimientoPorSeguimiento beanCRMovimientoPorSeguimiento;
+
+        List<BeanCombo> lstTipoRespuesta = utilFacadeIntrefaceLocal.lstDataCatalogo("CRDSGMV", "C_TIPRES", false);
+
+        if (!_isEmpty(idMaestra)) {
+            String textoComentario = wfMovimientosFacadeInterfaceLocal.obtenerUltimoComentario(idMaestra,
+                                                                                               idEtapa,
+                                                                                               beanParametrosAuditoria);
+
+            beanCRSeguimientoCartera = crSeguimientoCarteraFacadeInterfaceLocal.obtenerSeguimientoCarteraPorIdMaestra(idMaestra,
+                                                                                                                      beanParametrosAuditoria);
+
+            beanCRMovimientoPorSeguimiento = crMovimientoPorSeguimientoFacadeInterfaceLocal.listarMovimientoSeguimientoUltimoRegistro(beanCRSeguimientoCartera.getCorrelativoSeguimiento(),
+                                                                                                                                      idEtapa,
+                                                                                                                                      beanParametrosAuditoria);
+            setRequestAttribute(servletParams, "textoComentario", textoComentario);
+            setRequestAttribute(servletParams, "beanCRMovimientoPorSeguimiento", beanCRMovimientoPorSeguimiento);
+            setRequestAttribute(servletParams, "beanCRSeguimientoCartera", beanCRSeguimientoCartera);
+            setRequestAttribute(servletParams, "lstTipoRespuesta", lstTipoRespuesta);
+        }
+
+        setRequestAttribute(servletParams, "idEtapa", idEtapa);
+        setRequestAttribute(servletParams, "strComportamiento", comportamiento);
+        forward(servletParams);
+    }
+
+    @RequestMapping(value = "ENVIAR", responseType = ResponseType.XML)
+    protected void enviar(final ServletParams servletParams) throws Exception {
+        BeanParametrosAuditoria beanParametrosAuditoria = getBeanParametrosAuditoria(servletParams);
+        BeanWFMaestra beanWFMaestra = mapearBean(servletParams, BeanWFMaestra.class);
+        String idEvento = getParameter(servletParams, "idEvento");
+        String textoComentario = getParameter(servletParams, "textoComentario");
+        String idMotivoSeguimiento = getParameter(servletParams, "idTipoMotivo");
+        String idTipoRespuesta = getParameter(servletParams, "idTipoRespuesta");
+
+        BeanCRSeguimientoCartera beanCRSeguimientoCartera = mapearBean(servletParams, BeanCRSeguimientoCartera.class);
+
+        crSeguimientoCarteraFacadeInterfaceLocal.procesarResolucion(beanWFMaestra,
+                                                                    idEvento,
+                                                                    textoComentario,
+                                                                    idMotivoSeguimiento,
+                                                                    beanCRSeguimientoCartera,
+                                                                    idTipoRespuesta,
+                                                                    beanParametrosAuditoria);
+
+        final StringBuilder sbRespuesta = new StringBuilder();
+        sbRespuesta.append("<codigoError>" + NO_ERROR + "</codigoError>");
+        responseXML(servletParams, sbRespuesta.toString());
+    }
+    
+    @RequestMapping(value = "CONSULTA_FECHA_MOTIVO", responseType = ResponseType.XML)
+    protected void consultaMotivo(final ServletParams servletParams) throws Exception {
+        BeanParametrosAuditoria beanParametrosAuditoria = getBeanParametrosAuditoria(servletParams);
+        String idTipoMotivo = getParameter(servletParams, "idTipoMotivo");
+
+        BeanCRMotivoSeguimientoCartera beanCRMotivoSeguimientoCartera = crMotivoSeguimientoCarteraFacadeInterfaceLocal.consultaMotivo(idTipoMotivo, beanParametrosAuditoria);
+        final StringBuilder sbRespuesta = new StringBuilder();
+        sbRespuesta.append("<indicadorFechaMotivo>" + beanCRMotivoSeguimientoCartera.getIndicadorFechaMotivo() + "</indicadorFechaMotivo>");
+        sbRespuesta.append("<codigoError>" + NO_ERROR + "</codigoError>");
+        responseXML(servletParams, sbRespuesta.toString());
+    }
+
+}
diff --git a/DELFINWEBNEW/src/financ/workflow/seguimientoCartera/servlets/CR_T_DatosSeguimiento_Servlet.java b/DELFINWEBNEW/src/financ/workflow/seguimientoCartera/servlets/CR_T_DatosSeguimiento_Servlet.java
new file mode 100644
index 0000000..afeadec
--- /dev/null
+++ b/DELFINWEBNEW/src/financ/workflow/seguimientoCartera/servlets/CR_T_DatosSeguimiento_Servlet.java
@@ -0,0 +1,148 @@
+package financ.workflow.seguimientoCartera.servlets;
+
+import financ.creditos.facade.CRCuentaCreditoFacade;
+import financ.creditos.local.CRCuentaCreditoFacadeInterfaceLocal;
+import financ.seguimientoCartera.beans.BeanCRSeguimientoCartera;
+import financ.seguimientoCartera.beans.BeanCRTipoAlerta;
+import financ.seguimientoCartera.facade.CRSeguimientoCarteraFacade;
+import financ.seguimientoCartera.facade.CRTipoAlertaFacade;
+import financ.seguimientoCartera.local.CRSeguimientoCarteraFacadeInterfaceLocal;
+import financ.seguimientoCartera.local.CRTipoAlertaFacadeInterfaceLocal;
+import financ.util.BeanCombo;
+import financ.util.Constante;
+import financ.util.local.UtilFacadeIntrefaceLocal;
+import financ.util.session.UtilFacade;
+import financ.workflow.bean.BeanWFMaestra;
+import financ.workflow.facade.WFMaestraFacade;
+import financ.workflow.facade.WFMovimientosFacade;
+import financ.workflow.local.WFMaestraFacadeInterfaceLocal;
+import financ.workflow.local.WFMovimientosFacadeInterfaceLocal;
+import general.servlets.GE_BaseMethodInvocation_Servlet;
+
+import java.util.ArrayList;
+import java.util.List;
+
+import pe.com.tfc.utils.RequestMapping;
+import pe.com.tfc.utils.ResponseType;
+import admin.contab.beans.BeanParametrosAuditoria;
+import admin.contab.local.CBAgenciaInterfaceLocal;
+
+/**
+ * CR_T_DatosSeguimiento_Servlet
+ * 
+ * @author kdelacruz
+ * @since [Req.17-022] 29.03.2017
+ */
+
+public class CR_T_DatosSeguimiento_Servlet extends GE_BaseMethodInvocation_Servlet {
+
+    /**
+     * 
+     */
+    private static final long serialVersionUID = -8637921303056588610L;
+    private static final String URL_TAB_DATOS_SEGUIMIENTO = Constante.RUTA_WORKFLOW + "seguimientoCartera/etapa/datosSeguimiento/CR_T_DatosSeguimiento_CNTR.jsp";
+    private WFMaestraFacadeInterfaceLocal wfMaestraFacadeInterfaceLocal;
+    private UtilFacadeIntrefaceLocal utilFacadeIntrefaceLocal;
+    private CRSeguimientoCarteraFacadeInterfaceLocal CRSeguimientoCarteraFacadeInterfaceLocal;
+    private CRTipoAlertaFacadeInterfaceLocal crTipoAlertaFacadeInterfaceLocal;
+    private WFMovimientosFacadeInterfaceLocal wfMovimientosFacadeInterfaceLocal;
+    private CRCuentaCreditoFacadeInterfaceLocal crCuentaCreditoFacadeInterfaceLocal;
+    private CBAgenciaInterfaceLocal cbAgenciaInterfaceLocal;
+
+    protected void initEJBs() throws Exception {
+        CRSeguimientoCarteraFacadeInterfaceLocal = lookup(CRSeguimientoCarteraFacade.LocalJNDIName);
+        wfMaestraFacadeInterfaceLocal = lookup(WFMaestraFacade.LocalJNDIName);
+        utilFacadeIntrefaceLocal = lookup(UtilFacade.LocalJNDIName);
+        crTipoAlertaFacadeInterfaceLocal = lookup(CRTipoAlertaFacade.LocalJNDIName);
+        wfMovimientosFacadeInterfaceLocal = lookup(WFMovimientosFacade.LocalJNDIName);
+        crCuentaCreditoFacadeInterfaceLocal = lookup(CRCuentaCreditoFacade.LocalJNDIName);
+        cbAgenciaInterfaceLocal = lookup("CBAgenciaSession/local");
+    }
+
+    @Override
+    protected void execute(ServletParams servletParams) throws Exception {
+        // TODO Auto-generated method stub
+
+    }
+
+    @RequestMapping(value = "MOSTRAR_DETALLE", responseType = ResponseType.HTML, url = URL_TAB_DATOS_SEGUIMIENTO)
+    protected void mostrarDetalle(final ServletParams servletParams) throws Exception {
+        BeanParametrosAuditoria beanParametrosAuditoria = getBeanParametrosAuditoria(servletParams);
+        String idEtapa = getParameter(servletParams, "idEtapa");
+        String idMaestra = getParameter(servletParams, "idMaestra");
+        BeanCRSeguimientoCartera beanCRSeguimientoCartera;
+        String comportamiento = getParameter(servletParams, "comportamiento");
+
+        if (!_isEmpty(idMaestra)) {
+            String textoComentario = wfMovimientosFacadeInterfaceLocal.obtenerUltimoComentario(idMaestra,
+                                                                                               idEtapa,
+                                                                                               beanParametrosAuditoria);
+
+            BeanWFMaestra beanWFMaestra = wfMaestraFacadeInterfaceLocal.consultarMaestra(idMaestra,
+                                                                                         beanParametrosAuditoria);
+
+            beanCRSeguimientoCartera = CRSeguimientoCarteraFacadeInterfaceLocal.obtenerSeguimientoCarteraPorIdMaestra(idMaestra,
+                                                                                                                      beanParametrosAuditoria);
+
+            setRequestAttribute(servletParams, "textoComentario", textoComentario);
+            setRequestAttribute(servletParams, "beanWFMaestra", beanWFMaestra);
+            setRequestAttribute(servletParams, "beanCRSeguimientoCartera", beanCRSeguimientoCartera);
+        }
+
+        List<BeanCRTipoAlerta> lstBeanCRTipoAlerta = crTipoAlertaFacadeInterfaceLocal.lstTipoAlerta(beanParametrosAuditoria);
+
+        final List<BeanCombo> lstCalificacionSBS = new ArrayList<BeanCombo>(0);
+        lstCalificacionSBS.addAll(utilFacadeIntrefaceLocal.lstCalificacionSBS());
+
+        setRequestAttribute(servletParams, "lstCalificacionSBS", lstCalificacionSBS);
+        setRequestAttribute(servletParams, "lstBeanCRTipoAlerta", lstBeanCRTipoAlerta);
+        setRequestAttribute(servletParams, "idEtapa", idEtapa);
+        setRequestAttribute(servletParams, "strComportamiento", comportamiento);
+        forward(servletParams);
+    }
+
+    @RequestMapping(value = "PROCESAR", responseType = ResponseType.XML)
+    protected void procesar(final ServletParams servletParams) throws Exception {
+        BeanParametrosAuditoria beanParametrosAuditoria = getBeanParametrosAuditoria(servletParams);
+        String idEvento = getParameter(servletParams, "idEvento");
+        BeanWFMaestra beanWFMaestra = mapearBean(servletParams, BeanWFMaestra.class);
+        BeanCRSeguimientoCartera beanCRSeguimientoCartera = mapearBean(servletParams, BeanCRSeguimientoCartera.class);
+
+        String idMaestra = CRSeguimientoCarteraFacadeInterfaceLocal.guardarSeguimientoCartera(beanCRSeguimientoCartera,
+                                                                                              beanWFMaestra,
+                                                                                              idEvento,
+                                                                                              beanCRSeguimientoCartera.getComentario(),
+                                                                                              beanParametrosAuditoria);
+        beanWFMaestra = wfMaestraFacadeInterfaceLocal.consultarMaestra(idMaestra, beanParametrosAuditoria);
+        beanCRSeguimientoCartera = CRSeguimientoCarteraFacadeInterfaceLocal.obtenerSeguimientoCartera(idMaestra,
+                                                                                                      beanParametrosAuditoria);
+
+        final StringBuilder sbRespuesta = new StringBuilder();
+        sbRespuesta.append("<correlativoSeguimiento>" + beanCRSeguimientoCartera.getCorrelativoSeguimiento() + "</correlativoSeguimiento>");
+        sbRespuesta.append("<idMaestra>" + beanCRSeguimientoCartera.getIdMaestra() + "</idMaestra>");
+        sbRespuesta.append("<descripcionEstado>" + beanWFMaestra.getDescripcionEstado() + "</descripcionEstado>");
+        sbRespuesta.append("<codigoError>" + NO_ERROR + "</codigoError>");
+        responseXML(servletParams, sbRespuesta.toString());
+    }
+
+    @RequestMapping(value = "OBTENER_AGENCIA", responseType = ResponseType.XML)
+    protected void obtenerAgencia(final ServletParams servletParams) throws Exception {
+        BeanParametrosAuditoria beanParametrosAuditoria = getBeanParametrosAuditoria(servletParams);
+        String codigoCliente = getParameter(servletParams, "codigoCliente");
+        String descripcionAgencia = CADENA_VACIA;
+
+        String codigoAgencia = crCuentaCreditoFacadeInterfaceLocal.obtenerAgenciaPorCliente(codigoCliente,
+                                                                                            beanParametrosAuditoria);
+
+        if (!_isEmpty(codigoAgencia)) {
+            descripcionAgencia = cbAgenciaInterfaceLocal.findByCodigoAgenciaDescripcionAgencia(codigoAgencia);
+        }
+
+        final StringBuilder sbRespuesta = new StringBuilder();
+        sbRespuesta.append("<codigoAgencia>" + codigoAgencia + "</codigoAgencia>");
+        sbRespuesta.append("<descripcionAgencia>" + descripcionAgencia + "</descripcionAgencia>");
+        sbRespuesta.append("<codigoError>" + NO_ERROR + "</codigoError>");
+        responseXML(servletParams, sbRespuesta.toString());
+    }
+
+}
diff --git a/DELFINWEBNEW/src/financ/workflow/seguimientoCartera/servlets/CR_T_RegistroActividades_Servlet.java b/DELFINWEBNEW/src/financ/workflow/seguimientoCartera/servlets/CR_T_RegistroActividades_Servlet.java
new file mode 100644
index 0000000..e4142c7
--- /dev/null
+++ b/DELFINWEBNEW/src/financ/workflow/seguimientoCartera/servlets/CR_T_RegistroActividades_Servlet.java
@@ -0,0 +1,132 @@
+package financ.workflow.seguimientoCartera.servlets;
+
+import financ.seguimientoCartera.beans.BeanCRActividadSeguimientoCartera;
+import financ.seguimientoCartera.beans.BeanCRSeguimientoCartera;
+import financ.seguimientoCartera.facade.CRActividadSeguimientoCarteraFacade;
+import financ.seguimientoCartera.facade.CRSeguimientoCarteraFacade;
+import financ.seguimientoCartera.local.CRActividadSeguimientoCarteraFacadeInterfaceLocal;
+import financ.seguimientoCartera.local.CRSeguimientoCarteraFacadeInterfaceLocal;
+import financ.util.BeanCombo;
+import financ.util.Constante;
+import financ.util.local.UtilFacadeIntrefaceLocal;
+import financ.util.session.UtilFacade;
+import financ.workflow.bean.BeanWFMaestra;
+import general.servlets.GE_BaseMethodInvocation_Servlet;
+
+import java.util.List;
+
+import pe.com.tfc.utils.RequestMapping;
+import pe.com.tfc.utils.ResponseType;
+import admin.contab.beans.BeanParametrosAuditoria;
+
+/**
+ * CR_T_RegistroActividades_Servlet
+ * 
+ * @author kdelacruz
+ * @since [Req.17-022] 29.03.2017
+ */
+
+public class CR_T_RegistroActividades_Servlet extends GE_BaseMethodInvocation_Servlet {
+
+    /**
+     * 
+     */
+    private static final long serialVersionUID = -8637921303056588610L;
+    private static final String URL_TAB_REGISTRO_ACTIVIDADES = Constante.RUTA_WORKFLOW + "seguimientoCartera/etapa/actividades/CR_T_RegistroActividades_CHILD.jsp";
+    private CRActividadSeguimientoCarteraFacadeInterfaceLocal crActividadSeguimientoCarteraFacadeInterfaceLocal;
+    private UtilFacadeIntrefaceLocal utilFacadeIntrefaceLocal;
+    private CRSeguimientoCarteraFacadeInterfaceLocal crSeguimientoCarteraFacadeInterfaceLocal;
+
+    protected void initEJBs() throws Exception {
+        crActividadSeguimientoCarteraFacadeInterfaceLocal = lookup(CRActividadSeguimientoCarteraFacade.LocalJNDIName);
+        utilFacadeIntrefaceLocal = lookup(UtilFacade.LocalJNDIName);
+        crSeguimientoCarteraFacadeInterfaceLocal = lookup(CRSeguimientoCarteraFacade.LocalJNDIName);
+
+    }
+
+    @Override
+    protected void execute(ServletParams servletParams) throws Exception {
+        // TODO Auto-generated method stub
+
+    }
+
+    @RequestMapping(value = "MOSTRAR_DETALLE", url = URL_TAB_REGISTRO_ACTIVIDADES)
+    protected void mostrarDetalle(final ServletParams servletParams) throws Exception {
+        BeanParametrosAuditoria beanParametrosAuditoria = getBeanParametrosAuditoria(servletParams);
+        String idEtapa = getParameter(servletParams, "idEtapa");
+        String idMaestra = getParameter(servletParams, "idMaestra");
+        String comportamiento = getParameter(servletParams, "strComportamiento");
+        String idActividad = getParameter(servletParams, "idActividad");
+
+        if (!_isEmpty(idActividad)) {
+            BeanCRActividadSeguimientoCartera beanCRActividadSeguimientoCartera = crActividadSeguimientoCarteraFacadeInterfaceLocal.consultarActividad(idActividad,
+                                                                                                                                                       beanParametrosAuditoria);
+            setRequestAttribute(servletParams, "beanCRActividadSeguimientoCartera", beanCRActividadSeguimientoCartera);
+        }
+
+        List<BeanCombo> lstTipoActividad = utilFacadeIntrefaceLocal.lstDataCatalogo("CRDSGAC", "C_TIPACT");
+
+        List<BeanCombo> lstContacto = utilFacadeIntrefaceLocal.lstDataCatalogo("CRDSGAC", "C_CONACT");
+
+        setRequestAttribute(servletParams, "lstTipoActividad", lstTipoActividad);
+        setRequestAttribute(servletParams, "lstContacto", lstContacto);
+        setRequestAttribute(servletParams, "idMaestra", idMaestra);
+        setRequestAttribute(servletParams, "idEtapa", idEtapa);
+        setRequestAttribute(servletParams, "strComportamiento", comportamiento);
+        forward(servletParams);
+    }
+
+    @RequestMapping(value = "GRABAR", responseType = ResponseType.XML)
+    protected void grabar(final ServletParams servletParams) throws Exception {
+        BeanParametrosAuditoria beanParametrosAuditoria = getBeanParametrosAuditoria(servletParams);
+        BeanCRActividadSeguimientoCartera beanCRActividadSeguimientoCartera = mapearBean(servletParams,
+                                                                                         BeanCRActividadSeguimientoCartera.class);
+        String idMaestra = getParameter(servletParams, "idMaestra");
+        BeanCRSeguimientoCartera beanCRSeguimientoCartera = crSeguimientoCarteraFacadeInterfaceLocal.obtenerSeguimientoCarteraPorIdMaestra(idMaestra,
+                                                                                                                                           beanParametrosAuditoria);
+
+        crActividadSeguimientoCarteraFacadeInterfaceLocal.registrarActividad(beanCRActividadSeguimientoCartera,
+                                                                             beanCRSeguimientoCartera.getCorrelativoSeguimiento(),
+                                                                             beanParametrosAuditoria);
+
+        final StringBuilder sbRespuesta = new StringBuilder();
+        sbRespuesta.append("<codigoError>" + NO_ERROR + "</codigoError>");
+        responseXML(servletParams, sbRespuesta.toString());
+    }
+
+    @RequestMapping(value = "ELIMINAR", responseType = ResponseType.XML)
+    protected void eliminar(final ServletParams servletParams) throws Exception {
+        BeanParametrosAuditoria beanParametrosAuditoria = getBeanParametrosAuditoria(servletParams);
+        String correlativoActividad = getParameter(servletParams, "correlativoActividad");
+
+        crActividadSeguimientoCarteraFacadeInterfaceLocal.eliminarActividad(correlativoActividad,
+                                                                            beanParametrosAuditoria);
+
+        final StringBuilder sbRespuesta = new StringBuilder();
+        sbRespuesta.append("<codigoError>" + NO_ERROR + "</codigoError>");
+        responseXML(servletParams, sbRespuesta.toString());
+    }
+
+    @RequestMapping(value = "ENVIAR", responseType = ResponseType.XML)
+    protected void enviar(final ServletParams servletParams) throws Exception {
+        BeanParametrosAuditoria beanParametrosAuditoria = getBeanParametrosAuditoria(servletParams);
+        String idEvento = getParameter(servletParams, "idEvento");
+        String txtComentario = getParameter(servletParams, "textoComentario");
+        String idMotivoSeguimiento = getParameter(servletParams, "idTipoMotivo");
+        String idTipoRespuesta = getParameter(servletParams, "idTipoRespuesta");
+        BeanWFMaestra beanWFMaestra = mapearBean(servletParams, BeanWFMaestra.class);
+        BeanCRSeguimientoCartera beanCRSeguimientoCartera = mapearBean(servletParams, BeanCRSeguimientoCartera.class);
+
+        crActividadSeguimientoCarteraFacadeInterfaceLocal.enviaActividades(beanWFMaestra,
+                                                                           idEvento,
+                                                                           txtComentario,
+                                                                           idMotivoSeguimiento,
+                                                                           beanCRSeguimientoCartera,
+                                                                           idTipoRespuesta,
+                                                                           beanParametrosAuditoria);
+        final StringBuilder sbRespuesta = new StringBuilder();
+        sbRespuesta.append("<codigoError>" + NO_ERROR + "</codigoError>");
+        responseXML(servletParams, sbRespuesta.toString());
+    }
+
+}
diff --git a/DELFINWEBNEW/src/financ/workflow/seguimientoCartera/servlets/CR_T_SeguimientoCarteraAdministracionLotes_Servlet.java b/DELFINWEBNEW/src/financ/workflow/seguimientoCartera/servlets/CR_T_SeguimientoCarteraAdministracionLotes_Servlet.java
new file mode 100644
index 0000000..8353809
--- /dev/null
+++ b/DELFINWEBNEW/src/financ/workflow/seguimientoCartera/servlets/CR_T_SeguimientoCarteraAdministracionLotes_Servlet.java
@@ -0,0 +1,140 @@
+package financ.workflow.seguimientoCartera.servlets;
+
+import financ.seguimientoCartera.beans.BeanCRMaestroSeguimiento;
+import financ.seguimientoCartera.facade.CRMaestroSeguimientoFacade;
+import financ.seguimientoCartera.local.CRMaestroSeguimientoFacadeInterfaceLocal;
+import financ.util.BeanCombo;
+import financ.util.Constante;
+import financ.util.FormatoFecha;
+import financ.util.local.UtilFacadeIntrefaceLocal;
+import financ.util.session.UtilFacade;
+import general.servlets.GE_BaseMethodInvocation_Servlet;
+
+import java.util.ArrayList;
+import java.util.List;
+import java.util.Map;
+
+import pe.com.tfc.utils.GenericBean;
+import pe.com.tfc.utils.RequestMapping;
+import pe.com.tfc.utils.ResponseType;
+import admin.contab.beans.BeanParametrosAuditoria;
+
+/**
+ * CR_T_SeguimientoCarteraAdministracionLotes_Servlet
+ * 
+ * @autor rsanchez
+ * @since [S17-022] 30.03.2017
+ */
+
+public class CR_T_SeguimientoCarteraAdministracionLotes_Servlet extends GE_BaseMethodInvocation_Servlet {
+
+    private static final long serialVersionUID = 9072704243313083829L;
+    private static final String PATH_ADMINISTRACION_LOTES = "/FINANCIERO/workflow/seguimientoCartera/carga/";
+    private static final String URL_MOSTRAR_CONTENEDOR = PATH_ADMINISTRACION_LOTES + "CR-T-SeguimientoCarteraAdministracionLotes_CNTR.jsp";
+    private static final String URL_TABLA_DETALLE = Constante.RUTA_WORKFLOW + "seguimientoCartera/carga/CR-T-SeguimientoCarteraAdministracionLotes_TABLA.jsp";
+
+    private UtilFacadeIntrefaceLocal utilFacadeIntrefaceLocal;
+
+    private CRMaestroSeguimientoFacadeInterfaceLocal crMaestroSeguimientoFacadeInterfaceLocal;
+
+    protected void initEJBs() throws Exception {
+        utilFacadeIntrefaceLocal = lookup(UtilFacade.LocalJNDIName);
+        crMaestroSeguimientoFacadeInterfaceLocal = lookup(CRMaestroSeguimientoFacade.LocalJNDIName);
+    }
+
+    @Override
+    protected void execute(ServletParams servletParams) throws Exception {
+    }
+
+    @RequestMapping(value = "MOSTRAR_CONTENEDOR", responseType = ResponseType.HTML, url = URL_MOSTRAR_CONTENEDOR)
+    protected void mostrarContenedor(ServletParams servletParams) throws Exception {
+
+        List<BeanCombo> listBeanEstado = utilFacadeIntrefaceLocal.lstDataCatalogo("CRMSGCA", "C_CODEST");
+        List<BeanCombo> listBeanEstadoFinal = new ArrayList<BeanCombo>(0);
+        listBeanEstadoFinal.add(new BeanCombo("", "TODOS", "TODOS"));
+        listBeanEstadoFinal.addAll(listBeanEstado);
+
+        String fechaProceso = getSessionAttribute(servletParams, "strFecPro", String.class);
+        String fechaProcesoFin = FormatoFecha.dateToStringDDMMYYYYY(FormatoFecha.getUltimoDiaDelMes(FormatoFecha.stringToUtilDate(fechaProceso)));
+
+        setRequestAttribute(servletParams, "fechaProcesoInicio", fechaProceso);
+        setRequestAttribute(servletParams, "fechaProcesoFin", fechaProcesoFin);
+        setRequestAttribute(servletParams, "listBeanEstado", listBeanEstadoFinal);
+
+        forward(servletParams);
+    }
+
+    @RequestMapping(value = "CARGAR_INFORMACION_LOTE", responseType = ResponseType.HTML, url = URL_TABLA_DETALLE)
+    protected void cargarInformacionLote(ServletParams servletParams) throws Exception {
+
+        String fechaAsignacionInicial = getParameter(servletParams, "fechaAsignacionInicial");
+        String fechaAsignacionFinal = getParameter(servletParams, "fechaAsignacionFinal");
+        String codigoEstado = getParameter(servletParams, "codigoEstado");
+
+        String fin = "0";
+
+        String strCanPag = getSessionAttribute(servletParams, "paginacion", String.class, "50");
+        String strPagina = getParameter(servletParams, "hid_pagina", "1");
+
+        int cantReg = _toInteger(strCanPag);
+        int intPagina = _toInteger(strPagina);
+        // Posiciones inicial y final
+        int pos_ini = (intPagina - 1) * cantReg;
+        int pos_fin = intPagina * cantReg;
+        Long totalRegistros = new Long(0);
+
+        BeanParametrosAuditoria beanParametrosAuditoria = getBeanParametrosAuditoria(servletParams);
+
+        GenericBean genericBean = new GenericBean();
+        genericBean.addProperty("fechaAsignacionInicial", fechaAsignacionInicial);
+        genericBean.addProperty("fechaAsignacionFinal", fechaAsignacionFinal);
+        genericBean.addProperty("codigoEstado", codigoEstado);
+        genericBean.addProperty("pagina", intPagina);
+
+        Map<String, Object> mapRespuesta = crMaestroSeguimientoFacadeInterfaceLocal.buscarLoteSeguimiento(genericBean,
+                                                                                                          beanParametrosAuditoria);
+
+        List<BeanCRMaestroSeguimiento> lstBeanCRMaestroSeguimiento = (List<BeanCRMaestroSeguimiento>) mapRespuesta.get("lstBeanCRMaestroSeguimiento");
+        totalRegistros = (Long) mapRespuesta.get("cantReg");
+        String myData = "";
+        if (!_isEmpty(lstBeanCRMaestroSeguimiento)) {
+            myData = getMyData(lstBeanCRMaestroSeguimiento,
+                               "idLote",
+                               "fechaProceso",
+                               "horaProceso",
+                               "usuarioCarga",
+                               "nombreUsuarioCarga",
+                               "usuarioEstado",
+                               "nombreUsuarioEstado",
+                               "numeroRegistros",
+                               "descripcionEstado");
+        }
+
+        if (pos_fin + 1 > totalRegistros) {
+            fin = "1";
+            pos_fin = totalRegistros.intValue();
+        }
+
+        setRequestAttribute(servletParams, "hid_paginaActual", strPagina);
+        setRequestAttribute(servletParams, "myData", myData);
+        setRequestAttribute(servletParams, "inicio", _toStr(pos_ini));
+        setRequestAttribute(servletParams, "fin", _toStr(pos_fin));
+        setRequestAttribute(servletParams, "indFin", fin);
+        setRequestAttribute(servletParams, "total", _toStr(totalRegistros));
+
+        forward(servletParams);
+    }
+
+    @RequestMapping(value = "CAMBIAR_ESTADO", responseType = ResponseType.XML)
+    protected void cambiarEstado(ServletParams servletParams) throws Exception {
+        BeanParametrosAuditoria beanParametrosAuditoria = getBeanParametrosAuditoria(servletParams);
+        String idLote = getParameter(servletParams, "idLote");
+        String estadoCambiaLote = getParameter(servletParams, "estadoCambiaLote");
+
+        crMaestroSeguimientoFacadeInterfaceLocal.autorizar(idLote, estadoCambiaLote, beanParametrosAuditoria);
+
+        StringBuilder sbRespuesta = new StringBuilder();
+        sbRespuesta.append("<codigoError>" + NO_ERROR + "</codigoError>");
+        responseXML(servletParams, sbRespuesta.toString());
+    }
+}
diff --git a/DELFINWEBNEW/src/financ/workflow/seguimientoCartera/servlets/CR_T_SeguimientoCarteraCargaAlerta_Servlet.java b/DELFINWEBNEW/src/financ/workflow/seguimientoCartera/servlets/CR_T_SeguimientoCarteraCargaAlerta_Servlet.java
new file mode 100644
index 0000000..85c00cd
--- /dev/null
+++ b/DELFINWEBNEW/src/financ/workflow/seguimientoCartera/servlets/CR_T_SeguimientoCarteraCargaAlerta_Servlet.java
@@ -0,0 +1,80 @@
+package financ.workflow.seguimientoCartera.servlets;
+
+import financ.seguimientoCartera.beans.BeanCRCargaAlerta;
+import financ.seguimientoCartera.facade.CRCargaAlertaFacade;
+import financ.seguimientoCartera.local.CRCargaAlertaFacadeInterfaceLocal;
+import general.servlets.GE_BaseMethodInvocation_Servlet;
+
+import java.util.ArrayList;
+import java.util.List;
+
+import pe.com.tfc.utils.ErrorControladoException;
+import pe.com.tfc.utils.FormFile;
+import pe.com.tfc.utils.GenericBean;
+import pe.com.tfc.utils.RequestMapping;
+import pe.com.tfc.utils.ResponseType;
+import pe.com.tfc.utils.imports.Importer;
+import pe.com.tfc.utils.imports.impl.ImporterXLS;
+import admin.util.ConstantesErrores;
+
+/**
+ * CR_T_SeguimientoCarteraCargaAlerta_Servlet
+ * 
+ * @autor rsanchez
+ * @since [S17-022] 27.03.2017
+ */
+
+public class CR_T_SeguimientoCarteraCargaAlerta_Servlet extends GE_BaseMethodInvocation_Servlet {
+
+    private static final long serialVersionUID = 7570681465137853489L;
+    private static final String PATH_CARGA_ALERTA = "/FINANCIERO/workflow/seguimientoCartera/carga/";
+    private static final String URL_MOSTRAR_CONTENEDOR = PATH_CARGA_ALERTA + "CR-T-SeguimientoCarteraCargaAlerta_CNTR.jsp";
+
+    private CRCargaAlertaFacadeInterfaceLocal crCagaAlertaFacadeInterfaceLocal;
+
+    protected void initEJBs() throws Exception {
+        crCagaAlertaFacadeInterfaceLocal = lookup(CRCargaAlertaFacade.LocalJNDIName);
+    }
+
+    @Override
+    protected void execute(ServletParams servletParams) throws Exception {
+    }
+
+    @RequestMapping(value = "MOSTRAR_CONTENEDOR", responseType = ResponseType.HTML, url = URL_MOSTRAR_CONTENEDOR)
+    protected void mostrarContenedor(ServletParams servletParams) throws Exception {
+        setRequestAttribute(servletParams,
+                            "fechaProceso",
+                            getSessionAttribute(servletParams, "strFecPro", String.class));
+        forward(servletParams);
+    }
+
+    @RequestMapping(value = "PROCESAR", url = URL_RESPUESTA_MULTIPART)
+    protected void procesarHandler(ServletParams servletParams) throws Exception {
+        FormFile formFile = getRequestAttribute(servletParams, "txtRuta", FormFile.class);
+        String fechaProceso = getParameter(servletParams, "fechaProceso");
+        String chkReproceso = getParameter(servletParams, "chkReproceso");
+
+        GenericBean genericBean = new GenericBean();
+        genericBean.addProperty("fechaProceso", fechaProceso);
+        genericBean.addProperty("chkReproceso", chkReproceso);
+
+        Importer<BeanCRCargaAlerta> importer = new ImporterXLS<BeanCRCargaAlerta>(BeanCRCargaAlerta.class);
+        importer.setInitLineNumber(2);
+        List<BeanCRCargaAlerta> lstBeanCRCargaAlerta = (ArrayList<BeanCRCargaAlerta>) importer.importar(formFile.getBytes());
+
+        if (!_isEmpty(importer.getListValidations())) {
+            throw exceptionImporterValidations(servletParams, importer.getListValidations());
+        }
+
+        if (_isEmpty(lstBeanCRCargaAlerta)) {
+            throw new ErrorControladoException(ConstantesErrores.ERROR_1585);
+        }
+        crCagaAlertaFacadeInterfaceLocal.enviar(lstBeanCRCargaAlerta,
+                                                genericBean,
+                                                getBeanParametrosAuditoria(servletParams));
+
+        setRequestAttribute(servletParams, "codigoError", NO_ERROR);
+        forward(servletParams);
+    }
+
+}
diff --git a/DELFINWEBNEW/src/financ/workflow/seguimientoCartera/servlets/CR_T_SeguimientoCarteraDetalleCarga_Servlet.java b/DELFINWEBNEW/src/financ/workflow/seguimientoCartera/servlets/CR_T_SeguimientoCarteraDetalleCarga_Servlet.java
new file mode 100644
index 0000000..71faac5
--- /dev/null
+++ b/DELFINWEBNEW/src/financ/workflow/seguimientoCartera/servlets/CR_T_SeguimientoCarteraDetalleCarga_Servlet.java
@@ -0,0 +1,123 @@
+package financ.workflow.seguimientoCartera.servlets;
+
+import financ.seguimientoCartera.beans.BeanCRSeguimientoCartera;
+import financ.seguimientoCartera.beans.BeanCRTipoAlerta;
+import financ.seguimientoCartera.facade.CRSeguimientoCarteraFacade;
+import financ.seguimientoCartera.facade.CRTipoAlertaFacade;
+import financ.seguimientoCartera.local.CRSeguimientoCarteraFacadeInterfaceLocal;
+import financ.seguimientoCartera.local.CRTipoAlertaFacadeInterfaceLocal;
+import financ.util.Constante;
+import general.servlets.GE_BaseMethodInvocation_Servlet;
+
+import java.util.List;
+import java.util.Map;
+
+import pe.com.tfc.utils.GenericBean;
+import pe.com.tfc.utils.RequestMapping;
+import pe.com.tfc.utils.ResponseType;
+import admin.contab.beans.BeanParametrosAuditoria;
+
+/**
+ * CR_T_SeguimientoCarteraDetalleCarga_Servlet
+ * 
+ * @autor rsanchez
+ * @since [S17-022] 27.03.2017
+ */
+
+public class CR_T_SeguimientoCarteraDetalleCarga_Servlet extends GE_BaseMethodInvocation_Servlet {
+
+    private static final long serialVersionUID = 6821785426438159287L;
+    private static final String PATH_DETALLE_CARGA = "/FINANCIERO/workflow/seguimientoCartera/carga/";
+    private static final String URL_MOSTRAR_CONTENEDOR = PATH_DETALLE_CARGA + "CR-T-SeguimientoCarteraDetalleCarga_CHILD.jsp";
+    private static final String URL_TABLA_DETALLE = Constante.RUTA_WORKFLOW + "seguimientoCartera/carga/CR-T-SeguimientoCarteraDetalleCarga_TABLA.jsp";
+    
+    private CRTipoAlertaFacadeInterfaceLocal crTipoAlertaFacadeInterfaceLocal;
+
+    private CRSeguimientoCarteraFacadeInterfaceLocal crSeguimientoCarteraFacadeInterfaceLocal;
+    
+    protected void initEJBs() throws Exception {
+        crTipoAlertaFacadeInterfaceLocal = lookup(CRTipoAlertaFacade.LocalJNDIName);
+        crSeguimientoCarteraFacadeInterfaceLocal = lookup(CRSeguimientoCarteraFacade.LocalJNDIName);
+    }
+
+    @RequestMapping(value = "MOSTRAR_CONTENEDOR", responseType = ResponseType.HTML, url = URL_MOSTRAR_CONTENEDOR)
+    protected void mostrarContenedor(ServletParams servletParams) throws Exception {
+        BeanParametrosAuditoria beanParametrosAuditoria = getBeanParametrosAuditoria(servletParams);
+
+        List<BeanCRTipoAlerta> listBeanCRTipoAlerta = crTipoAlertaFacadeInterfaceLocal.lstTipoAlerta(beanParametrosAuditoria);
+
+        setRequestAttribute(servletParams, "listBeanCRTipoAlerta", listBeanCRTipoAlerta);
+        forward(servletParams);
+    }
+    
+    @Override
+    protected void execute(ServletParams servletParams) throws Exception {
+    }
+    
+    @RequestMapping(value = "CARGAR_DETALLE", responseType = ResponseType.HTML, url = URL_TABLA_DETALLE)
+    protected void cargarDetalle(ServletParams servletParams) throws Exception {
+
+        String fechaAsignacionInicial = getParameter(servletParams, "fechaAsignacionInicial");
+        String fechaAsignacionFinal = getParameter(servletParams, "fechaAsignacionFinal");
+        String fechaAtencionInicial = getParameter(servletParams, "fechaAtencionInicial");
+        String fechaAtencionFinal = getParameter(servletParams, "fechaAtencionFinal");
+        String codigoTipoAlerta = getParameter(servletParams, "codigoTipoAlerta");
+        String codigoAgencia = getParameter(servletParams, "codigoAgencia");
+        String codigoAsesor = getParameter(servletParams, "codigoAsesor");
+        String codigoCliente = getParameter(servletParams, "codigoCliente");
+
+        String fin = "0";
+
+        String strCanPag = getSessionAttribute(servletParams, "paginacion", String.class, "50");
+        String strPagina = getParameter(servletParams, "hid_pagina", "1");
+
+        int cantReg = _toInteger(strCanPag);
+        int intPagina = _toInteger(strPagina);
+        // Posiciones inicial y final
+        int pos_ini = (intPagina - 1) * cantReg;
+        int pos_fin = intPagina * cantReg;
+        Long totalRegistros = new Long(0);
+
+        BeanParametrosAuditoria beanParametrosAuditoria = getBeanParametrosAuditoria(servletParams);
+
+        GenericBean genericBean = new GenericBean();
+        genericBean.addProperty("fechaAsignacionInicial", fechaAsignacionInicial);
+        genericBean.addProperty("fechaAsignacionFinal", fechaAsignacionFinal);
+        genericBean.addProperty("fechaAtencionInicial", fechaAtencionInicial);
+        genericBean.addProperty("fechaAtencionFinal", fechaAtencionFinal);
+        genericBean.addProperty("codigoTipoAlerta", codigoTipoAlerta);
+        genericBean.addProperty("codigoAgencia", codigoAgencia);
+        genericBean.addProperty("codigoAsesor", codigoAsesor);
+        genericBean.addProperty("codigoCliente", codigoCliente);
+        genericBean.addProperty("pagina", intPagina);
+
+        Map<String, Object> mapRespuesta = crSeguimientoCarteraFacadeInterfaceLocal.buscarSeguimientoCartera(genericBean, beanParametrosAuditoria);
+
+        List<BeanCRSeguimientoCartera> lstBeanCRSeguimientoCartera = (List<BeanCRSeguimientoCartera>) mapRespuesta.get("lstBeanCRSeguimientoCartera");
+        totalRegistros = (Long) mapRespuesta.get("cantReg");
+        String myData = "";
+        if (!_isEmpty(lstBeanCRSeguimientoCartera)) {
+            myData = getMyData(lstBeanCRSeguimientoCartera,
+                               "agenciaAsignada",
+                               "usuarioAsignado",
+                               "nombreCliente",
+                               "descripcionTipoAlerta",
+                               "montoAlerta",
+                               "fechaAtencion");
+        }
+
+        if (pos_fin + 1 > totalRegistros) {
+            fin = "1";
+            pos_fin = totalRegistros.intValue();
+        }
+
+        setRequestAttribute(servletParams, "hid_paginaActual", strPagina);
+        setRequestAttribute(servletParams, "myData", myData);
+        setRequestAttribute(servletParams, "inicio", _toStr(pos_ini));
+        setRequestAttribute(servletParams, "fin", _toStr(pos_fin));
+        setRequestAttribute(servletParams, "indFin", fin);
+        setRequestAttribute(servletParams, "total", _toStr(totalRegistros));
+
+        forward(servletParams);
+    }
+}
diff --git a/DELFINWEBNEW/src/general/busquedas/Busqueda_Usuarios_Servlet.java b/DELFINWEBNEW/src/general/busquedas/Busqueda_Usuarios_Servlet.java
index 36d32b4..5713f30 100644
--- a/DELFINWEBNEW/src/general/busquedas/Busqueda_Usuarios_Servlet.java
+++ b/DELFINWEBNEW/src/general/busquedas/Busqueda_Usuarios_Servlet.java
@@ -59,6 +59,8 @@
 		if(isEmpty(indicadorTipo)){
 		    indicadorTipo =Constante.INDICADOR_SI;
 		}
+		//[Req.S17-022] kdelacruz 06.04.2017 Implementaci�n Workflow Seguimiento Cartera
+		String codAgencia = request.getParameter("codAgencia");
 
 		//Indica si es el final
 		String fin = "0";
@@ -92,50 +94,69 @@
 		    
 		    if(strValor.equals(""))
 		        strCriterio = "DESCRIPCION";
-		    
-		    if(strCriterio.toUpperCase().equals("CODIGO")){
-	            try{
-	            	try{
-	            		lstUsuario = (List)cbUsuarioFacadeLocal.findByCodigoUsuarioEstadoPromotorEjecutivoAnalista(strValor.toUpperCase(),
-                                "S",
-                                strIndicadorPromotor,
-                                strIndicadorEjecutivo,
-                                strIndicadorAnalista,
-                                strCodEmp,
-                                strPagina,
-                                String.valueOf(Paginacion.NUM_REG));
-	            	}catch(Exception e){
-	            		
-	            	}
-	                
-	                try{
-	                	allRecords = cbUsuarioFacadeLocal.countFindByCodigoUsuarioEstadoPromotorEjecutivoAnalista(strValor.toUpperCase(), "S", strIndicadorPromotor, strIndicadorEjecutivo, strIndicadorAnalista, strCodEmp);
-	                }catch(Exception e){
-	                	
-	                }
-	                
-	                
-					if (pos_fin > allRecords) pos_fin = allRecords;
-	                
-	            }catch(Exception e){
-	                error="1";
-	            }
-		    }else{
-		    	try{
-				    lstUsuario = (List)cbUsuarioFacadeLocal.findByNombreUsuarioEstadoPromotorEjecutivoAnalista("%"+strValor.toUpperCase()+"%",
-				                                                                               "S",strIndicadorPromotor,
-				                                                                               strIndicadorEjecutivo,
-				                                                                               strIndicadorAnalista,
-				                                                                               strCodEmp, 
-				                                                                               strPagina, 
-				                                                                               String.valueOf(Paginacion.NUM_REG));
-				    allRecords = cbUsuarioFacadeLocal.countFindByNombreUsuarioEstadoPromotorEjecutivoAnalista("%"+strValor.toUpperCase()+"%", "S", strIndicadorPromotor, strIndicadorEjecutivo, strIndicadorAnalista, strCodEmp);
-					if (pos_fin > allRecords) pos_fin = allRecords;
+		    // Inicio [Req.S17-022] kdelacruz 06.04.2017
+            if (!isEmpty(codAgencia)) {
+                try {
+                    lstUsuario = (List) cbUsuarioFacadeLocal.lstUsuariosfindByCodigoAgenciaCodigoEmpresaEstadoRegistro(codAgencia,
+                                                                                                                       strValor.toUpperCase(),
+                                                                                                                       strCodEmp);
 
-				}catch(Exception e){
-					error="1";
-				}
-		    }
+                    allRecords = cbUsuarioFacadeLocal.countFindByCodigoAgenciaCodigoEmpresaEstadoRegistro(codAgencia,
+                                                                                                          strValor.toUpperCase(),
+                                                                                                          strCodEmp);
+
+                    if (pos_fin > allRecords)
+                        pos_fin = allRecords;
+
+                } catch (Exception e) {
+                    error = "1";
+                }
+                // Fin [Req.S17-022]
+            }else{
+    		    if(strCriterio.toUpperCase().equals("CODIGO")){
+    	            try{
+    	            	try{
+    	            		lstUsuario = (List)cbUsuarioFacadeLocal.findByCodigoUsuarioEstadoPromotorEjecutivoAnalista(strValor.toUpperCase(),
+                                    "S",
+                                    strIndicadorPromotor,
+                                    strIndicadorEjecutivo,
+                                    strIndicadorAnalista,
+                                    strCodEmp,
+                                    strPagina,
+                                    String.valueOf(Paginacion.NUM_REG));
+    	            	}catch(Exception e){
+    	            		
+    	            	}
+    	                
+    	                try{
+    	                	allRecords = cbUsuarioFacadeLocal.countFindByCodigoUsuarioEstadoPromotorEjecutivoAnalista(strValor.toUpperCase(), "S", strIndicadorPromotor, strIndicadorEjecutivo, strIndicadorAnalista, strCodEmp);
+    	                }catch(Exception e){
+    	                	
+    	                }
+    	                
+    	                
+    					if (pos_fin > allRecords) pos_fin = allRecords;
+    	                
+    	            }catch(Exception e){
+    	                error="1";
+    	            }
+    		    }else{
+    		    	try{
+    				    lstUsuario = (List)cbUsuarioFacadeLocal.findByNombreUsuarioEstadoPromotorEjecutivoAnalista("%"+strValor.toUpperCase()+"%",
+    				                                                                               "S",strIndicadorPromotor,
+    				                                                                               strIndicadorEjecutivo,
+    				                                                                               strIndicadorAnalista,
+    				                                                                               strCodEmp, 
+    				                                                                               strPagina, 
+    				                                                                               String.valueOf(Paginacion.NUM_REG));
+    				    allRecords = cbUsuarioFacadeLocal.countFindByNombreUsuarioEstadoPromotorEjecutivoAnalista("%"+strValor.toUpperCase()+"%", "S", strIndicadorPromotor, strIndicadorEjecutivo, strIndicadorAnalista, strCodEmp);
+    					if (pos_fin > allRecords) pos_fin = allRecords;
+    
+    				}catch(Exception e){
+    					error="1";
+    				}
+    		    }
+            }
 
 			myData = new  StringBuffer(); 
 		
diff --git a/DELFINWEBNEW/src/general/servlets/GE_Base_Servlet.java b/DELFINWEBNEW/src/general/servlets/GE_Base_Servlet.java
index c1a3da0..abb543d 100644
--- a/DELFINWEBNEW/src/general/servlets/GE_Base_Servlet.java
+++ b/DELFINWEBNEW/src/general/servlets/GE_Base_Servlet.java
@@ -11,6 +11,7 @@
 import java.lang.reflect.Field;
 import java.lang.reflect.Method;
 import java.sql.Connection;
+import java.util.ArrayList;
 import java.util.Date;
 import java.util.Enumeration;
 import java.util.HashMap;
@@ -1263,6 +1264,57 @@
     }
 
     /**
+     * Convierte lista de beans en lista de beancombo
+     * 
+     * @author esalazar
+     * @since [S17-022] 03.04.2017
+     * @param listBeans
+     * @param codigo
+     * @param descripcion
+     * @return
+     * @throws Exception
+     */
+    public List<BeanCombo> parseListBeanCombo(List<?> listBeans, String codigo, String descripcion) throws Exception {
+        List<BeanCombo> listBeanCombo = new ArrayList<BeanCombo>(0);
+        BeanCombo beanCombo;
+
+        Object valor = null;
+        Field field1, field2;
+
+        try {
+            if (_isEmpty(listBeans)) {
+                return listBeanCombo;
+            }
+
+            Map<String, Field> mapFields = _toMapFields(listBeans.get(0).getClass());
+
+            field1 = mapFields.get(codigo);
+            field2 = mapFields.get(descripcion);
+
+            field1.setAccessible(true);
+            field2.setAccessible(true);
+            for (Object bean : listBeans) {
+
+                beanCombo = new BeanCombo();
+
+                valor = field1.get(bean);
+                beanCombo.setCodigo(_toBlankObject(valor));
+                valor = field2.get(bean);
+                beanCombo.setDescripcion(_toBlankObject(valor));
+                listBeanCombo.add(beanCombo);
+            }
+
+            field1.setAccessible(false);
+            field2.setAccessible(false);
+
+        } catch (Exception e) {
+            throw e;
+        }
+
+        return listBeanCombo;
+    }
+
+    /**
      * Generador de reportes
      * 
      * @autor jjurado
@@ -1363,7 +1415,7 @@
         setRequestAttribute(servletParams, "total", total);
         return listaPaginada;
     }
-    
+
     /**
      * Metodo que exporta jasper en la respuesta HTTP seg�n el tipo de Archivo deseado
      * 
@@ -1376,9 +1428,9 @@
      * @param tipoArchivo
      */
     protected void exportarJasper(ServletParams servletParams,
-                               String jasper,
-                               Map<String, Object> parameters,
-                               String tipoArchivo) throws Exception {
+                                  String jasper,
+                                  Map<String, Object> parameters,
+                                  String tipoArchivo) throws Exception {
         exportarJasper(servletParams, jasper, parameters, null, tipoArchivo);
     }
 
@@ -1411,12 +1463,12 @@
         Connection conn = jdbcFactory.getConnection();
         JasperReport jasperReport = (JasperReport) JRLoader.loadObject(pathReport);
         JasperPrint jasperPrint = null;
-        if(!_isEmpty(lstObjects)){
+        if (!_isEmpty(lstObjects)) {
             jasperPrint = JasperFillManager.fillReport(jasperReport, parameters, new JRBeanCollectionDataSource(lstObjects));
-        }else{
+        } else {
             jasperPrint = JasperFillManager.fillReport(jasperReport, parameters, conn);
         }
-        
+
         ServletOutputStream outputStream = servletParams.getResponse().getOutputStream();
         conn.close();
         JRExporter exporter;
diff --git a/DELFINWEBNEW/src/general/utils/tags/botonesDelfinWeb.properties b/DELFINWEBNEW/src/general/utils/tags/botonesDelfinWeb.properties
index 6a7ee94..dfe00e7 100644
--- a/DELFINWEBNEW/src/general/utils/tags/botonesDelfinWeb.properties
+++ b/DELFINWEBNEW/src/general/utils/tags/botonesDelfinWeb.properties
@@ -1426,4 +1426,21 @@
 BT_grabarResolucionTasaPreferencial.gif=Grabar@@G
 BT_datosOperacion.gif=Datos\nOperaci\u00F3n@@G
 BT_consultarResolucionTasaPreferencial.gif=Resoluci�n@@G
+BT_AsignarSolicitud.gif=Asignar\nSolicitud@@G
 #Fin [Req.S17-009]
+#Inicio [Req.S17-022] esalazar 30.03.2017
+BT_Masivo_P.gif=Masivo    @@P
+BT_Individual_P.gif=Individual@@P
+#Fin [Req.S17-022]
+#Inicio [Req.S17-022] kdelacruz 30.03.2017
+BT_GrabarSeguimiento.gif=Grabar@@G
+BT_AnularSeguimiento.gif=Anular@@G
+BT_EnviarSeguimiento.gif=Enviar@@G
+BT_AprobarSeguimiento.gif=Aprobar@@G
+BT_DevolverSeguimiento.gif=Devolver@@G
+#Fin [Req.S17-022]
+#Inicio [Req.S17-022] rsanchez 03.04.2017
+BT_AutorizarLotesSeguimiento.gif=Autorizar@@G
+BT_DetalleLotesSeguimiento.gif=Detalle@@G
+BT_CargarLotesSeguimiento.gif=Cargar@@G
+#Fin [Req.S17-022]
\ No newline at end of file
diff --git a/FINANCIERONEW/.classpath b/FINANCIERONEW/.classpath
index 6a9e136..21e7ae4 100644
--- a/FINANCIERONEW/.classpath
+++ b/FINANCIERONEW/.classpath
@@ -1,20 +1,30 @@
-<?xml version="1.0" encoding="UTF-8"?>
-<classpath>
-	<classpathentry kind="src" path="src"/>
-	<classpathentry exported="true" kind="con" path="org.eclipse.jdt.launching.JRE_CONTAINER"/>
-	<classpathentry exported="true" kind="con" path="melibrary.com.genuitec.eclipse.j2eedt.core.MYECLIPSE_JAVAEE_5_CONTAINER"/>
-	<classpathentry kind="con" path="melibrary.com.genuitec.eclipse.ws.xfire.MYECLIPSE_XFIRE_CORE"/>
-	<classpathentry kind="con" path="melibrary.com.genuitec.eclipse.ws.xfire.MYECLIPSE_XFIRE_JAXB2"/>
-	<classpathentry kind="con" path="melibrary.com.genuitec.eclipse.ws.xfire.MYECLIPSE_XFIRE_HTTP_CLIENT"/>
-	<classpathentry combineaccessrules="false" kind="src" path="/ADMINISTRATIVONEW"/>
-	<classpathentry exported="true" kind="con" path="melibrary.com.genuitec.eclipse.hibernate.MYECLIPSE_HIBERNATE_TOOLS"/>
-	<classpathentry exported="true" kind="con" path="melibrary.com.genuitec.eclipse.hibernate.MYECLIPSE_HIBERNATE3_2_CORE"/>
-	<classpathentry exported="true" kind="con" path="melibrary.com.genuitec.eclipse.hibernate.MYECLIPSE_HIBERNATE3_2_EXTRAS"/>
-	<classpathentry exported="true" kind="con" path="melibrary.com.genuitec.eclipse.hibernate.MYECLIPSE_HIBERNATE3_2_EM"/>
-	<classpathentry kind="lib" path="/DELFINWEBNEW/WebRoot/WEB-INF/lib/poi-3.0.1-FINAL-20070705.jar"/>
-	<classpathentry kind="lib" path="classes12.jar"/>
-	<classpathentry kind="lib" path="com.ibm.mqjms.jar"/>
-	<classpathentry kind="lib" path="jboss-annotations-ejb3.jar"/>
-	<classpathentry kind="lib" path="/DELFINWEBNEW/WebRoot/WEB-INF/lib/jasperreports-3.0.0.jar"/>
-	<classpathentry kind="output" path="classes"/>
-</classpath>
\ No newline at end of file
+<?xml version="1.0" encoding="UTF-8"?>
+<classpath>
+	<classpathentry kind="src" path="src"/>
+	<classpathentry exported="true" kind="con" path="melibrary.com.genuitec.eclipse.j2eedt.core.MYECLIPSE_JAVAEE_5_CONTAINER"/>
+	<classpathentry kind="con" path="melibrary.com.genuitec.eclipse.ws.xfire.MYECLIPSE_XFIRE_CORE"/>
+	<classpathentry kind="con" path="melibrary.com.genuitec.eclipse.ws.xfire.MYECLIPSE_XFIRE_JAXB2"/>
+	<classpathentry kind="con" path="melibrary.com.genuitec.eclipse.ws.xfire.MYECLIPSE_XFIRE_HTTP_CLIENT"/>
+	<classpathentry combineaccessrules="false" kind="src" path="/ADMINISTRATIVONEW"/>
+	<classpathentry exported="true" kind="con" path="melibrary.com.genuitec.eclipse.hibernate.MYECLIPSE_HIBERNATE_TOOLS"/>
+	<classpathentry exported="true" kind="con" path="melibrary.com.genuitec.eclipse.hibernate.MYECLIPSE_HIBERNATE3_2_CORE"/>
+	<classpathentry exported="true" kind="con" path="melibrary.com.genuitec.eclipse.hibernate.MYECLIPSE_HIBERNATE3_2_EXTRAS"/>
+	<classpathentry exported="true" kind="con" path="melibrary.com.genuitec.eclipse.hibernate.MYECLIPSE_HIBERNATE3_2_EM"/>
+	<classpathentry kind="lib" path="/DELFINWEBNEW/WebRoot/WEB-INF/lib/poi-3.0.1-FINAL-20070705.jar"/>
+	<classpathentry kind="lib" path="classes12.jar"/>
+	<classpathentry kind="lib" path="com.ibm.mqjms.jar"/>
+	<classpathentry kind="lib" path="jboss-annotations-ejb3.jar"/>
+	<classpathentry kind="lib" path="/DELFINWEBNEW/WebRoot/WEB-INF/lib/jasperreports-3.0.0.jar"/>
+	<classpathentry kind="con" path="org.eclipse.jdt.launching.JRE_CONTAINER/org.eclipse.jdt.internal.debug.ui.launcher.StandardVMType/jdk1.6.0_07">
+		<attributes>
+			<attribute name="owner.project.facets" value="java"/>
+		</attributes>
+	</classpathentry>
+	<classpathentry kind="con" path="org.eclipse.jst.server.core.container/org.jboss.ide.eclipse.as.core.server.runtime.runtimeTarget/JBoss 4.2 Runtime">
+		<attributes>
+			<attribute name="owner.project.facets" value="jst.ejb"/>
+		</attributes>
+	</classpathentry>
+	<classpathentry kind="con" path="org.eclipse.jst.j2ee.internal.module.container"/>
+	<classpathentry kind="output" path="classes"/>
+</classpath>
diff --git a/FINANCIERONEW/.project b/FINANCIERONEW/.project
index ad8cb28..2acfbb5 100644
--- a/FINANCIERONEW/.project
+++ b/FINANCIERONEW/.project
@@ -1,40 +1,48 @@
-<?xml version="1.0" encoding="UTF-8"?>
-<projectDescription>
-	<name>FINANCIERONEW</name>
-	<comment></comment>
-	<projects>
-	</projects>
-	<buildSpec>
-		<buildCommand>
-			<name>org.eclipse.jdt.core.javabuilder</name>
-			<arguments>
-			</arguments>
-		</buildCommand>
-		<buildCommand>
-			<name>com.genuitec.eclipse.j2eedt.core.DeploymentDescriptorValidator</name>
-			<arguments>
-			</arguments>
-		</buildCommand>
-		<buildCommand>
-			<name>org.eclipse.dali.core.persistenceBuilder</name>
-			<arguments>
-			</arguments>
-		</buildCommand>
-		<buildCommand>
-			<name>org.eclipse.wst.validation.validationbuilder</name>
-			<arguments>
-			</arguments>
-		</buildCommand>
-		<buildCommand>
-			<name>com.genuitec.eclipse.ast.deploy.core.DeploymentBuilder</name>
-			<arguments>
-			</arguments>
-		</buildCommand>
-	</buildSpec>
-	<natures>
-		<nature>com.genuitec.eclipse.ast.deploy.core.deploymentnature</nature>
-		<nature>com.genuitec.eclipse.j2eedt.core.ejbnature</nature>
-		<nature>org.eclipse.dali.core.persistenceNature</nature>
-		<nature>org.eclipse.jdt.core.javanature</nature>
-	</natures>
-</projectDescription>
+<?xml version="1.0" encoding="UTF-8"?>
+<projectDescription>
+	<name>FINANCIERONEW</name>
+	<comment></comment>
+	<projects>
+	</projects>
+	<buildSpec>
+		<buildCommand>
+			<name>org.eclipse.wst.common.project.facet.core.builder</name>
+			<arguments>
+			</arguments>
+		</buildCommand>
+		<buildCommand>
+			<name>org.eclipse.jdt.core.javabuilder</name>
+			<arguments>
+			</arguments>
+		</buildCommand>
+		<buildCommand>
+			<name>com.genuitec.eclipse.j2eedt.core.DeploymentDescriptorValidator</name>
+			<arguments>
+			</arguments>
+		</buildCommand>
+		<buildCommand>
+			<name>org.eclipse.dali.core.persistenceBuilder</name>
+			<arguments>
+			</arguments>
+		</buildCommand>
+		<buildCommand>
+			<name>org.eclipse.wst.validation.validationbuilder</name>
+			<arguments>
+			</arguments>
+		</buildCommand>
+		<buildCommand>
+			<name>com.genuitec.eclipse.ast.deploy.core.DeploymentBuilder</name>
+			<arguments>
+			</arguments>
+		</buildCommand>
+	</buildSpec>
+	<natures>
+		<nature>org.eclipse.jem.workbench.JavaEMFNature</nature>
+		<nature>org.eclipse.wst.common.modulecore.ModuleCoreNature</nature>
+		<nature>com.genuitec.eclipse.ast.deploy.core.deploymentnature</nature>
+		<nature>com.genuitec.eclipse.j2eedt.core.ejbnature</nature>
+		<nature>org.eclipse.dali.core.persistenceNature</nature>
+		<nature>org.eclipse.jdt.core.javanature</nature>
+		<nature>org.eclipse.wst.common.project.facet.core.nature</nature>
+	</natures>
+</projectDescription>
diff --git a/FINANCIERONEW/src/financ/clientes/session/CLPersonasSession.java b/FINANCIERONEW/src/financ/clientes/session/CLPersonasSession.java
index 191b17d..af7147a 100644
--- a/FINANCIERONEW/src/financ/clientes/session/CLPersonasSession.java
+++ b/FINANCIERONEW/src/financ/clientes/session/CLPersonasSession.java
@@ -3494,7 +3494,8 @@
             List<CLPersonas> lstPersonas = entityManager.createQuery(queryString).setParameter("numeroDocumento",
                                                                                                numeroDocumento).setParameter("tipoDocumento",
                                                                                                                              tipoDocumento).getResultList();
-            if (lstPersonas != null) {
+            //[Req.S17-022] kdelacruz 06.04.2017
+            if (!StringUtil.isEmpty(lstPersonas)) {
                 clPersonas = (CLPersonas) lstPersonas.get(0);
 }
         } catch (RuntimeException re) {
diff --git a/FINANCIERONEW/src/financ/creditos/facade/CRCuentaCreditoFacade.java b/FINANCIERONEW/src/financ/creditos/facade/CRCuentaCreditoFacade.java
index c0cb3d2..aa47b6a 100644
--- a/FINANCIERONEW/src/financ/creditos/facade/CRCuentaCreditoFacade.java
+++ b/FINANCIERONEW/src/financ/creditos/facade/CRCuentaCreditoFacade.java
@@ -1,5 +1,6 @@
 package financ.creditos.facade;
 
+import static financ.util.Constante.CODIGO_CAPITALIZACION_INTERESES_PRESTAMO;
 import static financ.util.Constante.COD_SUBTIPO_DP_INS;
 import static financ.util.Constante.COD_SUBTIPO_DP_NO_INS;
 import static financ.util.Constante.DESCRIPCION_SEGURO_POLIZA;
@@ -8,10 +9,8 @@
 import static financ.util.Constante.EST_GENERAL_REG_S;
 import static financ.util.Constante.TIPO_GARANTIA_REAL_HIPOTECARIA;
 import static financ.util.Constante.TIPO_GARANTIA_REAL_MOBILIARIA;
-import static financ.util.Constante.CODIGO_CAPITALIZACION_INTERESES_PRESTAMO;
 
 import java.math.BigDecimal;
-import java.rmi.RemoteException;
 import java.sql.Timestamp;
 import java.text.SimpleDateFormat;
 import java.util.ArrayList;
@@ -11050,4 +11049,24 @@
         }
         return LstbeanCRCuentaCredito;
     }
-}      
\ No newline at end of file
+   
+   // Inicio [Req.S17-022] kdelacruz 06.04.2017
+    public String obtenerAgenciaPorCliente(String codigoCliente, BeanParametrosAuditoria beanParametrosAuditoria) throws Exception {
+        String modulo = "CRCuentaCreditoFacade.obtenerAgenciaPorCliente()";
+        String usuario = beanParametrosAuditoria.getUsuarioInsercion();
+        List<CRCuentaCredito> listCRCuentaCredito = new ArrayList<CRCuentaCredito>(0);
+        String codigoAgencia = CADENA_VACIA;
+        try {
+            listCRCuentaCredito = crCuentaCreditoInterfaceLocal.findByCodigoClienteEstadoCredito(codigoCliente,
+                                                                                                 "VG",
+                                                                                                 "1");
+            for (CRCuentaCredito crCuentaCredito : listCRCuentaCredito) {
+                codigoAgencia = crCuentaCredito.getCodigoAgencia();
+            }
+        } catch (Exception e) {
+            throw handlerError(e, usuario, modulo);
+        }
+        return codigoAgencia;
+    }
+    // Fin [Req.S17-022]
+}
\ No newline at end of file
diff --git a/FINANCIERONEW/src/financ/creditos/local/CRCuentaCreditoFacadeInterfaceLocal.java b/FINANCIERONEW/src/financ/creditos/local/CRCuentaCreditoFacadeInterfaceLocal.java
index b845579..93d881b 100644
--- a/FINANCIERONEW/src/financ/creditos/local/CRCuentaCreditoFacadeInterfaceLocal.java
+++ b/FINANCIERONEW/src/financ/creditos/local/CRCuentaCreditoFacadeInterfaceLocal.java
@@ -331,5 +331,15 @@
     // [Req.S15-030] rflores 18.06.2015
     public String validarCuentaCancelada(String numeroCredito)throws Exception;
     
+    /**
+     * @author kdelacruz
+     * @since [Req.S17-022] 06.04.2017
+     * @param codigoCliente
+     * @param beanParametrosAuditoria
+     * @return String
+     * @throws Exception
+     */
+    public String obtenerAgenciaPorCliente(String codigoCliente, BeanParametrosAuditoria beanParametrosAuditoria) throws Exception;
+    
     
 }
\ No newline at end of file
diff --git a/FINANCIERONEW/src/financ/seguimientoCartera/beans/BeanCRActividadSeguimientoCartera.java b/FINANCIERONEW/src/financ/seguimientoCartera/beans/BeanCRActividadSeguimientoCartera.java
new file mode 100644
index 0000000..4f2a282
--- /dev/null
+++ b/FINANCIERONEW/src/financ/seguimientoCartera/beans/BeanCRActividadSeguimientoCartera.java
@@ -0,0 +1,88 @@
+package financ.seguimientoCartera.beans;
+
+import java.io.Serializable;
+
+/**
+ * BeanCRActividadesSeguimientoCartera
+ * 
+ * @autor kdelacruz
+ * @since [S17-022] 03.04.2017
+ */
+
+public class BeanCRActividadSeguimientoCartera implements Serializable {
+
+    private static final long serialVersionUID = 8607398489409445345L;
+    private String correlativoActividad;
+    private String correlativoSeguimiento;
+    private String tipoActividad;
+    private String fechaActividad;
+    private String contactoActividad;
+    private String comentarioActividad;
+    private String indicadorEnvio;
+    private String codigoIndicadorEnvio;
+
+    public String getCorrelativoActividad() {
+        return correlativoActividad;
+    }
+
+    public void setCorrelativoActividad(String correlativoActividad) {
+        this.correlativoActividad = correlativoActividad;
+    }
+
+    public String getCorrelativoSeguimiento() {
+        return correlativoSeguimiento;
+    }
+
+    public void setCorrelativoSeguimiento(String correlativoSeguimiento) {
+        this.correlativoSeguimiento = correlativoSeguimiento;
+    }
+
+    public String getTipoActividad() {
+        return tipoActividad;
+    }
+
+    public void setTipoActividad(String tipoActividad) {
+        this.tipoActividad = tipoActividad;
+    }
+
+    public String getFechaActividad() {
+        return fechaActividad;
+    }
+
+    public void setFechaActividad(String fechaActividad) {
+        this.fechaActividad = fechaActividad;
+    }
+
+    public String getContactoActividad() {
+        return contactoActividad;
+    }
+
+    public void setContactoActividad(String contactoActividad) {
+        this.contactoActividad = contactoActividad;
+    }
+
+    public String getComentarioActividad() {
+        return comentarioActividad;
+    }
+
+    public void setComentarioActividad(String comentarioActividad) {
+        this.comentarioActividad = comentarioActividad;
+    }
+
+    public String getIndicadorEnvio() {
+        return indicadorEnvio;
+    }
+
+    public void setIndicadorEnvio(String indicadorEnvio) {
+        this.indicadorEnvio = indicadorEnvio;
+    }
+
+    public String getCodigoIndicadorEnvio() {
+        return codigoIndicadorEnvio;
+    }
+
+    public void setCodigoIndicadorEnvio(String codigoIndicadorEnvio) {
+        this.codigoIndicadorEnvio = codigoIndicadorEnvio;
+    }
+
+}
diff --git a/FINANCIERONEW/src/financ/seguimientoCartera/beans/BeanCRCargaAlerta.java b/FINANCIERONEW/src/financ/seguimientoCartera/beans/BeanCRCargaAlerta.java
new file mode 100644
index 0000000..1c91c45
--- /dev/null
+++ b/FINANCIERONEW/src/financ/seguimientoCartera/beans/BeanCRCargaAlerta.java
@@ -0,0 +1,150 @@
+package financ.seguimientoCartera.beans;
+
+import java.io.Serializable;
+import java.util.Date;
+
+import pe.com.tfc.utils.imports.annotations.ImporterProperty;
+
+/**
+ * BeanCRCargaAlerta
+ * 
+ * @autor rsanchez
+ * @since [S17-022] 27.03.2017
+ */
+
+public class BeanCRCargaAlerta implements Serializable {
+
+    private static final long serialVersionUID = 702191994620558487L;
+
+    @ImporterProperty(position = 1, optional = false, description = "Tipo de Documento")
+    private String tipoDocumento;
+    @ImporterProperty(position = 2, optional = false, description = "N�mero de Documento")
+    private String numeroDocumento;
+    @ImporterProperty(position = 3, optional = false, description = "Tipo de Alerta")
+    private String tipoAlerta;
+    @ImporterProperty(position = 4, optional = false, precision = 12, scale = 2, description = "Monto Alerta")
+    private Double montoAlerta;
+    @ImporterProperty(position = 5, optional = false, description = "Usuario Asignado")
+    private String usuarioAsignado;
+    @ImporterProperty(position = 6, optional = false, description = "Fecha de Alerta")
+    private Date fechaAlerta;
+    @ImporterProperty(position = 7, optional = false, description = "Fecha de Atenci�n")
+    private Date fechaAtencion;
+    @ImporterProperty(position = 8, optional = true, precision = 12, scale = 2, description = "Monto Provisi�n")
+    private Double montoProvision;
+    @ImporterProperty(position = 9, optional = true, precision = 12, scale = 2, description = "Interes Devengado")
+    private Double interesDevengado;
+    @ImporterProperty(position = 10, optional = true, description = "Codigo Calificaciones SBS")
+    private String codigoCalificacionSBS;
+    @ImporterProperty(position = 11, optional = true, description = "Comentario")
+    private String comentario;
+
+    private String codigoCliente;
+
+    private String codigoAgencia;
+
+    public String getTipoDocumento() {
+        return tipoDocumento;
+    }
+
+    public void setTipoDocumento(String tipoDocumento) {
+        this.tipoDocumento = tipoDocumento;
+    }
+
+    public String getNumeroDocumento() {
+        return numeroDocumento;
+    }
+
+    public String getUsuarioAsignado() {
+        return usuarioAsignado;
+    }
+
+    public void setUsuarioAsignado(String usuarioAsignado) {
+        this.usuarioAsignado = usuarioAsignado;
+    }
+
+    public void setNumeroDocumento(String numeroDocumento) {
+        this.numeroDocumento = numeroDocumento;
+    }
+
+    public String getTipoAlerta() {
+        return tipoAlerta;
+    }
+
+    public void setTipoAlerta(String tipoAlerta) {
+        this.tipoAlerta = tipoAlerta;
+    }
+
+    public Double getMontoProvision() {
+        return montoProvision;
+    }
+
+    public void setMontoProvision(Double montoProvision) {
+        this.montoProvision = montoProvision;
+    }
+
+    public String getCodigoCliente() {
+        return codigoCliente;
+    }
+
+    public void setCodigoCliente(String codigoCliente) {
+        this.codigoCliente = codigoCliente;
+    }
+
+    public Double getMontoAlerta() {
+        return montoAlerta;
+    }
+
+    public void setMontoAlerta(Double montoAlerta) {
+        this.montoAlerta = montoAlerta;
+    }
+
+    public Date getFechaAtencion() {
+        return fechaAtencion;
+    }
+
+    public void setFechaAtencion(Date fechaAtencion) {
+        this.fechaAtencion = fechaAtencion;
+    }
+
+    public Date getFechaAlerta() {
+        return fechaAlerta;
+    }
+
+    public void setFechaAlerta(Date fechaAlerta) {
+        this.fechaAlerta = fechaAlerta;
+    }
+
+    public Double getInteresDevengado() {
+        return interesDevengado;
+    }
+
+    public void setInteresDevengado(Double interesDevengado) {
+        this.interesDevengado = interesDevengado;
+    }
+
+    public String getCodigoAgencia() {
+        return codigoAgencia;
+    }
+
+    public void setCodigoAgencia(String codigoAgencia) {
+        this.codigoAgencia = codigoAgencia;
+    }
+
+    public String getCodigoCalificacionSBS() {
+        return codigoCalificacionSBS;
+    }
+
+    public void setCodigoCalificacionSBS(String codigoCalificacionSBS) {
+        this.codigoCalificacionSBS = codigoCalificacionSBS;
+    }
+
+    public String getComentario() {
+        return comentario;
+    }
+
+    public void setComentario(String comentario) {
+        this.comentario = comentario;
+    }
+
+}
diff --git a/FINANCIERONEW/src/financ/seguimientoCartera/beans/BeanCRDocumentosPorActividad.java b/FINANCIERONEW/src/financ/seguimientoCartera/beans/BeanCRDocumentosPorActividad.java
new file mode 100644
index 0000000..2557c09
--- /dev/null
+++ b/FINANCIERONEW/src/financ/seguimientoCartera/beans/BeanCRDocumentosPorActividad.java
@@ -0,0 +1,66 @@
+package financ.seguimientoCartera.beans;
+
+import java.io.Serializable;
+
+/**
+ * BeanCRDocumentosPorActividad
+ * 
+ * @autor kdelacruz
+ * @since [S17-022] 04.04.2017
+ */
+
+public class BeanCRDocumentosPorActividad implements Serializable {
+
+    /**
+     * 
+     */
+    private static final long serialVersionUID = 7988596538090197057L;
+    /**/
+
+    private String correlativoDocumentoXActividad;
+    private String idActividad;
+    private String idFile;
+    private String tipoDocumento;
+    private String comentarioDocumento;
+
+    public String getCorrelativoDocumentoXActividad() {
+        return correlativoDocumentoXActividad;
+    }
+
+    public void setCorrelativoDocumentoXActividad(String correlativoDocumentoXActividad) {
+        this.correlativoDocumentoXActividad = correlativoDocumentoXActividad;
+    }
+
+    public String getIdActividad() {
+        return idActividad;
+    }
+
+    public void setIdActividad(String idActividad) {
+        this.idActividad = idActividad;
+    }
+
+    public String getIdFile() {
+        return idFile;
+    }
+
+    public void setIdFile(String idFile) {
+        this.idFile = idFile;
+    }
+
+    public String getTipoDocumento() {
+        return tipoDocumento;
+    }
+
+    public void setTipoDocumento(String tipoDocumento) {
+        this.tipoDocumento = tipoDocumento;
+    }
+
+    public String getComentarioDocumento() {
+        return comentarioDocumento;
+    }
+
+    public void setComentarioDocumento(String comentarioDocumento) {
+        this.comentarioDocumento = comentarioDocumento;
+    }
+
+}
diff --git a/FINANCIERONEW/src/financ/seguimientoCartera/beans/BeanCRMaestroSeguimiento.java b/FINANCIERONEW/src/financ/seguimientoCartera/beans/BeanCRMaestroSeguimiento.java
new file mode 100644
index 0000000..86f1523
--- /dev/null
+++ b/FINANCIERONEW/src/financ/seguimientoCartera/beans/BeanCRMaestroSeguimiento.java
@@ -0,0 +1,100 @@
+package financ.seguimientoCartera.beans;
+
+import java.io.Serializable;
+import java.util.Date;
+
+public class BeanCRMaestroSeguimiento implements Serializable {
+
+    private static final long serialVersionUID = -5926758260468230536L;
+    private String idLote;
+    private Date fechaProceso;
+    private String horaProceso;
+    private Integer numeroRegistros;
+    private String codigoEstado;
+    private String descripcionEstado;
+    private String usuarioEstado;
+    private String nombreUsuarioEstado;
+    private String usuarioCarga;
+    private String nombreUsuarioCarga;
+
+    public String getIdLote() {
+        return idLote;
+    }
+
+    public void setIdLote(String idLote) {
+        this.idLote = idLote;
+    }
+
+    public Date getFechaProceso() {
+        return fechaProceso;
+    }
+
+    public void setFechaProceso(Date fechaProceso) {
+        this.fechaProceso = fechaProceso;
+    }
+
+    public Integer getNumeroRegistros() {
+        return numeroRegistros;
+    }
+
+    public void setNumeroRegistros(Integer numeroRegistros) {
+        this.numeroRegistros = numeroRegistros;
+    }
+
+    public String getCodigoEstado() {
+        return codigoEstado;
+    }
+
+    public void setCodigoEstado(String codigoEstado) {
+        this.codigoEstado = codigoEstado;
+    }
+
+    public String getUsuarioEstado() {
+        return usuarioEstado;
+    }
+
+    public void setUsuarioEstado(String usuarioEstado) {
+        this.usuarioEstado = usuarioEstado;
+    }
+
+    public String getDescripcionEstado() {
+        return descripcionEstado;
+    }
+
+    public void setDescripcionEstado(String descripcionEstado) {
+        this.descripcionEstado = descripcionEstado;
+    }
+
+    public String getNombreUsuarioEstado() {
+        return nombreUsuarioEstado;
+    }
+
+    public void setNombreUsuarioEstado(String nombreUsuarioEstado) {
+        this.nombreUsuarioEstado = nombreUsuarioEstado;
+    }
+
+    public String getUsuarioCarga() {
+        return usuarioCarga;
+    }
+
+    public void setUsuarioCarga(String usuarioCarga) {
+        this.usuarioCarga = usuarioCarga;
+    }
+
+    public String getNombreUsuarioCarga() {
+        return nombreUsuarioCarga;
+    }
+
+    public void setNombreUsuarioCarga(String nombreUsuarioCarga) {
+        this.nombreUsuarioCarga = nombreUsuarioCarga;
+    }
+
+    public String getHoraProceso() {
+        return horaProceso;
+    }
+
+    public void setHoraProceso(String horaProceso) {
+        this.horaProceso = horaProceso;
+    }
+
+}
diff --git a/FINANCIERONEW/src/financ/seguimientoCartera/beans/BeanCRMotivoSeguimientoCartera.java b/FINANCIERONEW/src/financ/seguimientoCartera/beans/BeanCRMotivoSeguimientoCartera.java
new file mode 100644
index 0000000..680c05d
--- /dev/null
+++ b/FINANCIERONEW/src/financ/seguimientoCartera/beans/BeanCRMotivoSeguimientoCartera.java
@@ -0,0 +1,52 @@
+package financ.seguimientoCartera.beans;
+
+import java.io.Serializable;
+
+/**
+ * BeanCRMotivoSeguimientoCartera
+ * 
+ * @autor kdelacruz
+ * @since [S17-022] 05.04.2017
+ */
+
+public class BeanCRMotivoSeguimientoCartera implements Serializable {
+
+    private static final long serialVersionUID = 8676073452342382912L;
+    private String idMotivoSeguimiento;
+    private String descripcionMotivo;
+    private String tipoRespuesta;
+    private String indicadorFechaMotivo;
+
+    public String getIdMotivoSeguimiento() {
+        return idMotivoSeguimiento;
+    }
+
+    public void setIdMotivoSeguimiento(String idMotivoSeguimiento) {
+        this.idMotivoSeguimiento = idMotivoSeguimiento;
+    }
+
+    public String getDescripcionMotivo() {
+        return descripcionMotivo;
+    }
+
+    public void setDescripcionMotivo(String descripcionMotivo) {
+        this.descripcionMotivo = descripcionMotivo;
+    }
+
+    public String getTipoRespuesta() {
+        return tipoRespuesta;
+    }
+
+    public void setTipoRespuesta(String tipoRespuesta) {
+        this.tipoRespuesta = tipoRespuesta;
+    }
+
+    public String getIndicadorFechaMotivo() {
+        return indicadorFechaMotivo;
+    }
+
+    public void setIndicadorFechaMotivo(String indicadorFechaMotivo) {
+        this.indicadorFechaMotivo = indicadorFechaMotivo;
+    }
+
+}
diff --git a/FINANCIERONEW/src/financ/seguimientoCartera/beans/BeanCRMovimientoPorSeguimiento.java b/FINANCIERONEW/src/financ/seguimientoCartera/beans/BeanCRMovimientoPorSeguimiento.java
new file mode 100644
index 0000000..df4e077
--- /dev/null
+++ b/FINANCIERONEW/src/financ/seguimientoCartera/beans/BeanCRMovimientoPorSeguimiento.java
@@ -0,0 +1,66 @@
+package financ.seguimientoCartera.beans;
+
+import java.io.Serializable;
+
+/**
+ * BeanCRMovimientoPorSeguimiento
+ * 
+ * @autor kdelacruz
+ * @since [S17-022] 05.04.2017
+ */
+
+public class BeanCRMovimientoPorSeguimiento implements Serializable {
+
+    /**/
+
+    /**
+     * 
+     */
+    private static final long serialVersionUID = -5350991549139412097L;
+    private String idSeguimientoMovimiento;
+    private String idTipoRespuesta;
+    private String idTipoMotivo;
+    private String idMovimiento;
+    private String idSeguimientoCartera;
+
+    public String getIdSeguimientoMovimiento() {
+        return idSeguimientoMovimiento;
+    }
+
+    public void setIdSeguimientoMovimiento(String idSeguimientoMovimiento) {
+        this.idSeguimientoMovimiento = idSeguimientoMovimiento;
+    }
+
+    public String getIdTipoRespuesta() {
+        return idTipoRespuesta;
+    }
+
+    public void setIdTipoRespuesta(String idTipoRespuesta) {
+        this.idTipoRespuesta = idTipoRespuesta;
+    }
+
+    public String getIdTipoMotivo() {
+        return idTipoMotivo;
+    }
+
+    public void setIdTipoMotivo(String idTipoMotivo) {
+        this.idTipoMotivo = idTipoMotivo;
+    }
+
+    public String getIdMovimiento() {
+        return idMovimiento;
+    }
+
+    public void setIdMovimiento(String idMovimiento) {
+        this.idMovimiento = idMovimiento;
+    }
+
+    public String getIdSeguimientoCartera() {
+        return idSeguimientoCartera;
+    }
+
+    public void setIdSeguimientoCartera(String idSeguimientoCartera) {
+        this.idSeguimientoCartera = idSeguimientoCartera;
+    }
+
+}
diff --git a/FINANCIERONEW/src/financ/seguimientoCartera/beans/BeanCRSeguimientoCartera.java b/FINANCIERONEW/src/financ/seguimientoCartera/beans/BeanCRSeguimientoCartera.java
new file mode 100644
index 0000000..fa1ba27
--- /dev/null
+++ b/FINANCIERONEW/src/financ/seguimientoCartera/beans/BeanCRSeguimientoCartera.java
@@ -0,0 +1,203 @@
+package financ.seguimientoCartera.beans;
+
+/**
+ * BeanCRSeguimientoCartera
+ * 
+ * @autor kdelacruz
+ * @since [S17-022] 05.04.2017
+ */
+public class BeanCRSeguimientoCartera {
+
+    private static final long serialVersionUID = 7995396353536509648L;
+
+    private String correlativoSeguimiento;
+    private String idMaestra;
+    private String idTipoSeguimiento;
+    private String idLote;
+    private String codigoAgencia;
+    private String descripcionAgencia;
+    private String fechaAsignada;
+    private String usuarioAsignado;
+    private String nombreUsuarioAsignado;
+    private String codigoCliente;
+    private String nombreCliente;
+    private String fechaAlerta;
+    private Double montoAlerta;
+    private String codigoTipoAlerta;
+    private String descripcionTipoAlerta;
+    private String fechaAtencion;
+    private Double montoProvision;
+    private Double interesDevengado;
+    private String codigoCalificacionSBS;
+    private String descripcionEstado;
+    private String comentario;
+
+    public String getCorrelativoSeguimiento() {
+        return correlativoSeguimiento;
+    }
+
+    public void setCorrelativoSeguimiento(String correlativoSeguimiento) {
+        this.correlativoSeguimiento = correlativoSeguimiento;
+    }
+
+    public String getIdMaestra() {
+        return idMaestra;
+    }
+
+    public void setIdMaestra(String idMaestra) {
+        this.idMaestra = idMaestra;
+    }
+
+    public String getIdTipoSeguimiento() {
+        return idTipoSeguimiento;
+    }
+
+    public void setIdTipoSeguimiento(String idTipoSeguimiento) {
+        this.idTipoSeguimiento = idTipoSeguimiento;
+    }
+
+    public String getIdLote() {
+        return idLote;
+    }
+
+    public void setIdLote(String idLote) {
+        this.idLote = idLote;
+    }
+
+    public String getCodigoAgencia() {
+        return codigoAgencia;
+    }
+
+    public void setCodigoAgencia(String codigoAgencia) {
+        this.codigoAgencia = codigoAgencia;
+    }
+
+    public String getDescripcionAgencia() {
+        return descripcionAgencia;
+    }
+
+    public void setDescripcionAgencia(String descripcionAgencia) {
+        this.descripcionAgencia = descripcionAgencia;
+    }
+
+    public String getUsuarioAsignado() {
+        return usuarioAsignado;
+    }
+
+    public void setUsuarioAsignado(String usuarioAsignado) {
+        this.usuarioAsignado = usuarioAsignado;
+    }
+
+    public String getNombreUsuarioAsignado() {
+        return nombreUsuarioAsignado;
+    }
+
+    public void setNombreUsuarioAsignado(String nombreUsuarioAsignado) {
+        this.nombreUsuarioAsignado = nombreUsuarioAsignado;
+    }
+
+    public String getCodigoCliente() {
+        return codigoCliente;
+    }
+
+    public void setCodigoCliente(String codigoCliente) {
+        this.codigoCliente = codigoCliente;
+    }
+
+    public Double getMontoAlerta() {
+        return montoAlerta;
+    }
+
+    public void setMontoAlerta(Double montoAlerta) {
+        this.montoAlerta = montoAlerta;
+    }
+
+    public String getCodigoTipoAlerta() {
+        return codigoTipoAlerta;
+    }
+
+    public void setCodigoTipoAlerta(String codigoTipoAlerta) {
+        this.codigoTipoAlerta = codigoTipoAlerta;
+    }
+
+    public String getDescripcionTipoAlerta() {
+        return descripcionTipoAlerta;
+    }
+
+    public void setDescripcionTipoAlerta(String descripcionTipoAlerta) {
+        this.descripcionTipoAlerta = descripcionTipoAlerta;
+    }
+
+    public Double getMontoProvision() {
+        return montoProvision;
+    }
+
+    public void setMontoProvision(Double montoProvision) {
+        this.montoProvision = montoProvision;
+    }
+
+    public Double getInteresDevengado() {
+        return interesDevengado;
+    }
+
+    public void setInteresDevengado(Double interesDevengado) {
+        this.interesDevengado = interesDevengado;
+    }
+
+    public String getCodigoCalificacionSBS() {
+        return codigoCalificacionSBS;
+    }
+
+    public void setCodigoCalificacionSBS(String codigoCalificacionSBS) {
+        this.codigoCalificacionSBS = codigoCalificacionSBS;
+    }
+
+    public String getNombreCliente() {
+        return nombreCliente;
+    }
+
+    public void setNombreCliente(String nombreCliente) {
+        this.nombreCliente = nombreCliente;
+    }
+
+    public String getDescripcionEstado() {
+        return descripcionEstado;
+    }
+
+    public void setDescripcionEstado(String descripcionEstado) {
+        this.descripcionEstado = descripcionEstado;
+    }
+
+    public String getFechaAsignada() {
+        return fechaAsignada;
+    }
+
+    public void setFechaAsignada(String fechaAsignada) {
+        this.fechaAsignada = fechaAsignada;
+    }
+
+    public String getFechaAlerta() {
+        return fechaAlerta;
+    }
+
+    public void setFechaAlerta(String fechaAlerta) {
+        this.fechaAlerta = fechaAlerta;
+    }
+
+    public String getFechaAtencion() {
+        return fechaAtencion;
+    }
+
+    public void setFechaAtencion(String fechaAtencion) {
+        this.fechaAtencion = fechaAtencion;
+    }
+
+    public String getComentario() {
+        return comentario;
+    }
+
+    public void setComentario(String comentario) {
+        this.comentario = comentario;
+    }
+
+}
diff --git a/FINANCIERONEW/src/financ/seguimientoCartera/beans/BeanCRTipoAlerta.java b/FINANCIERONEW/src/financ/seguimientoCartera/beans/BeanCRTipoAlerta.java
new file mode 100644
index 0000000..14438cf
--- /dev/null
+++ b/FINANCIERONEW/src/financ/seguimientoCartera/beans/BeanCRTipoAlerta.java
@@ -0,0 +1,43 @@
+package financ.seguimientoCartera.beans;
+
+import java.io.Serializable;
+
+/**
+ * BeanCRTipoAlerta
+ * 
+ * @autor kdelacruz
+ * @since [S17-022] 29.03.2017
+ */
+
+public class BeanCRTipoAlerta implements Serializable {
+
+    private static final long serialVersionUID = 678446068883331304L;
+    private String idTipoAlerta;
+    private String codigoEmpresa;
+    private String descripcionTipoAlerta;
+
+    public String getIdTipoAlerta() {
+        return idTipoAlerta;
+    }
+
+    public void setIdTipoAlerta(String idTipoAlerta) {
+        this.idTipoAlerta = idTipoAlerta;
+    }
+
+    public String getCodigoEmpresa() {
+        return codigoEmpresa;
+    }
+
+    public void setCodigoEmpresa(String codigoEmpresa) {
+        this.codigoEmpresa = codigoEmpresa;
+    }
+
+    public String getDescripcionTipoAlerta() {
+        return descripcionTipoAlerta;
+    }
+
+    public void setDescripcionTipoAlerta(String descripcionTipoAlerta) {
+        this.descripcionTipoAlerta = descripcionTipoAlerta;
+    }
+
+}
diff --git a/FINANCIERONEW/src/financ/seguimientoCartera/entity/CRActividadSeguimientoCartera.java b/FINANCIERONEW/src/financ/seguimientoCartera/entity/CRActividadSeguimientoCartera.java
new file mode 100644
index 0000000..68fbfd5
--- /dev/null
+++ b/FINANCIERONEW/src/financ/seguimientoCartera/entity/CRActividadSeguimientoCartera.java
@@ -0,0 +1,103 @@
+package financ.seguimientoCartera.entity;
+
+import java.util.Date;
+
+import javax.persistence.Column;
+import javax.persistence.Entity;
+import javax.persistence.FetchType;
+import javax.persistence.Id;
+import javax.persistence.JoinColumn;
+import javax.persistence.ManyToOne;
+import javax.persistence.Table;
+
+import pe.com.tfc.utils.Auditable;
+
+/**
+ * CRActividadesSeguimientoCartera
+ * 
+ * @author kdelacruz
+ * @since [S17-022] 03.04.2017
+ */
+
+@Entity
+@Table(name = "CRDSGAC", schema = "DFIN")
+public class CRActividadSeguimientoCartera extends Auditable {
+
+    /**
+     * 
+     */
+    private static final long serialVersionUID = -1813144403550770880L;
+    private String correlativoActividad;
+    private CRSeguimientoCartera crSeguimientoCartera;
+    private String tipoActividad;
+    private Date fechaActividad;
+    private String contactoActividad;
+    private String comentarioActividad;
+    private String indicadorEnvio;
+
+    @Id
+    @Column(name = "C_IDSGAC", nullable = false, length = 15)
+    public String getCorrelativoActividad() {
+        return correlativoActividad;
+    }
+
+    public void setCorrelativoActividad(String correlativoActividad) {
+        this.correlativoActividad = correlativoActividad;
+    }
+
+    @ManyToOne(cascade = {}, fetch = FetchType.LAZY)
+    @JoinColumn(name = "C_IDSGCD", unique = false, nullable = false)
+    public CRSeguimientoCartera getCrSeguimientoCartera() {
+        return crSeguimientoCartera;
+    }
+
+    public void setCrSeguimientoCartera(CRSeguimientoCartera crSeguimientoCartera) {
+        this.crSeguimientoCartera = crSeguimientoCartera;
+    }
+
+    @Column(name = "C_TIPACT", nullable = false, length = 4)
+    public String getTipoActividad() {
+        return tipoActividad;
+    }
+
+    public void setTipoActividad(String tipoActividad) {
+        this.tipoActividad = tipoActividad;
+    }
+
+    @Column(name = "D_FECACT", nullable = false, length = 7)
+    public Date getFechaActividad() {
+        return fechaActividad;
+    }
+
+    public void setFechaActividad(Date fechaActividad) {
+        this.fechaActividad = fechaActividad;
+    }
+
+    @Column(name = "C_CONACT", nullable = false, length = 3)
+    public String getContactoActividad() {
+        return contactoActividad;
+    }
+
+    public void setContactoActividad(String contactoActividad) {
+        this.contactoActividad = contactoActividad;
+    }
+
+    @Column(name = "C_COMACT", length = 1000)
+    public String getComentarioActividad() {
+        return comentarioActividad;
+    }
+
+    public void setComentarioActividad(String comentarioActividad) {
+        this.comentarioActividad = comentarioActividad;
+    }
+
+    @Column(name = "C_INDENV", length = 1)
+    public String getIndicadorEnvio() {
+        return indicadorEnvio;
+    }
+
+    public void setIndicadorEnvio(String indicadorEnvio) {
+        this.indicadorEnvio = indicadorEnvio;
+    }
+
+}
diff --git a/FINANCIERONEW/src/financ/seguimientoCartera/entity/CRDocumentosPorActividad.java b/FINANCIERONEW/src/financ/seguimientoCartera/entity/CRDocumentosPorActividad.java
new file mode 100644
index 0000000..323f64f
--- /dev/null
+++ b/FINANCIERONEW/src/financ/seguimientoCartera/entity/CRDocumentosPorActividad.java
@@ -0,0 +1,83 @@
+package financ.seguimientoCartera.entity;
+
+import javax.persistence.Column;
+import javax.persistence.Entity;
+import javax.persistence.FetchType;
+import javax.persistence.Id;
+import javax.persistence.JoinColumn;
+import javax.persistence.ManyToOne;
+import javax.persistence.Table;
+
+import pe.com.tfc.utils.Auditable;
+import financ.util.file.entity.CBFile;
+
+/**
+ * CRDocumentosPorActividad
+ * 
+ * @author kdelacruz
+ * @since [S17-022] 04.04.2017
+ */
+
+@Entity
+@Table(name = "CRDACDO", schema = "DFIN")
+public class CRDocumentosPorActividad extends Auditable {
+
+    /**
+     * 
+     */
+    private static final long serialVersionUID = -5102022154021156692L;
+    private String correlativoDocumentoXActividad;
+    private CRActividadSeguimientoCartera crActividadSeguimientoCartera;
+    private CBFile cbFile;
+    private String tipoDocumento;
+    private String comentarioDocumento;
+
+    @Id
+    @Column(name = "C_IDCORR", nullable = false, length = 15)
+    public String getCorrelativoDocumentoXActividad() {
+        return correlativoDocumentoXActividad;
+    }
+
+    public void setCorrelativoDocumentoXActividad(String correlativoDocumentoXActividad) {
+        this.correlativoDocumentoXActividad = correlativoDocumentoXActividad;
+    }
+
+    @Column(name = "C_TIPDOC", nullable = false, length = 4)
+    public String getTipoDocumento() {
+        return tipoDocumento;
+    }
+
+    public void setTipoDocumento(String tipoDocumento) {
+        this.tipoDocumento = tipoDocumento;
+    }
+
+    @Column(name = "C_COMDOC", nullable = false, length = 1000)
+    public String getComentarioDocumento() {
+        return comentarioDocumento;
+    }
+
+    public void setComentarioDocumento(String comentarioDocumento) {
+        this.comentarioDocumento = comentarioDocumento;
+    }
+
+    @ManyToOne(cascade = {}, fetch = FetchType.LAZY)
+    @JoinColumn(name = "C_IDSGAC", unique = false)
+    public CRActividadSeguimientoCartera getCrActividadSeguimientoCartera() {
+        return crActividadSeguimientoCartera;
+    }
+
+    public void setCrActividadSeguimientoCartera(CRActividadSeguimientoCartera crActividadSeguimientoCartera) {
+        this.crActividadSeguimientoCartera = crActividadSeguimientoCartera;
+    }
+
+    @ManyToOne(cascade = {}, fetch = FetchType.LAZY)
+    @JoinColumn(name = "C_IDFILE", unique = false)
+    public CBFile getCbFile() {
+        return cbFile;
+    }
+
+    public void setCbFile(CBFile cbFile) {
+        this.cbFile = cbFile;
+    }
+
+}
diff --git a/FINANCIERONEW/src/financ/seguimientoCartera/entity/CRMaestroSeguimiento.java b/FINANCIERONEW/src/financ/seguimientoCartera/entity/CRMaestroSeguimiento.java
new file mode 100644
index 0000000..bb7337f
--- /dev/null
+++ b/FINANCIERONEW/src/financ/seguimientoCartera/entity/CRMaestroSeguimiento.java
@@ -0,0 +1,76 @@
+package financ.seguimientoCartera.entity;
+
+import java.util.Date;
+
+import javax.persistence.Column;
+import javax.persistence.Entity;
+import javax.persistence.Id;
+import javax.persistence.Table;
+
+import pe.com.tfc.utils.Auditable;
+
+/**
+ * CRMaestroSeguimiento
+ * 
+ * @author rsanchez
+ * @since [S17-022] 28.03.2017
+ */
+
+@Entity
+@Table(name = "CRMSGCA", schema = "DFIN")
+public class CRMaestroSeguimiento extends Auditable {
+
+    private static final long serialVersionUID = 6144717726671866426L;
+    private String idLote;
+    private Date fechaProceso;
+    private Integer numeroRegistros;
+    private String codigoEstado;
+    private String usuarioEstado;
+
+    @Id
+    @Column(name = "C_IDSGCA", nullable = false, length = 15)
+    public String getIdLote() {
+        return idLote;
+    }
+
+    public void setIdLote(String idLote) {
+        this.idLote = idLote;
+    }
+
+    @Column(name = "D_FECPRO", nullable = false, length = 7)
+    public Date getFechaProceso() {
+        return fechaProceso;
+    }
+
+    public void setFechaProceso(Date fechaProceso) {
+        this.fechaProceso = fechaProceso;
+    }
+
+    @Column(name = "N_CANREG", nullable = false, precision = 5, scale = 0)
+    public Integer getNumeroRegistros() {
+        return numeroRegistros;
+    }
+
+    public void setNumeroRegistros(Integer numeroRegistros) {
+        this.numeroRegistros = numeroRegistros;
+    }
+
+    @Column(name = "C_CODEST", nullable = false, length = 3)
+    public String getCodigoEstado() {
+        return codigoEstado;
+    }
+
+    public void setCodigoEstado(String codigoEstado) {
+        this.codigoEstado = codigoEstado;
+    }
+
+    @Column(name = "C_USUEST", nullable = false, length = 20)
+    public String getUsuarioEstado() {
+        return usuarioEstado;
+    }
+
+    public void setUsuarioEstado(String usuarioEstado) {
+        this.usuarioEstado = usuarioEstado;
+    }
+
+}
diff --git a/FINANCIERONEW/src/financ/seguimientoCartera/entity/CRMotivoSeguimientoCartera.java b/FINANCIERONEW/src/financ/seguimientoCartera/entity/CRMotivoSeguimientoCartera.java
new file mode 100644
index 0000000..47bc6f5
--- /dev/null
+++ b/FINANCIERONEW/src/financ/seguimientoCartera/entity/CRMotivoSeguimientoCartera.java
@@ -0,0 +1,82 @@
+package financ.seguimientoCartera.entity;
+
+import javax.persistence.Column;
+import javax.persistence.Entity;
+import javax.persistence.FetchType;
+import javax.persistence.Id;
+import javax.persistence.JoinColumn;
+import javax.persistence.ManyToOne;
+import javax.persistence.Table;
+
+import pe.com.tfc.utils.Auditable;
+import financ.workflow.entity.WFEtapa;
+
+/**
+ * CRMotivoSeguimientoCartera
+ * 
+ * @author kdelacruz
+ * @since [S17-022] 05.04.2017
+ */
+
+@Entity
+@Table(name = "CRTMOSG", schema = "DFIN")
+public class CRMotivoSeguimientoCartera extends Auditable {
+
+    /**
+     * 
+     */
+    private static final long serialVersionUID = -3347753087253364414L;
+    private String idMotivoSeguimiento;
+    private String descripcionMotivo;
+    private String tipoRespuesta;
+    private WFEtapa wfEtapa;
+    private String indicadorFechaMotivo;
+
+    @Id
+    @Column(name = "C_IDMOSG", nullable = false, length = 10)
+    public String getIdMotivoSeguimiento() {
+        return idMotivoSeguimiento;
+    }
+
+    public void setIdMotivoSeguimiento(String idMotivoSeguimiento) {
+        this.idMotivoSeguimiento = idMotivoSeguimiento;
+    }
+
+    @Column(name = "C_DESCRI", nullable = false, length = 50)
+    public String getDescripcionMotivo() {
+        return descripcionMotivo;
+    }
+
+    public void setDescripcionMotivo(String descripcionMotivo) {
+        this.descripcionMotivo = descripcionMotivo;
+    }
+
+    @Column(name = "C_TIPRES", nullable = false, length = 2)
+    public String getTipoRespuesta() {
+        return tipoRespuesta;
+    }
+
+    public void setTipoRespuesta(String tipoRespuesta) {
+        this.tipoRespuesta = tipoRespuesta;
+    }
+
+    @ManyToOne(cascade = {}, fetch = FetchType.LAZY)
+    @JoinColumn(name = "C_IDETAP", unique = false)
+    public WFEtapa getWfEtapa() {
+        return wfEtapa;
+    }
+
+    public void setWfEtapa(WFEtapa wfEtapa) {
+        this.wfEtapa = wfEtapa;
+    }
+
+    @Column(name = "C_INDFEC", length = 1)
+    public String getIndicadorFechaMotivo() {
+        return indicadorFechaMotivo;
+    }
+
+    public void setIndicadorFechaMotivo(String indicadorFechaMotivo) {
+        this.indicadorFechaMotivo = indicadorFechaMotivo;
+    }
+
+}
diff --git a/FINANCIERONEW/src/financ/seguimientoCartera/entity/CRMovimientoPorSeguimiento.java b/FINANCIERONEW/src/financ/seguimientoCartera/entity/CRMovimientoPorSeguimiento.java
new file mode 100644
index 0000000..739ae4d
--- /dev/null
+++ b/FINANCIERONEW/src/financ/seguimientoCartera/entity/CRMovimientoPorSeguimiento.java
@@ -0,0 +1,84 @@
+package financ.seguimientoCartera.entity;
+
+import javax.persistence.Column;
+import javax.persistence.Entity;
+import javax.persistence.FetchType;
+import javax.persistence.Id;
+import javax.persistence.JoinColumn;
+import javax.persistence.ManyToOne;
+import javax.persistence.Table;
+
+import pe.com.tfc.utils.Auditable;
+import financ.workflow.entity.WFMovimientos;
+
+/**
+ * CRMovimientoPorSeguimiento
+ * 
+ * @author kdelacruz
+ * @since [S17-022] 05.04.2017
+ */
+
+@Entity
+@Table(name = "CRDSGMV", schema = "DFIN")
+public class CRMovimientoPorSeguimiento extends Auditable {
+
+    /**
+     * 
+     */
+    private static final long serialVersionUID = 1193141480051753120L;
+    private String idMovimientoSeguimiento;
+    private String idTipoRespuesta;
+    private CRSeguimientoCartera crSeguimientoCartera;
+    private CRMotivoSeguimientoCartera crMotivoSeguimientoCartera;
+    private WFMovimientos wfMovimientos;
+
+    @Id
+    @Column(name = "C_IDSGMV", nullable = false, length = 15)
+    public String getIdMovimientoSeguimiento() {
+        return idMovimientoSeguimiento;
+    }
+
+    public void setIdMovimientoSeguimiento(String idMovimientoSeguimiento) {
+        this.idMovimientoSeguimiento = idMovimientoSeguimiento;
+    }
+
+    @Column(name = "C_TIPRES", nullable = false, length = 2)
+    public String getIdTipoRespuesta() {
+        return idTipoRespuesta;
+    }
+
+    public void setIdTipoRespuesta(String idTipoRespuesta) {
+        this.idTipoRespuesta = idTipoRespuesta;
+    }
+
+    @ManyToOne(fetch = FetchType.LAZY)
+    @JoinColumn(name = "C_IDMOSG")
+    public CRMotivoSeguimientoCartera getCrMotivoSeguimientoCartera() {
+        return crMotivoSeguimientoCartera;
+    }
+
+    public void setCrMotivoSeguimientoCartera(CRMotivoSeguimientoCartera crMotivoSeguimientoCartera) {
+        this.crMotivoSeguimientoCartera = crMotivoSeguimientoCartera;
+    }
+
+    @ManyToOne(fetch = FetchType.LAZY)
+    @JoinColumn(name = "C_IDMOVI", nullable = false)
+    public WFMovimientos getWfMovimientos() {
+        return wfMovimientos;
+    }
+
+    public void setWfMovimientos(WFMovimientos wfMovimientos) {
+        this.wfMovimientos = wfMovimientos;
+    }
+
+    @ManyToOne(fetch = FetchType.LAZY)
+    @JoinColumn(name = "C_IDSGCD", nullable = false)
+    public CRSeguimientoCartera getCrSeguimientoCartera() {
+        return crSeguimientoCartera;
+    }
+
+    public void setCrSeguimientoCartera(CRSeguimientoCartera crSeguimientoCartera) {
+        this.crSeguimientoCartera = crSeguimientoCartera;
+    }
+
+}
diff --git a/FINANCIERONEW/src/financ/seguimientoCartera/entity/CRSeguimientoCartera.java b/FINANCIERONEW/src/financ/seguimientoCartera/entity/CRSeguimientoCartera.java
new file mode 100644
index 0000000..960d700
--- /dev/null
+++ b/FINANCIERONEW/src/financ/seguimientoCartera/entity/CRSeguimientoCartera.java
@@ -0,0 +1,199 @@
+package financ.seguimientoCartera.entity;
+
+import java.util.Date;
+
+import javax.persistence.Column;
+import javax.persistence.Entity;
+import javax.persistence.FetchType;
+import javax.persistence.Id;
+import javax.persistence.JoinColumn;
+import javax.persistence.ManyToOne;
+import javax.persistence.Table;
+
+import pe.com.tfc.utils.Auditable;
+import financ.clientes.entity.CLPersonas;
+import financ.creditos.entity.CRCalificacionCreditoSbs;
+import financ.workflow.entity.WFMaestra;
+
+/**
+ * CRDetalleSeguimiento
+ * 
+ * @author rsanchez
+ * @since [S17-022] 28.03.2017
+ */
+
+@Entity
+@Table(name = "CRDSGCA", schema = "DFIN")
+public class CRSeguimientoCartera extends Auditable {
+
+    /**
+     * 
+     */
+    private static final long serialVersionUID = 2952741286688231420L;
+    private String correlativoSeguimiento;
+    private WFMaestra wfMaestra;
+    private String tipoSeguimiento;
+    private String idLote;
+    private String agenciaAsignada;
+    private Date fechaAsignacion;
+    private String usuarioAsignado;
+    private Date fechaAlerta;
+    private Double montoAlerta;
+    private Date fechaAtencion;
+    private Double montoProvision;
+    private Double interesDevengado;
+    private String comentario;
+
+    private CLPersonas clPersonas; //cliente 
+    private CRTipoAlerta crTipoAlerta;
+    private CRCalificacionCreditoSbs crCalificacionCreditoSbs;
+
+    @Id
+    @Column(name = "C_IDSGCD", nullable = false, length = 15)
+    public String getCorrelativoSeguimiento() {
+        return correlativoSeguimiento;
+    }
+
+    public void setCorrelativoSeguimiento(String correlativoSeguimiento) {
+        this.correlativoSeguimiento = correlativoSeguimiento;
+    }
+
+    @Column(name = "C_TIPSEG", nullable = false, length = 1)
+    public String getTipoSeguimiento() {
+        return tipoSeguimiento;
+    }
+
+    public void setTipoSeguimiento(String tipoSeguimiento) {
+        this.tipoSeguimiento = tipoSeguimiento;
+    }
+
+    @Column(name = "C_IDSGCA", length = 15)
+    public String getIdLote() {
+        return idLote;
+    }
+
+    public void setIdLote(String idLote) {
+        this.idLote = idLote;
+    }
+
+    @Column(name = "C_AGEASG", nullable = false, length = 3)
+    public String getAgenciaAsignada() {
+        return agenciaAsignada;
+    }
+
+    public void setAgenciaAsignada(String agenciaAsignada) {
+        this.agenciaAsignada = agenciaAsignada;
+    }
+
+    @Column(name = "D_FECASG", length = 7)
+    public Date getFechaAsignacion() {
+        return fechaAsignacion;
+    }
+
+    public void setFechaAsignacion(Date fechaAsignacion) {
+        this.fechaAsignacion = fechaAsignacion;
+    }
+
+    @Column(name = "C_USUASG", nullable = false, length = 20)
+    public String getUsuarioAsignado() {
+        return usuarioAsignado;
+    }
+
+    public void setUsuarioAsignado(String usuarioAsignado) {
+        this.usuarioAsignado = usuarioAsignado;
+    }
+
+    @Column(name = "D_FECALE", nullable = false, length = 7)
+    public Date getFechaAlerta() {
+        return fechaAlerta;
+    }
+
+    public void setFechaAlerta(Date fechaAlerta) {
+        this.fechaAlerta = fechaAlerta;
+    }
+
+    @Column(name = "N_MTOALE", nullable = false, precision = 12, scale = 2)
+    public Double getMontoAlerta() {
+        return montoAlerta;
+    }
+
+    public void setMontoAlerta(Double montoAlerta) {
+        this.montoAlerta = montoAlerta;
+    }
+
+    @Column(name = "D_FECATE", nullable = false, length = 7)
+    public Date getFechaAtencion() {
+        return fechaAtencion;
+    }
+
+    public void setFechaAtencion(Date fechaAtencion) {
+        this.fechaAtencion = fechaAtencion;
+    }
+
+    @Column(name = "N_MTOPRV", precision = 12, scale = 2)
+    public Double getMontoProvision() {
+        return montoProvision;
+    }
+
+    public void setMontoProvision(Double montoProvision) {
+        this.montoProvision = montoProvision;
+    }
+
+    @Column(name = "N_INTDEV", precision = 12, scale = 2)
+    public Double getInteresDevengado() {
+        return interesDevengado;
+    }
+
+    public void setInteresDevengado(Double interesDevengado) {
+        this.interesDevengado = interesDevengado;
+    }
+
+    @ManyToOne(cascade = {}, fetch = FetchType.LAZY)
+    @JoinColumn(name = "C_IDWORK", unique = true, nullable = true, insertable = true, updatable = true)
+    public WFMaestra getWfMaestra() {
+        return wfMaestra;
+    }
+
+    public void setWfMaestra(WFMaestra wfMaestra) {
+        this.wfMaestra = wfMaestra;
+    }
+
+    @ManyToOne(fetch = FetchType.LAZY)
+    @JoinColumn(name = "C_TIPALE", nullable = false)
+    public CRTipoAlerta getCrTipoAlerta() {
+        return crTipoAlerta;
+    }
+
+    public void setCrTipoAlerta(CRTipoAlerta crTipoAlerta) {
+        this.crTipoAlerta = crTipoAlerta;
+    }
+
+    @ManyToOne(fetch = FetchType.LAZY)
+    @JoinColumn(name = "C_CODPER", nullable = false)
+    public CLPersonas getClPersonas() {
+        return this.clPersonas;
+    }
+
+    public void setClPersonas(CLPersonas clPersonas) {
+        this.clPersonas = clPersonas;
+    }
+
+    @ManyToOne(fetch = FetchType.LAZY)
+    @JoinColumn(name = "C_CALSBS", nullable = false)
+    public CRCalificacionCreditoSbs getCrCalificacionCreditoSbs() {
+        return crCalificacionCreditoSbs;
+    }
+
+    public void setCrCalificacionCreditoSbs(CRCalificacionCreditoSbs crCalificacionCreditoSbs) {
+        this.crCalificacionCreditoSbs = crCalificacionCreditoSbs;
+    }
+    
+    @Column(name = "C_COMENT", nullable = false, length = 1000)
+    public String getComentario() {
+        return comentario;
+    }
+
+    public void setComentario(String comentario) {
+        this.comentario = comentario;
+    }
+}
diff --git a/FINANCIERONEW/src/financ/seguimientoCartera/entity/CRTipoAlerta.java b/FINANCIERONEW/src/financ/seguimientoCartera/entity/CRTipoAlerta.java
new file mode 100644
index 0000000..49aaead
--- /dev/null
+++ b/FINANCIERONEW/src/financ/seguimientoCartera/entity/CRTipoAlerta.java
@@ -0,0 +1,57 @@
+package financ.seguimientoCartera.entity;
+
+import javax.persistence.Column;
+import javax.persistence.Entity;
+import javax.persistence.Id;
+import javax.persistence.Table;
+
+import pe.com.tfc.utils.Auditable;
+
+/**
+ * CRTipoAlerta
+ * 
+ * @author kdelacruz
+ * @since [S17-022] 29.03.2017
+ */
+
+@Entity
+@Table(name = "CRTTIAL", schema = "DFIN")
+public class CRTipoAlerta extends Auditable {
+
+    /**
+     * 
+     */
+    private static final long serialVersionUID = -3012440563468525037L;
+    private String idTipoAlerta;
+    private String codigoEmpresa;
+    private String descripcionTipoAlerta;
+
+    @Id
+    @Column(name = "C_IDTIAL", nullable = false, length = 10)
+    public String getIdTipoAlerta() {
+        return idTipoAlerta;
+    }
+
+    public void setIdTipoAlerta(String idTipoAlerta) {
+        this.idTipoAlerta = idTipoAlerta;
+    }
+
+    @Column(name = "C_CODEMP", nullable = false, length = 3)
+    public String getCodigoEmpresa() {
+        return codigoEmpresa;
+    }
+
+    public void setCodigoEmpresa(String codigoEmpresa) {
+        this.codigoEmpresa = codigoEmpresa;
+    }
+
+    @Column(name = "C_DESCRI", nullable = false, length = 50)
+    public String getDescripcionTipoAlerta() {
+        return descripcionTipoAlerta;
+    }
+
+    public void setDescripcionTipoAlerta(String descripcionTipoAlerta) {
+        this.descripcionTipoAlerta = descripcionTipoAlerta;
+    }
+
+}
diff --git a/FINANCIERONEW/src/financ/seguimientoCartera/facade/CRActividadSeguimientoCarteraFacade.java b/FINANCIERONEW/src/financ/seguimientoCartera/facade/CRActividadSeguimientoCarteraFacade.java
new file mode 100644
index 0000000..0b5319e
--- /dev/null
+++ b/FINANCIERONEW/src/financ/seguimientoCartera/facade/CRActividadSeguimientoCarteraFacade.java
@@ -0,0 +1,278 @@
+package financ.seguimientoCartera.facade;
+
+import java.util.ArrayList;
+import java.util.HashMap;
+import java.util.List;
+import java.util.Map;
+
+import javax.ejb.EJB;
+import javax.ejb.Stateless;
+
+import pe.com.tfc.utils.AbstractFacade;
+import pe.com.tfc.utils.PropertyParams;
+import admin.contab.beans.BeanCBCatalogoCheckConstraint;
+import admin.contab.beans.BeanParametrosAuditoria;
+import admin.util.Constante;
+import financ.seguimientoCartera.beans.BeanCRActividadSeguimientoCartera;
+import financ.seguimientoCartera.beans.BeanCRSeguimientoCartera;
+import financ.seguimientoCartera.entity.CRActividadSeguimientoCartera;
+import financ.seguimientoCartera.entity.CRSeguimientoCartera;
+import financ.seguimientoCartera.local.CRActividadSeguimientoCarteraFacadeInterfaceLocal;
+import financ.seguimientoCartera.local.CRActividadSeguimientoCarteraInterfaceLocal;
+import financ.seguimientoCartera.local.CRMovimientoPorSeguimientoFacadeInterfaceLocal;
+import financ.seguimientoCartera.local.CRSeguimientoCarteraFacadeInterfaceLocal;
+import financ.seguimientoCartera.local.CRSeguimientoCarteraInterfaceLocal;
+import financ.util.Paginacion;
+import financ.util.local.UtilFacadeIntrefaceLocal;
+import financ.workflow.bean.BeanWFEventoPorEtapa;
+import financ.workflow.bean.BeanWFMaestra;
+import financ.workflow.entity.WFEvento;
+import financ.workflow.local.WFEventoInterfaceLocal;
+import financ.workflow.local.WFEventoPorEtapaFacadeInterfaceLocal;
+import financ.workflow.local.WFMaestraFacadeInterfaceLocal;
+
+/**
+ * CRActividadesSeguimientoCarteraFacade
+ * 
+ * @author kdelacruz
+ * @since [S17-022] 03.04.2017
+ */
+
+@Stateless
+public class CRActividadSeguimientoCarteraFacade extends AbstractFacade<CRActividadSeguimientoCartera> implements CRActividadSeguimientoCarteraFacadeInterfaceLocal {
+
+    public static final String LocalJNDIName = CRActividadSeguimientoCarteraFacade.class.getSimpleName() + "/local";
+
+    @EJB
+    private CRActividadSeguimientoCarteraInterfaceLocal crActividadSeguimientoCarteraInterfaceLocal;
+    @EJB
+    private CRSeguimientoCarteraInterfaceLocal crSeguimientoCarteraInterfaceLocal;
+    @EJB
+    private UtilFacadeIntrefaceLocal utilFacadeInterfaceLocal;
+    @EJB
+    private WFMaestraFacadeInterfaceLocal wfMaestraFacadeInterfaceLocal;
+    @EJB
+    private WFEventoPorEtapaFacadeInterfaceLocal wfEventoPorEtapaFacadeInterfaceLocal;
+    @EJB
+    private CRSeguimientoCarteraFacadeInterfaceLocal crSeguimientoCarteraFacadeInterfaceLocal;
+    @EJB
+    private CRMovimientoPorSeguimientoFacadeInterfaceLocal crMovimientoPorSeguimientoFacadeInterfaceLocal;
+    @EJB
+    private WFEventoInterfaceLocal wfEventoInterfaceLocal;
+
+    public Map<String, Object> listarActividades(final String idSeguimiento,
+                                                 final Integer pagina,
+                                                 final BeanParametrosAuditoria beanParametrosAuditoria) throws Exception {
+        Long cantReg = 0L;
+        int inicio;
+
+        final String modulo = "CRActividadSeguimientoCarteraFacade.listarActividades()";
+        List<CRActividadSeguimientoCartera> listCRActividadSeguimientoCartera;
+        BeanCRActividadSeguimientoCartera beanCRActividadSeguimientoCartera;
+        final Map<String, Object> mapRespuesta = new HashMap<String, Object>();
+        final List<BeanCRActividadSeguimientoCartera> listBeanCRActividadSeguimientoCartera = new ArrayList<BeanCRActividadSeguimientoCartera>(0);
+        BeanCBCatalogoCheckConstraint beanCBCatalogoCheckConstraint;
+        PropertyParams propertyParams;
+        try {
+            inicio = (pagina - 1) * Paginacion.NUM_REG;
+
+            propertyParams = new PropertyParams();
+            propertyParams.addProperty("crSeguimientoCartera.correlativoSeguimiento", idSeguimiento);
+            propertyParams.addProperty("estadoRegistro", Constante.INDICADOR_ESTADO_ACTIVO);
+            propertyParams.addPropertyOrder("crSeguimientoCartera.correlativoSeguimiento", true);
+            propertyParams.setFirstResult(inicio);
+            propertyParams.setMaxResults(Paginacion.NUM_REG);
+
+            cantReg = crActividadSeguimientoCarteraInterfaceLocal.countByProperties(propertyParams);
+            listCRActividadSeguimientoCartera = crActividadSeguimientoCarteraInterfaceLocal.findByProperties(propertyParams);
+
+            for (final CRActividadSeguimientoCartera crActividadSeguimientoCartera : listCRActividadSeguimientoCartera) {
+
+                beanCRActividadSeguimientoCartera = new BeanCRActividadSeguimientoCartera();
+                beanCRActividadSeguimientoCartera.setComentarioActividad(crActividadSeguimientoCartera.getComentarioActividad());
+                beanCRActividadSeguimientoCartera.setCorrelativoActividad(crActividadSeguimientoCartera.getCorrelativoActividad());
+                beanCRActividadSeguimientoCartera.setCorrelativoSeguimiento(crActividadSeguimientoCartera.getCrSeguimientoCartera().getCorrelativoSeguimiento());
+                beanCRActividadSeguimientoCartera.setFechaActividad(financ.util.FormatoFecha.dateToStringDDMMYYYYY(crActividadSeguimientoCartera.getFechaActividad()));
+
+                beanCBCatalogoCheckConstraint = utilFacadeInterfaceLocal.objectCatalogoCheckConstraint("CRDSGAC",
+                                                                                                       "C_TIPACT",
+                                                                                                       crActividadSeguimientoCartera.getTipoActividad());
+                if (!_isEmpty(beanCBCatalogoCheckConstraint)) {
+                    beanCRActividadSeguimientoCartera.setTipoActividad(beanCBCatalogoCheckConstraint.getDescripcion());
+                }
+
+                beanCBCatalogoCheckConstraint = utilFacadeInterfaceLocal.objectCatalogoCheckConstraint("CRDSGAC",
+                                                                                                       "C_CONACT",
+                                                                                                       crActividadSeguimientoCartera.getContactoActividad());
+                if (!_isEmpty(beanCBCatalogoCheckConstraint)) {
+                    beanCRActividadSeguimientoCartera.setContactoActividad(beanCBCatalogoCheckConstraint.getDescripcion());
+                }
+
+                beanCBCatalogoCheckConstraint = utilFacadeInterfaceLocal.objectCatalogoCheckConstraint("CRDSGAC",
+                                                                                                       "C_INDENV",
+                                                                                                       crActividadSeguimientoCartera.getIndicadorEnvio());
+                if (!_isEmpty(beanCBCatalogoCheckConstraint)) {
+                    beanCRActividadSeguimientoCartera.setIndicadorEnvio(beanCBCatalogoCheckConstraint.getDescripcion());
+                }
+                beanCRActividadSeguimientoCartera.setCodigoIndicadorEnvio(crActividadSeguimientoCartera.getIndicadorEnvio());
+                listBeanCRActividadSeguimientoCartera.add(beanCRActividadSeguimientoCartera);
+            }
+
+            mapRespuesta.put("listBeanCRActividadSeguimientoCartera", listBeanCRActividadSeguimientoCartera);
+            mapRespuesta.put("cantReg", cantReg);
+        } catch (final Exception e) {
+            throw handlerError(e, beanParametrosAuditoria.getUsuarioInsercion(), modulo);
+        }
+        return mapRespuesta;
+    }
+
+    public BeanCRActividadSeguimientoCartera consultarActividad(String idActividad,
+                                                                BeanParametrosAuditoria beanParametrosAuditoria) throws Exception {
+        final String modulo = "CRActividadSeguimientoCarteraFacade.obtenerDetalleSeguimientoCartera()";
+        final String usuarioInsercion = beanParametrosAuditoria.getUsuarioInsercion();
+        BeanCRActividadSeguimientoCartera beanCRActividadSeguimientoCartera = null;
+        try {
+            CRActividadSeguimientoCartera crActividadSeguimientoCartera = crActividadSeguimientoCarteraInterfaceLocal.findById(idActividad);
+            beanCRActividadSeguimientoCartera = getBeanCRActividadSeguimientoCartera(crActividadSeguimientoCartera);
+
+        } catch (final Exception e) {
+            throw handlerError(e, usuarioInsercion, modulo);
+        }
+        return beanCRActividadSeguimientoCartera;
+    }
+
+    private BeanCRActividadSeguimientoCartera getBeanCRActividadSeguimientoCartera(CRActividadSeguimientoCartera crActividadSeguimientoCartera) {
+        BeanCRActividadSeguimientoCartera beanCRActividadSeguimientoCartera = new BeanCRActividadSeguimientoCartera();
+
+        beanCRActividadSeguimientoCartera.setComentarioActividad(crActividadSeguimientoCartera.getComentarioActividad());
+        beanCRActividadSeguimientoCartera.setContactoActividad(crActividadSeguimientoCartera.getContactoActividad());
+        beanCRActividadSeguimientoCartera.setCorrelativoActividad(crActividadSeguimientoCartera.getCorrelativoActividad());
+        CRSeguimientoCartera crSeguimientoCartera = crSeguimientoCarteraInterfaceLocal.findById(crActividadSeguimientoCartera.getCrSeguimientoCartera().getCorrelativoSeguimiento());
+        beanCRActividadSeguimientoCartera.setCorrelativoSeguimiento(crSeguimientoCartera.getCorrelativoSeguimiento());
+        beanCRActividadSeguimientoCartera.setFechaActividad(financ.util.FormatoFecha.dateToStringDDMMYYYYY(crActividadSeguimientoCartera.getFechaActividad()));
+        beanCRActividadSeguimientoCartera.setTipoActividad(crActividadSeguimientoCartera.getTipoActividad());
+
+        return beanCRActividadSeguimientoCartera;
+    }
+
+    public void registrarActividad(BeanCRActividadSeguimientoCartera beanCRActividadSeguimientoCartera,
+                                   String idSeguimientoCartera,
+                                   BeanParametrosAuditoria beanParametrosAuditoria) throws Exception {
+        final String modulo = "CRActividadSeguimientoCarteraFacade.registrarActividad()";
+        final String usuarioInsercion = beanParametrosAuditoria.getUsuarioInsercion();
+        CRActividadSeguimientoCartera crActividadSeguimientoCartera;
+        String correlativoActividad;
+        try {
+            if (!_isEmpty(beanCRActividadSeguimientoCartera.getCorrelativoActividad())) {
+                crActividadSeguimientoCartera = crActividadSeguimientoCarteraInterfaceLocal.findById(beanCRActividadSeguimientoCartera.getCorrelativoActividad());
+
+                crActividadSeguimientoCartera.setComentarioActividad(beanCRActividadSeguimientoCartera.getComentarioActividad());
+                crActividadSeguimientoCartera.setContactoActividad(beanCRActividadSeguimientoCartera.getContactoActividad());
+                crActividadSeguimientoCartera.setTipoActividad(beanCRActividadSeguimientoCartera.getTipoActividad());
+                crActividadSeguimientoCartera.setFechaActividad(financ.util.FormatoFecha.stringToDateddMMyyyy(beanCRActividadSeguimientoCartera.getFechaActividad()));
+                crActividadSeguimientoCartera.setIndicadorEnvio(Constante.INDICADOR_NO_ENVIADO);
+                setModificacionAuditoria(crActividadSeguimientoCartera, beanParametrosAuditoria);
+
+                crActividadSeguimientoCarteraInterfaceLocal.update(crActividadSeguimientoCartera);
+            } else {
+                crActividadSeguimientoCartera = new CRActividadSeguimientoCartera();
+                correlativoActividad = generarCorrelativo("CRDSGAC", 15, beanParametrosAuditoria);
+
+                crActividadSeguimientoCartera.setCorrelativoActividad(correlativoActividad);
+                crActividadSeguimientoCartera.setComentarioActividad(beanCRActividadSeguimientoCartera.getComentarioActividad());
+                crActividadSeguimientoCartera.setContactoActividad(beanCRActividadSeguimientoCartera.getContactoActividad());
+                crActividadSeguimientoCartera.setTipoActividad(beanCRActividadSeguimientoCartera.getTipoActividad());
+                crActividadSeguimientoCartera.setFechaActividad(financ.util.FormatoFecha.stringToDateddMMyyyy(beanCRActividadSeguimientoCartera.getFechaActividad()));
+                crActividadSeguimientoCartera.setIndicadorEnvio(Constante.INDICADOR_NO_ENVIADO);
+
+                CRSeguimientoCartera crSeguimientoCartera = crSeguimientoCarteraInterfaceLocal.findById(idSeguimientoCartera);
+                if (!_isEmpty(crSeguimientoCartera)) {
+                    crActividadSeguimientoCartera.setCrSeguimientoCartera(crSeguimientoCartera);
+                }
+
+                crActividadSeguimientoCartera.setEstadoRegistro(Constante.ESTADO_REGISTRO_VIGENTE);
+                setInsercionAuditoria(crActividadSeguimientoCartera, beanParametrosAuditoria);
+
+                crActividadSeguimientoCarteraInterfaceLocal.save(crActividadSeguimientoCartera);
+            }
+        } catch (final Exception e) {
+            throw handlerError(e, usuarioInsercion, modulo);
+        }
+    }
+
+    public void eliminarActividad(String correlativoActividad, BeanParametrosAuditoria beanParametrosAuditoria) throws Exception {
+        final String modulo = "CRActividadSeguimientoCarteraFacade.eliminarActividad()";
+        final String usuarioInsercion = beanParametrosAuditoria.getUsuarioInsercion();
+        CRActividadSeguimientoCartera crActividadSeguimientoCartera;
+        try {
+
+            crActividadSeguimientoCartera = new CRActividadSeguimientoCartera();
+            crActividadSeguimientoCartera = crActividadSeguimientoCarteraInterfaceLocal.findById(correlativoActividad);
+            crActividadSeguimientoCartera.setEstadoRegistro(Constante.ESTADO_REGISTRO_NO_VIGENTE);
+            setModificacionAuditoria(crActividadSeguimientoCartera, beanParametrosAuditoria);
+
+            crActividadSeguimientoCarteraInterfaceLocal.update(crActividadSeguimientoCartera);
+        } catch (final Exception e) {
+            throw handlerError(e, usuarioInsercion, modulo);
+        }
+    }
+
+    public void enviaActividades(BeanWFMaestra beanWFMaestra,
+                                 String idEvento,
+                                 String txtComentario,
+                                 String idMotivoSeguimiento,
+                                 BeanCRSeguimientoCartera beanCRSeguimientoCartera,
+                                 String idTipoRespuesta,
+                                 BeanParametrosAuditoria beanParametrosAuditoria) throws Exception {
+
+        String modulo = "CRActividadSeguimientoCarteraFacade.enviaActividades()";
+        String usuario = beanParametrosAuditoria.getUsuarioInsercion();
+        try {
+
+            WFEvento wfEvento = wfEventoInterfaceLocal.findById(idEvento);
+            if (_equiv(wfEvento.getKeyEvento(), financ.util.Constante.CODIGO_EVENTO_ENVIAR)) {
+                actualizarIndicadorEnvio(beanWFMaestra.getIdMaestra(), beanParametrosAuditoria);
+            }
+
+            BeanWFEventoPorEtapa beanWFEventoPorEtapa = wfEventoPorEtapaFacadeInterfaceLocal.get(beanWFMaestra.getIdEtapa(),
+                                                                                                 idEvento,
+                                                                                                 beanParametrosAuditoria);
+
+            String correlativoMovimiento = wfMaestraFacadeInterfaceLocal.procesarEvento(beanWFMaestra.getIdMaestra(),
+                                                                                        beanWFMaestra.getIdEtapa(),
+                                                                                        beanWFEventoPorEtapa.getIdEventoPorEtapa(),
+                                                                                        txtComentario,
+                                                                                        beanParametrosAuditoria);
+
+            crMovimientoPorSeguimientoFacadeInterfaceLocal.guardarMovimientoPorSeguimiento(idMotivoSeguimiento,
+                                                                                           correlativoMovimiento,
+                                                                                           beanCRSeguimientoCartera.getCorrelativoSeguimiento(),
+                                                                                           idTipoRespuesta,
+                                                                                           beanParametrosAuditoria);
+        } catch (Exception e) {
+            throw handlerError(e, usuario, modulo);
+        }
+    }
+
+    private void actualizarIndicadorEnvio(String idMaestra, BeanParametrosAuditoria beanParametrosAuditoria) throws Exception {
+
+        List<CRActividadSeguimientoCartera> listCRActividadSeguimientoCartera;
+        PropertyParams propertyParams;
+        BeanCRSeguimientoCartera crSeguimientoCartera = crSeguimientoCarteraFacadeInterfaceLocal.obtenerSeguimientoCarteraPorIdMaestra(idMaestra,
+                                                                                                                                       beanParametrosAuditoria);
+        propertyParams = new PropertyParams();
+        propertyParams.addProperty("crSeguimientoCartera.correlativoSeguimiento",
+                                   crSeguimientoCartera.getCorrelativoSeguimiento());
+        propertyParams.addProperty("estadoRegistro", Constante.INDICADOR_ESTADO_ACTIVO);
+
+        listCRActividadSeguimientoCartera = crActividadSeguimientoCarteraInterfaceLocal.findByProperties(propertyParams);
+
+        for (final CRActividadSeguimientoCartera crActividadSeguimientoCartera : listCRActividadSeguimientoCartera) {
+            crActividadSeguimientoCartera.setIndicadorEnvio(Constante.ESTADO_REGISTRO_VIGENTE);
+            setModificacionAuditoria(crActividadSeguimientoCartera, beanParametrosAuditoria);
+            crActividadSeguimientoCarteraInterfaceLocal.update(crActividadSeguimientoCartera);
+        }
+
+    }
+
+}
diff --git a/FINANCIERONEW/src/financ/seguimientoCartera/facade/CRCargaAlertaFacade.java b/FINANCIERONEW/src/financ/seguimientoCartera/facade/CRCargaAlertaFacade.java
new file mode 100644
index 0000000..fec56f5
--- /dev/null
+++ b/FINANCIERONEW/src/financ/seguimientoCartera/facade/CRCargaAlertaFacade.java
@@ -0,0 +1,277 @@
+package financ.seguimientoCartera.facade;
+
+import java.util.ArrayList;
+import java.util.List;
+
+import javax.ejb.EJB;
+import javax.ejb.Stateless;
+
+import pe.com.tfc.utils.AbstractHandlerProcess;
+import pe.com.tfc.utils.GenericBean;
+import admin.contab.beans.BeanParametrosAuditoria;
+import admin.contab.beans.BeanParametrosLog;
+import admin.contab.entity.CBUsuario;
+import admin.contab.local.CBUsuarioInterfaceLocal;
+import admin.util.ConstantesErrores;
+import financ.clientes.entity.CLClientes;
+import financ.clientes.entity.CLPersonas;
+import financ.clientes.local.CLClientesInterfaceLocal;
+import financ.clientes.local.CLPersonasInterfaceLocal;
+import financ.creditos.entity.CRCalificacionCreditoSbs;
+import financ.creditos.entity.CRCuentaCredito;
+import financ.creditos.local.CRCalificacionCreditoSbsInterfaceLocal;
+import financ.creditos.local.CRCuentaCreditoInterfaceLocal;
+import financ.seguimientoCartera.beans.BeanCRCargaAlerta;
+import financ.seguimientoCartera.beans.BeanCRMaestroSeguimiento;
+import financ.seguimientoCartera.beans.BeanCRSeguimientoCartera;
+import financ.seguimientoCartera.entity.CRMaestroSeguimiento;
+import financ.seguimientoCartera.entity.CRTipoAlerta;
+import financ.seguimientoCartera.local.CRCargaAlertaFacadeInterfaceLocal;
+import financ.seguimientoCartera.local.CRMaestroSeguimientoFacadeInterfaceLocal;
+import financ.seguimientoCartera.local.CRSeguimientoCarteraFacadeInterfaceLocal;
+import financ.seguimientoCartera.local.CRTipoAlertaInterfaceLocal;
+import financ.util.Constante;
+import financ.util.FormatoFecha;
+
+/**
+ * CRCargaAlertaFacade
+ * 
+ * @autor rsanchez
+ * @since [S17-022] 27.03.2017
+ */
+
+@Stateless
+public class CRCargaAlertaFacade extends AbstractHandlerProcess implements CRCargaAlertaFacadeInterfaceLocal {
+
+    public static final String LocalJNDIName = CRCargaAlertaFacade.class.getSimpleName() + "/local";
+    @EJB
+    private CBUsuarioInterfaceLocal cbUsuarioInterfaceLocal;
+    @EJB
+    private CLPersonasInterfaceLocal clPersonasInterfaceLocal;
+    @EJB
+    private CLClientesInterfaceLocal clClientesInterfaceLocal;
+    @EJB
+    private CRCuentaCreditoInterfaceLocal crCuentaCreditoInterfaceLocal;
+    @EJB
+    private CRMaestroSeguimientoFacadeInterfaceLocal crMaestroSeguimientoFacadeInterfaceLocal;
+
+    private CRSeguimientoCarteraFacadeInterfaceLocal crSeguimientoCarteraFacadeInterfaceLocal;
+    @EJB
+    private CRTipoAlertaInterfaceLocal crTipoAlertaInterfaceLocal;
+    @EJB
+    private CRCalificacionCreditoSbsInterfaceLocal crCalificacionCreditoSbsInterfaceLocal;
+
+    public void enviar(List<BeanCRCargaAlerta> lstBeanCRCargaAlerta,
+                       GenericBean genericBean,
+                       BeanParametrosAuditoria beanParametrosAuditoria) throws Exception {
+        final String modulo = "CRCargaAlertaFacade.enviar()";
+        String myQueue;
+        try {
+            myQueue = "myQueueCARGAALERTA";
+            enviar(lstBeanCRCargaAlerta, myQueue, genericBean, beanParametrosAuditoria);
+        } catch (final Exception e) {
+            throw handlerError(e, beanParametrosAuditoria.getUsuarioInsercion(), modulo);
+        }
+
+    }
+
+    public void procesar(List<BeanCRCargaAlerta> lstBeanCRCargaAlerta,
+                         GenericBean genericBean,
+                         BeanParametrosAuditoria beanParametrosAuditoria) {
+        int correctos = 0;
+        int conError = 0;
+        int total = 0;
+        List<String> lstErrores;
+        String llave = null;
+        BeanParametrosLog beanParametrosLog = null;
+        String chkReproceso = null;
+        try {
+
+            crSeguimientoCarteraFacadeInterfaceLocal = lookup(CRSeguimientoCarteraFacade.LocalJNDIName);
+
+            if (_isEmpty(lstBeanCRCargaAlerta)) {
+                return;
+            }
+            total = lstBeanCRCargaAlerta.size();
+            beanParametrosLog = inicioProceso(admin.util.Constante.CODIGO_PROCESO_CARGA_MASIVA_SEGUIMIENTO_CARTERA,
+                                              beanParametrosAuditoria);
+
+            for (BeanCRCargaAlerta beanCRCargaAlerta : lstBeanCRCargaAlerta) {
+                try {
+                    llave = _toStr(beanCRCargaAlerta.getNumeroDocumento());
+                    lstErrores = validarRegistro(beanCRCargaAlerta, beanParametrosAuditoria);
+                    if (!_isEmpty(lstErrores)) {
+                        conError++;
+                        for (String codigoError : lstErrores) {
+                            registraErrorEnProceso(beanParametrosLog,
+                                                   correctos,
+                                                   conError,
+                                                   total,
+                                                   llave,
+                                                   codigoError,
+                                                   null,
+                                                   admin.util.Constante.TIPO_ERROR_CONTROLADO,
+                                                   beanParametrosAuditoria);
+                        }
+                        continue;
+                    }
+                } catch (Exception e) {
+                    conError++;
+                    registraErrorEnProceso(beanParametrosLog,
+                                           correctos,
+                                           conError,
+                                           total,
+                                           llave,
+                                           ConstantesErrores.ERROR_NO_CONTROLADO,
+                                           e.getMessage(),
+                                           admin.util.Constante.TIPO_ERROR_NO_CONTROLADO,
+                                           beanParametrosAuditoria);
+                    continue;
+                }
+                correctos++;
+                if ((correctos + conError) % 50 == 0) {
+                    actualizaProceso(beanParametrosLog, correctos, conError, total, beanParametrosAuditoria);
+                }
+            }
+
+            if (conError == 0) {
+
+                chkReproceso = genericBean.getPropertyString("chkReproceso");
+
+                if (_equiv(chkReproceso, "S")) {
+                    List<CRMaestroSeguimiento> lstCRMaestroSeguimientoAnulados = crMaestroSeguimientoFacadeInterfaceLocal.anularMaestro(beanParametrosAuditoria);
+
+                    if (!_isEmpty(lstCRMaestroSeguimientoAnulados)) {
+                        crSeguimientoCarteraFacadeInterfaceLocal.anularDetallesLotes(lstCRMaestroSeguimientoAnulados,
+                                                                                     beanParametrosAuditoria);
+                    }
+                }
+
+                BeanCRMaestroSeguimiento beanCRMaestroSeguimiento = new BeanCRMaestroSeguimiento();
+                BeanCRSeguimientoCartera beanCRSeguimientoCartera = new BeanCRSeguimientoCartera();
+
+                beanCRMaestroSeguimiento.setNumeroRegistros(total);
+                beanCRMaestroSeguimiento.setUsuarioEstado(beanParametrosAuditoria.getUsuarioInsercion());
+                beanCRMaestroSeguimiento.setFechaProceso(beanParametrosAuditoria.getFechaProceso());
+
+                String idLote = crMaestroSeguimientoFacadeInterfaceLocal.guardarMaestro(beanCRMaestroSeguimiento,
+                                                                                        beanParametrosAuditoria);
+
+                for (BeanCRCargaAlerta beanCRCargaAlerta : lstBeanCRCargaAlerta) {
+
+                    beanCRSeguimientoCartera.setCodigoCliente(beanCRCargaAlerta.getCodigoCliente());
+                    beanCRSeguimientoCartera.setCodigoAgencia(beanCRCargaAlerta.getCodigoAgencia());
+                    beanCRSeguimientoCartera.setFechaAlerta(FormatoFecha.dateToStringDDMMYYYYY(beanCRCargaAlerta.getFechaAlerta()));
+                    beanCRSeguimientoCartera.setFechaAsignada(FormatoFecha.dateToStringDDMMYYYYY(beanParametrosAuditoria.getFechaProceso()));
+                    beanCRSeguimientoCartera.setFechaAtencion(FormatoFecha.dateToStringDDMMYYYYY(beanCRCargaAlerta.getFechaAtencion()));
+                    beanCRSeguimientoCartera.setIdLote(idLote);
+                    beanCRSeguimientoCartera.setInteresDevengado(beanCRCargaAlerta.getInteresDevengado());
+                    beanCRSeguimientoCartera.setMontoAlerta(beanCRCargaAlerta.getMontoAlerta());
+                    beanCRSeguimientoCartera.setMontoProvision(beanCRCargaAlerta.getMontoProvision());
+                    beanCRSeguimientoCartera.setCodigoTipoAlerta(beanCRCargaAlerta.getTipoAlerta());
+                    beanCRSeguimientoCartera.setIdTipoSeguimiento(Constante.CODIGO_TIPO_SEGUIMIENTO_MASIVO);
+                    beanCRSeguimientoCartera.setUsuarioAsignado(beanCRCargaAlerta.getUsuarioAsignado());
+                    beanCRSeguimientoCartera.setCodigoCalificacionSBS(beanCRCargaAlerta.getCodigoCalificacionSBS());
+                    beanCRSeguimientoCartera.setComentario(beanCRCargaAlerta.getComentario());
+
+                    crSeguimientoCarteraFacadeInterfaceLocal.guardarDetalleMasivo(beanCRSeguimientoCartera,
+                                                                                  beanParametrosAuditoria);
+                }
+
+                entityManager.flush();
+
+            }
+
+            actualizaProceso(beanParametrosLog, correctos, conError, total, beanParametrosAuditoria);
+            if (conError > 0) {
+                finalizaProcesoConError(beanParametrosLog, beanParametrosAuditoria);
+            } else {
+                finalizaProceso(beanParametrosLog);
+            }
+        } catch (Exception e) {
+            conError = total;
+            correctos = 0;
+            registraErrorEnProceso(beanParametrosLog,
+                                   correctos,
+                                   conError,
+                                   total,
+                                   CADENA_VACIA,
+                                   ConstantesErrores.ERROR_NO_CONTROLADO,
+                                   e.getMessage(),
+                                   admin.util.Constante.TIPO_ERROR_NO_CONTROLADO,
+                                   beanParametrosAuditoria);
+
+            finalizaProcesoConError(beanParametrosLog, beanParametrosAuditoria);
+        }
+
+    }
+
+    private List<String> validarRegistro(BeanCRCargaAlerta beanCRCargaAlerta,
+                                         BeanParametrosAuditoria beanParametrosAuditoria) throws Exception {
+
+        List<String> lstErrores = new ArrayList<String>();
+        String codigoAgencia = "";
+
+        //EXISTENCIA DE CLIENTE
+        CLPersonas clPersona = clPersonasInterfaceLocal.findByDocumentoIdentidadAndTipoDocumento(beanCRCargaAlerta.getTipoDocumento(),
+                                                                                                 beanCRCargaAlerta.getNumeroDocumento());
+
+        if (_isEmpty(clPersona)) {
+            lstErrores.add(ConstantesErrores.ERROR_1988);
+        } else {
+            CLClientes clCliente = clClientesInterfaceLocal.findById(clPersona.getCodigoPersona());
+
+            if (_isEmpty(clCliente)) {
+                lstErrores.add(ConstantesErrores.ERROR_1834);
+            } else {
+                beanCRCargaAlerta.setCodigoCliente(clCliente.getCodigoCliente());
+
+                List<CRCuentaCredito> lstCRCuentaCredito = new ArrayList<CRCuentaCredito>();
+                lstCRCuentaCredito = crCuentaCreditoInterfaceLocal.findByCodigoClienteEstadoCredito(clCliente.getCodigoCliente(),
+                                                                                                    "VG",
+                                                                                                    "1");
+                if (_isEmpty(lstCRCuentaCredito)) {
+                    lstErrores.add(ConstantesErrores.ERROR_11174);
+                } else {
+                    codigoAgencia = lstCRCuentaCredito.get(0).getCodigoAgencia();
+                    beanCRCargaAlerta.setCodigoAgencia(codigoAgencia);
+                }
+            }
+        }
+
+        //FECHA DE ATENCION
+        if (!beanCRCargaAlerta.getFechaAtencion().after(beanParametrosAuditoria.getFechaProceso())) {
+            lstErrores.add(ConstantesErrores.ERROR_11175);
+        }
+
+        //USUARIO ASIGNADO
+        CBUsuario cbUsuario = cbUsuarioInterfaceLocal.findById(beanCRCargaAlerta.getUsuarioAsignado());
+        if (_isEmpty(cbUsuario)) {
+            lstErrores.add(ConstantesErrores.ERROR_983);
+        } else {
+            // TODO quitar
+            codigoAgencia = "";
+            if (!_isEmpty(codigoAgencia)) {
+                List<CBUsuario> listCBUsuario = cbUsuarioInterfaceLocal.lstUsuariosfindByCodigoAgenciaCodigoEmpresaEstadoRegistro(Constante.ID_TFC,
+                                                                                                                                  codigoAgencia,
+                                                                                                                                  cbUsuario.getCodigoUsuario());
+                if (_isEmpty(listCBUsuario)) {
+                    lstErrores.add(ConstantesErrores.ERROR_11176);
+                }
+            }
+        }
+
+        CRTipoAlerta crTipoAlerta = crTipoAlertaInterfaceLocal.findById(beanCRCargaAlerta.getTipoAlerta());
+        if (_isEmpty(crTipoAlerta)) {
+            lstErrores.add(ConstantesErrores.ERROR_11177);
+        }
+
+        CRCalificacionCreditoSbs crCalificacionCreditoSbs = crCalificacionCreditoSbsInterfaceLocal.findById(beanCRCargaAlerta.getCodigoCalificacionSBS());
+        if (_isEmpty(crCalificacionCreditoSbs)) {
+            lstErrores.add(ConstantesErrores.ERROR_11177);
+        }
+
+        return lstErrores;
+    }
+
+}
\ No newline at end of file
diff --git a/FINANCIERONEW/src/financ/seguimientoCartera/facade/CRDocumentosPorActividadFacade.java b/FINANCIERONEW/src/financ/seguimientoCartera/facade/CRDocumentosPorActividadFacade.java
new file mode 100644
index 0000000..11a6bcb
--- /dev/null
+++ b/FINANCIERONEW/src/financ/seguimientoCartera/facade/CRDocumentosPorActividadFacade.java
@@ -0,0 +1,26 @@
+package financ.seguimientoCartera.facade;
+
+import javax.ejb.EJB;
+import javax.ejb.Stateless;
+
+import pe.com.tfc.utils.AbstractFacade;
+import financ.seguimientoCartera.entity.CRDocumentosPorActividad;
+import financ.seguimientoCartera.local.CRDocumentosPorActividadFacadeInterfaceLocal;
+import financ.seguimientoCartera.local.CRDocumentosPorActividadInterfaceLocal;
+
+/**
+ * CRDocumentosPorActividadFacade
+ * 
+ * @author kdelacruz
+ * @since [S17-022] 04.04.2017
+ */
+
+@Stateless
+public class CRDocumentosPorActividadFacade extends AbstractFacade<CRDocumentosPorActividad> implements CRDocumentosPorActividadFacadeInterfaceLocal {
+
+    public static final String LocalJNDIName = CRDocumentosPorActividadFacade.class.getSimpleName() + "/local";
+
+    @EJB
+    private CRDocumentosPorActividadInterfaceLocal crDocumentosPorActividadInterfaceLocal;
+
+}
diff --git a/FINANCIERONEW/src/financ/seguimientoCartera/facade/CRMaestroSeguimientoFacade.java b/FINANCIERONEW/src/financ/seguimientoCartera/facade/CRMaestroSeguimientoFacade.java
new file mode 100644
index 0000000..48e1b9e
--- /dev/null
+++ b/FINANCIERONEW/src/financ/seguimientoCartera/facade/CRMaestroSeguimientoFacade.java
@@ -0,0 +1,229 @@
+package financ.seguimientoCartera.facade;
+
+import java.util.ArrayList;
+import java.util.HashMap;
+import java.util.List;
+import java.util.Map;
+
+import javax.ejb.EJB;
+import javax.ejb.Stateless;
+
+import pe.com.tfc.utils.AbstractFacade;
+import pe.com.tfc.utils.ErrorControladoException;
+import pe.com.tfc.utils.GenericBean;
+import pe.com.tfc.utils.PropertyParams;
+import admin.contab.beans.BeanParametrosAuditoria;
+import admin.contab.entity.CBCatalogoCheckConstraint;
+import admin.contab.entity.CBCatalogoCheckConstraintId;
+import admin.contab.entity.CBUsuario;
+import admin.contab.local.CBCatalogoCheckConstraintInterfaceLocal;
+import admin.contab.local.CBUsuarioInterfaceLocal;
+import admin.util.ConstantesErrores;
+import financ.seguimientoCartera.beans.BeanCRMaestroSeguimiento;
+import financ.seguimientoCartera.entity.CRMaestroSeguimiento;
+import financ.seguimientoCartera.local.CRMaestroSeguimientoFacadeInterfaceLocal;
+import financ.seguimientoCartera.local.CRMaestroSeguimientoInterfaceLocal;
+import financ.seguimientoCartera.local.CRSeguimientoCarteraFacadeInterfaceLocal;
+import financ.util.Constante;
+import financ.util.FormatoFecha;
+import financ.util.Paginacion;
+
+/**
+ * CRMaestroSeguimientoFacade
+ * 
+ * @author rsanchez
+ * @since [S17-022] 28.03.2017
+ */
+
+@Stateless
+public class CRMaestroSeguimientoFacade extends AbstractFacade<CRMaestroSeguimiento> implements CRMaestroSeguimientoFacadeInterfaceLocal {
+
+    public static final String LocalJNDIName = CRMaestroSeguimientoFacade.class.getSimpleName() + "/local";
+
+    @EJB
+    private CRMaestroSeguimientoInterfaceLocal crMaestroSeguimientoInterfaceLocal;
+    @EJB
+    private CBUsuarioInterfaceLocal cbUsuarioInterfaceLocal;
+    @EJB
+    private CBCatalogoCheckConstraintInterfaceLocal cbCatalogoCheckConstraintInterfaceLocal;
+    @EJB
+    private CRSeguimientoCarteraFacadeInterfaceLocal crSeguimientoCarteraFacadeInterfaceLocal;
+
+    public String guardarMaestro(BeanCRMaestroSeguimiento beanCRMaestroSeguimiento,
+                                 BeanParametrosAuditoria beanParametrosAuditoria) throws Exception {
+        try {
+            String correlativo = generarCorrelativo("CRMSGCA", 15, beanParametrosAuditoria);
+            CRMaestroSeguimiento crMaestroSeguimiento = new CRMaestroSeguimiento();
+
+            crMaestroSeguimiento.setIdLote(correlativo);
+            crMaestroSeguimiento.setFechaProceso(beanParametrosAuditoria.getFechaProceso());
+            crMaestroSeguimiento.setNumeroRegistros(beanCRMaestroSeguimiento.getNumeroRegistros());
+            crMaestroSeguimiento.setCodigoEstado(Constante.CODIGO_ESTADO_LOTE_REGISTRADO);
+            crMaestroSeguimiento.setUsuarioEstado(beanParametrosAuditoria.getUsuarioInsercion());
+
+            crMaestroSeguimiento.setEstadoRegistro(Constante.ESTADO_REGISTRO_VIGENTE);
+            setInsercionAuditoria(crMaestroSeguimiento, beanParametrosAuditoria);
+
+            crMaestroSeguimientoInterfaceLocal.save(crMaestroSeguimiento);
+
+            return correlativo;
+
+        } catch (Exception e) {
+            throw handlerError(e,
+                               beanParametrosAuditoria.getUsuarioInsercion(),
+                               "CRMaestroSeguimientoFacade.guardarMaestro()");
+        }
+    }
+
+    private BeanCRMaestroSeguimiento getBeanCRMaestroSeguimiento(CRMaestroSeguimiento crMaestroSeguimiento,
+                                                                 BeanParametrosAuditoria beanParametrosAuditoria) throws Exception {
+        CBUsuario cbUsuario;
+        CBCatalogoCheckConstraint cbCatalogoCheckConstraint;
+        BeanCRMaestroSeguimiento beanCRMaestroSeguimiento = new BeanCRMaestroSeguimiento();
+        if (_isEmpty(crMaestroSeguimiento)) {
+            return beanCRMaestroSeguimiento;
+        }
+
+        beanCRMaestroSeguimiento.setCodigoEstado(crMaestroSeguimiento.getCodigoEstado());
+        beanCRMaestroSeguimiento.setFechaProceso(crMaestroSeguimiento.getFechaProceso());
+        beanCRMaestroSeguimiento.setIdLote(crMaestroSeguimiento.getIdLote());
+        beanCRMaestroSeguimiento.setNumeroRegistros(crMaestroSeguimiento.getNumeroRegistros());
+        beanCRMaestroSeguimiento.setHoraProceso(FormatoFecha.obtenerHoraFecha(FormatoFecha.dateToStringDDMMYYYY24HHMMSS(crMaestroSeguimiento.getFechaInsercion())));
+
+        beanCRMaestroSeguimiento.setUsuarioCarga(crMaestroSeguimiento.getUsuarioInsercion());
+        cbUsuario = cbUsuarioInterfaceLocal.findById(crMaestroSeguimiento.getUsuarioInsercion());
+        if (!_isEmpty(cbUsuario)) {
+            beanCRMaestroSeguimiento.setNombreUsuarioCarga(cbUsuario.getNombreCompleto());
+        }
+
+        if (!_equiv("REG", crMaestroSeguimiento.getCodigoEstado())) {
+            beanCRMaestroSeguimiento.setUsuarioEstado(crMaestroSeguimiento.getUsuarioEstado());
+            cbUsuario = cbUsuarioInterfaceLocal.findById(crMaestroSeguimiento.getUsuarioEstado());
+            if (!_isEmpty(cbUsuario)) {
+                beanCRMaestroSeguimiento.setNombreUsuarioEstado(cbUsuario.getNombreCompleto());
+            }
+        }
+
+        cbCatalogoCheckConstraint = cbCatalogoCheckConstraintInterfaceLocal.findById(new CBCatalogoCheckConstraintId("CRMSGCA", "C_CODEST", crMaestroSeguimiento.getCodigoEstado()));
+        if (!_isEmpty(cbCatalogoCheckConstraint)) {
+            beanCRMaestroSeguimiento.setDescripcionEstado(cbCatalogoCheckConstraint.getDescripcion());
+            ;
+        }
+
+        return beanCRMaestroSeguimiento;
+    }
+
+    public Map<String, Object> buscarLoteSeguimiento(GenericBean genericBean,
+                                                     BeanParametrosAuditoria beanParametrosAuditoria) throws Exception {
+        List<BeanCRMaestroSeguimiento> lstBeanCRMaestroSeguimiento = new ArrayList<BeanCRMaestroSeguimiento>(0);
+        Map<String, Object> mapRespuesta = new HashMap<String, Object>(0);
+        List<CRMaestroSeguimiento> lstCRMaestroSeguimiento;
+        Long cantReg;
+        int inicio, pagina;
+        PropertyParams propertyParams;
+        try {
+            propertyParams = new PropertyParams();
+
+            pagina = genericBean.getProperty("pagina", Integer.class);
+            inicio = (pagina - 1) * Paginacion.NUM_REG;
+            propertyParams.setFirstResult(inicio);
+            propertyParams.setMaxResults(Paginacion.NUM_REG);
+
+            if (!_isEmpty(genericBean.getPropertyString("fechaAsignacionInicial"))) {
+                propertyParams.addProperty("fechaProceso",
+                                           genericBean.getPropertyDate("fechaAsignacionInicial"),
+                                           PropertyParams.OPERADOR_MAYOR_IGUAL,
+                                           "fechaAsignacionInicial");
+            }
+
+            if (!_isEmpty(genericBean.getPropertyString("fechaAsignacionFinal"))) {
+                propertyParams.addProperty("fechaProceso",
+                                           genericBean.getPropertyDate("fechaAsignacionFinal"),
+                                           PropertyParams.OPERADOR_MENOR_IGUAL,
+                                           "fechaAsignacionFinal");
+            }
+
+            if (!_isEmpty(genericBean.getPropertyString("codigoEstado"))) {
+                propertyParams.addProperty("codigoEstado", genericBean.getPropertyString("codigoEstado"));
+            }
+            propertyParams.addProperty("estadoRegistro", Constante.ESTADO_REGISTRO_VIGENTE);
+            propertyParams.addPropertyOrder("idLote", true);
+
+            cantReg = crMaestroSeguimientoInterfaceLocal.countByProperties(propertyParams);
+            lstCRMaestroSeguimiento = crMaestroSeguimientoInterfaceLocal.findByProperties(propertyParams);
+
+            if (!_isEmpty(lstCRMaestroSeguimiento)) {
+
+                for (CRMaestroSeguimiento crMaestroSeguimiento : lstCRMaestroSeguimiento) {
+                    lstBeanCRMaestroSeguimiento.add(getBeanCRMaestroSeguimiento(crMaestroSeguimiento,
+                                                                                beanParametrosAuditoria));
+                }
+
+            }
+
+            mapRespuesta.put("cantReg", cantReg);
+            mapRespuesta.put("lstBeanCRMaestroSeguimiento", lstBeanCRMaestroSeguimiento);
+
+        } catch (Exception e) {
+            throw handlerError(e,
+                               beanParametrosAuditoria.getUsuarioInsercion(),
+                               "CRMaestroSeguimientoFacade.buscarLoteSeguimiento()");
+        }
+        return mapRespuesta;
+    }
+
+    public void autorizar(String idLote,
+                          String estadoCambiaLote,
+                          BeanParametrosAuditoria beanParametrosAuditoria) throws Exception {
+        CRMaestroSeguimiento crMaestroSeguimiento = new CRMaestroSeguimiento();
+
+        try {
+            crMaestroSeguimiento = crMaestroSeguimientoInterfaceLocal.findById(idLote);
+
+            if (!_equiv(crMaestroSeguimiento.getCodigoEstado(), Constante.CODIGO_ESTADO_LOTE_REGISTRADO)) {
+                throw new ErrorControladoException(ConstantesErrores.ERROR_11172);
+            }
+
+            if (_equiv(estadoCambiaLote, Constante.CODIGO_LOTE_APROBADO)) {
+                crSeguimientoCarteraFacadeInterfaceLocal.asignarMasivo(idLote, beanParametrosAuditoria);
+            }
+
+            crMaestroSeguimiento.setCodigoEstado(estadoCambiaLote);
+            crMaestroSeguimiento.setUsuarioEstado(beanParametrosAuditoria.getUsuarioModificacion());
+            setModificacionAuditoria(crMaestroSeguimiento, beanParametrosAuditoria);
+            crMaestroSeguimientoInterfaceLocal.update(crMaestroSeguimiento);
+
+        } catch (Exception e) {
+            throw handlerError(e,
+                               beanParametrosAuditoria.getUsuarioInsercion(),
+                               "CRMaestroSeguimientoFacade.autorizar()");
+        }
+
+    }
+
+    public List<CRMaestroSeguimiento> anularMaestro(BeanParametrosAuditoria beanParametrosAuditoria) throws Exception {
+
+        try {
+            PropertyParams propertyParams = new PropertyParams();
+
+            propertyParams.addProperty("codigoEstado", Constante.CODIGO_ESTADO_LOTE_REGISTRADO);
+            propertyParams.addProperty("fechaProceso", beanParametrosAuditoria.getFechaProceso());
+
+            List<CRMaestroSeguimiento> lstCRMaestroSeguimiento = crMaestroSeguimientoInterfaceLocal.findByProperties(propertyParams);
+
+            if (!_isEmpty(lstCRMaestroSeguimiento)) {
+                for (CRMaestroSeguimiento crMaestroSeguimiento : lstCRMaestroSeguimiento) {
+                    crMaestroSeguimiento.setEstadoRegistro(Constante.ESTADO_REGISTRO_NOVIGENTE);
+                    setModificacionAuditoria(crMaestroSeguimiento, beanParametrosAuditoria);
+                    crMaestroSeguimientoInterfaceLocal.update(crMaestroSeguimiento);
+                }
+            }
+            return lstCRMaestroSeguimiento;
+        } catch (Exception e) {
+            throw handlerError(e,
+                               beanParametrosAuditoria.getUsuarioInsercion(),
+                               "CRMaestroSeguimientoFacade.anularMaestro()");
+        }
+    }
+
+}
diff --git a/FINANCIERONEW/src/financ/seguimientoCartera/facade/CRMotivoSeguimientoCarteraFacade.java b/FINANCIERONEW/src/financ/seguimientoCartera/facade/CRMotivoSeguimientoCarteraFacade.java
new file mode 100644
index 0000000..26df532
--- /dev/null
+++ b/FINANCIERONEW/src/financ/seguimientoCartera/facade/CRMotivoSeguimientoCarteraFacade.java
@@ -0,0 +1,88 @@
+package financ.seguimientoCartera.facade;
+
+import java.util.ArrayList;
+import java.util.List;
+
+import javax.ejb.EJB;
+import javax.ejb.Stateless;
+
+import pe.com.tfc.utils.AbstractFacade;
+import pe.com.tfc.utils.PropertyParams;
+import admin.contab.beans.BeanParametrosAuditoria;
+import financ.seguimientoCartera.beans.BeanCRMotivoSeguimientoCartera;
+import financ.seguimientoCartera.entity.CRMotivoSeguimientoCartera;
+import financ.seguimientoCartera.local.CRMotivoSeguimientoCarteraFacadeInterfaceLocal;
+import financ.seguimientoCartera.local.CRMotivoSeguimientoCarteraInterfaceLocal;
+import financ.util.Constante;
+
+/**
+ * CRMotivoSeguimientoCarteraFacade
+ * 
+ * @author kdelacruz
+ * @since [S17-022] 05.04.2017
+ */
+
+@Stateless
+public class CRMotivoSeguimientoCarteraFacade extends AbstractFacade<CRMotivoSeguimientoCartera> implements CRMotivoSeguimientoCarteraFacadeInterfaceLocal {
+
+    public static final String LocalJNDIName = CRMotivoSeguimientoCarteraFacade.class.getSimpleName() + "/local";
+
+    @EJB
+    private CRMotivoSeguimientoCarteraInterfaceLocal crMotivoSeguimientoCarteraInterfaceLocal;
+
+    public List<BeanCRMotivoSeguimientoCartera> listarPorTipoResputa(String tipoRespuesta,
+                                                                     String idEtapa,
+                                                                     BeanParametrosAuditoria beanParametrosAuditoria) throws Exception {
+        final String modulo = "CRMotivoSeguimientoCarteraFacade.listarPorTipoResputa()";
+        final List<BeanCRMotivoSeguimientoCartera> listBeanCRMotivoSeguimientoCartera = new ArrayList<BeanCRMotivoSeguimientoCartera>(0);
+        List<CRMotivoSeguimientoCartera> listCRMotivoSeguimientoCartera = new ArrayList<CRMotivoSeguimientoCartera>(0);
+        PropertyParams propertyParams;
+
+        try {
+            propertyParams = new PropertyParams();
+            if (!_isEmpty(tipoRespuesta)) {
+                propertyParams.addProperty("tipoRespuesta", tipoRespuesta);
+            }
+            propertyParams.addProperty("wfEtapa.idEtapa", idEtapa);
+            propertyParams.addProperty("estadoRegistro", Constante.INDICADOR_SI);
+            listCRMotivoSeguimientoCartera = crMotivoSeguimientoCarteraInterfaceLocal.findByProperties(propertyParams);
+
+            for (final CRMotivoSeguimientoCartera crMotivoSeguimientoCartera : listCRMotivoSeguimientoCartera) {
+                listBeanCRMotivoSeguimientoCartera.add(getBeanCRMotivoSeguimientoCartera(crMotivoSeguimientoCartera));
+            }
+        } catch (final Exception e) {
+            throw handlerError(e, beanParametrosAuditoria.getUsuarioInsercion(), modulo);
+        }
+        return listBeanCRMotivoSeguimientoCartera;
+    }
+
+    public BeanCRMotivoSeguimientoCartera consultaMotivo(String idMotivo,
+                                                         BeanParametrosAuditoria beanParametrosAuditoria) throws Exception {
+        final String modulo = "CRMotivoSeguimientoCarteraFacade.BeanCRMotivoSeguimientoCartera()";
+        CRMotivoSeguimientoCartera crMotivoSeguimientoCartera;
+        BeanCRMotivoSeguimientoCartera beanCRMotivoSeguimientoCartera;
+
+        try {
+            crMotivoSeguimientoCartera = crMotivoSeguimientoCarteraInterfaceLocal.findById(idMotivo);
+            beanCRMotivoSeguimientoCartera = getBeanCRMotivoSeguimientoCartera(crMotivoSeguimientoCartera);
+        } catch (final Exception e) {
+            throw handlerError(e, beanParametrosAuditoria.getUsuarioInsercion(), modulo);
+        }
+        return beanCRMotivoSeguimientoCartera;
+    }
+
+    private BeanCRMotivoSeguimientoCartera getBeanCRMotivoSeguimientoCartera(CRMotivoSeguimientoCartera crMotivoSeguimientoCartera) {
+        BeanCRMotivoSeguimientoCartera beanCRMotivoSeguimientoCartera = new BeanCRMotivoSeguimientoCartera();
+        if (_isEmpty(crMotivoSeguimientoCartera)) {
+            return beanCRMotivoSeguimientoCartera;
+        }
+
+        beanCRMotivoSeguimientoCartera.setDescripcionMotivo(crMotivoSeguimientoCartera.getDescripcionMotivo());
+        beanCRMotivoSeguimientoCartera.setTipoRespuesta(crMotivoSeguimientoCartera.getTipoRespuesta());
+        beanCRMotivoSeguimientoCartera.setIdMotivoSeguimiento(crMotivoSeguimientoCartera.getIdMotivoSeguimiento());
+        beanCRMotivoSeguimientoCartera.setIndicadorFechaMotivo(crMotivoSeguimientoCartera.getIndicadorFechaMotivo());
+
+        return beanCRMotivoSeguimientoCartera;
+    }
+
+}
diff --git a/FINANCIERONEW/src/financ/seguimientoCartera/facade/CRMovimientoPorSeguimientoFacade.java b/FINANCIERONEW/src/financ/seguimientoCartera/facade/CRMovimientoPorSeguimientoFacade.java
new file mode 100644
index 0000000..6b282bc
--- /dev/null
+++ b/FINANCIERONEW/src/financ/seguimientoCartera/facade/CRMovimientoPorSeguimientoFacade.java
@@ -0,0 +1,117 @@
+package financ.seguimientoCartera.facade;
+
+import java.util.ArrayList;
+import java.util.List;
+
+import javax.ejb.EJB;
+import javax.ejb.Stateless;
+
+import pe.com.tfc.utils.AbstractFacade;
+import pe.com.tfc.utils.PropertyParams;
+import admin.contab.beans.BeanParametrosAuditoria;
+import financ.seguimientoCartera.beans.BeanCRMovimientoPorSeguimiento;
+import financ.seguimientoCartera.entity.CRMotivoSeguimientoCartera;
+import financ.seguimientoCartera.entity.CRMovimientoPorSeguimiento;
+import financ.seguimientoCartera.entity.CRSeguimientoCartera;
+import financ.seguimientoCartera.local.CRMotivoSeguimientoCarteraInterfaceLocal;
+import financ.seguimientoCartera.local.CRMovimientoPorSeguimientoFacadeInterfaceLocal;
+import financ.seguimientoCartera.local.CRMovimientoPorSeguimientoInterfaceLocal;
+import financ.seguimientoCartera.local.CRSeguimientoCarteraInterfaceLocal;
+import financ.util.Constante;
+import financ.workflow.entity.WFMovimientos;
+import financ.workflow.local.WFMovimientosInterfaceLocal;
+
+/**
+ * CRMovimientoPorSeguimientoFacade
+ * 
+ * @author kdelacruz
+ * @since [S17-022] 05.04.2017
+ */
+
+@Stateless
+public class CRMovimientoPorSeguimientoFacade extends AbstractFacade<CRMovimientoPorSeguimiento> implements CRMovimientoPorSeguimientoFacadeInterfaceLocal {
+
+    public static final String LocalJNDIName = CRMovimientoPorSeguimientoFacade.class.getSimpleName() + "/local";
+
+    @EJB
+    private CRMovimientoPorSeguimientoInterfaceLocal crMovimientoPorSeguimientoInterfaceLocal;
+    @EJB
+    private CRSeguimientoCarteraInterfaceLocal crSeguimientoCarteraInterfaceLocal;
+    @EJB
+    private CRMotivoSeguimientoCarteraInterfaceLocal crMotivoSeguimientoCarteraInterfaceLocal;
+    @EJB
+    private WFMovimientosInterfaceLocal wfMovimientosInterfaceLocal;
+
+    public BeanCRMovimientoPorSeguimiento listarMovimientoSeguimientoUltimoRegistro(String idSeguimientoCartera,
+                                                                                    String idEtapa,
+                                                                                    BeanParametrosAuditoria beanParametrosAuditoria) throws Exception {
+        final String modulo = "CRMovimientoPorSeguimientoFacade.listarUltimoRegistro()";
+        List<CRMovimientoPorSeguimiento> listCRMovimientoPorSeguimiento = new ArrayList<CRMovimientoPorSeguimiento>(0);
+        BeanCRMovimientoPorSeguimiento beanCRMovimientoPorSeguimiento;
+        PropertyParams propertyParams;
+
+        try {
+            beanCRMovimientoPorSeguimiento = new BeanCRMovimientoPorSeguimiento();
+            propertyParams = new PropertyParams();
+            propertyParams.addProperty("crSeguimientoCartera.correlativoSeguimiento", idSeguimientoCartera);
+            propertyParams.addProperty("wfMovimientos.wfEtapaFinal.idEtapa", idEtapa);
+            propertyParams.addProperty("estadoRegistro", Constante.INDICADOR_SI);
+            propertyParams.setMaxResults(1);
+            propertyParams.setOrderBy(true, "crSeguimientoCartera.correlativoSeguimiento");
+            listCRMovimientoPorSeguimiento = crMovimientoPorSeguimientoInterfaceLocal.findByProperties(propertyParams);
+
+            for (final CRMovimientoPorSeguimiento crMovimientoPorSeguimiento : listCRMovimientoPorSeguimiento) {
+                beanCRMovimientoPorSeguimiento = getBeanCRMovimientoPorSeguimiento(crMovimientoPorSeguimiento);
+            }
+        } catch (final Exception e) {
+            throw handlerError(e, beanParametrosAuditoria.getUsuarioInsercion(), modulo);
+        }
+        return beanCRMovimientoPorSeguimiento;
+    }
+
+    private BeanCRMovimientoPorSeguimiento getBeanCRMovimientoPorSeguimiento(CRMovimientoPorSeguimiento crMovimientoPorSeguimiento) {
+        BeanCRMovimientoPorSeguimiento beanCRMovimientoPorSeguimiento = new BeanCRMovimientoPorSeguimiento();
+        if (_isEmpty(crMovimientoPorSeguimiento)) {
+            return beanCRMovimientoPorSeguimiento;
+        }
+
+        beanCRMovimientoPorSeguimiento.setIdMovimiento(crMovimientoPorSeguimiento.getWfMovimientos().getIdMovimiento());
+        beanCRMovimientoPorSeguimiento.setIdSeguimientoCartera(crMovimientoPorSeguimiento.getCrSeguimientoCartera().getCorrelativoSeguimiento());
+        beanCRMovimientoPorSeguimiento.setIdTipoMotivo(crMovimientoPorSeguimiento.getCrMotivoSeguimientoCartera().getIdMotivoSeguimiento());
+        beanCRMovimientoPorSeguimiento.setIdTipoRespuesta(crMovimientoPorSeguimiento.getIdTipoRespuesta());
+
+        return beanCRMovimientoPorSeguimiento;
+    }
+
+    public void guardarMovimientoPorSeguimiento(String idMotivoSeguimiento,
+                                                String idMovimiento,
+                                                String idSeguimientoCartera,
+                                                String idTipoRespuesta,
+                                                BeanParametrosAuditoria beanParametrosAuditoria) throws Exception {
+
+        String modulo = "CRMovimientoPorSeguimientoFacade.guardarMovimientoPorSeguimiento()";
+        String usuario = beanParametrosAuditoria.getUsuarioInsercion();
+        String correlativo;
+        CRMovimientoPorSeguimiento crMovimientoPorSeguimiento = new CRMovimientoPorSeguimiento();
+        try {
+            correlativo = generarCorrelativo("CRDSGMV", 15, beanParametrosAuditoria);
+            crMovimientoPorSeguimiento.setIdMovimientoSeguimiento(correlativo);
+            crMovimientoPorSeguimiento.setIdTipoRespuesta(Constante.CODIGO_TIPO_RESPUESTA_ENVIADO);
+
+            CRSeguimientoCartera crSeguimientoCartera = crSeguimientoCarteraInterfaceLocal.findById(idSeguimientoCartera);
+            crMovimientoPorSeguimiento.setCrSeguimientoCartera(crSeguimientoCartera);
+
+            CRMotivoSeguimientoCartera crMotivoSeguimientoCartera = crMotivoSeguimientoCarteraInterfaceLocal.findById(idMotivoSeguimiento);
+            crMovimientoPorSeguimiento.setCrMotivoSeguimientoCartera(crMotivoSeguimientoCartera);
+
+            WFMovimientos wfMovimientos = wfMovimientosInterfaceLocal.findById(idMovimiento);
+            crMovimientoPorSeguimiento.setWfMovimientos(wfMovimientos);
+
+            crMovimientoPorSeguimiento.setEstadoRegistro(Constante.ESTADO_REGISTRO_VIGENTE);
+            setInsercionAuditoria(crMovimientoPorSeguimiento, beanParametrosAuditoria);
+            crMovimientoPorSeguimientoInterfaceLocal.save(crMovimientoPorSeguimiento);
+        } catch (Exception e) {
+            throw handlerError(e, usuario, modulo);
+        }
+    }
+}
diff --git a/FINANCIERONEW/src/financ/seguimientoCartera/facade/CRSeguimientoCarteraFacade.java b/FINANCIERONEW/src/financ/seguimientoCartera/facade/CRSeguimientoCarteraFacade.java
new file mode 100644
index 0000000..48eff0f
--- /dev/null
+++ b/FINANCIERONEW/src/financ/seguimientoCartera/facade/CRSeguimientoCarteraFacade.java
@@ -0,0 +1,516 @@
+package financ.seguimientoCartera.facade;
+
+import java.util.ArrayList;
+import java.util.HashMap;
+import java.util.List;
+import java.util.Map;
+
+import javax.ejb.EJB;
+import javax.ejb.Stateless;
+
+import pe.com.tfc.utils.AbstractFacade;
+import pe.com.tfc.utils.GenericBean;
+import pe.com.tfc.utils.PropertyParams;
+import admin.contab.beans.BeanParametrosAuditoria;
+import admin.contab.entity.CBAgencia;
+import admin.contab.entity.CBAgenciaId;
+import admin.contab.entity.CBUsuario;
+import admin.contab.local.CBAgenciaInterfaceLocal;
+import admin.contab.local.CBUsuarioInterfaceLocal;
+import admin.util.FormatoFecha;
+import financ.clientes.entity.CLPersonas;
+import financ.clientes.local.CLClientesInterfaceLocal;
+import financ.clientes.local.CLPersonasInterfaceLocal;
+import financ.creditos.entity.CRCalificacionCreditoSbs;
+import financ.creditos.local.CRCalificacionCreditoSbsInterfaceLocal;
+import financ.seguimientoCartera.beans.BeanCRSeguimientoCartera;
+import financ.seguimientoCartera.entity.CRMaestroSeguimiento;
+import financ.seguimientoCartera.entity.CRSeguimientoCartera;
+import financ.seguimientoCartera.entity.CRTipoAlerta;
+import financ.seguimientoCartera.local.CRMovimientoPorSeguimientoFacadeInterfaceLocal;
+import financ.seguimientoCartera.local.CRSeguimientoCarteraFacadeInterfaceLocal;
+import financ.seguimientoCartera.local.CRSeguimientoCarteraInterfaceLocal;
+import financ.seguimientoCartera.local.CRTipoAlertaInterfaceLocal;
+import financ.util.Constante;
+import financ.util.Paginacion;
+import financ.workflow.bean.BeanWFEventoPorEtapa;
+import financ.workflow.bean.BeanWFMaestra;
+import financ.workflow.entity.WFEvento;
+import financ.workflow.entity.WFMaestra;
+import financ.workflow.local.WFEventoInterfaceLocal;
+import financ.workflow.local.WFEventoPorEtapaFacadeInterfaceLocal;
+import financ.workflow.local.WFMaestraFacadeInterfaceLocal;
+import financ.workflow.local.WFMaestraInterfaceLocal;
+import financ.workflow.local.WFModuloFacadeInterfaceLocal;
+import financ.workflow.local.WFRutaFacadeInterfaceLocal;
+
+/**
+ * CRDetalleSeguimientoFacade
+ * 
+ * @author rsanchez
+ * @since [S17-022] 28.03.2017
+ */
+
+@Stateless
+public class CRSeguimientoCarteraFacade extends AbstractFacade<CRSeguimientoCartera> implements CRSeguimientoCarteraFacadeInterfaceLocal {
+
+    public static final String LocalJNDIName = CRSeguimientoCarteraFacade.class.getSimpleName() + "/local";
+
+    @EJB
+    private CRSeguimientoCarteraInterfaceLocal crSeguimientoCarteraInterfaceLocal;
+    @EJB
+    private WFMaestraFacadeInterfaceLocal wfMaestraFacadeInterfaceLocal;
+    @EJB
+    private WFRutaFacadeInterfaceLocal wfRutaFacadeInterfaceLocal;
+    @EJB
+    private WFEventoPorEtapaFacadeInterfaceLocal wfEventoPorEtapaFacadeInterfaceLocal;
+    @EJB
+    private CLPersonasInterfaceLocal clPersonasInterfaceLocal;
+    @EJB
+    private CRTipoAlertaInterfaceLocal crTipoAlertaInterfaceLocal;
+    @EJB
+    private CRCalificacionCreditoSbsInterfaceLocal calificacionCreditoSbsInterfaceLocal;
+    @EJB
+    private WFMaestraInterfaceLocal wfMaestraInterfaceLocal;
+    @EJB
+    private CBAgenciaInterfaceLocal cbAgenciaInterfaceLocal;
+    @EJB
+    private CLClientesInterfaceLocal clClientesInterfaceLocal;
+    @EJB
+    private CBUsuarioInterfaceLocal cbUsuarioInterfaceLocal;
+    @EJB
+    private CRMovimientoPorSeguimientoFacadeInterfaceLocal crMovimientoPorSeguimientoFacadeInterfaceLocal;
+    @EJB
+    private WFEventoInterfaceLocal wfEventoInterfaceLocal;
+    @EJB
+    private WFModuloFacadeInterfaceLocal wfModuloFacadeInterfaceLocal;
+
+    public void guardarDetalleMasivo(BeanCRSeguimientoCartera beanCRSeguimientoCartera,
+                                     BeanParametrosAuditoria beanParametrosAuditoria) throws Exception {
+
+        CRSeguimientoCartera crSeguimientoCartera;
+        String correlativoSeguimientoCartera;
+
+        try {
+            crSeguimientoCartera = new CRSeguimientoCartera();
+
+            correlativoSeguimientoCartera = generarCorrelativo("CRDSGCA", 15, beanParametrosAuditoria);
+            crSeguimientoCartera.setCorrelativoSeguimiento(correlativoSeguimientoCartera);
+
+            crSeguimientoCartera.setTipoSeguimiento(beanCRSeguimientoCartera.getIdTipoSeguimiento());
+            crSeguimientoCartera.setIdLote(beanCRSeguimientoCartera.getIdLote());
+            crSeguimientoCartera.setFechaAlerta(FormatoFecha.stringToDate(beanCRSeguimientoCartera.getFechaAlerta()));
+            crSeguimientoCartera.setMontoAlerta(beanCRSeguimientoCartera.getMontoAlerta());
+            crSeguimientoCartera.setFechaAtencion(FormatoFecha.stringToDate(beanCRSeguimientoCartera.getFechaAtencion()));
+            crSeguimientoCartera.setMontoProvision(beanCRSeguimientoCartera.getMontoProvision());
+            crSeguimientoCartera.setInteresDevengado(beanCRSeguimientoCartera.getInteresDevengado());
+            crSeguimientoCartera.setAgenciaAsignada(beanCRSeguimientoCartera.getCodigoAgencia());
+            crSeguimientoCartera.setFechaAsignacion(financ.util.FormatoFecha.stringToDateddMMyyyy(beanCRSeguimientoCartera.getFechaAsignada()));
+            crSeguimientoCartera.setUsuarioAsignado(beanCRSeguimientoCartera.getUsuarioAsignado());
+
+            CLPersonas clPersonas = clPersonasInterfaceLocal.findById(beanCRSeguimientoCartera.getCodigoCliente());
+            crSeguimientoCartera.setClPersonas(clPersonas);
+
+            CRTipoAlerta crTipoAlerta = crTipoAlertaInterfaceLocal.findById(beanCRSeguimientoCartera.getCodigoTipoAlerta());
+            crSeguimientoCartera.setCrTipoAlerta(crTipoAlerta);
+
+            CRCalificacionCreditoSbs crCalificacionCreditoSbs = calificacionCreditoSbsInterfaceLocal.findById(beanCRSeguimientoCartera.getCodigoCalificacionSBS());
+            crSeguimientoCartera.setCrCalificacionCreditoSbs(crCalificacionCreditoSbs);
+
+            crSeguimientoCartera.setComentario(beanCRSeguimientoCartera.getComentario());
+
+            crSeguimientoCartera.setEstadoRegistro(Constante.CODIGO_REGISTRO_VIGENTE);
+
+            setInsercionAuditoria(crSeguimientoCartera, beanParametrosAuditoria);
+            crSeguimientoCarteraInterfaceLocal.save(crSeguimientoCartera);
+        } catch (Exception e) {
+            throw handlerError(e,
+                               beanParametrosAuditoria.getUsuarioInsercion(),
+                               "CRDetalleSeguimientoFacade.guardarDetalleMasivo()");
+        }
+    }
+
+    public BeanCRSeguimientoCartera obtenerSeguimientoCarteraPorIdMaestra(String idMaestra,
+                                                                          BeanParametrosAuditoria beanParametrosAuditoria) throws Exception {
+        final String modulo = "CRDetalleSeguimientoFacade.obtenerDetalleSeguimientoCartera()";
+        List<CRSeguimientoCartera> listCRSeguimientoCartera = new ArrayList<CRSeguimientoCartera>(0);
+        BeanCRSeguimientoCartera beanCRSeguimientoCartera = new BeanCRSeguimientoCartera();
+        ;
+        PropertyParams propertyParams;
+
+        try {
+            propertyParams = new PropertyParams();
+            propertyParams.setMaxResults(1);
+            propertyParams.addProperty("wfMaestra.idMaestra", idMaestra);
+            listCRSeguimientoCartera = crSeguimientoCarteraInterfaceLocal.findByProperties(propertyParams);
+
+            for (final CRSeguimientoCartera crSeguimientoCartera : listCRSeguimientoCartera) {
+                beanCRSeguimientoCartera = getBeanCRSeguimientoCartera(crSeguimientoCartera, beanParametrosAuditoria);
+            }
+        } catch (final Exception e) {
+            throw handlerError(e, beanParametrosAuditoria.getUsuarioInsercion(), modulo);
+        }
+        return beanCRSeguimientoCartera;
+    }
+
+    public BeanCRSeguimientoCartera obtenerSeguimientoCartera(String correlativoSeguimiento,
+                                                              BeanParametrosAuditoria beanParametrosAuditoria) throws Exception {
+        String modulo = "CRDetalleSeguimientoFacade.obtenerDetalleSeguimientoCartera()";
+        String usuario = beanParametrosAuditoria.getUsuarioInsercion();
+        BeanCRSeguimientoCartera BeanCRSeguimientoCartera = null;
+        CRSeguimientoCartera crSeguimientoCartera;
+        try {
+            crSeguimientoCartera = crSeguimientoCarteraInterfaceLocal.findById(correlativoSeguimiento);
+            BeanCRSeguimientoCartera = getBeanCRSeguimientoCartera(crSeguimientoCartera, beanParametrosAuditoria);
+        } catch (Exception e) {
+            throw handlerError(e, usuario, modulo);
+        }
+        return BeanCRSeguimientoCartera;
+    }
+
+    private BeanCRSeguimientoCartera getBeanCRSeguimientoCartera(CRSeguimientoCartera crSeguimientoCartera,
+                                                                 BeanParametrosAuditoria beanParametrosAuditoria) throws Exception {
+        BeanCRSeguimientoCartera beanCRSeguimientoCartera = new BeanCRSeguimientoCartera();
+        if (_isEmpty(crSeguimientoCartera)) {
+            return beanCRSeguimientoCartera;
+        }
+
+        beanCRSeguimientoCartera.setCorrelativoSeguimiento(crSeguimientoCartera.getCorrelativoSeguimiento());
+        beanCRSeguimientoCartera.setIdLote(crSeguimientoCartera.getIdLote());
+
+        if (!_isEmpty(crSeguimientoCartera.getWfMaestra())) {
+            beanCRSeguimientoCartera.setIdMaestra(crSeguimientoCartera.getWfMaestra().getIdMaestra());
+        }
+
+        beanCRSeguimientoCartera.setCodigoAgencia(crSeguimientoCartera.getAgenciaAsignada());
+        CBAgencia cbAgencia = cbAgenciaInterfaceLocal.findById(new CBAgenciaId(Constante.ID_TFC, crSeguimientoCartera.getAgenciaAsignada()));
+        if (!_isEmpty(cbAgencia)) {
+            beanCRSeguimientoCartera.setDescripcionAgencia(cbAgencia.getDescripcion());
+        }
+
+        beanCRSeguimientoCartera.setFechaAsignada(financ.util.FormatoFecha.dateToStringDDMMYYYYY(crSeguimientoCartera.getFechaAsignacion()));
+
+        beanCRSeguimientoCartera.setUsuarioAsignado(crSeguimientoCartera.getUsuarioAsignado());
+        CBUsuario cbUsuario = cbUsuarioInterfaceLocal.findById(crSeguimientoCartera.getUsuarioAsignado());
+        if (!_isEmpty(cbUsuario)) {
+            beanCRSeguimientoCartera.setNombreUsuarioAsignado(cbUsuario.getNombreCompleto());
+        }
+
+        beanCRSeguimientoCartera.setCodigoCliente(crSeguimientoCartera.getClPersonas().getCodigoPersona());
+        beanCRSeguimientoCartera.setNombreCliente(crSeguimientoCartera.getClPersonas().getNombreoRazonSocial());
+
+        beanCRSeguimientoCartera.setFechaAlerta(financ.util.FormatoFecha.dateToStringDDMMYYYYY(crSeguimientoCartera.getFechaAlerta()));
+        beanCRSeguimientoCartera.setMontoAlerta(crSeguimientoCartera.getMontoAlerta());
+        beanCRSeguimientoCartera.setCodigoTipoAlerta(crSeguimientoCartera.getCrTipoAlerta().getIdTipoAlerta());
+        beanCRSeguimientoCartera.setDescripcionTipoAlerta(crSeguimientoCartera.getCrTipoAlerta().getDescripcionTipoAlerta());
+        beanCRSeguimientoCartera.setFechaAtencion(financ.util.FormatoFecha.dateToStringDDMMYYYYY(crSeguimientoCartera.getFechaAtencion()));
+        beanCRSeguimientoCartera.setMontoProvision(crSeguimientoCartera.getMontoProvision());
+        beanCRSeguimientoCartera.setInteresDevengado(crSeguimientoCartera.getInteresDevengado());
+        beanCRSeguimientoCartera.setCodigoCalificacionSBS(crSeguimientoCartera.getCrCalificacionCreditoSbs().getCalificacionSbs());
+        beanCRSeguimientoCartera.setComentario(crSeguimientoCartera.getComentario());
+
+        if (!_isEmpty(crSeguimientoCartera.getWfMaestra())) {
+            BeanWFMaestra beanWFMaestra = wfMaestraFacadeInterfaceLocal.consultarMaestra(crSeguimientoCartera.getWfMaestra().getIdMaestra(),
+                                                                                         beanParametrosAuditoria);
+            beanCRSeguimientoCartera.setDescripcionEstado(beanWFMaestra.getDescripcionEstado());
+        }
+
+        return beanCRSeguimientoCartera;
+    }
+
+    public String guardarSeguimientoCartera(BeanCRSeguimientoCartera beanCRSeguimientoCartera,
+                                            BeanWFMaestra beanWFMaestra,
+                                            String idEvento,
+                                            String textoComentario,
+                                            BeanParametrosAuditoria beanParametrosAuditoria) throws Exception {
+
+        String modulo = "CRDetalleSeguimientoFacade.guardarDetalleSeguimientoCartera()";
+        String usuario = beanParametrosAuditoria.getUsuarioInsercion();
+        CRSeguimientoCartera crSeguimientoCartera;
+        String idRuta;
+        WFMaestra wfMaestra;
+        String idMaestra;
+        String correlativoSeguimientoCartera;
+        try {
+
+            BeanWFEventoPorEtapa beanWFEventoPorEtapa = wfEventoPorEtapaFacadeInterfaceLocal.get(beanWFMaestra.getIdEtapa(),
+                                                                                                 idEvento,
+                                                                                                 beanParametrosAuditoria);
+
+            idRuta = wfRutaFacadeInterfaceLocal.obtenerRuta(beanWFMaestra.getIdModulo(),
+                                                            null,
+                                                            null,
+                                                            null,
+                                                            beanParametrosAuditoria);
+
+            idMaestra = beanWFMaestra.getIdMaestra();
+
+            WFEvento wfEvento = wfEventoInterfaceLocal.findById(beanWFEventoPorEtapa.getIdEvento());
+
+            if (_equiv(wfEvento.getKeyEvento(), Constante.CODIGO_EVENTO_GRABAR)) {
+                if (_isEmpty(idMaestra)) {
+
+                    beanWFMaestra.setIdRuta(idRuta);
+                    beanWFMaestra.setIdEstado(beanWFEventoPorEtapa.getIdEstado());
+                    beanWFMaestra.setIdEtapa(beanWFEventoPorEtapa.getIdEtapa());
+                    beanWFMaestra.setFechaProceso(beanParametrosAuditoria.getFechaProceso());
+                    beanWFMaestra.setUsuarioSolicitante(beanParametrosAuditoria.getUsuarioInsercion());
+                    beanWFMaestra.setUsuarioAtiende(beanCRSeguimientoCartera.getUsuarioAsignado());
+
+                    wfMaestra = wfMaestraFacadeInterfaceLocal.guardar(beanWFMaestra, beanParametrosAuditoria);
+                    idMaestra = wfMaestra.getIdMaestra();
+
+                    crSeguimientoCartera = new CRSeguimientoCartera();
+
+                    correlativoSeguimientoCartera = generarCorrelativo("CRDSGCA", 15, beanParametrosAuditoria);
+                    crSeguimientoCartera.setCorrelativoSeguimiento(correlativoSeguimientoCartera);
+
+                    crSeguimientoCartera.setWfMaestra(wfMaestra);
+
+                    crSeguimientoCartera.setTipoSeguimiento(Constante.CODIGO_TIPO_SEGUIMIENTO_INDIVIDUAL);
+                    crSeguimientoCartera.setIdLote(CADENA_VACIA);
+                    crSeguimientoCartera.setFechaAlerta(FormatoFecha.stringToDate(beanCRSeguimientoCartera.getFechaAlerta()));
+                    crSeguimientoCartera.setMontoAlerta(beanCRSeguimientoCartera.getMontoAlerta());
+                    crSeguimientoCartera.setFechaAtencion(FormatoFecha.stringToDate(beanCRSeguimientoCartera.getFechaAtencion()));
+                    crSeguimientoCartera.setMontoProvision(beanCRSeguimientoCartera.getMontoProvision());
+                    crSeguimientoCartera.setInteresDevengado(beanCRSeguimientoCartera.getInteresDevengado());
+                    crSeguimientoCartera.setAgenciaAsignada(beanCRSeguimientoCartera.getCodigoAgencia());
+                    crSeguimientoCartera.setUsuarioAsignado(beanCRSeguimientoCartera.getUsuarioAsignado());
+                    crSeguimientoCartera.setComentario(beanCRSeguimientoCartera.getComentario());
+
+                    CLPersonas clPersonas = clPersonasInterfaceLocal.findById(beanCRSeguimientoCartera.getCodigoCliente());
+                    crSeguimientoCartera.setClPersonas(clPersonas);
+
+                    CRTipoAlerta crTipoAlerta = crTipoAlertaInterfaceLocal.findById(beanCRSeguimientoCartera.getCodigoTipoAlerta());
+                    crSeguimientoCartera.setCrTipoAlerta(crTipoAlerta);
+
+                    CRCalificacionCreditoSbs crCalificacionCreditoSbs = calificacionCreditoSbsInterfaceLocal.findById(beanCRSeguimientoCartera.getCodigoCalificacionSBS());
+                    crSeguimientoCartera.setCrCalificacionCreditoSbs(crCalificacionCreditoSbs);
+
+                    crSeguimientoCartera.setEstadoRegistro(Constante.CODIGO_REGISTRO_VIGENTE);
+
+                    setInsercionAuditoria(crSeguimientoCartera, beanParametrosAuditoria);
+                    crSeguimientoCarteraInterfaceLocal.save(crSeguimientoCartera);
+                } else {
+                    crSeguimientoCartera = new CRSeguimientoCartera();
+                    crSeguimientoCartera = crSeguimientoCarteraInterfaceLocal.findById(beanCRSeguimientoCartera.getCorrelativoSeguimiento());
+
+                    crSeguimientoCartera.setFechaAlerta(FormatoFecha.stringToDate(beanCRSeguimientoCartera.getFechaAlerta()));
+                    crSeguimientoCartera.setMontoAlerta(beanCRSeguimientoCartera.getMontoAlerta());
+                    crSeguimientoCartera.setFechaAtencion(FormatoFecha.stringToDate(beanCRSeguimientoCartera.getFechaAtencion()));
+                    crSeguimientoCartera.setMontoProvision(beanCRSeguimientoCartera.getMontoProvision());
+                    crSeguimientoCartera.setInteresDevengado(beanCRSeguimientoCartera.getInteresDevengado());
+                    crSeguimientoCartera.setAgenciaAsignada(beanCRSeguimientoCartera.getCodigoAgencia());
+                    crSeguimientoCartera.setUsuarioAsignado(beanCRSeguimientoCartera.getUsuarioAsignado());
+                    crSeguimientoCartera.setComentario(beanCRSeguimientoCartera.getComentario());
+
+                    CLPersonas clPersonas = clPersonasInterfaceLocal.findById(beanCRSeguimientoCartera.getCodigoCliente());
+                    crSeguimientoCartera.setClPersonas(clPersonas);
+
+                    CRTipoAlerta crTipoAlerta = crTipoAlertaInterfaceLocal.findById(beanCRSeguimientoCartera.getCodigoTipoAlerta());
+                    crSeguimientoCartera.setCrTipoAlerta(crTipoAlerta);
+
+                    CRCalificacionCreditoSbs crCalificacionCreditoSbs = calificacionCreditoSbsInterfaceLocal.findById(beanCRSeguimientoCartera.getCodigoCalificacionSBS());
+                    crSeguimientoCartera.setCrCalificacionCreditoSbs(crCalificacionCreditoSbs);
+
+                    setModificacionAuditoria(crSeguimientoCartera, beanParametrosAuditoria);
+                    crSeguimientoCarteraInterfaceLocal.update(crSeguimientoCartera);
+                }
+            } else if (_equiv(wfEvento.getKeyEvento(), Constante.CODIGO_EVENTO_ENVIAR)) {
+                crSeguimientoCartera = new CRSeguimientoCartera();
+                crSeguimientoCartera = crSeguimientoCarteraInterfaceLocal.findById(beanCRSeguimientoCartera.getCorrelativoSeguimiento());
+                crSeguimientoCartera.setFechaAsignacion(beanParametrosAuditoria.getFechaProceso());
+                setModificacionAuditoria(crSeguimientoCartera, beanParametrosAuditoria);
+                crSeguimientoCarteraInterfaceLocal.update(crSeguimientoCartera);
+
+                wfMaestra = wfMaestraInterfaceLocal.findById(idMaestra);
+                wfMaestra.setUsuarioAtiende(beanCRSeguimientoCartera.getUsuarioAsignado());
+                setModificacionAuditoria(wfMaestra, beanParametrosAuditoria);
+                wfMaestraInterfaceLocal.update(wfMaestra);
+            }
+
+            String correlativoMovimiento = wfMaestraFacadeInterfaceLocal.procesarEvento(idMaestra,
+                                                                                        beanWFMaestra.getIdEtapa(),
+                                                                                        beanWFEventoPorEtapa.getIdEventoPorEtapa(),
+                                                                                        textoComentario,
+                                                                                        beanParametrosAuditoria);
+
+            if (!_isEmpty(beanCRSeguimientoCartera.getCorrelativoSeguimiento())) {
+                crMovimientoPorSeguimientoFacadeInterfaceLocal.guardarMovimientoPorSeguimiento(null,
+                                                                                               correlativoMovimiento,
+                                                                                               beanCRSeguimientoCartera.getCorrelativoSeguimiento(),
+                                                                                               Constante.CODIGO_TIPO_RESPUESTA_ENVIADO,
+                                                                                               beanParametrosAuditoria);
+            }
+
+        } catch (Exception e) {
+            throw handlerError(e, usuario, modulo);
+        }
+
+        return idMaestra;
+    }
+
+    public Map<String, Object> buscarSeguimientoCartera(GenericBean genericBean,
+                                                        BeanParametrosAuditoria beanParametrosAuditoria) throws Exception {
+        List<BeanCRSeguimientoCartera> listBeanCRDetalleSeguimientoCartera = new ArrayList<BeanCRSeguimientoCartera>(0);
+        Map<String, Object> mapRespuesta = new HashMap<String, Object>(0);
+        List<CRSeguimientoCartera> listCRDetalleSeguimiento;
+        Long cantReg;
+        int inicio, pagina;
+        try {
+
+            pagina = genericBean.getProperty("pagina", Integer.class);
+            inicio = (pagina - 1) * Paginacion.NUM_REG;
+
+            cantReg = crSeguimientoCarteraInterfaceLocal.countSeguimientoCartera(genericBean);
+            listCRDetalleSeguimiento = crSeguimientoCarteraInterfaceLocal.findSeguimientoCartera(genericBean,
+                                                                                                 inicio,
+                                                                                                 Paginacion.NUM_REG);
+
+            if (!_isEmpty(listCRDetalleSeguimiento)) {
+
+                for (CRSeguimientoCartera crSeguimientoCartera : listCRDetalleSeguimiento) {
+                    listBeanCRDetalleSeguimientoCartera.add(getBeanCRSeguimientoCartera(crSeguimientoCartera,
+                                                                                        beanParametrosAuditoria));
+                }
+
+            }
+
+            mapRespuesta.put("cantReg", cantReg);
+            mapRespuesta.put("listBeanCRSeguimientoCartera", listBeanCRDetalleSeguimientoCartera);
+
+        } catch (Exception e) {
+            throw handlerError(e,
+                               beanParametrosAuditoria.getUsuarioInsercion(),
+                               "CRSeguimientoCarteraFacade.buscarSeguimientoCartera()");
+        }
+        return mapRespuesta;
+    }
+
+    public void asignarMasivo(String idLote, BeanParametrosAuditoria beanParametrosAuditoria) throws Exception {
+
+        String idRuta;
+        PropertyParams propertyParams;
+        List<CRSeguimientoCartera> listCRSeguimientoCartera;
+        WFMaestra wfMaestra;
+        BeanWFMaestra beanWFMaestra;
+        String idModulo;
+        BeanWFEventoPorEtapa beanWFEventoPorEtapa;
+
+        try {
+
+            propertyParams = new PropertyParams();
+            propertyParams.addProperty("idLote", idLote);
+
+            listCRSeguimientoCartera = crSeguimientoCarteraInterfaceLocal.findByProperties(propertyParams);
+
+            if (_isEmpty(listCRSeguimientoCartera)) {
+                return;
+            }
+
+            idModulo = wfModuloFacadeInterfaceLocal.findIdByKey(Constante.CR_MODULO_SEGUIMIENTO_CARTERA,
+                                                                beanParametrosAuditoria);
+            idRuta = wfRutaFacadeInterfaceLocal.obtenerRuta(idModulo, null, null, null, beanParametrosAuditoria);
+
+            beanWFEventoPorEtapa = wfEventoPorEtapaFacadeInterfaceLocal.getByKey(Constante.WF_ETAPA_SG_REGISTRO_ACTIVIDAD,
+                                                                                 Constante.WF_EVENTO_ASIGNAR_ALERTA,
+                                                                                 beanParametrosAuditoria);
+
+            for (CRSeguimientoCartera crSeguimientoCartera : listCRSeguimientoCartera) {
+
+                beanWFMaestra = new BeanWFMaestra();
+                beanWFMaestra.setIdModulo(idModulo);
+                beanWFMaestra.setIdRuta(idRuta);
+                beanWFMaestra.setIdEstado(beanWFEventoPorEtapa.getIdEstado());
+                beanWFMaestra.setIdEtapa(beanWFEventoPorEtapa.getIdEtapa());
+                beanWFMaestra.setFechaProceso(beanParametrosAuditoria.getFechaProceso());
+                beanWFMaestra.setUsuarioSolicitante(beanParametrosAuditoria.getUsuarioInsercion());
+                beanWFMaestra.setUsuarioAtiende(crSeguimientoCartera.getUsuarioAsignado());
+
+                wfMaestra = wfMaestraFacadeInterfaceLocal.guardar(beanWFMaestra, beanParametrosAuditoria);
+                crSeguimientoCartera.setWfMaestra(wfMaestra);
+                setModificacionAuditoria(crSeguimientoCartera, beanParametrosAuditoria);
+                crSeguimientoCarteraInterfaceLocal.update(crSeguimientoCartera);
+
+                wfMaestraFacadeInterfaceLocal.procesarEvento(wfMaestra.getIdMaestra(),
+                                                             wfMaestra.getWfEtapa().getIdEtapa(),
+                                                             beanWFEventoPorEtapa.getIdEventoPorEtapa(),
+                                                             crSeguimientoCartera.getComentario(),
+                                                             beanParametrosAuditoria);
+            }
+
+        } catch (Exception e) {
+            throw handlerError(e,
+                               beanParametrosAuditoria.getUsuarioInsercion(),
+                               "CRDetalleSeguimientoCarteraFacade.asignarMasivo()");
+        }
+
+    }
+
+    public void anularDetallesLotes(List<CRMaestroSeguimiento> lstCRMaestroSeguimiento,
+                                    BeanParametrosAuditoria beanParametrosAuditoria) throws Exception {
+
+        List<CRSeguimientoCartera> lstCRSeguimientoCartera;
+        PropertyParams propertyParams;
+        try {
+
+            for (CRMaestroSeguimiento crMaestroSeguimiento : lstCRMaestroSeguimiento) {
+                propertyParams = new PropertyParams();
+                propertyParams.addProperty("idLote", crMaestroSeguimiento.getIdLote());
+                lstCRSeguimientoCartera = crSeguimientoCarteraInterfaceLocal.findByProperties(propertyParams);
+
+                for (CRSeguimientoCartera crSeguimientoCartera : lstCRSeguimientoCartera) {
+                    crSeguimientoCartera.setEstadoRegistro(Constante.ESTADO_REGISTRO_NOVIGENTE);
+                    setModificacionAuditoria(crSeguimientoCartera, beanParametrosAuditoria);
+                    crSeguimientoCarteraInterfaceLocal.update(crSeguimientoCartera);
+                }
+
+            }
+        } catch (Exception e) {
+            throw handlerError(e,
+                               beanParametrosAuditoria.getUsuarioInsercion(),
+                               "CRDetalleSeguimientoCarteraFacade.anularDetallesLotes()");
+        }
+
+    }
+
+    public void procesarResolucion(BeanWFMaestra beanWFMaestra,
+                                   String idEvento,
+                                   String txtComentario,
+                                   String idMotivoSeguimiento,
+                                   BeanCRSeguimientoCartera beanCRSeguimientoCartera,
+                                   String idTipoRespuesta,
+                                   BeanParametrosAuditoria beanParametrosAuditoria) throws Exception {
+
+        String modulo = "CRSeguimientoCarteraFacade.procesarResolucion()";
+        String usuario = beanParametrosAuditoria.getUsuarioInsercion();
+        try {
+
+            if (!_isEmpty(beanCRSeguimientoCartera.getFechaAtencion())) {
+                CRSeguimientoCartera crSeguimientoCartera = crSeguimientoCarteraInterfaceLocal.findById(beanCRSeguimientoCartera.getCorrelativoSeguimiento());
+                crSeguimientoCartera.setFechaAtencion(FormatoFecha.stringToDateddMMyyyy(beanCRSeguimientoCartera.getFechaAtencion()));
+                setModificacionAuditoria(crSeguimientoCartera, beanParametrosAuditoria);
+
+                crSeguimientoCarteraInterfaceLocal.update(crSeguimientoCartera);
+            }
+
+            BeanWFEventoPorEtapa beanWFEventoPorEtapa = wfEventoPorEtapaFacadeInterfaceLocal.get(beanWFMaestra.getIdEtapa(),
+                                                                                                 idEvento,
+                                                                                                 beanParametrosAuditoria);
+
+            String correlativoMovimiento = wfMaestraFacadeInterfaceLocal.procesarEvento(beanWFMaestra.getIdMaestra(),
+                                                                                        beanWFMaestra.getIdEtapa(),
+                                                                                        beanWFEventoPorEtapa.getIdEventoPorEtapa(),
+                                                                                        txtComentario,
+                                                                                        beanParametrosAuditoria);
+
+            crMovimientoPorSeguimientoFacadeInterfaceLocal.guardarMovimientoPorSeguimiento(idMotivoSeguimiento,
+                                                                                           correlativoMovimiento,
+                                                                                           beanCRSeguimientoCartera.getCorrelativoSeguimiento(),
+                                                                                           idTipoRespuesta,
+                                                                                           beanParametrosAuditoria);
+        } catch (Exception e) {
+            throw handlerError(e, usuario, modulo);
+        }
+    }
+}
\ No newline at end of file
diff --git a/FINANCIERONEW/src/financ/seguimientoCartera/facade/CRTipoAlertaFacade.java b/FINANCIERONEW/src/financ/seguimientoCartera/facade/CRTipoAlertaFacade.java
new file mode 100644
index 0000000..90a5450
--- /dev/null
+++ b/FINANCIERONEW/src/financ/seguimientoCartera/facade/CRTipoAlertaFacade.java
@@ -0,0 +1,55 @@
+package financ.seguimientoCartera.facade;
+
+import java.util.ArrayList;
+import java.util.List;
+
+import javax.ejb.EJB;
+import javax.ejb.Stateless;
+
+import pe.com.tfc.utils.AbstractFacade;
+import pe.com.tfc.utils.PropertyParams;
+import admin.contab.beans.BeanParametrosAuditoria;
+import financ.seguimientoCartera.beans.BeanCRTipoAlerta;
+import financ.seguimientoCartera.entity.CRTipoAlerta;
+import financ.seguimientoCartera.local.CRTipoAlertaFacadeInterfaceLocal;
+import financ.seguimientoCartera.local.CRTipoAlertaInterfaceLocal;
+
+/**
+ * CRTipoAlertaFacade
+ * 
+ * @author kdelacruz
+ * @since [S17-022] 29.03.2017
+ */
+
+@Stateless
+public class CRTipoAlertaFacade extends AbstractFacade<CRTipoAlerta> implements CRTipoAlertaFacadeInterfaceLocal {
+
+    public static final String LocalJNDIName = CRTipoAlertaFacade.class.getSimpleName() + "/local";
+
+    @EJB
+    private CRTipoAlertaInterfaceLocal crTipoAlertaInterfaceLocal;
+
+    public List<BeanCRTipoAlerta> lstTipoAlerta(BeanParametrosAuditoria beanParametrosAuditoria) throws Exception {
+        final String modulo = "CRTipoAlertaFacade.lstTipoAlerta()";
+        final List<BeanCRTipoAlerta> listBeanCRTipoAlerta = new ArrayList<BeanCRTipoAlerta>(0);
+        List<CRTipoAlerta> listCRTipoAlerta = new ArrayList<CRTipoAlerta>(0);
+        BeanCRTipoAlerta beanCRTipoAlerta;
+        PropertyParams propertyParams;
+
+        try {
+            propertyParams = new PropertyParams();
+            listCRTipoAlerta = crTipoAlertaInterfaceLocal.findByProperties(propertyParams);
+
+            for (final CRTipoAlerta crTipoAlerta : listCRTipoAlerta) {
+
+                beanCRTipoAlerta = new BeanCRTipoAlerta();
+                beanCRTipoAlerta.setIdTipoAlerta(crTipoAlerta.getIdTipoAlerta());
+                beanCRTipoAlerta.setDescripcionTipoAlerta(crTipoAlerta.getDescripcionTipoAlerta());
+                listBeanCRTipoAlerta.add(beanCRTipoAlerta);
+            }
+        } catch (final Exception e) {
+            throw handlerError(e, beanParametrosAuditoria.getUsuarioInsercion(), modulo);
+        }
+        return listBeanCRTipoAlerta;
+    }
+}
diff --git a/FINANCIERONEW/src/financ/seguimientoCartera/local/CRActividadSeguimientoCarteraFacadeInterfaceLocal.java b/FINANCIERONEW/src/financ/seguimientoCartera/local/CRActividadSeguimientoCarteraFacadeInterfaceLocal.java
new file mode 100644
index 0000000..c20a871
--- /dev/null
+++ b/FINANCIERONEW/src/financ/seguimientoCartera/local/CRActividadSeguimientoCarteraFacadeInterfaceLocal.java
@@ -0,0 +1,86 @@
+package financ.seguimientoCartera.local;
+
+import java.util.Map;
+
+import javax.ejb.Local;
+
+import admin.contab.beans.BeanParametrosAuditoria;
+import financ.seguimientoCartera.beans.BeanCRActividadSeguimientoCartera;
+import financ.seguimientoCartera.beans.BeanCRSeguimientoCartera;
+import financ.workflow.bean.BeanWFMaestra;
+
+/**
+ * CRActividadesSeguimientoCarteraFacadeInterfaceLocal
+ * 
+ * @autor kdelacruz
+ * @since [S17-022] 03.04.2017
+ */
+
+@Local
+public interface CRActividadSeguimientoCarteraFacadeInterfaceLocal {
+
+    /**
+     * @author kdelacruz
+     * @since [Req.S17-022] 03.04.2017
+     * @param idActividad
+     * @param beanParametrosAuditoria
+     * @return BeanCRActividadSeguimientoCartera
+     * @throws Exception
+     */
+    public BeanCRActividadSeguimientoCartera consultarActividad(String idActividad,
+                                                                BeanParametrosAuditoria beanParametrosAuditoria) throws Exception;
+
+    /**
+     * @author kdelacruz
+     * @since [Req.S17-022] 03.04.2017
+     * @param beanCRActividadSeguimientoCartera
+     * @param idSeguimientoCartera
+     * @param beanParametrosAuditoria
+     * @throws Exception
+     */
+    public void registrarActividad(BeanCRActividadSeguimientoCartera beanCRActividadSeguimientoCartera,
+                                   String idSeguimientoCartera,
+                                   BeanParametrosAuditoria beanParametrosAuditoria) throws Exception;
+
+    /**
+     * @author kdelacruz
+     * @since [Req.S17-022] 03.04.2017
+     * @param idSeguimiento
+     * @param pagina
+     * @param beanParametrosAuditoria
+     * @return
+     * @throws Exception
+     */
+    public Map<String, Object> listarActividades(final String idSeguimiento,
+                                                 final Integer pagina,
+                                                 final BeanParametrosAuditoria beanParametrosAuditoria) throws Exception;
+
+    /**
+     * @author kdelacruz
+     * @since [Req.S17-022] 04.04.2017
+     * @param correlativoActividad
+     * @param beanParametrosAuditoria
+     * @throws Exception
+     */
+    public void eliminarActividad(String correlativoActividad, BeanParametrosAuditoria beanParametrosAuditoria) throws Exception;
+
+    /**
+     * @author kdelacruz
+     * @since [Req.S17-022] 04.04.2017
+     * @param beanWFMaestra
+     * @param idEvento
+     * @param txtComentario
+     * @param idMotivoSeguimiento
+     * @param idSeguimientoCartera
+     * @param idTipoRespuesta
+     * @param beanParametrosAuditoria
+     * @throws Exception
+     */
+    public void enviaActividades(BeanWFMaestra beanWFMaestra,
+                                 String idEvento,
+                                 String txtComentario,
+                                 String idMotivoSeguimiento,
+                                 BeanCRSeguimientoCartera beanCRSeguimientoCartera,
+                                 String idTipoRespuesta,
+                                 BeanParametrosAuditoria beanParametrosAuditoria) throws Exception;
+}
diff --git a/FINANCIERONEW/src/financ/seguimientoCartera/local/CRActividadSeguimientoCarteraInterfaceLocal.java b/FINANCIERONEW/src/financ/seguimientoCartera/local/CRActividadSeguimientoCarteraInterfaceLocal.java
new file mode 100644
index 0000000..b769973
--- /dev/null
+++ b/FINANCIERONEW/src/financ/seguimientoCartera/local/CRActividadSeguimientoCarteraInterfaceLocal.java
@@ -0,0 +1,18 @@
+package financ.seguimientoCartera.local;
+
+import javax.ejb.Local;
+
+import pe.com.tfc.utils.GenericInterface;
+import financ.seguimientoCartera.entity.CRActividadSeguimientoCartera;
+
+/**
+ * CRActividadesSeguimientoCarteraInterfaceLocal
+ * 
+ * @author kdelacruz
+ * @since [S17-022] 03.04.2017
+ */
+
+@Local
+public interface CRActividadSeguimientoCarteraInterfaceLocal extends GenericInterface<CRActividadSeguimientoCartera, String> {
+
+}
diff --git a/FINANCIERONEW/src/financ/seguimientoCartera/local/CRCargaAlertaFacadeInterfaceLocal.java b/FINANCIERONEW/src/financ/seguimientoCartera/local/CRCargaAlertaFacadeInterfaceLocal.java
new file mode 100644
index 0000000..454d746
--- /dev/null
+++ b/FINANCIERONEW/src/financ/seguimientoCartera/local/CRCargaAlertaFacadeInterfaceLocal.java
@@ -0,0 +1,49 @@
+package financ.seguimientoCartera.local;
+
+import java.util.List;
+
+import javax.ejb.Local;
+
+import pe.com.tfc.utils.GenericBean;
+import admin.contab.beans.BeanParametrosAuditoria;
+import financ.seguimientoCartera.beans.BeanCRCargaAlerta;
+
+/**
+ * COCarteraCobranzaCargaMasivaFacadeInterfaceLocal
+ * 
+ * @autor rsanchez
+ * @since [S17-022] 24.03.2017
+ */
+
+@Local
+public interface CRCargaAlertaFacadeInterfaceLocal {
+
+    /**
+     * Enviar
+     * 
+     * @author rsanchez
+     * @since [] 24.03.2017
+     * @param lstBeanCRCargaAlerta
+     * @param genericBean
+     * @param beanParametrosAuditoria
+     * @throws Exception
+     */
+    public void enviar(final List<BeanCRCargaAlerta> lstBeanCRCargaAlerta,
+                       final GenericBean genericBean,
+                       final BeanParametrosAuditoria beanParametrosAuditoria) throws Exception;
+
+    /**
+     * Procesar
+     * 
+     * @author rsanchez
+     * @since [] 24.03.2017
+     * @param lstBeanCRCargaAlerta
+     * @param genericBean
+     * @param beanParametrosAuditoria
+     * @throws Exception
+     */
+    public void procesar(final List<BeanCRCargaAlerta> lstBeanCRCargaAlerta,
+                         final GenericBean genericBean,
+                         final BeanParametrosAuditoria beanParametrosAuditoria);
+
+}
diff --git a/FINANCIERONEW/src/financ/seguimientoCartera/local/CRDocumentosPorActividadFacadeInterfaceLocal.java b/FINANCIERONEW/src/financ/seguimientoCartera/local/CRDocumentosPorActividadFacadeInterfaceLocal.java
new file mode 100644
index 0000000..90a9b10
--- /dev/null
+++ b/FINANCIERONEW/src/financ/seguimientoCartera/local/CRDocumentosPorActividadFacadeInterfaceLocal.java
@@ -0,0 +1,15 @@
+package financ.seguimientoCartera.local;
+
+import javax.ejb.Local;
+
+/**
+ * CRDocumentosPorActividadFacadeInterfaceLocal
+ * 
+ * @autor kdelacruz
+ * @since [S17-022] 04.04.2017
+ */
+
+@Local
+public interface CRDocumentosPorActividadFacadeInterfaceLocal {
+
+}
diff --git a/FINANCIERONEW/src/financ/seguimientoCartera/local/CRDocumentosPorActividadInterfaceLocal.java b/FINANCIERONEW/src/financ/seguimientoCartera/local/CRDocumentosPorActividadInterfaceLocal.java
new file mode 100644
index 0000000..275eb52
--- /dev/null
+++ b/FINANCIERONEW/src/financ/seguimientoCartera/local/CRDocumentosPorActividadInterfaceLocal.java
@@ -0,0 +1,18 @@
+package financ.seguimientoCartera.local;
+
+import javax.ejb.Local;
+
+import pe.com.tfc.utils.GenericInterface;
+import financ.seguimientoCartera.entity.CRDocumentosPorActividad;
+
+/**
+ * CRDocumentosPorActividadInterfaceLocal
+ * 
+ * @author kdelacruz
+ * @since [S17-022] 04.04.2017
+ */
+
+@Local
+public interface CRDocumentosPorActividadInterfaceLocal extends GenericInterface<CRDocumentosPorActividad, String> {
+
+}
diff --git a/FINANCIERONEW/src/financ/seguimientoCartera/local/CRMaestroSeguimientoFacadeInterfaceLocal.java b/FINANCIERONEW/src/financ/seguimientoCartera/local/CRMaestroSeguimientoFacadeInterfaceLocal.java
new file mode 100644
index 0000000..9b8c20a
--- /dev/null
+++ b/FINANCIERONEW/src/financ/seguimientoCartera/local/CRMaestroSeguimientoFacadeInterfaceLocal.java
@@ -0,0 +1,66 @@
+package financ.seguimientoCartera.local;
+
+import java.util.List;
+import java.util.Map;
+
+import javax.ejb.Local;
+
+import pe.com.tfc.utils.GenericBean;
+import admin.contab.beans.BeanParametrosAuditoria;
+import financ.seguimientoCartera.beans.BeanCRMaestroSeguimiento;
+import financ.seguimientoCartera.entity.CRMaestroSeguimiento;
+
+/**
+ * CRMaestroSeguimientoInterfaceLocal
+ * 
+ * @author rsanchez
+ * @since [S17-022] 28.03.2017
+ */
+@Local
+public interface CRMaestroSeguimientoFacadeInterfaceLocal {
+
+    /**
+     * @author rsanchez
+     * @since [Req.S17-022] 28.03.2017
+     * @param beanCRMaestroSeguimiento
+     * @param beanParametrosAuditoria
+     * @return correlativo
+     * @throws Exception
+     */
+    String guardarMaestro(BeanCRMaestroSeguimiento beanCRMaestroSeguimiento,
+                          BeanParametrosAuditoria beanParametrosAuditoria) throws Exception;
+
+    /**
+     * @author rsanchez
+     * @since [Req.S17-022] 03.04.2017
+     * @param beanCRMaestroSeguimiento
+     * @param beanParametrosAuditoria
+     * @return mapRespuesta
+     * @throws Exception
+     */
+    Map<String, Object> buscarLoteSeguimiento(GenericBean genericBean,
+                                              BeanParametrosAuditoria beanParametrosAuditoria) throws Exception;
+
+    /**
+     * @author rsanchez
+     * @since [Req.S17-022] 03.04.2017
+     * @param idLote
+     * @param estadoCambioLote
+     * @param beanParametrosAuditoria
+     * @return
+     * @throws Exception
+     */
+    void autorizar(String idLote,
+                   String estadoCambiaLote,
+                   BeanParametrosAuditoria beanParametrosAuditoria) throws Exception;
+
+    /**
+     * @author rsanchez
+     * @since [Req.S17-022] 03.04.2017
+     * @param beanParametrosAuditoria
+     * @return lstCRMaestroSeguimiento
+     * @throws Exception
+     */
+    List<CRMaestroSeguimiento> anularMaestro(BeanParametrosAuditoria beanParametrosAuditoria) throws Exception;
+
+}
\ No newline at end of file
diff --git a/FINANCIERONEW/src/financ/seguimientoCartera/local/CRMaestroSeguimientoInterfaceLocal.java b/FINANCIERONEW/src/financ/seguimientoCartera/local/CRMaestroSeguimientoInterfaceLocal.java
new file mode 100644
index 0000000..d4cbae5
--- /dev/null
+++ b/FINANCIERONEW/src/financ/seguimientoCartera/local/CRMaestroSeguimientoInterfaceLocal.java
@@ -0,0 +1,17 @@
+package financ.seguimientoCartera.local;
+
+import javax.ejb.Local;
+
+import pe.com.tfc.utils.GenericInterface;
+import financ.seguimientoCartera.entity.CRMaestroSeguimiento;
+
+/**
+ * CRMaestroSeguimientoInterfaceLocal
+ * 
+ * @author rsanchez
+ * @since [S17-022] 28.03.2017
+ */
+@Local
+public interface CRMaestroSeguimientoInterfaceLocal extends GenericInterface<CRMaestroSeguimiento, String> {
+
+}
\ No newline at end of file
diff --git a/FINANCIERONEW/src/financ/seguimientoCartera/local/CRMotivoSeguimientoCarteraFacadeInterfaceLocal.java b/FINANCIERONEW/src/financ/seguimientoCartera/local/CRMotivoSeguimientoCarteraFacadeInterfaceLocal.java
new file mode 100644
index 0000000..d7278b9
--- /dev/null
+++ b/FINANCIERONEW/src/financ/seguimientoCartera/local/CRMotivoSeguimientoCarteraFacadeInterfaceLocal.java
@@ -0,0 +1,44 @@
+package financ.seguimientoCartera.local;
+
+import java.util.List;
+
+import javax.ejb.Local;
+
+import admin.contab.beans.BeanParametrosAuditoria;
+import financ.seguimientoCartera.beans.BeanCRMotivoSeguimientoCartera;
+
+/**
+ * CRMotivoSeguimientoCarteraFacadeInterfaceLocal
+ * 
+ * @autor kdelacruz
+ * @since [S17-022] 05.04.2017
+ */
+
+@Local
+public interface CRMotivoSeguimientoCarteraFacadeInterfaceLocal {
+
+    /**
+     * @author kdelacruz
+     * @since [S17-022] 05.04.2017
+     * @param tipoRespuesta
+     * @param idEtapa
+     * @param beanParametrosAuditoria
+     * @return
+     * @throws Exception
+     */
+    public List<BeanCRMotivoSeguimientoCartera> listarPorTipoResputa(String tipoRespuesta,
+                                                                     String idEtapa,
+                                                                     BeanParametrosAuditoria beanParametrosAuditoria) throws Exception;
+    
+    /**
+     * @author kdelacruz
+     * @since [S17-022] 10.04.2017
+     * @param idMotivo
+     * @param beanParametrosAuditoria
+     * @return
+     * @throws Exception
+     */
+    public BeanCRMotivoSeguimientoCartera consultaMotivo(String idMotivo,
+                                                         BeanParametrosAuditoria beanParametrosAuditoria) throws Exception;
+
+}
diff --git a/FINANCIERONEW/src/financ/seguimientoCartera/local/CRMotivoSeguimientoCarteraInterfaceLocal.java b/FINANCIERONEW/src/financ/seguimientoCartera/local/CRMotivoSeguimientoCarteraInterfaceLocal.java
new file mode 100644
index 0000000..4f60a19
--- /dev/null
+++ b/FINANCIERONEW/src/financ/seguimientoCartera/local/CRMotivoSeguimientoCarteraInterfaceLocal.java
@@ -0,0 +1,18 @@
+package financ.seguimientoCartera.local;
+
+import javax.ejb.Local;
+
+import pe.com.tfc.utils.GenericInterface;
+import financ.seguimientoCartera.entity.CRMotivoSeguimientoCartera;
+
+/**
+ * CRMotivoSeguimientoCarteraInterfaceLocal
+ * 
+ * @author kdelacruz
+ * @since [S17-022] 05.04.2017
+ */
+
+@Local
+public interface CRMotivoSeguimientoCarteraInterfaceLocal extends GenericInterface<CRMotivoSeguimientoCartera, String> {
+
+}
diff --git a/FINANCIERONEW/src/financ/seguimientoCartera/local/CRMovimientoPorSeguimientoFacadeInterfaceLocal.java b/FINANCIERONEW/src/financ/seguimientoCartera/local/CRMovimientoPorSeguimientoFacadeInterfaceLocal.java
new file mode 100644
index 0000000..f55ff9a
--- /dev/null
+++ b/FINANCIERONEW/src/financ/seguimientoCartera/local/CRMovimientoPorSeguimientoFacadeInterfaceLocal.java
@@ -0,0 +1,45 @@
+package financ.seguimientoCartera.local;
+
+import javax.ejb.Local;
+
+import admin.contab.beans.BeanParametrosAuditoria;
+import financ.seguimientoCartera.beans.BeanCRMovimientoPorSeguimiento;
+
+/**
+ * CRMovimientoPorSeguimientoFacadeInterfaceLocal
+ * 
+ * @autor kdelacruz
+ * @since [S17-022] 05.04.2017
+ */
+
+@Local
+public interface CRMovimientoPorSeguimientoFacadeInterfaceLocal {
+
+    /**
+     * @author kdelacruz
+     * @since [S17-022] 05.04.2017
+     * @param idSeguimientoCartera
+     * @param beanParametrosAuditoria
+     * @return
+     * @throws Exception
+     */
+    public BeanCRMovimientoPorSeguimiento listarMovimientoSeguimientoUltimoRegistro(String idSeguimientoCartera,
+                                                                                    String idEtapa,
+                                                                                    BeanParametrosAuditoria beanParametrosAuditoria) throws Exception;
+
+    /**
+     * @author kdelacruz
+     * @since [S17-022] 05.04.2017
+     * @param idMotivoSeguimiento
+     * @param idMovimiento
+     * @param idSeguimientoCartera
+     * @param idTipoRespuesta
+     * @param beanParametrosAuditoria
+     * @throws Exception
+     */
+    public void guardarMovimientoPorSeguimiento(String idMotivoSeguimiento,
+                                                String idMovimiento,
+                                                String idSeguimientoCartera,
+                                                String idTipoRespuesta,
+                                                BeanParametrosAuditoria beanParametrosAuditoria) throws Exception;
+}
diff --git a/FINANCIERONEW/src/financ/seguimientoCartera/local/CRMovimientoPorSeguimientoInterfaceLocal.java b/FINANCIERONEW/src/financ/seguimientoCartera/local/CRMovimientoPorSeguimientoInterfaceLocal.java
new file mode 100644
index 0000000..55f4960
--- /dev/null
+++ b/FINANCIERONEW/src/financ/seguimientoCartera/local/CRMovimientoPorSeguimientoInterfaceLocal.java
@@ -0,0 +1,18 @@
+package financ.seguimientoCartera.local;
+
+import javax.ejb.Local;
+
+import pe.com.tfc.utils.GenericInterface;
+import financ.seguimientoCartera.entity.CRMovimientoPorSeguimiento;
+
+/**
+ * CRMovimientoPorSeguimientoInterfaceLocal
+ * 
+ * @author kdelacruz
+ * @since [S17-022] 05.04.2017
+ */
+
+@Local
+public interface CRMovimientoPorSeguimientoInterfaceLocal extends GenericInterface<CRMovimientoPorSeguimiento, String> {
+
+}
diff --git a/FINANCIERONEW/src/financ/seguimientoCartera/local/CRSeguimientoCarteraFacadeInterfaceLocal.java b/FINANCIERONEW/src/financ/seguimientoCartera/local/CRSeguimientoCarteraFacadeInterfaceLocal.java
new file mode 100644
index 0000000..4862041
--- /dev/null
+++ b/FINANCIERONEW/src/financ/seguimientoCartera/local/CRSeguimientoCarteraFacadeInterfaceLocal.java
@@ -0,0 +1,123 @@
+package financ.seguimientoCartera.local;
+
+import java.util.List;
+import java.util.Map;
+
+import javax.ejb.Local;
+
+import pe.com.tfc.utils.GenericBean;
+import admin.contab.beans.BeanParametrosAuditoria;
+import financ.seguimientoCartera.beans.BeanCRSeguimientoCartera;
+import financ.seguimientoCartera.entity.CRMaestroSeguimiento;
+import financ.workflow.bean.BeanWFMaestra;
+
+/**
+ * CRDetalleSeguimientoFacadeInterfaceLocal
+ * 
+ * @autor rsanchez
+ * @since [S17-022] 28.03.2017
+ */
+
+@Local
+public interface CRSeguimientoCarteraFacadeInterfaceLocal {
+
+    void guardarDetalleMasivo(BeanCRSeguimientoCartera beanCRSeguimientoCartera,
+                        BeanParametrosAuditoria beanParametrosAuditoria) throws Exception;
+
+    /**
+     * @author kdelacruz
+     * @since [Req.S17-022] 29.03.2017
+     * @param correlativoSeguimiento
+     * @param beanParametrosAuditoria
+     * @return BeanCRSeguimientoCartera
+     * @throws Exception
+     */
+    public BeanCRSeguimientoCartera obtenerSeguimientoCartera(String correlativoSeguimiento,
+                                                              BeanParametrosAuditoria beanParametrosAuditoria) throws Exception;
+
+    /**
+     * @author kdelacruz
+     * @since [Req.S17-022] 29.03.2017
+     * @param beanCRDetalleSeguimientoCartera
+     * @param beanWFMaestra
+     * @param idEvento
+     * @param textoComentario
+     * @param beanParametrosAuditoria
+     * @return String
+     * @throws Exceptions
+     */
+    public String guardarSeguimientoCartera(BeanCRSeguimientoCartera BeanCRSeguimientoCartera,
+                                            BeanWFMaestra beanWFMaestra,
+                                            String idEvento,
+                                            String textoComentario,
+                                            BeanParametrosAuditoria beanParametrosAuditoria) throws Exception;
+
+    /**
+     * Buscar Seguimiento de Cartera
+     * 
+     * @author esalazar
+     * @since [Req.S17-022] 30.03.2017
+     * @param genericBean
+     * @param beanParametrosAuditoria
+     * @return mapRespuesta
+     * @throws Exception
+     */
+    Map<String, Object> buscarSeguimientoCartera(GenericBean genericBean,
+                                                 BeanParametrosAuditoria beanParametrosAuditoria) throws Exception;
+
+    /**
+     * Asignar Masivo
+     * 
+     * @author rsanchez
+     * @since [Req.S17-022] 30.03.2017
+     * @param idLote
+     * @param beanParametrosAuditoria
+     * @return 
+     * @throws Exception
+     */
+    void asignarMasivo(String idLote, BeanParametrosAuditoria beanParametrosAuditoria) throws Exception;
+    
+    /**
+     * Anular Detalles Lotes
+     * 
+     * @author rsanchez
+     * @since [Req.S17-022] 06.04.2017
+     * @param lstCRMaestroSeguimiento
+     * @param beanParametrosAuditoria
+     * @return 
+     * @throws Exception
+     */
+    void anularDetallesLotes(List<CRMaestroSeguimiento> lstCRMaestroSeguimiento,
+                             BeanParametrosAuditoria beanParametrosAuditoria) throws Exception;
+    /**
+     * @author esalazar
+     * @since [Req.S17-022] 31.03.2017
+     * @param idMaestra
+     * @param beanParametrosAuditoria
+     * @return BeanCRSeguimientoCartera
+     * @throws Exception
+     */
+    public BeanCRSeguimientoCartera obtenerSeguimientoCarteraPorIdMaestra(String idMaestra,
+                                                                          BeanParametrosAuditoria beanParametrosAuditoria) throws Exception;
+
+    /**
+     * @author kdelacruz
+     * @since [Req.S17-022] 04.04.2017
+     * @param beanWFMaestra
+     * @param idEvento
+     * @param txtComentario
+     * @param idMotivoSeguimiento
+     * @param beanCRSeguimientoCartera
+     * @param idTipoRespuesta
+     * @param beanParametrosAuditoria
+     * @throws Exception
+     */
+    public void procesarResolucion(BeanWFMaestra beanWFMaestra,
+                                   String idEvento,
+                                   String txtComentario,
+                                   String idMotivoSeguimiento,
+                                   BeanCRSeguimientoCartera beanCRSeguimientoCartera,
+                                   String idTipoRespuesta,
+                                   BeanParametrosAuditoria beanParametrosAuditoria) throws Exception;
+
+}
diff --git a/FINANCIERONEW/src/financ/seguimientoCartera/local/CRSeguimientoCarteraInterfaceLocal.java b/FINANCIERONEW/src/financ/seguimientoCartera/local/CRSeguimientoCarteraInterfaceLocal.java
new file mode 100644
index 0000000..3f26a09
--- /dev/null
+++ b/FINANCIERONEW/src/financ/seguimientoCartera/local/CRSeguimientoCarteraInterfaceLocal.java
@@ -0,0 +1,26 @@
+package financ.seguimientoCartera.local;
+
+import java.util.List;
+
+import javax.ejb.Local;
+
+import pe.com.tfc.utils.GenericInterface;
+import financ.seguimientoCartera.entity.CRSeguimientoCartera;
+import pe.com.tfc.utils.GenericBean;
+
+/**
+ * CRDetalleSeguimientoInterfaceLocal
+ *
+ * @author rsanchez
+ * @since [S17-022] 28.03.2017
+ */
+
+@Local
+public interface CRSeguimientoCarteraInterfaceLocal extends GenericInterface<CRSeguimientoCartera, String>{
+    
+    Long countSeguimientoCartera(GenericBean genericBean) throws Exception;
+    
+    List<CRSeguimientoCartera> findSeguimientoCartera(GenericBean genericBean,
+                                                      int posicionInicial,
+                                                      int maxResultado) throws Exception;
+}
diff --git a/FINANCIERONEW/src/financ/seguimientoCartera/local/CRTipoAlertaFacadeInterfaceLocal.java b/FINANCIERONEW/src/financ/seguimientoCartera/local/CRTipoAlertaFacadeInterfaceLocal.java
new file mode 100644
index 0000000..656b9d9
--- /dev/null
+++ b/FINANCIERONEW/src/financ/seguimientoCartera/local/CRTipoAlertaFacadeInterfaceLocal.java
@@ -0,0 +1,29 @@
+package financ.seguimientoCartera.local;
+
+import java.util.List;
+
+import javax.ejb.Local;
+
+import admin.contab.beans.BeanParametrosAuditoria;
+import financ.seguimientoCartera.beans.BeanCRTipoAlerta;
+
+/**
+ * CRTipoAlertaFacadeInterfaceLocal
+ * 
+ * @autor kdelacruz
+ * @since [S17-022] 29.03.2017
+ */
+
+@Local
+public interface CRTipoAlertaFacadeInterfaceLocal {
+
+    /**
+     * @author kdelacruz
+     * @since [Req.S17-022] 30.02.2017
+     * @param beanParametrosAuditoria
+     * @return List<BeanCRTipoAlerta>
+     * @throws Exception
+     */
+    public List<BeanCRTipoAlerta> lstTipoAlerta(BeanParametrosAuditoria beanParametrosAuditoria) throws Exception;
+
+}
diff --git a/FINANCIERONEW/src/financ/seguimientoCartera/local/CRTipoAlertaInterfaceLocal.java b/FINANCIERONEW/src/financ/seguimientoCartera/local/CRTipoAlertaInterfaceLocal.java
new file mode 100644
index 0000000..1ed01fb
--- /dev/null
+++ b/FINANCIERONEW/src/financ/seguimientoCartera/local/CRTipoAlertaInterfaceLocal.java
@@ -0,0 +1,18 @@
+package financ.seguimientoCartera.local;
+
+import javax.ejb.Local;
+
+import pe.com.tfc.utils.GenericInterface;
+import financ.seguimientoCartera.entity.CRTipoAlerta;
+
+/**
+ * CRTipoAlertaInterfaceLocal
+ * 
+ * @author kdelacruz
+ * @since [S17-022] 29.03.2017
+ */
+
+@Local
+public interface CRTipoAlertaInterfaceLocal extends GenericInterface<CRTipoAlerta, String> {
+
+}
diff --git a/FINANCIERONEW/src/financ/seguimientoCartera/mdb/CRSeguimientoCarteraCargaAlertaMDB.java b/FINANCIERONEW/src/financ/seguimientoCartera/mdb/CRSeguimientoCarteraCargaAlertaMDB.java
new file mode 100644
index 0000000..b162db3
--- /dev/null
+++ b/FINANCIERONEW/src/financ/seguimientoCartera/mdb/CRSeguimientoCarteraCargaAlertaMDB.java
@@ -0,0 +1,64 @@
+package financ.seguimientoCartera.mdb;
+
+import java.util.List;
+
+import javax.ejb.ActivationConfigProperty;
+import javax.ejb.EJB;
+import javax.ejb.EJBException;
+import javax.ejb.MessageDriven;
+import javax.jms.JMSException;
+import javax.jms.Message;
+import javax.jms.MessageListener;
+import javax.jms.ObjectMessage;
+
+import pe.com.tfc.utils.GenericBean;
+import pe.com.tfc.utils.StringUtil;
+import admin.contab.beans.BeanParametrosAuditoria;
+import admin.email.beans.BeanMensajeriaHandlerProcess;
+import financ.seguimientoCartera.beans.BeanCRCargaAlerta;
+import financ.seguimientoCartera.local.CRCargaAlertaFacadeInterfaceLocal;
+
+/**
+ * CRSeguimientoCarteraCargaAlertaMDB
+ * 
+ * @autor rsanchez
+ * @since [S17-022] 27.03.2017
+ */
+
+@MessageDriven(mappedName = "jms/Queue", activationConfig = { @ActivationConfigProperty(propertyName = "acknowledgeMode", propertyValue = "Auto-acknowledge"), @ActivationConfigProperty(propertyName = "destinationType", propertyValue = "javax.jms.Queue"), @ActivationConfigProperty(propertyName = "destination", propertyValue = "queue/myQueueCARGAALERTA") })
+public class CRSeguimientoCarteraCargaAlertaMDB implements MessageListener {
+
+    @EJB
+    private CRCargaAlertaFacadeInterfaceLocal crCargaAlertaFacadeInterfaceLocal;
+
+    public void onMessage(final Message message) {
+        BeanParametrosAuditoria beanParametrosAuditoria = new BeanParametrosAuditoria();
+        List<BeanCRCargaAlerta> lstBeanCRCargaAlerta = null;
+        GenericBean genericBean = null;
+        BeanMensajeriaHandlerProcess beanMensajeriaHandlerProcess;
+        try {
+
+            if (message.getJMSRedelivered()) {
+                return;
+            }
+            if (message instanceof ObjectMessage) {
+                beanMensajeriaHandlerProcess = (BeanMensajeriaHandlerProcess) ((ObjectMessage) message).getObject();
+                beanParametrosAuditoria = beanMensajeriaHandlerProcess.getBeanParametrosAuditoria();
+                lstBeanCRCargaAlerta = (List<BeanCRCargaAlerta>) beanMensajeriaHandlerProcess.getListTransaccion();
+                genericBean = (GenericBean) beanMensajeriaHandlerProcess.getGenericBean();
+            }
+
+            if (!StringUtil.isEmpty(lstBeanCRCargaAlerta)) {
+                crCargaAlertaFacadeInterfaceLocal.procesar(lstBeanCRCargaAlerta, genericBean, beanParametrosAuditoria);
+            }
+
+        } catch (final Exception e) {
+            throw new EJBException(e);
+        }
+        try {
+            message.acknowledge();
+        } catch (final JMSException e) {
+        }
+    }
+
+}
diff --git a/FINANCIERONEW/src/financ/seguimientoCartera/session/CRActividadSeguimientoCarteraSession.java b/FINANCIERONEW/src/financ/seguimientoCartera/session/CRActividadSeguimientoCarteraSession.java
new file mode 100644
index 0000000..08c58cc
--- /dev/null
+++ b/FINANCIERONEW/src/financ/seguimientoCartera/session/CRActividadSeguimientoCarteraSession.java
@@ -0,0 +1,23 @@
+package financ.seguimientoCartera.session;
+
+import javax.ejb.Stateless;
+
+import pe.com.tfc.utils.AbstractSession;
+import financ.seguimientoCartera.entity.CRActividadSeguimientoCartera;
+import financ.seguimientoCartera.local.CRActividadSeguimientoCarteraInterfaceLocal;
+
+/**
+ * CRActividadesSeguimientoCarteraSession
+ * 
+ * @autor kdelacruz
+ * @since [S17-022] 03.04.2017
+ */
+
+@Stateless
+public class CRActividadSeguimientoCarteraSession extends AbstractSession<CRActividadSeguimientoCartera, String> implements CRActividadSeguimientoCarteraInterfaceLocal {
+
+    private CRActividadSeguimientoCarteraSession() {
+        super(CRActividadSeguimientoCartera.class);
+    }
+
+}
diff --git a/FINANCIERONEW/src/financ/seguimientoCartera/session/CRDocumentosPorActividadSession.java b/FINANCIERONEW/src/financ/seguimientoCartera/session/CRDocumentosPorActividadSession.java
new file mode 100644
index 0000000..f0b4710
--- /dev/null
+++ b/FINANCIERONEW/src/financ/seguimientoCartera/session/CRDocumentosPorActividadSession.java
@@ -0,0 +1,23 @@
+package financ.seguimientoCartera.session;
+
+import javax.ejb.Stateless;
+
+import pe.com.tfc.utils.AbstractSession;
+import financ.seguimientoCartera.entity.CRDocumentosPorActividad;
+import financ.seguimientoCartera.local.CRDocumentosPorActividadInterfaceLocal;
+
+/**
+ * CRDocumentosPorActividadSession
+ * 
+ * @autor kdelacruz
+ * @since [S17-022] 04.04.2017
+ */
+
+@Stateless
+public class CRDocumentosPorActividadSession extends AbstractSession<CRDocumentosPorActividad, String> implements CRDocumentosPorActividadInterfaceLocal {
+
+    private CRDocumentosPorActividadSession() {
+        super(CRDocumentosPorActividad.class);
+    }
+
+}
diff --git a/FINANCIERONEW/src/financ/seguimientoCartera/session/CRMaestroSeguimientoSession.java b/FINANCIERONEW/src/financ/seguimientoCartera/session/CRMaestroSeguimientoSession.java
new file mode 100644
index 0000000..9520eee
--- /dev/null
+++ b/FINANCIERONEW/src/financ/seguimientoCartera/session/CRMaestroSeguimientoSession.java
@@ -0,0 +1,23 @@
+package financ.seguimientoCartera.session;
+
+import javax.ejb.Stateless;
+
+import pe.com.tfc.utils.AbstractSession;
+import financ.seguimientoCartera.entity.CRMaestroSeguimiento;
+import financ.seguimientoCartera.local.CRMaestroSeguimientoInterfaceLocal;
+
+/**
+ * CRDetalleSeguimientoSession
+ * 
+ * @autor rsanchez
+ * @since [S17-022] 29.03.2017
+ */
+
+@Stateless
+public class CRMaestroSeguimientoSession extends AbstractSession<CRMaestroSeguimiento, String> implements CRMaestroSeguimientoInterfaceLocal {
+
+    private CRMaestroSeguimientoSession() {
+        super(CRMaestroSeguimiento.class);
+    }
+
+}
\ No newline at end of file
diff --git a/FINANCIERONEW/src/financ/seguimientoCartera/session/CRMotivoSeguimientoCarteraSession.java b/FINANCIERONEW/src/financ/seguimientoCartera/session/CRMotivoSeguimientoCarteraSession.java
new file mode 100644
index 0000000..13ce00b
--- /dev/null
+++ b/FINANCIERONEW/src/financ/seguimientoCartera/session/CRMotivoSeguimientoCarteraSession.java
@@ -0,0 +1,23 @@
+package financ.seguimientoCartera.session;
+
+import javax.ejb.Stateless;
+
+import pe.com.tfc.utils.AbstractSession;
+import financ.seguimientoCartera.entity.CRMotivoSeguimientoCartera;
+import financ.seguimientoCartera.local.CRMotivoSeguimientoCarteraInterfaceLocal;
+
+/**
+ * CRMotivoSeguimientoCarteraSession
+ * 
+ * @autor kdelacruz
+ * @since [S17-022] 05.04.2017
+ */
+
+@Stateless
+public class CRMotivoSeguimientoCarteraSession extends AbstractSession<CRMotivoSeguimientoCartera, String> implements CRMotivoSeguimientoCarteraInterfaceLocal {
+
+    private CRMotivoSeguimientoCarteraSession() {
+        super(CRMotivoSeguimientoCartera.class);
+    }
+
+}
diff --git a/FINANCIERONEW/src/financ/seguimientoCartera/session/CRMovimientoPorSeguimientoSession.java b/FINANCIERONEW/src/financ/seguimientoCartera/session/CRMovimientoPorSeguimientoSession.java
new file mode 100644
index 0000000..ad7dec3
--- /dev/null
+++ b/FINANCIERONEW/src/financ/seguimientoCartera/session/CRMovimientoPorSeguimientoSession.java
@@ -0,0 +1,23 @@
+package financ.seguimientoCartera.session;
+
+import javax.ejb.Stateless;
+
+import pe.com.tfc.utils.AbstractSession;
+import financ.seguimientoCartera.entity.CRMovimientoPorSeguimiento;
+import financ.seguimientoCartera.local.CRMovimientoPorSeguimientoInterfaceLocal;
+
+/**
+ * CRMovimientoPorSeguimientoSession
+ * 
+ * @autor kdelacruz
+ * @since [S17-022] 05.04.2017
+ */
+
+@Stateless
+public class CRMovimientoPorSeguimientoSession extends AbstractSession<CRMovimientoPorSeguimiento, String> implements CRMovimientoPorSeguimientoInterfaceLocal {
+
+    private CRMovimientoPorSeguimientoSession() {
+        super(CRMovimientoPorSeguimiento.class);
+    }
+
+}
diff --git a/FINANCIERONEW/src/financ/seguimientoCartera/session/CRSeguimientoCarteraSession.java b/FINANCIERONEW/src/financ/seguimientoCartera/session/CRSeguimientoCarteraSession.java
new file mode 100644
index 0000000..ec1ba2b
--- /dev/null
+++ b/FINANCIERONEW/src/financ/seguimientoCartera/session/CRSeguimientoCarteraSession.java
@@ -0,0 +1,306 @@
+package financ.seguimientoCartera.session;
+
+import java.util.ArrayList;
+import java.util.Date;
+import java.util.List;
+
+import javax.ejb.Stateless;
+import javax.persistence.NoResultException;
+import javax.persistence.Query;
+import javax.persistence.TemporalType;
+
+import pe.com.tfc.utils.AbstractSession;
+import pe.com.tfc.utils.GenericBean;
+import pe.com.tfc.utils.StringUtil;
+import financ.seguimientoCartera.entity.CRSeguimientoCartera;
+import financ.seguimientoCartera.local.CRSeguimientoCarteraInterfaceLocal;
+
+/**
+ * CRDetalleSeguimientoSession
+ * 
+ * @autor rsanchez
+ * @since [S17-022] 29.03.2017
+ */
+
+@Stateless
+public class CRSeguimientoCarteraSession extends AbstractSession<CRSeguimientoCartera, String> implements CRSeguimientoCarteraInterfaceLocal {
+
+    private CRSeguimientoCarteraSession() {
+        super(CRSeguimientoCartera.class);
+    }
+
+    public Long countSeguimientoCartera(GenericBean genericBean) throws Exception {
+
+        Query query;
+        StringBuilder sbQuery;
+        Date fechaAsignacionInicial;
+        Date fechaAsignacionFinal;
+        Date fechaAtencionInicial;
+        Date fechaAtencionFinal;
+        String codigoTipoAlerta;
+        String codigoAgencia;
+        String codigoAsesor;
+        String codigoCliente;
+        String codigoEstado;
+        String usuarioConsulta;
+
+        try {
+
+            fechaAsignacionInicial = genericBean.getPropertyDate("fechaAsignacionInicial");
+            fechaAsignacionFinal = genericBean.getPropertyDate("fechaAsignacionFinal");
+            fechaAtencionInicial = genericBean.getPropertyDate("fechaAtencionInicial");
+            fechaAtencionFinal = genericBean.getPropertyDate("fechaAtencionFinal");
+            codigoTipoAlerta = genericBean.getPropertyString("codigoTipoAlerta");
+            codigoAgencia = genericBean.getPropertyString("codigoAgencia");
+            codigoAsesor = genericBean.getPropertyString("codigoAsesor");
+            codigoCliente = genericBean.getPropertyString("codigoCliente");
+            codigoEstado = genericBean.getPropertyString("codigoEstado");
+            usuarioConsulta = genericBean.getPropertyString("usuarioConsulta");
+
+            sbQuery = new StringBuilder();
+
+            sbQuery.append("  SELECT COUNT(*) ");
+            sbQuery.append("   FROM DFIN.CRDSGCA SGCA ");
+            sbQuery.append("  INNER JOIN DFIN.WFMWORK WORK ");
+            sbQuery.append("     ON (WORK.C_IDWORK = SGCA.C_IDWORK) ");
+            sbQuery.append("  WHERE 1 = 1 ");
+
+            //FECHA ASIGNACION
+            if (!StringUtil.isEmpty(fechaAsignacionInicial)) {
+                sbQuery.append("    AND SGCA.D_FECASG >= :fechaAsignacionInicial ");
+            }
+            if (!StringUtil.isEmpty(fechaAsignacionFinal)) {
+                sbQuery.append("    AND SGCA.D_FECASG <= :fechaAsignacionFinal ");
+            }
+            //FECHA ATENCION
+            if (!StringUtil.isEmpty(fechaAsignacionInicial)) {
+                sbQuery.append("    AND SGCA.D_FECATE >= :fechaAtencionInicial ");
+            }
+            if (!StringUtil.isEmpty(fechaAsignacionFinal)) {
+                sbQuery.append("    AND SGCA.D_FECATE <= :fechaAtencionFinal ");
+            }
+            if (!StringUtil.isEmpty(codigoTipoAlerta)) {
+                sbQuery.append("    AND SGCA.C_TIPALE = :codigoTipoAlerta ");
+            }
+            if (!StringUtil.isEmpty(codigoAgencia)) {
+                sbQuery.append("    AND SGCA.C_AGEASG = :codigoAgencia ");
+            }
+            if (!StringUtil.isEmpty(codigoAsesor)) {
+                sbQuery.append("    AND SGCA.C_USUASG = :codigoAsesor ");
+            }
+            if (!StringUtil.isEmpty(codigoCliente)) {
+                sbQuery.append("    AND SGCA.C_CODPER = :codigoCliente ");
+            }
+            if (!StringUtil.isEmpty(codigoEstado)) {
+                sbQuery.append("    AND WORK.C_IDESTA = :codigoEstado ");
+            }
+            if (!StringUtil.equiv(usuarioConsulta, codigoAsesor)) {
+                sbQuery.append("     AND (EXISTS (SELECT 'X' ");
+                sbQuery.append("                    FROM DADM.CBDRLUS RLUS ");
+                sbQuery.append("                   INNER JOIN DADM.SSMNROL NROL ");
+                sbQuery.append("                      ON (RLUS.C_IDEROL = NROL.C_IDEROL) ");
+                sbQuery.append("                   INNER JOIN DADM.SSMNOPC NOPC ");
+                sbQuery.append("                      ON (NOPC.C_IDMNOP = NROL.C_IDMNOP) ");
+                sbQuery.append("                   WHERE RLUS.C_CODUSU = :usuarioConsulta ");
+                sbQuery.append("                     AND RLUS.C_ESTREG = 'S' ");
+                sbQuery.append("                     AND NROL.C_ESTREG = 'S' ");
+                sbQuery.append("                     AND NOPC.C_ESTREG = 'S' ");
+                sbQuery.append("                     AND NOPC.C_KEYMNU = 'WF_SEG_CAR_CON') OR ");
+                sbQuery.append("          (EXISTS (SELECT 'X' ");
+                sbQuery.append("                    FROM DADM.CBTAGEN AGEN ");
+                sbQuery.append("                   INNER JOIN DADM.CBTREGA REGA ");
+                sbQuery.append("                      ON (REGA.C_IDREGA = AGEN.C_IDREGA) ");
+                sbQuery.append("                   WHERE REGA.C_JEFERE = :usuarioConsulta ");
+                sbQuery.append("                     AND REGA.C_ESTREG = 'S' ");
+                sbQuery.append("                     AND AGEN.C_CODAGE = SGCA.C_AGEASG) OR ");
+                sbQuery.append("          EXISTS (SELECT 'X' ");
+                sbQuery.append("                    FROM DADM.CBTAGEN AGEN ");
+                sbQuery.append("                   WHERE AGEN.C_EJECUT = :usuarioConsulta ");
+                sbQuery.append("                     AND AGEN.C_ESTREG = 'S' ");
+                sbQuery.append("                     AND AGEN.C_CODAGE = SGCA.C_AGEASG))) ");
+            }
+
+            query = entityManager.createNativeQuery(sbQuery.toString());
+
+            //FECHA ASIGNACION
+            if (!StringUtil.isEmpty(fechaAsignacionInicial)) {
+                query.setParameter("fechaAsignacionInicial", fechaAsignacionInicial, TemporalType.DATE);
+            }
+            if (!StringUtil.isEmpty(fechaAsignacionFinal)) {
+                query.setParameter("fechaAsignacionFinal", fechaAsignacionFinal, TemporalType.DATE);
+            }
+            //FECHA ATENCION
+            if (!StringUtil.isEmpty(fechaAtencionInicial)) {
+                query.setParameter("fechaAtencionInicial", fechaAtencionInicial, TemporalType.DATE);
+            }
+            if (!StringUtil.isEmpty(fechaAtencionFinal)) {
+                query.setParameter("fechaAtencionFinal", fechaAtencionFinal, TemporalType.DATE);
+            }
+            if (!StringUtil.isEmpty(codigoTipoAlerta)) {
+                query.setParameter("codigoTipoAlerta", codigoTipoAlerta);
+            }
+            if (!StringUtil.isEmpty(codigoAgencia)) {
+                query.setParameter("codigoAgencia", codigoAgencia);
+            }
+            if (!StringUtil.isEmpty(codigoAsesor)) {
+                query.setParameter("codigoAsesor", codigoAsesor);
+            }
+            if (!StringUtil.isEmpty(codigoCliente)) {
+                query.setParameter("codigoCliente", codigoCliente);
+            }
+            if (!StringUtil.isEmpty(codigoEstado)) {
+                query.setParameter("codigoEstado", codigoEstado);
+            }
+            if (!StringUtil.equiv(usuarioConsulta, codigoAsesor)) {
+                query.setParameter("usuarioConsulta", usuarioConsulta);
+            }
+
+            return StringUtil.toLong(query.getSingleResult());
+
+        } catch (Exception e) {
+            throw e;
+        }
+    }
+
+    public List<CRSeguimientoCartera> findSeguimientoCartera(GenericBean genericBean,
+                                                             int posicionInicial,
+                                                             int maxResultado) throws Exception {
+
+        Query query;
+        StringBuilder sbQuery;
+        Date fechaAsignacionInicial;
+        Date fechaAsignacionFinal;
+        Date fechaAtencionInicial;
+        Date fechaAtencionFinal;
+        String codigoTipoAlerta;
+        String codigoAgencia;
+        String codigoAsesor;
+        String codigoCliente;
+        String codigoEstado;
+        String usuarioConsulta;
+
+        try {
+
+            fechaAsignacionInicial = genericBean.getPropertyDate("fechaAsignacionInicial");
+            fechaAsignacionFinal = genericBean.getPropertyDate("fechaAsignacionFinal");
+            fechaAtencionInicial = genericBean.getPropertyDate("fechaAtencionInicial");
+            fechaAtencionFinal = genericBean.getPropertyDate("fechaAtencionFinal");
+            codigoTipoAlerta = genericBean.getPropertyString("codigoTipoAlerta");
+            codigoAgencia = genericBean.getPropertyString("codigoAgencia");
+            codigoAsesor = genericBean.getPropertyString("codigoAsesor");
+            codigoCliente = genericBean.getPropertyString("codigoCliente");
+            codigoEstado = genericBean.getPropertyString("codigoEstado");
+            usuarioConsulta = genericBean.getPropertyString("usuarioConsulta");
+
+            sbQuery = new StringBuilder();
+
+            sbQuery.append("  SELECT SGCA.* ");
+            sbQuery.append("   FROM DFIN.CRDSGCA SGCA ");
+            sbQuery.append("  INNER JOIN DFIN.WFMWORK WORK ");
+            sbQuery.append("     ON (WORK.C_IDWORK = SGCA.C_IDWORK) ");
+            sbQuery.append("  WHERE 1 = 1 ");
+
+            //FECHA ASIGNACION
+            if (!StringUtil.isEmpty(fechaAsignacionInicial)) {
+                sbQuery.append("    AND SGCA.D_FECASG >= :fechaAsignacionInicial ");
+            }
+            if (!StringUtil.isEmpty(fechaAsignacionFinal)) {
+                sbQuery.append("    AND SGCA.D_FECASG <= :fechaAsignacionFinal ");
+            }
+            //FECHA ATENCION
+            if (!StringUtil.isEmpty(fechaAsignacionInicial)) {
+                sbQuery.append("    AND SGCA.D_FECATE >= :fechaAtencionInicial ");
+            }
+            if (!StringUtil.isEmpty(fechaAsignacionFinal)) {
+                sbQuery.append("    AND SGCA.D_FECATE <= :fechaAtencionFinal ");
+            }
+            if (!StringUtil.isEmpty(codigoTipoAlerta)) {
+                sbQuery.append("    AND SGCA.C_TIPALE = :codigoTipoAlerta ");
+            }
+            if (!StringUtil.isEmpty(codigoAgencia)) {
+                sbQuery.append("    AND SGCA.C_AGEASG = :codigoAgencia ");
+            }
+            if (!StringUtil.isEmpty(codigoAsesor)) {
+                sbQuery.append("    AND SGCA.C_USUASG = :codigoAsesor ");
+            }
+            if (!StringUtil.isEmpty(codigoCliente)) {
+                sbQuery.append("    AND SGCA.C_CODPER = :codigoCliente ");
+            }
+            if (!StringUtil.isEmpty(codigoEstado)) {
+                sbQuery.append("    AND WORK.C_IDESTA = :codigoEstado ");
+            }
+            if (!StringUtil.equiv(usuarioConsulta, codigoAsesor)) {
+                sbQuery.append("     AND (EXISTS (SELECT 'X' ");
+                sbQuery.append("                    FROM DADM.CBDRLUS RLUS ");
+                sbQuery.append("                   INNER JOIN DADM.SSMNROL NROL ");
+                sbQuery.append("                      ON (RLUS.C_IDEROL = NROL.C_IDEROL) ");
+                sbQuery.append("                   INNER JOIN DADM.SSMNOPC NOPC ");
+                sbQuery.append("                      ON (NOPC.C_IDMNOP = NROL.C_IDMNOP) ");
+                sbQuery.append("                   WHERE RLUS.C_CODUSU = :usuarioConsulta ");
+                sbQuery.append("                     AND RLUS.C_ESTREG = 'S' ");
+                sbQuery.append("                     AND NROL.C_ESTREG = 'S' ");
+                sbQuery.append("                     AND NOPC.C_ESTREG = 'S' ");
+                sbQuery.append("                     AND NOPC.C_KEYMNU = 'WF_SEG_CAR_CON') OR ");
+                sbQuery.append("          (EXISTS (SELECT 'X' ");
+                sbQuery.append("                    FROM DADM.CBTAGEN AGEN ");
+                sbQuery.append("                   INNER JOIN DADM.CBTREGA REGA ");
+                sbQuery.append("                      ON (REGA.C_IDREGA = AGEN.C_IDREGA) ");
+                sbQuery.append("                   WHERE REGA.C_JEFERE = :usuarioConsulta ");
+                sbQuery.append("                     AND REGA.C_ESTREG = 'S' ");
+                sbQuery.append("                     AND AGEN.C_CODAGE = SGCA.C_AGEASG) OR ");
+                sbQuery.append("          EXISTS (SELECT 'X' ");
+                sbQuery.append("                    FROM DADM.CBTAGEN AGEN ");
+                sbQuery.append("                   WHERE AGEN.C_EJECUT = :usuarioConsulta ");
+                sbQuery.append("                     AND AGEN.C_ESTREG = 'S' ");
+                sbQuery.append("                     AND AGEN.C_CODAGE = SGCA.C_AGEASG))) ");
+            }
+            sbQuery.append("  ORDER BY SGCA.D_FECATE, SGCA.C_TIPALE ");
+
+            query = entityManager.createNativeQuery(sbQuery.toString(), CRSeguimientoCartera.class);
+
+
+            //FECHA ASIGNACION
+            if (!StringUtil.isEmpty(fechaAsignacionInicial)) {
+                query.setParameter("fechaAsignacionInicial", fechaAsignacionInicial, TemporalType.DATE);
+            }
+            if (!StringUtil.isEmpty(fechaAsignacionFinal)) {
+                query.setParameter("fechaAsignacionFinal", fechaAsignacionFinal, TemporalType.DATE);
+            }
+            //FECHA ATENCION
+            if (!StringUtil.isEmpty(fechaAtencionInicial)) {
+                query.setParameter("fechaAtencionInicial", fechaAtencionInicial, TemporalType.DATE);
+            }
+            if (!StringUtil.isEmpty(fechaAtencionFinal)) {
+                query.setParameter("fechaAtencionFinal", fechaAtencionFinal, TemporalType.DATE);
+            }
+            if (!StringUtil.isEmpty(codigoTipoAlerta)) {
+                query.setParameter("codigoTipoAlerta", codigoTipoAlerta);
+            }
+            if (!StringUtil.isEmpty(codigoAgencia)) {
+                query.setParameter("codigoAgencia", codigoAgencia);
+            }
+            if (!StringUtil.isEmpty(codigoAsesor)) {
+                query.setParameter("codigoAsesor", codigoAsesor);
+            }
+            if (!StringUtil.isEmpty(codigoCliente)) {
+                query.setParameter("codigoCliente", codigoCliente);
+            }
+            if (!StringUtil.isEmpty(codigoEstado)) {
+                query.setParameter("codigoEstado", codigoEstado);
+            }
+            if (!StringUtil.equiv(usuarioConsulta, codigoAsesor)) {
+                query.setParameter("usuarioConsulta", usuarioConsulta);
+            }
+
+            query.setFirstResult(posicionInicial);
+            query.setMaxResults(maxResultado);
+
+            return query.getResultList();
+        } catch (NoResultException e) {
+            return new ArrayList<CRSeguimientoCartera>(0);
+        } catch (Exception e) {
+            throw e;
+        }
+    }
+
+}
diff --git a/FINANCIERONEW/src/financ/seguimientoCartera/session/CRTipoAlertaSession.java b/FINANCIERONEW/src/financ/seguimientoCartera/session/CRTipoAlertaSession.java
new file mode 100644
index 0000000..3a96071
--- /dev/null
+++ b/FINANCIERONEW/src/financ/seguimientoCartera/session/CRTipoAlertaSession.java
@@ -0,0 +1,23 @@
+package financ.seguimientoCartera.session;
+
+import javax.ejb.Stateless;
+
+import pe.com.tfc.utils.AbstractSession;
+import financ.seguimientoCartera.entity.CRTipoAlerta;
+import financ.seguimientoCartera.local.CRTipoAlertaInterfaceLocal;
+
+/**
+ * CRTipoAlertaSession
+ * 
+ * @autor kdelacruz
+ * @since [S17-022] 29.03.2017
+ */
+
+@Stateless
+public class CRTipoAlertaSession extends AbstractSession<CRTipoAlerta, String> implements CRTipoAlertaInterfaceLocal {
+
+    private CRTipoAlertaSession() {
+        super(CRTipoAlerta.class);
+    }
+
+}
diff --git a/FINANCIERONEW/src/financ/util/Constante.java b/FINANCIERONEW/src/financ/util/Constante.java
index fad00e1..b993c82 100644
--- a/FINANCIERONEW/src/financ/util/Constante.java
+++ b/FINANCIERONEW/src/financ/util/Constante.java
@@ -2430,6 +2430,42 @@
     public static final String INDICADOR_INCLUYE_MANCOMUNO_SI = "S";
     public static final String INDICADOR_INCLUYE_MANCOMUNO_NO = "N";
     // Fin [CC17-033] dlazo 10.03.2017 Mejora Asignaci�n de Cuentas para Pago Intereses DPF
+
+    //Inicio [Req.S17-022] kdelacruz 29.03.2017
+    public static final String CR_ESTADO_SEGUIMIENTO_REGISTRADO = "RESE";
+    public static final String CR_ESTADO_SEGUIMIENTO_ASIGNADO = "ASSE";
+    public static final String CR_ESTADO_SEGUIMIENTO_EN_PROCESO = "PRSE";
+    public static final String CR_ESTADO_SEGUIMIENTO_FINALIZADO = "FISE";
+    public static final String CODIGO_ESTADO_LOTE_REGISTRADO = "REG";
+
+    public static final String CODIGO_TIPO_SEGUIMIENTO_INDIVIDUAL = "I";
+    
+    public static final String CR_MODULO_SEGUIMIENTO_CARTERA = "SEGUIMIENTO_CARTERA";
+
+    public static final String CODIGO_EVENTO_GRABAR = "BT_GRABAR_SEG_CAR";
+    public static final String CODIGO_EVENTO_ENVIAR = "BT_ENVIAR_SEG_CAR";
+    
+    public static final String CODIGO_RUTA_SEGUIMIENTO_CARTERA = "SEGUIMIENTO_CARTERA_RUTA";
+    
+    public static final String COMPORTAMIENTO_CONSULTA = "C";
+    public static final String COMPORTAMIENTO_TRANSACCIONAL = "T";
+    
+    public static final String CODIGO_TIPO_RESPUESTA_ENVIADO = "EN";
+    
+    public static final String CODIGO_TIPO_MOTIVO_AMPLIACION_ATENCION = "S";
+    
+    //Fin [Req.S17-022]
+    
+    // Inicio [Req.S17-022] rsanchez 04.04.2017
+    public static final String CODIGO_ESTADO_LOTE_APROBADO= "APR";
+    public static final String CODIGO_ESTADO_LOTE_RECHAZADO= "REC";
+    public static final String CODIGO_TIPO_SEGUIMIENTO_MASIVO = "M";
+    public static final String WF_ETAPA_SG_REGISTRO_ACTIVIDAD = "DATOS_DE_SEGUIMIENTO";
+    public static final String WF_EVENTO_ASIGNAR_ALERTA = "BT_ENVIAR_SEG_CAR";
+    
+    public static final String CODIGO_LOTE_APROBADO = "APR";
+    public static final String CODIGO_LOTE_RECHAZADO = "REC";
+    // Fin [Req.S17-022]
 
     // Inicio [CC17-044] agarcia 22.03.2017
     public static final String COD_MOTIVO_CC_TRATAMIENTO_REGULAR = "143001";
diff --git a/FINANCIERONEW/src/financ/util/FormatoFecha.java b/FINANCIERONEW/src/financ/util/FormatoFecha.java
index e84ccc9..3e9acd1 100644
--- a/FINANCIERONEW/src/financ/util/FormatoFecha.java
+++ b/FINANCIERONEW/src/financ/util/FormatoFecha.java
@@ -25,7 +25,7 @@
 		super();
 	}	
 	
-	public String obtenerHoraFecha(String strCadena){
+	public static String obtenerHoraFecha(String strCadena){
 		String strResultado;
 		strResultado = strCadena.substring(11);
 		return strResultado;
@@ -185,21 +185,6 @@
 		return new SimpleDateFormat("dd/MM/yyyy hh:mm:ss").format(date);
 	}
 	
-	//[Req.S17-007] kdelacruz 21.03.2017
-    public static String longToStringHHMMSS(Long milliseconds) {
-        if (milliseconds == null)
-            return null;
-
-        Long dias = milliseconds / 86400000L;
-        Long restoDias = milliseconds % 86400000L;
-        Long hora = restoDias / 3600000L;
-        Long restohora = milliseconds % 3600000L;
-        Long minuto = restohora / 60000;
-
-        String tiempo = dias + " dia(s) " + hora + " hora(s) " + minuto + "minuto(s)";
-        return tiempo;
-    }
-
 	//fvalle 08.11.2010 Nuevo formato de fecha con 24 horas
 	public static String dateToStringDDMMYYYY24HHMMSS(Date date){
 		if (date == null)
@@ -1565,6 +1550,7 @@
         
         return fechaConHoraDate;
     }
+
     
   //[Req.S17-007] kdelacruz 21.03.2017
     public static String longToStringHHMMSS(Date tiempoProcesoFinal, Date tiempoProcesoInicial) {
diff --git a/FINANCIERONEW/src/financ/workflow/bean/BeanWFMaestra.java b/FINANCIERONEW/src/financ/workflow/bean/BeanWFMaestra.java
index 7602b1a..00246c0 100644
--- a/FINANCIERONEW/src/financ/workflow/bean/BeanWFMaestra.java
+++ b/FINANCIERONEW/src/financ/workflow/bean/BeanWFMaestra.java
@@ -1,6 +1,7 @@
 package financ.workflow.bean;
 
 import java.io.Serializable;
+import java.util.Date;
 
 /**
  * BeanWFMaestro
@@ -27,6 +28,7 @@
     private String codigoPersona;
     private String usuarioSolicitante;
     private String usuarioAtiende;
+    private Date fechaProceso;
 
     private String tipoCredito;
     private String nombreCliente;
@@ -153,4 +155,12 @@
         this.descripcionEtapa = descripcionEtapa;
     }
 
+    public Date getFechaProceso() {
+        return fechaProceso;
+    }
+
+    public void setFechaProceso(Date fechaProceso) {
+        this.fechaProceso = fechaProceso;
+    }
+
 }
diff --git a/FINANCIERONEW/src/financ/workflow/facade/WFEtapaFacade.java b/FINANCIERONEW/src/financ/workflow/facade/WFEtapaFacade.java
index 8c06e2d..2831119 100644
--- a/FINANCIERONEW/src/financ/workflow/facade/WFEtapaFacade.java
+++ b/FINANCIERONEW/src/financ/workflow/facade/WFEtapaFacade.java
@@ -6,6 +6,8 @@
 import javax.ejb.EJB;
 import javax.ejb.Stateless;
 
+import pe.com.tfc.utils.AbstractFacade;
+import pe.com.tfc.utils.PropertyParams;
 import admin.contab.beans.BeanParametrosAuditoria;
 import admin.contab.entity.CBRolAplicacion;
 import admin.contab.local.CBRolXUsuariosInterfaceLocal;
@@ -20,8 +22,6 @@
 import financ.workflow.local.WFEtapasPorRolInterfaceLocal;
 import financ.workflow.local.WFFlujoPorRutaInterfaceLocal;
 import financ.workflow.local.WFMaestraInterfaceLocal;
-import pe.com.tfc.utils.AbstractFacade;
-import pe.com.tfc.utils.PropertyParams;
 
 /**
  * WFEtapaWorkflowFacade
@@ -72,6 +72,7 @@
             } else {
                 propertyParams = new PropertyParams();
                 propertyParams.addPropertyOrder("numeroOrden", false);
+                propertyParams.addProperty("estadoRegistro", Constante.ESTADO_REGISTRO_VIGENTE);
                 wfMaestra = wfMaestraInterfaceLocal.findById(idMaestra);
                 propertyParams.addProperty("wfRuta.idRuta", wfMaestra.getWfRuta().getIdRuta());
 
diff --git a/FINANCIERONEW/src/financ/workflow/facade/WFEventoFacade.java b/FINANCIERONEW/src/financ/workflow/facade/WFEventoFacade.java
index 0526260..bac3d95 100644
--- a/FINANCIERONEW/src/financ/workflow/facade/WFEventoFacade.java
+++ b/FINANCIERONEW/src/financ/workflow/facade/WFEventoFacade.java
@@ -2,15 +2,17 @@
 
 import java.util.ArrayList;
 import java.util.List;
+
 import javax.ejb.EJB;
 import javax.ejb.Stateless;
+
+import pe.com.tfc.utils.AbstractFacade;
+import pe.com.tfc.utils.PropertyParams;
 import admin.contab.beans.BeanParametrosAuditoria;
 import financ.workflow.bean.BeanWFEvento;
 import financ.workflow.entity.WFEvento;
 import financ.workflow.local.WFEventoFacadeInterfaceLocal;
 import financ.workflow.local.WFEventoInterfaceLocal;
-import pe.com.tfc.utils.AbstractFacade;
-import pe.com.tfc.utils.PropertyParams;
 
 /**
  * WFEventoWorkflowFacade
@@ -48,6 +50,31 @@
         }
         return lstBeanWFEventos;
     }
+    
+    // Inicio [Req.S17-022] kdelacruz 07.04.2017
+    public BeanWFEvento obtenerEventoByKey(final String keyEvento, final BeanParametrosAuditoria beanParametrosAuditoria) throws Exception {
+        final String modulo = "WFEventoFacade.listar()";
+        BeanWFEvento beanWFEvento = new BeanWFEvento();
+        List<WFEvento> lstWfEventos;
+        PropertyParams propertyParams;
+        try {
+
+            propertyParams = new PropertyParams();
+            propertyParams.addProperty("keyEvento", keyEvento);
+            propertyParams.addPropertyOrder("numeroOrden");
+            propertyParams.setMaxResults(1);
+
+            lstWfEventos = wfEventoWorkflowInterfaceLocal.findByProperties(propertyParams);
+
+            for (final WFEvento wfEvento : lstWfEventos) {
+                beanWFEvento = getBeanWFEvento(wfEvento);
+            }
+        } catch (final Exception e) {
+            throw handlerError(e, beanParametrosAuditoria.getUsuarioInsercion(), modulo);
+        }
+        return beanWFEvento;
+    }
+    // Fin [Req.S17-022]
 
     private BeanWFEvento getBeanWFEvento(WFEvento wfEvento) {
         BeanWFEvento beanWFEvento = new BeanWFEvento();
diff --git a/FINANCIERONEW/src/financ/workflow/facade/WFEventoPorEtapaFacade.java b/FINANCIERONEW/src/financ/workflow/facade/WFEventoPorEtapaFacade.java
index f84b595..874340f 100644
--- a/FINANCIERONEW/src/financ/workflow/facade/WFEventoPorEtapaFacade.java
+++ b/FINANCIERONEW/src/financ/workflow/facade/WFEventoPorEtapaFacade.java
@@ -9,8 +9,11 @@
 import pe.com.tfc.utils.AbstractFacade;
 import pe.com.tfc.utils.PropertyParams;
 import admin.contab.beans.BeanParametrosAuditoria;
+import financ.workflow.bean.BeanWFEvento;
 import financ.workflow.bean.BeanWFEventoPorEtapa;
 import financ.workflow.entity.WFEventoPorEtapa;
+import financ.workflow.local.WFEtapaFacadeInterfaceLocal;
+import financ.workflow.local.WFEventoFacadeInterfaceLocal;
 import financ.workflow.local.WFEventoPorEtapaFacadeInterfaceLocal;
 import financ.workflow.local.WFEventoPorEtapaInterfaceLocal;
 
@@ -28,6 +31,12 @@
 
     @EJB
     private WFEventoPorEtapaInterfaceLocal wfEventoPorEtapaInterfaceLocal;
+    // Inicio [Req.S17-022] kdelacruz 07.04.2017
+    @EJB
+    private WFEventoFacadeInterfaceLocal wfEventoFacadeInterfaceLocal;
+    @EJB
+    private WFEtapaFacadeInterfaceLocal wfEtapaFacadeInterfaceLocal;
+    // Fin [Req.S17-022]
 
     public List<BeanWFEventoPorEtapa> listar(final String idEtapa,
                                              final String idRuta,
@@ -40,9 +49,9 @@
 
             propertyParams = new PropertyParams();
             propertyParams.addProperty("wfEtapa.idEtapa", idEtapa);
-            if(!_isEmpty(idRuta)){
+            if (!_isEmpty(idRuta)) {
                 propertyParams.addProperty("wfRuta.idRuta", idRuta);
-            }else{
+            } else {
                 propertyParams.addPropertyISNULL("wfRuta.idRuta");
             }
 
@@ -82,6 +91,23 @@
         return beanWFEventoPorEtapa;
     }
 
+    // Inicio [Req.S17-022] kdelacruz 07.04.2017
+    public BeanWFEventoPorEtapa getByKey(final String keyEtapa,
+                                         final String keyEvento,
+                                         final BeanParametrosAuditoria beanParametrosAuditoria) throws Exception {
+        final String modulo = "WFEventoPorEtapaFacade.get()";
+        String idEtapa = "";
+        try {
+            idEtapa = wfEtapaFacadeInterfaceLocal.findIdByKey(keyEtapa, beanParametrosAuditoria);
+            BeanWFEvento beanWFEvento = wfEventoFacadeInterfaceLocal.obtenerEventoByKey(keyEvento, beanParametrosAuditoria);
+
+            return get(idEtapa, beanWFEvento.getIdEvento(), beanParametrosAuditoria);
+
+        } catch (final Exception e) {
+            throw handlerError(e, beanParametrosAuditoria.getUsuarioInsercion(), modulo);
+        }
+    }
+
     private BeanWFEventoPorEtapa getBeanWFEventoPorEtapa(WFEventoPorEtapa wfEventoPorEtapa) {
         BeanWFEventoPorEtapa beanWFEventoPorEtapa = new BeanWFEventoPorEtapa();
         if (_isEmpty(wfEventoPorEtapa)) {
@@ -96,11 +122,12 @@
         if (!_isEmpty(wfEventoPorEtapa.getWfEstado())) {
             beanWFEventoPorEtapa.setIdEstado(wfEventoPorEtapa.getWfEstado().getIdEstado());
         }
-        if(!_isEmpty(wfEventoPorEtapa.getWfRuta())){
+        if (!_isEmpty(wfEventoPorEtapa.getWfRuta())) {
             beanWFEventoPorEtapa.setIdRuta(wfEventoPorEtapa.getWfRuta().getIdRuta());
         }
 
         return beanWFEventoPorEtapa;
     }
+     // Fin [Req.S17-022]
 
 }
diff --git a/FINANCIERONEW/src/financ/workflow/facade/WFLegalFacade.java b/FINANCIERONEW/src/financ/workflow/facade/WFLegalFacade.java
index a9c8493..35be830 100644
--- a/FINANCIERONEW/src/financ/workflow/facade/WFLegalFacade.java
+++ b/FINANCIERONEW/src/financ/workflow/facade/WFLegalFacade.java
@@ -125,10 +125,10 @@
             wfLegal.setUsuarioModificacion(beanParametrosAuditoria.getUsuarioModificacion());
             wfLegal.setTerminalInsercion(beanParametrosAuditoria.getTerminalModificacion());
             wfLegal.setIpModificacion(beanParametrosAuditoria.getIpModificacion());
-            
+
             wfLegalInterfaceLocal.update(wfLegal);
 
-            if(!_isEmpty(listBeanWFDocumentos)){
+            if (!_isEmpty(listBeanWFDocumentos)) {
                 String idFile;
                 for (final BeanWFDocumentos beanWFDocumentos : listBeanWFDocumentos) {
                     idFile = null;
@@ -136,7 +136,7 @@
                         idFile = cbFileFacadeInterfaceLocal.guardarFromTemporal(beanWFDocumentos.getIdArchivo(),
                                                                                 beanParametrosAuditoria);
                     }
-    
+
                     wfDocumentosFacadeInterfaceLocal.guardarUltimoDocumento(beanWFLegal.getIdMaestra(),
                                                                             beanWFDocumentos.getIdTipoDocumento(),
                                                                             idFile,
@@ -181,7 +181,7 @@
         beanWFLegal.setGastosRegistrales(wfLegal.getGastosRegistrales());
         beanWFLegal.setIndicadorFinanciamiento(wfLegal.getIndicadorFinanciamiento());
         beanWFLegal.setIndicadorCancelacion(wfLegal.getIndicadorCancelacion());
-        
+
         beanWFLegal.setFechaConfirmacionDesembolso(FormatoFecha.dateToStringDDMMYYYYY(wfLegal.getFechaConfirmacionDesembolso()));
         beanWFLegal.setFechaFirmaVendedor(FormatoFecha.dateToStringDDMMYYYYY(wfLegal.getFechaFirmaVendedor()));
         beanWFLegal.setFechaFirmaTFC(FormatoFecha.dateToStringDDMMYYYYY(wfLegal.getFechaFirmaTFC()));
@@ -205,6 +205,8 @@
         WFLegal wfLegal;
         String idRuta;
         String idMaestra;
+        // [Req.S17-022] kdelacruz 07.04.2017
+        WFMaestra wfMaestra;
         try {
 
             idMaestra = beanWFMaestra.getIdMaestra();
@@ -220,11 +222,14 @@
                                                                 null,
                                                                 beanParametrosAuditoria);
 
-                idMaestra = wfMaestraFacadeInterfaceLocal.guardar(beanWFMaestra.getIdModulo(),
-                                                                  idRuta,
-                                                                  beanWFMaestra.getIdEtapa(),
-                                                                  beanWFEventoPorEtapa.getIdEstado(),
-                                                                  beanParametrosAuditoria);
+                // Inicio [Req.S17-022] kdelacruz 07.04.2017
+                beanWFMaestra.setIdRuta(idRuta);
+                beanWFMaestra.setIdEstado(beanWFEventoPorEtapa.getIdEstado());
+                beanWFMaestra.setFechaProceso(beanParametrosAuditoria.getFechaProceso());
+                beanWFMaestra.setUsuarioSolicitante(beanParametrosAuditoria.getUsuarioInsercion());
+                wfMaestra = wfMaestraFacadeInterfaceLocal.guardar(beanWFMaestra, beanParametrosAuditoria);
+                idMaestra = wfMaestra.getIdMaestra();
+                // Fin [Req.S17-022] 
 
                 wfLegal = new WFLegal();
                 wfLegal.setIdMaestra(idMaestra);
@@ -244,7 +249,7 @@
                 wfLegalInterfaceLocal.save(wfLegal);
                 entityManager.flush();
                 entityManager.refresh(wfLegal);
-            }else{
+            } else {
                 wfMaestraFacadeInterfaceLocal.validarEtapaUsuario(idMaestra,
                                                                   beanWFMaestra.getIdEtapa(),
                                                                   beanParametrosAuditoria);
@@ -261,7 +266,7 @@
         }
         return idMaestra;
     }
-    
+
     private void procesarDocumentosyEvento(String idMaestra,
                                            String idEtapa,
                                            String idEvento,
@@ -297,7 +302,7 @@
                                                      comentario,
                                                      beanParametrosAuditoria);
     }
-    
+
     public void enviarConfirmacionDesembolso(BeanWFMaestra beanWFMaestra,
                                              BeanWFLegal beanWFLegal,
                                              String idEvento,
@@ -328,7 +333,7 @@
             throw handlerError(e, usuario, modulo);
         }
     }
-    
+
     public void enviarFirmaVendedor(BeanWFMaestra beanWFMaestra,
                                     BeanWFLegal beanWFLegal,
                                     String idEvento,
@@ -360,7 +365,7 @@
             throw handlerError(e, usuario, modulo);
         }
     }
-    
+
     public void enviarFirmaTFC(BeanWFMaestra beanWFMaestra,
                                BeanWFLegal beanWFLegal,
                                String idEvento,
@@ -407,7 +412,7 @@
             wfMaestraFacadeInterfaceLocal.validarEtapaUsuario(beanWFMaestra.getIdMaestra(),
                                                               beanWFMaestra.getIdEtapa(),
                                                               beanParametrosAuditoria);
-            
+
             wfLegal = wfLegalInterfaceLocal.findById(beanWFMaestra.getIdMaestra());
             wfLegal.setFechaTestimonio(FormatoFecha.stringToDateddMMyyyy(beanWFLegal.getFechaTestimonio()));
             setModificacionAuditoria(wfLegal, beanParametrosAuditoria);
@@ -436,11 +441,11 @@
         String usuario = beanParametrosAuditoria.getUsuarioInsercion();
         WFLegal wfLegal;
         try {
-            
+
             wfMaestraFacadeInterfaceLocal.validarEtapaUsuario(beanWFMaestra.getIdMaestra(),
                                                               beanWFMaestra.getIdEtapa(),
                                                               beanParametrosAuditoria);
-            
+
             wfLegal = wfLegalInterfaceLocal.findById(beanWFMaestra.getIdMaestra());
             wfLegal.setFechaEscritura(FormatoFecha.stringToDateddMMyyyy(beanWFLegal.getFechaEscritura()));
             setModificacionAuditoria(wfLegal, beanParametrosAuditoria);
@@ -472,13 +477,13 @@
             wfMaestraFacadeInterfaceLocal.validarEtapaUsuario(beanWFMaestra.getIdMaestra(),
                                                               beanWFMaestra.getIdEtapa(),
                                                               beanParametrosAuditoria);
-            
+
             wfLegal = wfLegalInterfaceLocal.findById(beanWFMaestra.getIdMaestra());
             wfLegal.setFechaDocumento(FormatoFecha.stringToDateddMMyyyy(beanWFLegal.getFechaDocumento()));
             setModificacionAuditoria(wfLegal, beanParametrosAuditoria);
 
             wfLegalInterfaceLocal.update(wfLegal);
-            
+
             procesarDocumentosyEvento(beanWFMaestra.getIdMaestra(),
                                       beanWFMaestra.getIdEtapa(),
                                       idEvento,
@@ -506,7 +511,7 @@
                                                               beanParametrosAuditoria);
 
             wfLegal = wfLegalInterfaceLocal.findById(beanWFMaestra.getIdMaestra());
-            
+
             wfLegal.setFechaBloqueo(FormatoFecha.stringToDateddMMyyyy(beanWFLegal.getFechaBloqueo()));
             wfLegal.setAsientoBloqueo(beanWFLegal.getAsientoBloqueo());
             wfLegal.setNumeroPartidaBloqueo(beanWFLegal.getNumeroPartidaBloqueo());
@@ -514,7 +519,7 @@
             setModificacionAuditoria(wfLegal, beanParametrosAuditoria);
 
             wfLegalInterfaceLocal.update(wfLegal);
-            
+
             procesarDocumentosyEvento(beanWFMaestra.getIdMaestra(),
                                       beanWFMaestra.getIdEtapa(),
                                       idEvento,
@@ -537,8 +542,10 @@
             wfMaestraFacadeInterfaceLocal.validarEtapaUsuario(beanWFMaestra.getIdMaestra(),
                                                               beanWFMaestra.getIdEtapa(),
                                                               beanParametrosAuditoria);
-            
-            String idEtapaConformidadLegal = wfEtapaFacadeInterfaceLocal.findIdByKey(Constante.WF_KEY_ETAPA_CONFORMIDAD_LEGAL, beanParametrosAuditoria);
+
+            // [Req.S17-022] kdelacruz 07.04.2017
+            String idEtapaConformidadLegal = wfEtapaFacadeInterfaceLocal.findIdByKey(Constante.WF_KEY_ETAPA_CONFORMIDAD_LEGAL,
+                                                                                     beanParametrosAuditoria);
 
             if (_inList(beanWFMaestra.getIdEtapa(), idEtapaConformidadLegal)) {
                 WFLegal wfLegal = wfLegalInterfaceLocal.findById(beanWFMaestra.getIdMaestra());
@@ -547,7 +554,7 @@
                     throw new ErrorControladoException(ConstantesErrores.ERROR_11163);
                 }
             }
-            
+
             procesarDocumentosyEvento(beanWFMaestra.getIdMaestra(),
                                       beanWFMaestra.getIdEtapa(),
                                       idEvento,
@@ -579,7 +586,7 @@
             setModificacionAuditoria(wfLegal, beanParametrosAuditoria);
 
             wfLegalInterfaceLocal.update(wfLegal);
-            
+
             procesarDocumentosyEvento(beanWFMaestra.getIdMaestra(),
                                       beanWFMaestra.getIdEtapa(),
                                       idEvento,
@@ -590,7 +597,7 @@
             throw handlerError(e, usuario, modulo);
         }
     }
-    
+
     public void enviarTomaFirma(BeanWFMaestra beanWFMaestra,
                                 BeanWFLegal beanWFLegal,
                                 String idEvento,
@@ -605,7 +612,7 @@
             wfMaestraFacadeInterfaceLocal.validarEtapaUsuario(beanWFMaestra.getIdMaestra(),
                                                               beanWFMaestra.getIdEtapa(),
                                                               beanParametrosAuditoria);
-            
+
             wfLegal = wfLegalInterfaceLocal.findById(beanWFMaestra.getIdMaestra());
             wfLegal.setFechaFirma(FormatoFecha.stringToDateddMMyyyy(beanWFLegal.getFechaFirma()));
             setModificacionAuditoria(wfLegal, beanParametrosAuditoria);
@@ -622,7 +629,7 @@
             throw handlerError(e, usuario, modulo);
         }
     }
-    
+
     public void grabarAsignarSolicitud(final String codigoFuncionario,
                                        final List<String> vIdsUsuarioLegalSeleccionados,
                                        final BeanParametrosAuditoria beanParametrosAuditoria) throws Exception {
@@ -650,7 +657,7 @@
             throw handlerError(e, beanParametrosAuditoria.getUsuarioModificacion(), modulo);
         }
     }
-    
+
     public Map<String, Object> buscarDetalleLegal(final String idModulo,
                                                   final String codigoPersona,
                                                   final String fechaSolicitud,
diff --git a/FINANCIERONEW/src/financ/workflow/facade/WFMaestraFacade.java b/FINANCIERONEW/src/financ/workflow/facade/WFMaestraFacade.java
index 24ee4bf..b847d2f 100644
--- a/FINANCIERONEW/src/financ/workflow/facade/WFMaestraFacade.java
+++ b/FINANCIERONEW/src/financ/workflow/facade/WFMaestraFacade.java
@@ -69,11 +69,9 @@
     @EJB
     private WFModuloFacadeInterfaceLocal wfModuloFacadeInterfaceLocal;
 
-    public String guardar(String idModulo,
-                          String idRuta,
-                          String idEtapa,
-                          String idEstado,
-                          BeanParametrosAuditoria beanParametrosAuditoria) throws Exception {
+     // [Req.S17-022] kdelacruz 07.04.2017
+    public WFMaestra guardar(BeanWFMaestra beanWFMaestra,
+                             BeanParametrosAuditoria beanParametrosAuditoria) throws Exception {
 
         String modulo = "WFMaestraFacade.guardar()";
         String usuario = beanParametrosAuditoria.getUsuarioInsercion();
@@ -85,23 +83,25 @@
             wfMaestra = new WFMaestra();
             wfMaestra.setIdMaestra(correlativo);
 
-            WFModulo wfModulo = wfModuloInterfaceLocal.findById(idModulo);
+            WFModulo wfModulo = wfModuloInterfaceLocal.findById(beanWFMaestra.getIdModulo());
             wfMaestra.setWfModulo(wfModulo);
 
-            WFRuta wfRuta = wfRutaInterfaceLocal.findById(idRuta);
+            WFRuta wfRuta = wfRutaInterfaceLocal.findById(beanWFMaestra.getIdRuta());
             if (_isEmpty(wfRuta)) {
                 throw new ErrorControladoException(ConstantesErrores.ERROR_11159);
             }
             wfMaestra.setWfRuta(wfRuta);
 
-            WFEtapa wfEtapa = wfEtapaInterfaceLocal.findById(idEtapa);
+            WFEtapa wfEtapa = wfEtapaInterfaceLocal.findById(beanWFMaestra.getIdEtapa());
             wfMaestra.setWfEtapa(wfEtapa);
 
-            WFEstado wfEstado = wfEstadoInterfaceLocal.findById(idEstado);
+            WFEstado wfEstado = wfEstadoInterfaceLocal.findById(beanWFMaestra.getIdEstado());
             wfMaestra.setWfEstado(wfEstado);
 
-            wfMaestra.setUsuarioSolicitante(beanParametrosAuditoria.getUsuarioInsercion());
-            wfMaestra.setFechaProceso(beanParametrosAuditoria.getFechaProceso());
+            wfMaestra.setUsuarioSolicitante(beanWFMaestra.getUsuarioSolicitante());
+            wfMaestra.setUsuarioAtiende(beanWFMaestra.getUsuarioAtiende());
+            wfMaestra.setFechaProceso(beanWFMaestra.getFechaProceso());
+
             wfMaestra.setEstadoRegistro(Constante.ESTADO_REGISTRO_VIGENTE);
             wfMaestra.setCodigoEmpresa(beanParametrosAuditoria.getCodigoEmpresa());
             setInsercionAuditoria(wfMaestra, beanParametrosAuditoria);
@@ -114,24 +114,28 @@
         } catch (Exception e) {
             throw handlerError(e, usuario, modulo);
         }
-        return correlativo;
+        return wfMaestra;
     }
 
-    public void procesarEvento(String idMaestra,
-                               String idEtapa,
-                               String idEventoPorEtapa,
-                               String textoComentario,
-                               BeanParametrosAuditoria beanParametrosAuditoria) throws Exception {
+    //Inicio [Req.S17-022] kdelacruz 06.04.2017
+    public String procesarEvento(String idMaestra,
+                                 String idEtapa,
+                                 String idEventoPorEtapa,
+                                 String textoComentario,
+                                 BeanParametrosAuditoria beanParametrosAuditoria) throws Exception {
         String modulo = "WFMaestraFacade.procesarEvento()";
         String usuario = beanParametrosAuditoria.getUsuarioInsercion();
+        //[Req.S17-022] kdelacruz 06.04.2017
+        String correlativoMovimiento = "";
         try {
             WFEventoPorEtapa wfEventoPorEtapa = wfEventoPorEtapaInterfaceLocal.findById(idEventoPorEtapa);
 
-            wfMovimientosFacadeInterfaceLocal.insertar(idMaestra,
-                                                       idEtapa,
-                                                       wfEventoPorEtapa.getWfEstado().getIdEstado(),
-                                                       textoComentario,
-                                                       beanParametrosAuditoria);
+            //[Req.S17-022] kdelacruz 06.04.2017
+            correlativoMovimiento = wfMovimientosFacadeInterfaceLocal.insertar(idMaestra,
+                                                                               idEtapa,
+                                                                               wfEventoPorEtapa.getWfEstado().getIdEstado(),
+                                                                               textoComentario,
+                                                                               beanParametrosAuditoria);
 
             if (!_isEmpty(wfEventoPorEtapa.getCodigoModuloReferenciaMail())) {
                 WFMaestra wfMaestra = wfMaestraInterfaceLocal.findById(idMaestra);
@@ -147,9 +151,12 @@
         } catch (Exception e) {
             throw handlerError(e, usuario, modulo);
         }
+        //[Req.S17-022] kdelacruz 06.04.2017
+        return correlativoMovimiento;
     }
 
-    public BeanWFMaestra consultarMaestra(String idMaestra, BeanParametrosAuditoria beanParametrosAuditoria) throws Exception {
+    public BeanWFMaestra consultarMaestra(String idMaestra,
+                                          BeanParametrosAuditoria beanParametrosAuditoria) throws Exception {
         String modulo = "WFLegalFacade.consultarMaestra()";
         String usuario = beanParametrosAuditoria.getUsuarioInsercion();
         BeanWFMaestra beanWFMaestra;
@@ -176,10 +183,13 @@
         beanWFMaestra.setIdEtapa(wfMaestra.getWfEtapa().getIdEtapa());
         beanWFMaestra.setUsuarioSolicitante(wfMaestra.getUsuarioSolicitante());
         beanWFMaestra.setUsuarioAtiende(wfMaestra.getUsuarioAtiende());
+        beanWFMaestra.setDescripcionEstado(wfMaestra.getWfEstado().getDescripcionEstado());
         return beanWFMaestra;
     }
-    
-    public void validarEtapaUsuario(String idMaestra, String idEtapa, BeanParametrosAuditoria beanParametrosAuditoria) throws Exception {
+
+    public void validarEtapaUsuario(String idMaestra,
+                                    String idEtapa,
+                                    BeanParametrosAuditoria beanParametrosAuditoria) throws Exception {
         String modulo = "WFLegalFacade.validarEtapaUsuario()";
         String usuario = beanParametrosAuditoria.getUsuarioInsercion();
         try {
@@ -187,7 +197,7 @@
             WFMaestra wfMaestra = wfMaestraInterfaceLocal.findById(idMaestra);
             String usuarioSolicitante = wfMaestra.getUsuarioSolicitante();
             String usuarioAtiende = wfMaestra.getUsuarioAtiende();
-            
+
             String idModuloLegal = wfModuloFacadeInterfaceLocal.findIdByKey(Constante.WF_KEY_MODULO_WORKFLOW_LEGAL,
                                                                             beanParametrosAuditoria);
 
@@ -216,21 +226,19 @@
                                                                                               beanParametrosAuditoria);
                 String idEtapaTestimonio = wfEtapaFacadeInterfaceLocal.findIdByKey(Constante.WF_KEY_ETAPA_TESTIMONIO,
                                                                                    beanParametrosAuditoria);
-                
-                if (_inList(idEtapa,
-                            idEtapaSolicitudEstudioTitulo,
-                            idEtapaTomaFirmas)) {
+
+                if (_inList(idEtapa, idEtapaSolicitudEstudioTitulo, idEtapaTomaFirmas)) {
                     if (!_equiv(usuarioSolicitante, usuario)) {
                         throw new ErrorControladoException(ConstantesErrores.ERROR_11162);
                     }
-                } else if(_inList(idEtapa,idEtapaEmisionContratos)){
+                } else if (_inList(idEtapa, idEtapaEmisionContratos)) {
                     if (_isEmpty(usuarioAtiende)) {
                         throw new ErrorControladoException(ConstantesErrores.ERROR_11167);
                     }
                     if (!_equiv(usuarioAtiende, usuario)) {
                         throw new ErrorControladoException(ConstantesErrores.ERROR_11166);
                     }
-                }else if (_inList(idEtapa,
+                } else if (_inList(idEtapa,
                                    idEtapaBloqueoRegistral,
                                    idEtapaEscrituraPublica,
                                    idEtapaInscripcionDefinitiva,
@@ -244,11 +252,10 @@
                     }
                 } else if (_equiv(idEtapa, idEtapaIngresoDocumentosNotaria)) {
                     WFRuta wfRuta = wfMaestra.getWfRuta();
-                    if (_equiv(wfRuta.getKey001(), Constante.WF_RUTA_LIMA) && !_equiv(usuarioAtiende,
-                                                                                                  usuario)) {
+                    if (_equiv(wfRuta.getKey001(), Constante.WF_RUTA_LIMA) && !_equiv(usuarioAtiende, usuario)) {
                         throw new ErrorControladoException(ConstantesErrores.ERROR_11166);
-                    } else if (_equiv(wfRuta.getKey001(), Constante.WF_RUTA_PROVINCIA) && !_equiv(usuarioSolicitante,
-                                                                                                              usuario)) {
+                    } else if (_equiv(wfRuta.getKey001(),
+                                      Constante.WF_RUTA_PROVINCIA) && !_equiv(usuarioSolicitante, usuario)) {
                         throw new ErrorControladoException(ConstantesErrores.ERROR_11162);
                     }
 
diff --git a/FINANCIERONEW/src/financ/workflow/facade/WFRutaFacade.java b/FINANCIERONEW/src/financ/workflow/facade/WFRutaFacade.java
index 65da4f7..f3f4fba 100644
--- a/FINANCIERONEW/src/financ/workflow/facade/WFRutaFacade.java
+++ b/FINANCIERONEW/src/financ/workflow/facade/WFRutaFacade.java
@@ -63,7 +63,7 @@
         try {
             String idModuloLegal = wfModuloFacadeInterfaceLocal.findIdByKey(financ.util.Constante.WF_KEY_MODULO_WORKFLOW_LEGAL,
                                                                             beanParametrosAuditoria);
-            
+
             if (_equiv(idModulo, idModuloLegal)) {
                 CRSolicitudCredito crSolicitudCredito = crSolicitudCreditoInterfaceLocal.findById(numeroOperacion);
                 if (!_isEmpty(codigoTipoBien)) {
@@ -82,6 +82,15 @@
                     lstWfRutas = wfRutaInterfaceLocal.findByProperties(propertyParams);
                 }
             }
+            // Inicio [Req.S17-022] kdelacruz 06.04.2017
+            String idSeguimientoCartera = wfModuloFacadeInterfaceLocal.findIdByKey(financ.util.Constante.CR_MODULO_SEGUIMIENTO_CARTERA,
+                                                                                   beanParametrosAuditoria);
+            if (_equiv(idModulo, idSeguimientoCartera)) {
+                propertyParams = new PropertyParams();
+                propertyParams.addProperty("keyRuta", Constante.CODIGO_RUTA_SEGUIMIENTO_CARTERA);
+                lstWfRutas = wfRutaInterfaceLocal.findByProperties(propertyParams);
+            }
+            // Fin [Req.S17-022]
 
             if (!_isEmpty(lstWfRutas)) {
                 for (WFRuta wfRuta : lstWfRutas) {
diff --git a/FINANCIERONEW/src/financ/workflow/local/WFEventoFacadeInterfaceLocal.java b/FINANCIERONEW/src/financ/workflow/local/WFEventoFacadeInterfaceLocal.java
index baf9f16..aa373f6 100644
--- a/FINANCIERONEW/src/financ/workflow/local/WFEventoFacadeInterfaceLocal.java
+++ b/FINANCIERONEW/src/financ/workflow/local/WFEventoFacadeInterfaceLocal.java
@@ -26,5 +26,15 @@
      * @throws Exception
      */
     public List<BeanWFEvento> listar(final String idModulo, final BeanParametrosAuditoria beanParametrosAuditoria) throws Exception;
+    
+    /**
+     * @author esalazar
+     * @since [Req.S17-022] 07.04.2017
+     * @param keyEvento
+     * @param beanParametrosAuditoria
+     * @return BeanWFEvento
+     * @throws Exception
+     */
+    public BeanWFEvento obtenerEventoByKey(final String keyEvento, final BeanParametrosAuditoria beanParametrosAuditoria) throws Exception;
 
 }
diff --git a/FINANCIERONEW/src/financ/workflow/local/WFEventoPorEtapaFacadeInterfaceLocal.java b/FINANCIERONEW/src/financ/workflow/local/WFEventoPorEtapaFacadeInterfaceLocal.java
index c73eef8..7f54fdc 100644
--- a/FINANCIERONEW/src/financ/workflow/local/WFEventoPorEtapaFacadeInterfaceLocal.java
+++ b/FINANCIERONEW/src/financ/workflow/local/WFEventoPorEtapaFacadeInterfaceLocal.java
@@ -42,5 +42,18 @@
     public BeanWFEventoPorEtapa get(final String idEtapa,
                                     final String idEvento,
                                     final BeanParametrosAuditoria beanParametrosAuditoria) throws Exception;
+    
+    /**
+     * @author esalazar
+     * @since [Req.S17-007] 10.03.2017
+     * @param keyEtapa
+     * @param keyEvento
+     * @param beanParametrosAuditoria
+     * @return
+     * @throws Exception
+     */
+    public BeanWFEventoPorEtapa getByKey(final String keyEtapa,
+                                         final String keyEvento,
+                                         final BeanParametrosAuditoria beanParametrosAuditoria) throws Exception;
 
 }
diff --git a/FINANCIERONEW/src/financ/workflow/local/WFMaestraFacadeInterfaceLocal.java b/FINANCIERONEW/src/financ/workflow/local/WFMaestraFacadeInterfaceLocal.java
index 50c0eec..e612540 100644
--- a/FINANCIERONEW/src/financ/workflow/local/WFMaestraFacadeInterfaceLocal.java
+++ b/FINANCIERONEW/src/financ/workflow/local/WFMaestraFacadeInterfaceLocal.java
@@ -1,6 +1,5 @@
 package financ.workflow.local;
 
-
 import javax.ejb.Local;
 
 import admin.contab.beans.BeanParametrosAuditoria;
@@ -28,22 +27,13 @@
     /**
      * @author kdelacruz
      * @since [Req.S17-007] 10.03.2017
-     * @param idModulo
-     * @param idRuta
-     * @param idEtapa
-     * @param idEstado
-     * @param numeroOperacion
-     * @param codigoPersona
-     * @param codigoTipoOperacion
+     * @param beanWFMaestra
      * @param beanParametrosAuditoria
      * @return String
      * @throws Exception
      */
-    public String guardar(String idModulo,
-                          String idRuta,
-                          String idEtapa,
-                          String idEstado,
-                          BeanParametrosAuditoria beanParametrosAuditoria) throws Exception;
+    public WFMaestra guardar(BeanWFMaestra beanWFMaestra,
+                             BeanParametrosAuditoria beanParametrosAuditoria) throws Exception;
 
     /**
      * @author kdelacruz
@@ -53,25 +43,27 @@
      * @return BeanWFMaestra
      * @throws Exception
      */
-    public BeanWFMaestra consultarMaestra(String idMaestra, BeanParametrosAuditoria beanParametrosAuditoria) throws Exception;
+    public BeanWFMaestra consultarMaestra(String idMaestra,
+                                          BeanParametrosAuditoria beanParametrosAuditoria) throws Exception;
 
     /**
      * @author kdelacruz
      * @since [Req.S17-007] 13.03.2017
+     * @since [Req.S17-022] kdelacruz 06.04.2017
      * @param beanWFMaestra
      * @param idMaestra
      * @param idEtapa
      * @param idEventoPorEtapa
      * @param textoComentario
      * @param beanParametrosAuditoria
+     * @return String
      * @throws Exception
      */
-    public void procesarEvento(String idMaestra,
-                               String idEtapa,
-                               String idEventoPorEtapa,
-                               String textoComentario,
-                               BeanParametrosAuditoria beanParametrosAuditoria) throws Exception;
-    
+    public String procesarEvento(String idMaestra,
+                                 String idEtapa,
+                                 String idEventoPorEtapa,
+                                 String textoComentario,
+                                 BeanParametrosAuditoria beanParametrosAuditoria) throws Exception;
 
     /**
      * @author kdelacruz
@@ -81,5 +73,7 @@
      * @param beanParametrosAuditoria
      * @throws Exception
      */
-    public void validarEtapaUsuario(String idMaestra, String idEtapa, BeanParametrosAuditoria beanParametrosAuditoria) throws Exception;
+    public void validarEtapaUsuario(String idMaestra,
+                                    String idEtapa,
+                                    BeanParametrosAuditoria beanParametrosAuditoria) throws Exception;
 }
